<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="input_8cpp" kind="file" language="C++">
    <compoundname>input.cpp</compoundname>
    <includes refid="input_8h" local="yes">input.h</includes>
    <includes refid="fakeinputbackend_8h" local="yes">backends/fakeinput/fakeinputbackend.h</includes>
    <includes refid="inputbackend_8h" local="yes">core/inputbackend.h</includes>
    <includes refid="inputdevice_8h" local="yes">core/inputdevice.h</includes>
    <includes refid="session_8h" local="yes">core/session.h</includes>
    <includes refid="effecthandler_8h" local="yes">effect/effecthandler.h</includes>
    <includes refid="gestures_8h" local="yes">gestures.h</includes>
    <includes refid="globalshortcuts_8h" local="yes">globalshortcuts.h</includes>
    <includes refid="hide__cursor__spy_8h" local="yes">hide_cursor_spy.h</includes>
    <includes refid="idledetector_8h" local="yes">idledetector.h</includes>
    <includes refid="input__event_8h" local="yes">input_event.h</includes>
    <includes refid="input__event__spy_8h" local="yes">input_event_spy.h</includes>
    <includes refid="inputmethod_8h" local="yes">inputmethod.h</includes>
    <includes refid="keyboard__input_8h" local="yes">keyboard_input.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="mousebuttons_8h" local="yes">mousebuttons.h</includes>
    <includes refid="pointer__input_8h" local="yes">pointer_input.h</includes>
    <includes refid="tablet__input_8h" local="yes">tablet_input.h</includes>
    <includes refid="touch__input_8h" local="yes">touch_input.h</includes>
    <includes refid="abstract__data__source_8h" local="yes">wayland/abstract_data_source.h</includes>
    <includes refid="xdgtopleveldrag__v1_8h" local="yes">wayland/xdgtopleveldrag_v1.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="outputbackend_8h" local="yes">core/outputbackend.h</includes>
    <includes refid="cursor_8h" local="yes">cursor.h</includes>
    <includes refid="cursorsource_8h" local="yes">cursorsource.h</includes>
    <includes refid="internalwindow_8h" local="yes">internalwindow.h</includes>
    <includes refid="popup__input__filter_8h" local="yes">popup_input_filter.h</includes>
    <includes refid="screenedge_8h" local="yes">screenedge.h</includes>
    <includes refid="virtualdesktops_8h" local="yes">virtualdesktops.h</includes>
    <includes refid="display_8h" local="yes">wayland/display.h</includes>
    <includes refid="inputmethod__v1_8h" local="yes">wayland/inputmethod_v1.h</includes>
    <includes refid="seat_8h" local="yes">wayland/seat.h</includes>
    <includes refid="surface_8h" local="yes">wayland/surface.h</includes>
    <includes refid="tablet__v2_8h" local="yes">wayland/tablet_v2.h</includes>
    <includes refid="wayland__server_8h" local="yes">wayland_server.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes refid="xkb_8h" local="yes">xkb.h</includes>
    <includes refid="xwayland__interface_8h" local="yes">xwayland/xwayland_interface.h</includes>
    <includes local="no">KDecoration3/Decoration</includes>
    <includes local="no">KLocalizedString</includes>
    <includes refid="decoratedwindow_8h" local="no">decorations/decoratedwindow.h</includes>
    <includes local="no">QAction</includes>
    <includes local="no">QKeyEvent</includes>
    <includes local="no">QThread</includes>
    <includes local="no">qpa/qwindowsysteminterface.h</includes>
    <includes local="no">xkbcommon/xkbcommon.h</includes>
    <includes refid="osd_8h" local="yes">osd.h</includes>
    <includes refid="xdgshell_8h" local="yes">wayland/xdgshell.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">linux/input.h</includes>
    <includes local="yes">input.moc</includes>
    <includes local="yes">moc_input.cpp</includes>
    <incdepgraph>
      <node id="18">
        <label>backends/fakeinput/fakeinputbackend.h</label>
        <link refid="fakeinputbackend_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>core/inputbackend.h</label>
        <link refid="inputbackend_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>core/session.h</label>
        <link refid="session_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>cursorsource.h</label>
        <link refid="cursorsource_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>decorations/decoratedwindow.h</label>
        <link refid="decoratedwindow_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>effect/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>effect/effecthandler.h</label>
        <link refid="effecthandler_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>effect/effectwindow.h</label>
        <link refid="effectwindow_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>gestures.h</label>
        <link refid="gestures_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>globalshortcuts.h</label>
        <link refid="globalshortcuts_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>hide_cursor_spy.h</label>
        <link refid="hide__cursor__spy_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>idledetector.h</label>
        <link refid="idledetector_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/input.cpp</label>
        <link refid="input_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>input_event.h</label>
        <link refid="input__event_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>input_event_spy.h</label>
        <link refid="input__event__spy_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>inputmethod.h</label>
        <link refid="inputmethod_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>internalwindow.h</label>
        <link refid="internalwindow_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>keyboard_input.h</label>
        <link refid="keyboard__input_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>mousebuttons.h</label>
        <link refid="mousebuttons_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>osd.h</label>
        <link refid="osd_8h"/>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>popup_input_filter.h</label>
        <link refid="popup__input__filter_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>rules.h</label>
        <link refid="rules_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>screenedge.h</label>
        <link refid="screenedge_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>tablet_input.h</label>
        <link refid="tablet__input_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>touch_input.h</label>
        <link refid="touch__input_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>utils/cursortheme.h</label>
        <link refid="cursortheme_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>virtualdesktops.h</label>
        <link refid="virtualdesktops_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>wayland/abstract_data_source.h</label>
        <link refid="abstract__data__source_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>abstract_drop_handler.h</label>
        <link refid="abstract__drop__handler_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>clientconnection.h</label>
        <link refid="clientconnection_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>datadevice.h</label>
        <link refid="datadevice_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>datadevicemanager.h</label>
        <link refid="datadevicemanager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>wayland/display.h</label>
        <link refid="display_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>wayland/inputmethod_v1.h</label>
        <link refid="inputmethod__v1_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>wayland/seat.h</label>
        <link refid="seat_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>wayland/surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>wayland/tablet_v2.h</label>
        <link refid="tablet__v2_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>textinput.h</label>
        <link refid="textinput_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>wayland/textinput_v2.h</label>
        <link refid="textinput__v2_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>wayland/xdgshell.h</label>
        <link refid="xdgshell_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>wayland/xdgtopleveldrag_v1.h</label>
        <link refid="xdgtopleveldrag__v1_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>wayland_server.h</label>
        <link refid="wayland__server_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>window.h</label>
        <link refid="window_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>xkb.h</label>
        <link refid="xkb_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>xwayland/xwayland_interface.h</label>
        <link refid="xwayland__interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>KConfig</label>
      </node>
      <node id="120">
        <label>KConfigGroup</label>
      </node>
      <node id="14">
        <label>KConfigWatcher</label>
      </node>
      <node id="125">
        <label>KDecoration3/Decoration</label>
      </node>
      <node id="128">
        <label>KDecoration3/Private/DecoratedWindowPrivate</label>
      </node>
      <node id="126">
        <label>KLocalizedString</label>
      </node>
      <node id="29">
        <label>KPluginFactory</label>
      </node>
      <node id="15">
        <label>KSharedConfig</label>
      </node>
      <node id="71">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="105">
        <label>QAction</label>
      </node>
      <node id="72">
        <label>QApplication</label>
      </node>
      <node id="60">
        <label>QBasicTimer</label>
      </node>
      <node id="37">
        <label>QByteArray</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="117">
        <label>QDBusContext</label>
      </node>
      <node id="118">
        <label>QDataStream</label>
      </node>
      <node id="129">
        <label>QDeadlineTimer</label>
      </node>
      <node id="40">
        <label>QDebug</label>
      </node>
      <node id="44">
        <label>QEasingCurve</label>
      </node>
      <node id="81">
        <label>QElapsedTimer</label>
      </node>
      <node id="134">
        <label>QFlags</label>
      </node>
      <node id="47">
        <label>QHash</label>
      </node>
      <node id="45">
        <label>QIcon</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="130">
        <label>QKeyEvent</label>
      </node>
      <node id="54">
        <label>QKeySequence</label>
      </node>
      <node id="38">
        <label>QList</label>
      </node>
      <node id="48">
        <label>QLoggingCategory</label>
      </node>
      <node id="51">
        <label>QMap</label>
      </node>
      <node id="36">
        <label>QMatrix4x4</label>
      </node>
      <node id="65">
        <label>QMetaType</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="46">
        <label>QPair</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="52">
        <label>QPointF</label>
      </node>
      <node id="13">
        <label>QPointer</label>
      </node>
      <node id="73">
        <label>QProcessEnvironment</label>
      </node>
      <node id="41">
        <label>QRect</label>
      </node>
      <node id="98">
        <label>QRectF</label>
      </node>
      <node id="28">
        <label>QRegion</label>
      </node>
      <node id="16">
        <label>QSet</label>
      </node>
      <node id="80">
        <label>QSharedDataPointer</label>
      </node>
      <node id="39">
        <label>QSize</label>
      </node>
      <node id="49">
        <label>QStack</label>
      </node>
      <node id="24">
        <label>QString</label>
      </node>
      <node id="119">
        <label>QStringList</label>
      </node>
      <node id="131">
        <label>QThread</label>
      </node>
      <node id="68">
        <label>QTimer</label>
      </node>
      <node id="42">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="43">
        <label>QWindow</label>
      </node>
      <node id="57">
        <label>QtGlobal</label>
      </node>
      <node id="58">
        <label>chrono</label>
      </node>
      <node id="101">
        <label>climits</label>
      </node>
      <node id="136">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>config-kwin.h</label>
      </node>
      <node id="91">
        <label>epoxy/egl.h</label>
      </node>
      <node id="17">
        <label>functional</label>
      </node>
      <node id="138">
        <label>input.moc</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="137">
        <label>linux/input.h</label>
      </node>
      <node id="20">
        <label>map</label>
      </node>
      <node id="21">
        <label>memory</label>
      </node>
      <node id="139">
        <label>moc_input.cpp</label>
      </node>
      <node id="121">
        <label>netwm_def.h</label>
      </node>
      <node id="35">
        <label>optional</label>
      </node>
      <node id="75">
        <label>qnamespace.h</label>
      </node>
      <node id="132">
        <label>qpa/qwindowsysteminterface.h</label>
      </node>
      <node id="25">
        <label>sys/types.h</label>
      </node>
      <node id="66">
        <label>utility</label>
      </node>
      <node id="67">
        <label>vector</label>
      </node>
      <node id="78">
        <label>xcb/xcb.h</label>
      </node>
      <node id="123">
        <label>xkbcommon/xkbcommon.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_virtual_terminal_filter" prot="public">KWin::VirtualTerminalFilter</innerclass>
    <innerclass refid="class_k_win_1_1_effects_filter" prot="public">KWin::EffectsFilter</innerclass>
    <innerclass refid="class_k_win_1_1_move_resize_filter" prot="public">KWin::MoveResizeFilter</innerclass>
    <innerclass refid="class_k_win_1_1_window_selector_filter" prot="public">KWin::WindowSelectorFilter</innerclass>
    <innerclass refid="class_k_win_1_1_internal_window_event_filter" prot="public">KWin::InternalWindowEventFilter</innerclass>
    <innerclass refid="class_k_win_1_1_mouse_wheel_accumulator" prot="public">KWin::MouseWheelAccumulator</innerclass>
    <innerclass refid="class_k_win_1_1_decoration_event_filter" prot="public">KWin::DecorationEventFilter</innerclass>
    <innerclass refid="class_k_win_1_1_screen_edge_input_filter" prot="public">KWin::ScreenEdgeInputFilter</innerclass>
    <innerclass refid="class_k_win_1_1_window_action_input_filter" prot="public">KWin::WindowActionInputFilter</innerclass>
    <innerclass refid="class_k_win_1_1_input_method_event_filter" prot="public">KWin::InputMethodEventFilter</innerclass>
    <innerclass refid="class_k_win_1_1_forward_input_filter" prot="public">KWin::ForwardInputFilter</innerclass>
    <innerclass refid="class_k_win_1_1_drag_and_drop_input_filter" prot="public">KWin::DragAndDropInputFilter</innerclass>
    <innerclass refid="class_k_win_1_1_window_interacted_spy" prot="public">KWin::WindowInteractedSpy</innerclass>
    <innerclass refid="class_k_win_1_1_user_activity_spy" prot="public">KWin::UserActivitySpy</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2013<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2018<sp/>Roman<sp/>Gilg<sp/>&lt;subdiff@gmail.com&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2019<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input_8h" kindref="compound">input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fakeinputbackend_8h" kindref="compound">backends/fakeinput/fakeinputbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputbackend_8h" kindref="compound">core/inputbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputdevice_8h" kindref="compound">core/inputdevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="session_8h" kindref="compound">core/session.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effecthandler_8h" kindref="compound">effect/effecthandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gestures_8h" kindref="compound">gestures.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globalshortcuts_8h" kindref="compound">globalshortcuts.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hide__cursor__spy_8h" kindref="compound">hide_cursor_spy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="idledetector_8h" kindref="compound">idledetector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input__event_8h" kindref="compound">input_event.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input__event__spy_8h" kindref="compound">input_event_spy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputmethod_8h" kindref="compound">inputmethod.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keyboard__input_8h" kindref="compound">keyboard_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mousebuttons_8h" kindref="compound">mousebuttons.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__input_8h" kindref="compound">pointer_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tablet__input_8h" kindref="compound">tablet_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="touch__input_8h" kindref="compound">touch_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="abstract__data__source_8h" kindref="compound">wayland/abstract_data_source.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xdgtopleveldrag__v1_8h" kindref="compound">wayland/xdgtopleveldrag_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="x11window_8h" kindref="compound">x11window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tabbox_8h" kindref="compound">tabbox/tabbox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputbackend_8h" kindref="compound">core/outputbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cursor_8h" kindref="compound">cursor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cursorsource_8h" kindref="compound">cursorsource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="internalwindow_8h" kindref="compound">internalwindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="popup__input__filter_8h" kindref="compound">popup_input_filter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="screenedge_8h" kindref="compound">screenedge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtualdesktops_8h" kindref="compound">virtualdesktops.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">wayland/display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputmethod__v1_8h" kindref="compound">wayland/inputmethod_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat_8h" kindref="compound">wayland/seat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">wayland/surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tablet__v2_8h" kindref="compound">wayland/tablet_v2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland__server_8h" kindref="compound">wayland_server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xkb_8h" kindref="compound">xkb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xwayland__interface_8h" kindref="compound">xwayland/xwayland_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KDecoration3/Decoration&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KLocalizedString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="decoratedwindow_8h" kindref="compound">decorations/decoratedwindow.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>screenlocker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_SCREENLOCKER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KScreenLocker/KsldApp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QAction&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QKeyEvent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QThread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpa/qwindowsysteminterface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xkbcommon/xkbcommon.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="osd_8h" kindref="compound">osd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xdgshell_8h" kindref="compound">wayland/xdgshell.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/input.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::literals;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter::InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order_1a756edc4ece066f390b6c187c3cd970b1" kindref="member">InputFilterOrder::Order</ref><sp/><ref refid="class_k_win_1_1_input_event_filter_1a52a11556fd89cea278b3fcb79d4f6a78" kindref="member">weight</ref>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_weight(<ref refid="class_k_win_1_1_input_event_filter_1a52a11556fd89cea278b3fcb79d4f6a78" kindref="member">weight</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_k_win_1_1_input_event_filter_1ab87db3c27248ac5074cf84ee87d94c9c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_input_event_filter_1ab87db3c27248ac5074cf84ee87d94c9c" kindref="member">InputEventFilter::~InputEventFilter</ref>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a702b94b4e3746a0ee81c3989a219d891" kindref="member">uninstallInputEventFilter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_k_win_1_1_input_event_filter_1a52a11556fd89cea278b3fcb79d4f6a78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a52a11556fd89cea278b3fcb79d4f6a78" kindref="member">InputEventFilter::weight</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="96"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_weight;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_k_win_1_1_input_event_filter_1a0e8cf7f7d0816fa15dbfef65300bdf74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0e8cf7f7d0816fa15dbfef65300bdf74" kindref="member">InputEventFilter::pointerMotion</ref>(<ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_k_win_1_1_input_event_filter_1a42d5cd1beabe79a9f0f47c7984a63e03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a42d5cd1beabe79a9f0f47c7984a63e03" kindref="member">InputEventFilter::pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_k_win_1_1_input_event_filter_1a8aedcd4f0130e1c00d08b87213f123c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a8aedcd4f0130e1c00d08b87213f123c1" kindref="member">InputEventFilter::pointerFrame</ref>()</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_k_win_1_1_input_event_filter_1a34fb678aeaece81927f9ffd95bb418a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a34fb678aeaece81927f9ffd95bb418a6" kindref="member">InputEventFilter::pointerAxis</ref>(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_k_win_1_1_input_event_filter_1accb90817b0fb12456022cb3e1d89fd24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1accb90817b0fb12456022cb3e1d89fd24" kindref="member">InputEventFilter::keyboardKey</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_k_win_1_1_input_event_filter_1a9d918ff67523d7f036943c9aa56a2e1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a9d918ff67523d7f036943c9aa56a2e1b" kindref="member">InputEventFilter::touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="class_k_win_1_1_input_event_filter_1ab8d0440bac50eda28cba2ac9ed7548e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1ab8d0440bac50eda28cba2ac9ed7548e1" kindref="member">InputEventFilter::touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_k_win_1_1_input_event_filter_1a608cb067e83ad4ed842476cc16ac0800" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a608cb067e83ad4ed842476cc16ac0800" kindref="member">InputEventFilter::touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_k_win_1_1_input_event_filter_1ae760899fce671a183fbc540b8beaeea8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1ae760899fce671a183fbc540b8beaeea8" kindref="member">InputEventFilter::touchCancel</ref>()</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_k_win_1_1_input_event_filter_1ae7e591c6e196c1c8929934c69da523b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1ae7e591c6e196c1c8929934c69da523b9" kindref="member">InputEventFilter::touchFrame</ref>()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="class_k_win_1_1_input_event_filter_1ad56a554ea3b7f767e31d332c4c5e055c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1ad56a554ea3b7f767e31d332c4c5e055c" kindref="member">InputEventFilter::pinchGestureBegin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_k_win_1_1_input_event_filter_1a598c8b3e5fe665b14a3e67a375832d08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a598c8b3e5fe665b14a3e67a375832d08" kindref="member">InputEventFilter::pinchGestureUpdate</ref>(qreal<sp/>scale,<sp/>qreal<sp/>angleDelta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="class_k_win_1_1_input_event_filter_1a10658e9f1c58a685940eb12b435fe146" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a10658e9f1c58a685940eb12b435fe146" kindref="member">InputEventFilter::pinchGestureEnd</ref>(std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="class_k_win_1_1_input_event_filter_1ab613d6168ad5c579aa19af90b88e87b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1ab613d6168ad5c579aa19af90b88e87b1" kindref="member">InputEventFilter::pinchGestureCancelled</ref>(std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_k_win_1_1_input_event_filter_1aef58de63781487e47b4137c43a8d2c44" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1aef58de63781487e47b4137c43a8d2c44" kindref="member">InputEventFilter::swipeGestureBegin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_k_win_1_1_input_event_filter_1a9a1557bd23c9ea3965a7130edc7462c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a9a1557bd23c9ea3965a7130edc7462c5" kindref="member">InputEventFilter::swipeGestureUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_k_win_1_1_input_event_filter_1ab5b578ec73f882e2830f2fefe1f4775e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1ab5b578ec73f882e2830f2fefe1f4775e" kindref="member">InputEventFilter::swipeGestureEnd</ref>(std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="class_k_win_1_1_input_event_filter_1a6d1ec0e92bdcd24e12a11a68483f9517" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a6d1ec0e92bdcd24e12a11a68483f9517" kindref="member">InputEventFilter::swipeGestureCancelled</ref>(std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_k_win_1_1_input_event_filter_1ac0990f77bd702079fc24ef1b85b6027a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1ac0990f77bd702079fc24ef1b85b6027a" kindref="member">InputEventFilter::holdGestureBegin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_k_win_1_1_input_event_filter_1aaf03914c307f1f6e300ac28e7dfd8bbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1aaf03914c307f1f6e300ac28e7dfd8bbc" kindref="member">InputEventFilter::holdGestureEnd</ref>(std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="class_k_win_1_1_input_event_filter_1ae0d852136e0039a753ffed5feb537f1c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1ae0d852136e0039a753ffed5feb537f1c" kindref="member">InputEventFilter::holdGestureCancelled</ref>(std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="class_k_win_1_1_input_event_filter_1aed8b92865343626379d8ac71f4bd2ea4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1aed8b92865343626379d8ac71f4bd2ea4" kindref="member">InputEventFilter::switchEvent</ref>(<ref refid="struct_k_win_1_1_switch_event" kindref="compound">SwitchEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="class_k_win_1_1_input_event_filter_1a02802b4a5bef840c2c077f7271755858" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a02802b4a5bef840c2c077f7271755858" kindref="member">InputEventFilter::tabletToolProximityEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="class_k_win_1_1_input_event_filter_1aff68194291337061cc9785d66c3043ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1aff68194291337061cc9785d66c3043ce" kindref="member">InputEventFilter::tabletToolAxisEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="class_k_win_1_1_input_event_filter_1af1d39642578227a239b2aa8e55405367" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1af1d39642578227a239b2aa8e55405367" kindref="member">InputEventFilter::tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_k_win_1_1_input_event_filter_1a7a56441182925d5c0fd6876bc0414c8e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a7a56441182925d5c0fd6876bc0414c8e" kindref="member">InputEventFilter::tabletToolButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_button_event" kindref="compound">TabletToolButtonEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class_k_win_1_1_input_event_filter_1a4ef1fabdd3f77b942ee0596f400f32fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a4ef1fabdd3f77b942ee0596f400f32fc" kindref="member">InputEventFilter::tabletPadButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_button_event" kindref="compound">TabletPadButtonEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="class_k_win_1_1_input_event_filter_1a02286f0b50679ecea3e1b231cb27861a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a02286f0b50679ecea3e1b231cb27861a" kindref="member">InputEventFilter::tabletPadStripEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_strip_event" kindref="compound">TabletPadStripEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="class_k_win_1_1_input_event_filter_1aeab73b0dbcd57d4b3f678a81de7489b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1aeab73b0dbcd57d4b3f678a81de7489b4" kindref="member">InputEventFilter::tabletPadRingEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_ring_event" kindref="compound">TabletPadRingEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_k_win_1_1_input_event_filter_1ae72e537c14e9de14f0720c8f25c6c4cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1ae72e537c14e9de14f0720c8f25c6c4cd" kindref="member">InputEventFilter::passToInputMethod</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!kwinApp()-&gt;inputMethod())<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>keyboardGrab<sp/>=<sp/>kwinApp()-&gt;inputMethod()-&gt;keyboardGrab())<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1a7f7309d5a83099309ac04dcb795ad0ce" kindref="member">KeyboardKeyState::Repeated</ref>)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a153d6c4d539a43732a4b3345284b0ed1" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyboardGrab-&gt;sendKey(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;display()-&gt;nextSerial(),<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(timestamp).count(),<sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1aa1d2fad163b7667c59365c67eeb40eaa" kindref="member">nativeScanCode</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwinApp()-&gt;inputMethod()-&gt;commitPendingText();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="class_k_win_1_1_virtual_terminal_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_virtual_terminal_filter_1a523863f706fa8f53d15dc610d2e7e97a" kindref="member">VirtualTerminalFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="266" refid="class_k_win_1_1_virtual_terminal_filter_1a523863f706fa8f53d15dc610d2e7e97a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_virtual_terminal_filter_1a523863f706fa8f53d15dc610d2e7e97a" kindref="member">VirtualTerminalFilter</ref>()</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::VirtualTerminal)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270" refid="class_k_win_1_1_virtual_terminal_filter_1a375ed15094e8469bf58824ae14c70c00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_virtual_terminal_filter_1a375ed15094e8469bf58824ae14c70c00" kindref="member">keyboardKey</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="271"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>really<sp/>on<sp/>press<sp/>and<sp/>not<sp/>on<sp/>release?<sp/>X11<sp/>switches<sp/>on<sp/>press.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">KeyboardKeyState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="keyboard__input_8h_1a79e604a22703391bdfe212cfc10ea007" kindref="member">xkb_keysym_t</ref><sp/>keysym<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;nativeVirtualKey;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keysym<sp/>&gt;=<sp/>XKB_KEY_XF86Switch_VT_1<sp/>&amp;&amp;<sp/>keysym<sp/>&lt;=<sp/>XKB_KEY_XF86Switch_VT_12)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwinApp()-&gt;session()-&gt;switchTo(keysym<sp/>-<sp/>XKB_KEY_XF86Switch_VT_1<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_SCREENLOCKER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LockScreenFilter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>InputEventFilter</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>LockScreenFilter()</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>InputEventFilter(InputFilterOrder::LockScreen)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerMotion(PointerMotionEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="293"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;isScreenLocked())<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScreenLocker::KSldApp::self()-&gt;userActivity();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" kindref="member">findToplevel</ref>(event-&gt;position);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>&amp;&amp;<sp/>window-&gt;isClient()<sp/>&amp;&amp;<sp/>window-&gt;isLockScreen())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref>(window);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointerSurfaceAllowed())<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>should<sp/>the<sp/>pointer<sp/>position<sp/>always<sp/>stay<sp/>in<sp/>sync,<sp/>i.e.<sp/>not<sp/>do<sp/>the<sp/>check?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;setTimestamp(event-&gt;timestamp);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyPointerMotion(event-&gt;position);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerButton(PointerButtonEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="314"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;isScreenLocked())<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScreenLocker::KSldApp::self()-&gt;userActivity();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" kindref="member">findToplevel</ref>(event-&gt;position);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>&amp;&amp;<sp/>window-&gt;isClient()<sp/>&amp;&amp;<sp/>window-&gt;isLockScreen())<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref>(window);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointerSurfaceAllowed())<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>can<sp/>we<sp/>leak<sp/>presses/releases<sp/>here<sp/>when<sp/>we<sp/>move<sp/>the<sp/>mouse<sp/>in<sp/>between<sp/>from<sp/>an<sp/>allowed<sp/>surface<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>disallowed<sp/>one<sp/>or<sp/>vice<sp/>versa?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;setTimestamp(event-&gt;timestamp);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyPointerButton(event-&gt;nativeButton,<sp/>event-&gt;state);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerFrame()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="336"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;isScreenLocked())<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointerSurfaceAllowed())<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyPointerFrame();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerAxis(PointerAxisEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="347"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;isScreenLocked())<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScreenLocker::KSldApp::self()-&gt;userActivity();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointerSurfaceAllowed())<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;setTimestamp(event-&gt;timestamp);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyPointerAxis(event-&gt;orientation,<sp/>event-&gt;delta,<sp/>event-&gt;deltaV120,<sp/>event-&gt;source,<sp/>event-&gt;inverted);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keyboardKey(KeyboardKeyEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="362"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;isScreenLocked())<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;state<sp/>==<sp/>KeyboardKeyState::Repeated)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wayland<sp/>client<sp/>takes<sp/>care<sp/>of<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScreenLocker::KSldApp::self()-&gt;userActivity();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>event<sp/>to<sp/>KSldApp<sp/>for<sp/>global<sp/>accel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>event<sp/>is<sp/>set<sp/>to<sp/>accepted<sp/>it<sp/>means<sp/>a<sp/>whitelisted<sp/>shortcut<sp/>was<sp/>triggered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>that<sp/>case<sp/>we<sp/>filter<sp/>it<sp/>out<sp/>and<sp/>don&apos;t<sp/>process<sp/>it<sp/>further</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QKeyEvent<sp/>keyEvent(event-&gt;state<sp/>==<sp/>KeyboardKeyState::Released<sp/>?<sp/>QEvent::KeyRelease<sp/>:<sp/>QEvent::KeyPress,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;key,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;modifiers,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;nativeScanCode,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;nativeVirtualKey,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;text,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;state<sp/>==<sp/>KeyboardKeyState::Repeated);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyEvent.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::sendEvent(ScreenLocker::KSldApp::self(),<sp/>&amp;keyEvent);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyEvent.isAccepted())<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continue<sp/>normal<sp/>processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a6761bebc602f211e72216e4abd5b71b5" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyboardSurfaceAllowed())<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>pass<sp/>event<sp/>to<sp/>seat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(event-&gt;timestamp);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyKeyboardKey(event-&gt;nativeScanCode,<sp/>event-&gt;state);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touchDown(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="402"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;isScreenLocked())<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScreenLocker::KSldApp::self()-&gt;userActivity();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window<sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" kindref="member">findToplevel</ref>(pos);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>&amp;&amp;<sp/>surfaceAllowed(window-&gt;surface()))<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyTouchDown(window-&gt;surface(),<sp/>window-&gt;bufferGeometry().topLeft(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touchMotion(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="418"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;isScreenLocked())<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScreenLocker::KSldApp::self()-&gt;userActivity();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyTouchMotion(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touchUp(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="431"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;isScreenLocked())<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScreenLocker::KSldApp::self()-&gt;userActivity();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyTouchUp(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pinchGestureBegin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="444"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>touchpad<sp/>multi-finger<sp/>gestures<sp/>on<sp/>lock<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pinchGestureUpdate(qreal<sp/>scale,<sp/>qreal<sp/>angleDelta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="449"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>touchpad<sp/>multi-finger<sp/>gestures<sp/>on<sp/>lock<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pinchGestureEnd(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="454"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>touchpad<sp/>multi-finger<sp/>gestures<sp/>on<sp/>lock<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pinchGestureCancelled(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="459"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>touchpad<sp/>multi-finger<sp/>gestures<sp/>on<sp/>lock<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swipeGestureBegin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="465"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>touchpad<sp/>multi-finger<sp/>gestures<sp/>on<sp/>lock<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swipeGestureUpdate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="470"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>touchpad<sp/>multi-finger<sp/>gestures<sp/>on<sp/>lock<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swipeGestureEnd(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="475"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>touchpad<sp/>multi-finger<sp/>gestures<sp/>on<sp/>lock<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swipeGestureCancelled(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="480"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>touchpad<sp/>multi-finger<sp/>gestures<sp/>on<sp/>lock<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>holdGestureBegin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="485"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>touchpad<sp/>multi-finger<sp/>gestures<sp/>on<sp/>lock<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>holdGestureEnd(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="490"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>touchpad<sp/>multi-finger<sp/>gestures<sp/>on<sp/>lock<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>surfaceAllowed(SurfaceInterface<sp/>*s)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="497"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Window<sp/>*t<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;findWindow(s))<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t-&gt;isLockScreen()<sp/>||<sp/>t-&gt;isInputMethod()<sp/>||<sp/>t-&gt;isLockScreenOverlay();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerSurfaceAllowed()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="507"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>surfaceAllowed(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat()-&gt;focusedPointerSurface());</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keyboardSurfaceAllowed()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="511"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>surfaceAllowed(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat()-&gt;focusedKeyboardSurface());</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal">};</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="class_k_win_1_1_effects_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_effects_filter_1a6fe2a7c157bba225be81310d7beb4b8c" kindref="member">EffectsFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="520" refid="class_k_win_1_1_effects_filter_1a6fe2a7c157bba225be81310d7beb4b8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_effects_filter_1a6fe2a7c157bba225be81310d7beb4b8c" kindref="member">EffectsFilter</ref>()</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::Effects)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524" refid="class_k_win_1_1_effects_filter_1a3626f4479883002722948b0beee68a1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1a3626f4479883002722948b0beee68a1c" kindref="member">pointerMotion</ref>(<ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="525"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMouseEvent<sp/>mouseEvent(QEvent::MouseMove,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1acba1e285b4ecfaa62f1aee65474282aa" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1acba1e285b4ecfaa62f1aee65474282aa" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::NoButton,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a7e286960bcff7e872338d18d5e6cf1c4" kindref="member">buttons</ref>,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1ad23bd94b5df4b0da0c8d646627e61de6" kindref="member">modifiers</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseEvent.setTimestamp(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a91da236ff1690ae4862f76d1b1d3eca1" kindref="member">timestamp</ref>).count());</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseEvent.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;checkInputWindowEvent(&amp;mouseEvent);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539" refid="class_k_win_1_1_effects_filter_1ab6d8a9cda9277e58c8f5c15eac8ce79c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1ab6d8a9cda9277e58c8f5c15eac8ce79c" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="540"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMouseEvent<sp/>mouseEvent(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref><sp/>?<sp/>QEvent::MouseButtonPress<sp/>:<sp/>QEvent::MouseButtonRelease,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a7b963efee82d94c275bd617017004c02" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a7b963efee82d94c275bd617017004c02" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a2b688edc81ae92f9de805943717df4f6" kindref="member">button</ref>,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a8951ca8c71ee74f67b520e1e8dccc5dd" kindref="member">buttons</ref>,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a1d1f44a2a2aabf1a30d7a0cbcd65ded3" kindref="member">modifiers</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseEvent.setTimestamp(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1ab8f69816000bb2462487fad68fe14283" kindref="member">timestamp</ref>).count());</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseEvent.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;checkInputWindowEvent(&amp;mouseEvent);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554" refid="class_k_win_1_1_effects_filter_1a16e0d9eeb67725faac634c19fca9209a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1a16e0d9eeb67725faac634c19fca9209a" kindref="member">pointerAxis</ref>(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="555"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWheelEvent<sp/>wheelEvent(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1af8e62917007526d10a7c9940e2749eb0" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1af8e62917007526d10a7c9940e2749eb0" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPoint(),</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a80ec895eaaf9ac96fa9572e8919aff36" kindref="member">orientation</ref><sp/>==<sp/>Qt::Horizontal)<sp/>?<sp/>QPoint(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a4ce73e8e3e1de2422f88ac799e97a573" kindref="member">delta</ref>,<sp/>0)<sp/>:<sp/>QPoint(0,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a4ce73e8e3e1de2422f88ac799e97a573" kindref="member">delta</ref>),</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a560de1ad4ea0aefe912353a76c1cfb0b" kindref="member">buttons</ref>,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a5c43198e2af3aeed7d4c1c7cb7720b20" kindref="member">modifiers</ref>,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::NoScrollPhase,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a2e4fcbac9cb5e6975f23a5a3fd70869f" kindref="member">inverted</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelEvent.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;checkInputWindowEvent(&amp;wheelEvent);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570" refid="class_k_win_1_1_effects_filter_1ad53e94664b91a0017014086f91837241" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1ad53e94664b91a0017014086f91837241" kindref="member">keyboardKey</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="571"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref><sp/>||<sp/>!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;hasKeyboardGrab())<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>()-&gt;<ref refid="class_k_win_1_1_seat_interface_1a35bf1169670b7acafb2256cbf4ba957f" kindref="member">setFocusedKeyboardSurface</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_input_event_filter_1ae72e537c14e9de14f0720c8f25c6c4cd" kindref="member">passToInputMethod</ref>(event))<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QKeyEvent<sp/>keyEvent(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">KeyboardKeyState::Released</ref><sp/>?<sp/>QEvent::KeyRelease<sp/>:<sp/>QEvent::KeyPress,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref>,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1af66b823fbd8679868cf21411aa589941" kindref="member">modifiers</ref>,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1aa1d2fad163b7667c59365c67eeb40eaa" kindref="member">nativeScanCode</ref>,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a38861f207fa4d8fb34fb4cff89815750" kindref="member">nativeVirtualKey</ref>,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a1874ffd9f33c6198ae7dbd24d5e34cb1" kindref="member">text</ref>,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1a7f7309d5a83099309ac04dcb795ad0ce" kindref="member">KeyboardKeyState::Repeated</ref>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyEvent.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;grabbedKeyboardEvent(&amp;keyEvent);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590" refid="class_k_win_1_1_effects_filter_1aaaace65eb42c809615b291b6a7667d3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1aaaace65eb42c809615b291b6a7667d3b" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="591"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;touchDown(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos,<sp/>time);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597" refid="class_k_win_1_1_effects_filter_1a3d5af61f47ec9ba0250f7156e2df2993" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1a3d5af61f47ec9ba0250f7156e2df2993" kindref="member">touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="598"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;touchMotion(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos,<sp/>time);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604" refid="class_k_win_1_1_effects_filter_1ad220ddbfb97ac2d29e4d1152d7a15a97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1ad220ddbfb97ac2d29e4d1152d7a15a97" kindref="member">touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="605"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;touchUp(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>time);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611" refid="class_k_win_1_1_effects_filter_1a96d9580abeb5f4f496b2cd545295bf18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1a96d9580abeb5f4f496b2cd545295bf18" kindref="member">touchCancel</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="612"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;touchCancel();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616" refid="class_k_win_1_1_effects_filter_1a2bb4dea6e873554b6944f42f54985110" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1a2bb4dea6e873554b6944f42f54985110" kindref="member">tabletToolProximityEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="617"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;tabletToolProximityEvent(event);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623" refid="class_k_win_1_1_effects_filter_1aad8d6dc648de7554b5276073e913021e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1aad8d6dc648de7554b5276073e913021e" kindref="member">tabletToolAxisEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="624"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;tabletToolAxisEvent(event);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630" refid="class_k_win_1_1_effects_filter_1a5726eb81f0b9c17b55490a6225f21a81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1a5726eb81f0b9c17b55490a6225f21a81" kindref="member">tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="631"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;tabletToolTipEvent(event);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637" refid="class_k_win_1_1_effects_filter_1a8378bebf4a31dc3540f5956389bf40bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1a8378bebf4a31dc3540f5956389bf40bb" kindref="member">tabletToolButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_button_event" kindref="compound">TabletToolButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="638"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;tabletToolButtonEvent(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a3984ed289233b50a70cfe7f3f8ea8873" kindref="member">button</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a00cd2be558c0893711b4c672290e4c42" kindref="member">pressed</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a3da12e7d1ef69bfc07fc0a1166da612a" kindref="member">tool</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a6b36961a009c5c1c9a2834728a56aa8c" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644" refid="class_k_win_1_1_effects_filter_1a977e2063177a0433f61d33d8208c48be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1a977e2063177a0433f61d33d8208c48be" kindref="member">tabletPadButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_button_event" kindref="compound">TabletPadButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="645"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;tabletPadButtonEvent(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1a53c77adf0aa68895d58bbabed36f4121" kindref="member">button</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1ab0f014cdb060e7a8eecd30fbd061574e" kindref="member">pressed</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1a288ef4e5394748d62b1ea1c281da89a4" kindref="member">time</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1a048d96e057a1153b62cb12fdbdff4231" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651" refid="class_k_win_1_1_effects_filter_1a22faea35b7cac771ac258b502c37db08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1a22faea35b7cac771ac258b502c37db08" kindref="member">tabletPadStripEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_strip_event" kindref="compound">TabletPadStripEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="652"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;tabletPadStripEvent(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1a1e0def991d4c17dff4b5dc0331dff378" kindref="member">number</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1a8c06751f62b07c1066ac90e845f9b92a" kindref="member">position</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1a95355c3434e173b7c2c4c343d78a0ce8" kindref="member">isFinger</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1a6f2774f81633dc01e26c9958c24ac16c" kindref="member">time</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1af16822838c855d599c414df901086c2c" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658" refid="class_k_win_1_1_effects_filter_1abbfce55fb47288b693777c3008794baa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_effects_filter_1abbfce55fb47288b693777c3008794baa" kindref="member">tabletPadRingEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_ring_event" kindref="compound">TabletPadRingEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="659"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;tabletPadRingEvent(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1ab21ceca35741104a310c9b6f2bd9278b" kindref="member">number</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1adf7b401784e57f200b271d02adf48972" kindref="member">position</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1a6aa8d559502f484e1f1ee119f37e88c8" kindref="member">isFinger</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1a19cae2728fea1ab71eafa600c9c1ae88" kindref="member">time</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1a89daef0ce3237d876786d11b5bb8a0f1" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal">};</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="class_k_win_1_1_move_resize_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_move_resize_filter_1a970af603ac32d8decd0406be37c1ffc8" kindref="member">MoveResizeFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="670" refid="class_k_win_1_1_move_resize_filter_1a970af603ac32d8decd0406be37c1ffc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_move_resize_filter_1a970af603ac32d8decd0406be37c1ffc8" kindref="member">MoveResizeFilter</ref>()</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::InteractiveMoveResize)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674" refid="class_k_win_1_1_move_resize_filter_1ae2d7dbd9d4de5d997b7ca06dd50693bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_move_resize_filter_1ae2d7dbd9d4de5d997b7ca06dd50693bb" kindref="member">pointerMotion</ref>(<ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="675"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1aa144f13367344f7c18bb8cd178464763" kindref="member">updateInteractiveMoveResize</ref>(event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1acba1e285b4ecfaa62f1aee65474282aa" kindref="member">position</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1ad23bd94b5df4b0da0c8d646627e61de6" kindref="member">modifiers</ref>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683" refid="class_k_win_1_1_move_resize_filter_1a692aad0027acb2dafc3669a3da2d8f70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_move_resize_filter_1a692aad0027acb2dafc3669a3da2d8f70" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="684"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">PointerButtonState::Released</ref>)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a8951ca8c71ee74f67b520e1e8dccc5dd" kindref="member">buttons</ref><sp/>==<sp/>Qt::NoButton)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a3bb6bb26cb4a8e13525c376ac9bbd3b2" kindref="member">endInteractiveMoveResize</ref>();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696" refid="class_k_win_1_1_move_resize_filter_1a09724ce65883c52b5aa5fd6ea38fd489" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_move_resize_filter_1a09724ce65883c52b5aa5fd6ea38fd489" kindref="member">pointerAxis</ref>(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="697"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>out<sp/>while<sp/>moving<sp/>a<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701" refid="class_k_win_1_1_move_resize_filter_1aed1ba648e19814bec1eba0e80f1c4da6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_move_resize_filter_1aed1ba648e19814bec1eba0e80f1c4da6" kindref="member">keyboardKey</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="702"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1a7f7309d5a83099309ac04dcb795ad0ce" kindref="member">KeyboardKeyState::Repeated</ref><sp/>||<sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">KeyboardKeyState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1aeb1157e5384db85990b6c16659bc7ab3" kindref="member">keyPressEvent</ref>(QKeyCombination{</highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;modifiers,<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;key});</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;<ref refid="class_k_win_1_1_window_1a1b63155365b80df09ad34dc75f15102d" kindref="member">isInteractiveMove</ref>()<sp/>||<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a6994e3aab2074f1b07c15c2f51629363" kindref="member">isInteractiveResize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>update<sp/>if<sp/>mode<sp/>didn&apos;t<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1aa144f13367344f7c18bb8cd178464763" kindref="member">updateInteractiveMoveResize</ref>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;globalPointer(),<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="class_k_win_1_1_move_resize_filter_1a27eb403be250315c517e55ca82f34981" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_move_resize_filter_1a27eb403be250315c517e55ca82f34981" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="718"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="class_k_win_1_1_move_resize_filter_1a64db534aa8820ad924eb6322fe63fc92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_move_resize_filter_1a64db534aa8820ad924eb6322fe63fc92" kindref="member">touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="727"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_set)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_id<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_set<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_id<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1aa144f13367344f7c18bb8cd178464763" kindref="member">updateInteractiveMoveResize</ref>(pos,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742" refid="class_k_win_1_1_move_resize_filter_1af1f83516208ee931612ef1c8a5b2236f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_move_resize_filter_1af1f83516208ee931612ef1c8a5b2236f" kindref="member">touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="743"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_id<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>||<sp/>!m_set)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a3bb6bb26cb4a8e13525c376ac9bbd3b2" kindref="member">endInteractiveMoveResize</ref>();</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_set<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>through<sp/>to<sp/>update<sp/>decoration<sp/>filter<sp/>later<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_set<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="class_k_win_1_1_move_resize_filter_1a71ec722486da1083f7c51bc63158e639" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_move_resize_filter_1a71ec722486da1083f7c51bc63158e639" kindref="member">tabletToolProximityEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="759"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768" refid="class_k_win_1_1_move_resize_filter_1a02d21bc44d70d2dc501613e9ba3dd242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_move_resize_filter_1a02d21bc44d70d2dc501613e9ba3dd242" kindref="member">tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="769"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aab6af1a62ff7db96822715a17b6536ea" kindref="member">type</ref><sp/>==<sp/><ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a26ac1b53980eb001ae80df6d07cc1c2fa169de9deb41de582ce00bc9db60f4428" kindref="member">TabletToolTipEvent::Release</ref>)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a3bb6bb26cb4a8e13525c376ac9bbd3b2" kindref="member">endInteractiveMoveResize</ref>();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="class_k_win_1_1_move_resize_filter_1a835e337d6abb2f40f80382c7c9347e3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_move_resize_filter_1a835e337d6abb2f40f80382c7c9347e3b" kindref="member">tabletToolAxisEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="781"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" kindref="member">moveResizeWindow</ref>();</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1aa144f13367344f7c18bb8cd178464763" kindref="member">updateInteractiveMoveResize</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a2c3ac2ac4f76952614cb46922a0c2688" kindref="member">position</ref>,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>qint32<sp/>m_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_set<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">};</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796" refid="class_k_win_1_1_window_selector_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_window_selector_filter_1a6dfc4c208ef589acecb192f47d8da7bb" kindref="member">WindowSelectorFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="799" refid="class_k_win_1_1_window_selector_filter_1a6dfc4c208ef589acecb192f47d8da7bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_selector_filter_1a6dfc4c208ef589acecb192f47d8da7bb" kindref="member">WindowSelectorFilter</ref>()</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::WindowSelector)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803" refid="class_k_win_1_1_window_selector_filter_1a589bcf9e8f200d17fc55e087553bf075" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1a589bcf9e8f200d17fc55e087553bf075" kindref="member">pointerMotion</ref>(<ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="804"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_active;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807" refid="class_k_win_1_1_window_selector_filter_1ad9d5d741cb97b1302539e897175d3557" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1ad9d5d741cb97b1302539e897175d3557" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="808"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_active)<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">PointerButtonState::Released</ref>)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a8951ca8c71ee74f67b520e1e8dccc5dd" kindref="member">buttons</ref><sp/>==<sp/>Qt::NoButton)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a2b688edc81ae92f9de805943717df4f6" kindref="member">button</ref><sp/>==<sp/>Qt::RightButton)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cancel();</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accept(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a7b963efee82d94c275bd617017004c02" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823" refid="class_k_win_1_1_window_selector_filter_1ad0b811ab9c954d007c51d727096c1b7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1ad0b811ab9c954d007c51d727096c1b7b" kindref="member">pointerAxis</ref>(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="824"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>out<sp/>while<sp/>selecting<sp/>a<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_active;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828" refid="class_k_win_1_1_window_selector_filter_1a4b74bfbe416f337a1799169a5ee815d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1a4b74bfbe416f337a1799169a5ee815d8" kindref="member">keyboardKey</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="829"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_active)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>()-&gt;<ref refid="class_k_win_1_1_seat_interface_1a35bf1169670b7acafb2256cbf4ba957f" kindref="member">setFocusedKeyboardSurface</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1a7f7309d5a83099309ac04dcb795ad0ce" kindref="member">KeyboardKeyState::Repeated</ref><sp/>||<sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">KeyboardKeyState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x11<sp/>variant<sp/>does<sp/>this<sp/>on<sp/>key<sp/>press,<sp/>so<sp/>do<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref><sp/>==<sp/>Qt::Key_Escape)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cancel();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref><sp/>==<sp/>Qt::Key_Enter<sp/>||<sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref><sp/>==<sp/>Qt::Key_Return<sp/>||<sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref><sp/>==<sp/>Qt::Key_Space)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accept(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;globalPointer());</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;supportsPointerWarping())<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>my<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref><sp/>==<sp/>Qt::Key_Left)<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mx<sp/>=<sp/>-10;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref><sp/>==<sp/>Qt::Key_Right)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mx<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref><sp/>==<sp/>Qt::Key_Up)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>my<sp/>=<sp/>-10;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref><sp/>==<sp/>Qt::Key_Down)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>my<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1af66b823fbd8679868cf21411aa589941" kindref="member">modifiers</ref><sp/>&amp;<sp/>Qt::ControlModifier)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mx<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>my<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1aa57c43682e0dc7f2fa1f3b0054f9b86a" kindref="member">warpPointer</ref>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;globalPointer()<sp/>+<sp/>QPointF(mx,<sp/>my));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>out<sp/>while<sp/>selecting<sp/>a<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="class_k_win_1_1_window_selector_filter_1ad9ec43698b51e02614746d1bf1d1aa63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1ad9ec43698b51e02614746d1bf1d1aa63" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="869"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_selector_filter_1a8ce219072f86557a5f22ce840a30795b" kindref="member">isActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchPoints.insert(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="class_k_win_1_1_window_selector_filter_1ad8286c2fae12c112333f777a8317202d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1ad8286c2fae12c112333f777a8317202d" kindref="member">touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="878"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_selector_filter_1a8ce219072f86557a5f22ce840a30795b" kindref="member">isActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_touchPoints.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_touchPoints.end())<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*it<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889" refid="class_k_win_1_1_window_selector_filter_1aa41a34a739756423ad4ac50c8b57e922" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1aa41a34a739756423ad4ac50c8b57e922" kindref="member">touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="890"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_selector_filter_1a8ce219072f86557a5f22ce840a30795b" kindref="member">isActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_touchPoints.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_touchPoints.end())<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>it.value();</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchPoints.erase(it);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchPoints.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accept(pos);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905" refid="class_k_win_1_1_window_selector_filter_1ae92f85720f920a7e023471a1bb527d2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1ae92f85720f920a7e023471a1bb527d2c" kindref="member">tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="906"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_window_selector_filter_1a8ce219072f86557a5f22ce840a30795b" kindref="member">isActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aab6af1a62ff7db96822715a17b6536ea" kindref="member">type</ref><sp/>==<sp/><ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a26ac1b53980eb001ae80df6d07cc1c2fa169de9deb41de582ce00bc9db60f4428" kindref="member">TabletToolTipEvent::Release</ref>)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accept(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aacd3e2e78bb3e98deb5e0711904571a9" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918" refid="class_k_win_1_1_window_selector_filter_1a8ce219072f86557a5f22ce840a30795b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1a8ce219072f86557a5f22ce840a30795b" kindref="member">isActive</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="919"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_active;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922" refid="class_k_win_1_1_window_selector_filter_1aec8e27c3ff8724250feaaf2570262aae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1aec8e27c3ff8724250feaaf2570262aae" kindref="member">start</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*)&gt;<sp/>callback)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(!m_active);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_callback<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a6761bebc602f211e72216e4abd5b71b5" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_touch_input_redirection_1a8b36aea41977e6617f4e4aa02714e9dd" kindref="member">cancel</ref>();</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930" refid="class_k_win_1_1_window_selector_filter_1a86a1a40e88f2cbfac243fc5448b5c6b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_selector_filter_1a86a1a40e88f2cbfac243fc5448b5c6b3" kindref="member">start</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;)&gt;<sp/>callback)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(!m_active);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointSelectionFallback<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a6761bebc602f211e72216e4abd5b71b5" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_touch_input_redirection_1a8b36aea41977e6617f4e4aa02714e9dd" kindref="member">cancel</ref>();</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deactivate()</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_callback<sp/>=<sp/>std::function&lt;void(Window<sp/>*)&gt;();</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointSelectionFallback<sp/>=<sp/>std::function&lt;void(const<sp/>QPoint<sp/>&amp;)&gt;();</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a52ce9b063bb9b02087f8cdf66b17a302" kindref="member">removeWindowSelectionCursor</ref>();</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a6761bebc602f211e72216e4abd5b71b5" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchPoints.clear();</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cancel()</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_callback)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_callback(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pointSelectionFallback)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointSelectionFallback(QPoint(-1,<sp/>-1));</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deactivate();</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>accept(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_callback)<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>this<sp/>ignores<sp/>shaped<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_callback(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;findToplevel(pos));</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pointSelectionFallback)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointSelectionFallback(pos.toPoint());</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deactivate();</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void(Window<sp/>*)&gt;<sp/>m_callback;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;)&gt;<sp/>m_pointSelectionFallback;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>QMap&lt;quint32,<sp/>QPointF&gt;<sp/>m_touchPoints;</highlight></codeline>
<codeline lineno="975"><highlight class="normal">};</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GlobalShortcutFilter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref></highlight></codeline>
<codeline lineno="979"><highlight class="normal">{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>GlobalShortcutFilter()</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>InputEventFilter(InputFilterOrder::<ref refid="namespace_k_win_1_1_input_filter_order_1a756edc4ece066f390b6c187c3cd970b1a02b7e17016e127fb626b6b82a11c1742" kindref="member">GlobalShortcut</ref>)</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_powerDown.setSingleShot(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_powerDown.setInterval(1000);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerButton(PointerButtonEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="989"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;state<sp/>==<sp/>PointerButtonState::Pressed)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;shortcuts()-&gt;processPointerPressed(event-&gt;modifiers,<sp/>event-&gt;buttons))<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerAxis(PointerAxisEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="998"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;modifiers<sp/>==<sp/>Qt::NoModifier)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0" kindref="member">PointerAxisDirection</ref><sp/>direction<sp/>=<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0a2f9a4157919ddb043621f6f3990b5056" kindref="member">PointerAxisUp</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;orientation<sp/>==<sp/>Qt::Horizontal)<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;delta<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0ac616521e01791532a8fb0e0cc2bd7836" kindref="member">PointerAxisRight</ref>;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;delta<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0a3ae40aa91df397da9d9da3e81d859d4a" kindref="member">PointerAxisLeft</ref>;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;delta<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0a9e2afc22dd1bb0575f7b1ba7282f8e52" kindref="member">PointerAxisDown</ref>;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;delta<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0a2f9a4157919ddb043621f6f3990b5056" kindref="member">PointerAxisUp</ref>;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1abf361109d96dd04fa4f0e87206325a8a" kindref="member">processAxis</ref>(event-&gt;modifiers,<sp/>direction);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keyboardKey(KeyboardKeyEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1020"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;key<sp/>==<sp/>Qt::Key_PowerOff)<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>modifiers<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;modifiersRelevantForGlobalShortcuts;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;state<sp/>==<sp/>KeyboardKeyState::Pressed)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>passToShortcuts<sp/>=<sp/>[modifiers]<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1aa6bea5b7e62b83c894f2bdd3ef3ae61d" kindref="member">processKey</ref>(modifiers,<sp/>Qt::Key_PowerDown);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::connect(&amp;m_powerDown,<sp/>&amp;QTimer::timeout,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;shortcuts(),<sp/>passToShortcuts,<sp/>Qt::SingleShotConnection);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_powerDown.start();</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;state<sp/>==<sp/>KeyboardKeyState::Released)<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>!m_powerDown.isActive()<sp/>||<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1aa6bea5b7e62b83c894f2bdd3ef3ae61d" kindref="member">processKey</ref>(modifiers,<sp/>event-&gt;key);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_powerDown.stop();</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;state<sp/>==<sp/>KeyboardKeyState::Repeated<sp/>||<sp/>event-&gt;state<sp/>==<sp/>KeyboardKeyState::Pressed)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;isKeyboardShortcutsInhibited())<sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;shortcuts()-&gt;processKey(event-&gt;modifiersRelevantForGlobalShortcuts,<sp/>event-&gt;key))<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a8fd7339d750f82307db6ad49d5ea1fdc" kindref="member">addFilteredKey</ref>(event-&gt;nativeScanCode);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;state<sp/>==<sp/>KeyboardKeyState::Released)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;isKeyboardShortcutsInhibited())<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1a8e8edd37d14e38efc87b4fcfa968a382" kindref="member">processKeyRelease</ref>(event-&gt;modifiersRelevantForGlobalShortcuts,<sp/>event-&gt;key);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swipeGestureBegin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1050"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchpadGestureFingerCount<sp/>=<sp/>fingerCount;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchpadGestureFingerCount<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1ad6898ab3876ae494f4331923668c11a8" kindref="member">processSwipeStart</ref>(DeviceType::Touchpad,<sp/>fingerCount);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swipeGestureUpdate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1060"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchpadGestureFingerCount<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1a468b3ce8db10bb1b43cbbb8e1e4ce68f" kindref="member">processSwipeUpdate</ref>(DeviceType::Touchpad,<sp/>delta);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swipeGestureCancelled(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1069"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchpadGestureFingerCount<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1a7dea2c49329b455a3bad063afaae9e54" kindref="member">processSwipeCancel</ref>(DeviceType::Touchpad);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swipeGestureEnd(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1078"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchpadGestureFingerCount<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1a20e88eb63efa280055fd0bb52a03847d" kindref="member">processSwipeEnd</ref>(DeviceType::Touchpad);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pinchGestureBegin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1087"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchpadGestureFingerCount<sp/>=<sp/>fingerCount;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchpadGestureFingerCount<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1ac9d26e78fa0edb7d6c4e88cda4ad4ba3" kindref="member">processPinchStart</ref>(fingerCount);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pinchGestureUpdate(qreal<sp/>scale,<sp/>qreal<sp/>angleDelta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1097"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchpadGestureFingerCount<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1a288ff55a87f02a05b7115d5cc1c7ef4c" kindref="member">processPinchUpdate</ref>(scale,<sp/>angleDelta,<sp/>delta);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pinchGestureEnd(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1106"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchpadGestureFingerCount<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1a3bfc59a1daa21eb6ffd28366f86e521d" kindref="member">processPinchEnd</ref>();</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pinchGestureCancelled(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1115"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchpadGestureFingerCount<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1a47cdf8f490ec82374cfd18c3a47a615a" kindref="member">processPinchCancel</ref>();</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touchDown(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1124"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_gestureTaken)<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1a7dea2c49329b455a3bad063afaae9e54" kindref="member">processSwipeCancel</ref>(DeviceType::Touchscreen);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gestureCancelled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchPoints.insert(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchPoints.count()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastTouchDownTime<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>-<sp/>m_lastTouchDownTime<sp/>&gt;<sp/>250ms)<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gestureCancelled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastTouchDownTime<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1acaee43b5ca7a189e5f84b6361da672c3" kindref="member">outputAt</ref>(pos);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>physicalSize<sp/>=<sp/>output-&gt;<ref refid="class_k_win_1_1_output_1a0d05f9630e7411b0485d09cfc3f252ec" kindref="member">orientateSize</ref>(output-&gt;physicalSize());</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!physicalSize.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicalSize<sp/>=<sp/>QSize(190,<sp/>100);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xfactor<sp/>=<sp/>physicalSize.width()<sp/>/<sp/>(float)output-&gt;geometry().width();</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yfactor<sp/>=<sp/>physicalSize.height()<sp/>/<sp/>(float)output-&gt;geometry().height();</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>distanceMatch<sp/>=<sp/>std::any_of(m_touchPoints.constBegin(),<sp/>m_touchPoints.constEnd(),<sp/>[pos,<sp/>xfactor,<sp/>yfactor](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;point)<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>p<sp/>=<sp/>pos<sp/>-<sp/>point;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::abs(xfactor<sp/>*<sp/>p.x())<sp/>+<sp/>std::abs(yfactor<sp/>*<sp/>p.y())<sp/>&lt;<sp/>50;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distanceMatch)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gestureCancelled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchPoints.count()<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>!m_gestureCancelled)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gestureTaken<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syntheticCancel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a725a24b7fb60484bd6ec55a85c845e43" kindref="member">processFilters</ref>(std::bind(&amp;InputEventFilter::touchCancel,<sp/>std::placeholders::_1));</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_syntheticCancel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1ad6898ab3876ae494f4331923668c11a8" kindref="member">processSwipeStart</ref>(DeviceType::Touchscreen,<sp/>m_touchPoints.count());</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touchMotion(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1168"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_gestureTaken)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_gestureCancelled)<sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1acaee43b5ca7a189e5f84b6361da672c3" kindref="member">outputAt</ref>(pos);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>physicalSize<sp/>=<sp/>output-&gt;<ref refid="class_k_win_1_1_output_1a0d05f9630e7411b0485d09cfc3f252ec" kindref="member">orientateSize</ref>(output-&gt;physicalSize());</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xfactor<sp/>=<sp/>physicalSize.width()<sp/>/<sp/>(float)output-&gt;geometry().width();</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yfactor<sp/>=<sp/>physicalSize.height()<sp/>/<sp/>(float)output-&gt;geometry().height();</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;point<sp/>=<sp/>m_touchPoints[id];</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/><ref refid="xcursor_8c_1a29937ce1a680438ed6359f24e36b821d" kindref="member">dist</ref><sp/>=<sp/>pos<sp/>-<sp/>point;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>delta<sp/>=<sp/>QPointF(xfactor<sp/>*<sp/><ref refid="xcursor_8c_1a29937ce1a680438ed6359f24e36b821d" kindref="member">dist</ref>.x(),<sp/>yfactor<sp/>*<sp/><ref refid="xcursor_8c_1a29937ce1a680438ed6359f24e36b821d" kindref="member">dist</ref>.y());</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1a468b3ce8db10bb1b43cbbb8e1e4ce68f" kindref="member">processSwipeUpdate</ref>(DeviceType::Touchscreen,<sp/>5<sp/>*<sp/>delta<sp/>/<sp/>m_touchPoints.size());</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touchUp(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1189"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchPoints.remove(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_gestureTaken)<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_gestureCancelled)<sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6382d4a8cf16ae3f76ab2bdb9180fdff" kindref="member">shortcuts</ref>()-&gt;<ref refid="class_k_win_1_1_global_shortcuts_manager_1a20e88eb63efa280055fd0bb52a03847d" kindref="member">processSwipeEnd</ref>(DeviceType::Touchscreen);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gestureCancelled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gestureTaken<sp/>&amp;=<sp/>m_touchPoints.count()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gestureCancelled<sp/>&amp;=<sp/>m_gestureTaken;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gestureCancelled<sp/>&amp;=<sp/>m_touchPoints.count()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touchCancel()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1206"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_syntheticCancel)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>oldGestureTaken<sp/>=<sp/>m_gestureTaken;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gestureTaken<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gestureCancelled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchPoints.clear();</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oldGestureTaken;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touchFrame()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1218"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_gestureTaken;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_gestureTaken<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_gestureCancelled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_syntheticCancel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::microseconds<sp/>m_lastTouchDownTime<sp/>=<sp/>std::chrono::microseconds::zero();</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>m_lastAverageDistance;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>QMap&lt;int32_t,<sp/>QPointF&gt;<sp/>m_touchPoints;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_touchpadGestureFingerCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>QTimer<sp/>m_powerDown;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal">std::optional&lt;bool&gt;<sp/>performModifierWindowMouseAction(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;modifiersRelevantForShortcuts<sp/>!=<sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;commandAllModifier())<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;isConstrained()<sp/>||<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;globalShortcutsDisabled())<sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(event-&gt;button)<sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::LeftButton:</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;performMousePressCommand(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;commandAll1(),<sp/>event-&gt;position);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::MiddleButton:</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;performMousePressCommand(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;commandAll2(),<sp/>event-&gt;position);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::RightButton:</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;performMousePressCommand(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;commandAll3(),<sp/>event-&gt;position);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">std::optional&lt;bool&gt;<sp/>performWindowMouseAction(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>globalAction<sp/>=<sp/>performModifierWindowMouseAction(event,<sp/>window))<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>globalAction;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>command<sp/>=<sp/>window-&gt;getMousePressCommand(event-&gt;button))<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;performMousePressCommand(*command,<sp/>event-&gt;position);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal">std::optional&lt;bool&gt;<sp/>performModifierWindowWheelAction(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;orientation<sp/>!=<sp/>Qt::Vertical)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;modifiersRelevantForGlobalShortcuts<sp/>!=<sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;commandAllModifier())<sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;isConstrained()<sp/>||<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;globalShortcutsDisabled())<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;performMousePressCommand(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;operationWindowMouseWheel(-1<sp/>*<sp/>event-&gt;delta),<sp/>event-&gt;position);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">std::optional&lt;bool&gt;<sp/>performWindowWheelAction(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>globalAction<sp/>=<sp/>performModifierWindowWheelAction(event,<sp/>window))<sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>globalAction;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>command<sp/>=<sp/>window-&gt;getWheelCommand(Qt::Vertical))<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;performMousePressCommand(*command,<sp/>event-&gt;position);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309" refid="class_k_win_1_1_internal_window_event_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_internal_window_event_filter_1a9a7881a1f6de6023c864b4e9bae6506c" kindref="member">InternalWindowEventFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="1310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1312" refid="class_k_win_1_1_internal_window_event_filter_1a9a7881a1f6de6023c864b4e9bae6506c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1a9a7881a1f6de6023c864b4e9bae6506c" kindref="member">InternalWindowEventFilter</ref>()</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::<ref refid="class_k_win_1_1_internal_window" kindref="compound">InternalWindow</ref>)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchDevice<sp/>=<sp/>std::make_unique&lt;QPointingDevice&gt;(QLatin1String(</highlight><highlight class="stringliteral">&quot;some<sp/>touchscreen&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>QInputDevice::DeviceType::TouchScreen,</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointingDevice::PointerType::Finger,<sp/>QInputDevice::Capability::Position,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10,<sp/>0,<sp/>kwinApp()-&gt;session()-&gt;seat(),<sp/>QPointingDeviceUniqueId());</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::registerInputDevice(m_touchDevice.get());</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tabletDevice<sp/>=<sp/>std::make_unique&lt;QPointingDevice&gt;(QLatin1String(</highlight><highlight class="stringliteral">&quot;some<sp/>tablet&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>QInputDevice::DeviceType::Stylus,</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointingDevice::PointerType::Pen,<sp/>QInputDevice::Capability::Position<sp/>|<sp/>QInputDevice::Capability::ZPosition<sp/>|<sp/>QInputDevice::Capability::Pressure,</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10,<sp/>0,<sp/>kwinApp()-&gt;session()-&gt;seat(),<sp/>QPointingDeviceUniqueId());</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::registerInputDevice(m_tabletDevice.get());</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325" refid="class_k_win_1_1_internal_window_event_filter_1a1be9240afb51c546b59ba94d0affb677" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1a1be9240afb51c546b59ba94d0affb677" kindref="member">pointerMotion</ref>(<ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1326"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;focus()<sp/>||<sp/>!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;focus()-&gt;isInternal())<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindow<sp/>*internal<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_internal_window" kindref="compound">InternalWindow</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>())-&gt;handle();</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!internal)<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>handle<sp/>can<sp/>be<sp/>nullptr<sp/>if<sp/>the<sp/>tooltip<sp/>gets<sp/>closed<sp/>while<sp/>focus<sp/>updates<sp/>are<sp/>blocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::handleMouseEvent(internal,</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1acba1e285b4ecfaa62f1aee65474282aa" kindref="member">position</ref><sp/>-<sp/>internal-&gt;position(),</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1acba1e285b4ecfaa62f1aee65474282aa" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a7e286960bcff7e872338d18d5e6cf1c4" kindref="member">buttons</ref>,</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::NoButton,</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QEvent::MouseMove,</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1ad23bd94b5df4b0da0c8d646627e61de6" kindref="member">modifiers</ref>);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344" refid="class_k_win_1_1_internal_window_event_filter_1a790b015db4b82f17bd9feb26fec2195d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1a790b015db4b82f17bd9feb26fec2195d" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1345"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;focus()<sp/>||<sp/>!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;focus()-&gt;isInternal())<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindow<sp/>*internal<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_internal_window" kindref="compound">InternalWindow</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>())-&gt;handle();</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!internal)<sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>handle<sp/>can<sp/>be<sp/>nullptr<sp/>if<sp/>the<sp/>tooltip<sp/>gets<sp/>closed<sp/>while<sp/>focus<sp/>updates<sp/>are<sp/>blocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::handleMouseEvent(internal,</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a7b963efee82d94c275bd617017004c02" kindref="member">position</ref><sp/>-<sp/>internal-&gt;position(),</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a7b963efee82d94c275bd617017004c02" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a8951ca8c71ee74f67b520e1e8dccc5dd" kindref="member">buttons</ref>,</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a2b688edc81ae92f9de805943717df4f6" kindref="member">button</ref>,</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref><sp/>?<sp/>QEvent::MouseButtonPress<sp/>:<sp/>QEvent::MouseButtonRelease,</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a1d1f44a2a2aabf1a30d7a0cbcd65ded3" kindref="member">modifiers</ref>);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363" refid="class_k_win_1_1_internal_window_event_filter_1a9a5deb699c6b67d44b70168254b5cb57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1a9a5deb699c6b67d44b70168254b5cb57" kindref="member">pointerAxis</ref>(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1364"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;focus()<sp/>||<sp/>!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;focus()-&gt;isInternal())<sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindow<sp/>*internal<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_internal_window" kindref="compound">InternalWindow</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>())-&gt;handle();</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!internal)<sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>handle<sp/>can<sp/>be<sp/>nullptr<sp/>if<sp/>the<sp/>tooltip<sp/>gets<sp/>closed<sp/>while<sp/>focus<sp/>updates<sp/>are<sp/>blocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a2bd891c23b9f1a712873598e44ced6b4" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::handleWheelEvent(internal,</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp.count(),</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1af8e62917007526d10a7c9940e2749eb0" kindref="member">position</ref><sp/>-<sp/>internal-&gt;position(),</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1af8e62917007526d10a7c9940e2749eb0" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPoint(),</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a80ec895eaaf9ac96fa9572e8919aff36" kindref="member">orientation</ref><sp/>==<sp/>Qt::Horizontal)<sp/>?<sp/>QPoint(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a4ce73e8e3e1de2422f88ac799e97a573" kindref="member">delta</ref>,<sp/>0)<sp/>:<sp/>QPoint(0,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a4ce73e8e3e1de2422f88ac799e97a573" kindref="member">delta</ref>))<sp/>*<sp/>-1,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a5c43198e2af3aeed7d4c1c7cb7720b20" kindref="member">modifiers</ref>,</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::NoScrollPhase,</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::MouseEventNotSynthesized,</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a2e4fcbac9cb5e6975f23a5a3fd70869f" kindref="member">inverted</ref>);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387" refid="class_k_win_1_1_internal_window_event_filter_1a1054f3afb6c85743be62a5baf89174e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1a1054f3afb6c85743be62a5baf89174e6" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1388"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;isTouchSequence())<sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>something<sp/>else<sp/>is<sp/>getting<sp/>the<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;focus()<sp/>||<sp/>!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;focus()-&gt;isInternal())<sp/>{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>contactAreaWidth<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>contactAreaHeight<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;touchPoint<sp/>=<sp/>m_touchPoints.emplaceBack(QWindowSystemInterface::TouchPoint{});</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchPoint.id<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchPoint.area<sp/>=<sp/>QRectF(pos.x()<sp/>-<sp/>contactAreaWidth<sp/>/<sp/>2,<sp/>pos.y()<sp/>-<sp/>contactAreaHeight<sp/>/<sp/>2,<sp/>contactAreaWidth,<sp/>contactAreaHeight);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchPoint.state<sp/>=<sp/>QEventPoint::State::Pressed;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchPoint.pressure<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindow<sp/>*internal<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_internal_window" kindref="compound">InternalWindow</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>())-&gt;handle();</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::handleTouchEvent(internal,<sp/>m_touchDevice.get(),<sp/>m_touchPoints,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchPoint.state<sp/>=<sp/>QEventPoint::State::Stationary;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414" refid="class_k_win_1_1_internal_window_event_filter_1a836ccb639044f8ce296ee995b4d53302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1a836ccb639044f8ce296ee995b4d53302" kindref="member">touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1415"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::ranges::find_if(m_touchPoints,<sp/>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;touchPoint)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>touchPoint.id<sp/>==<sp/>id;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_touchPoints.end())<sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;area.moveCenter(pos);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;state<sp/>=<sp/>QEventPoint::State::Updated;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internalWindow<sp/>=<sp/>qobject_cast&lt;InternalWindow<sp/>*&gt;(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;focus()))<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::handleTouchEvent(internalWindow-&gt;handle(),<sp/>m_touchDevice.get(),<sp/>m_touchPoints,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;state<sp/>=<sp/>QEventPoint::State::Stationary;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433" refid="class_k_win_1_1_internal_window_event_filter_1a3ce55b6a2f5bd0fbac46feee112bd7e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1a3ce55b6a2f5bd0fbac46feee112bd7e2" kindref="member">touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1434"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::ranges::find_if(m_touchPoints,<sp/>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;touchPoint)<sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>touchPoint.id<sp/>==<sp/>id;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_touchPoints.end())<sp/>{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;pressure<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;state<sp/>=<sp/>QEventPoint::State::Released;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internalWindow<sp/>=<sp/>qobject_cast&lt;InternalWindow<sp/>*&gt;(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;focus()))<sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::handleTouchEvent(internalWindow-&gt;handle(),<sp/>m_touchDevice.get(),<sp/>m_touchPoints,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchPoints.erase(it);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452" refid="class_k_win_1_1_internal_window_event_filter_1adae810cd44f02b7184d88658bfc2fe04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1adae810cd44f02b7184d88658bfc2fe04" kindref="member">touchCancel</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1453"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_touchPoints.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchPoints.clear();</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::handleTouchCancelEvent(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>m_touchDevice.get());</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461" refid="class_k_win_1_1_internal_window_event_filter_1ad079f65e13c8c2126badd36798af37fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1ad079f65e13c8c2126badd36798af37fc" kindref="member">tabletToolProximityEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1462"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;tablet()-&gt;focus()<sp/>||<sp/>!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;tablet()-&gt;focus()-&gt;isInternal())<sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handleTabletEnterLeaveProximityEvent<sp/>has<sp/>lots<sp/>of<sp/>parameters,<sp/>most<sp/>of<sp/>which<sp/>are<sp/>ignored,<sp/>so<sp/>don&apos;t<sp/>bother<sp/>with<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::handleTabletEnterLeaveProximityEvent(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tabletDevice.get(),<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1ab934b54784dbc3ba8b8722736ccfaf8d" kindref="member">type</ref><sp/>==<sp/><ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a8ac5a27fb101222c300388687f9a10eaa7ee808929a819685bad4c5048d78828c" kindref="member">TabletToolProximityEvent::EnterProximity</ref>);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474" refid="class_k_win_1_1_internal_window_event_filter_1a7f74e7b2b30ae87e65eaff624547fa2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1a7f74e7b2b30ae87e65eaff624547fa2b" kindref="member">tabletToolAxisEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1475"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;tablet()-&gt;focus()<sp/>||<sp/>!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;tablet()-&gt;focus()-&gt;isInternal())<sp/>{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindow<sp/>*internal<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_internal_window" kindref="compound">InternalWindow</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a28bdc8ee4d962d43d5d8c31411c0569e" kindref="member">tablet</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>())-&gt;handle();</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>globalPos<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;position;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>localPos<sp/>=<sp/>globalPos<sp/>-<sp/>internal-&gt;position();</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::handleTabletEvent(internal,<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1ac7b2dd7088da1106f657cf62407aa817" kindref="member">timestamp</ref>).count(),<sp/>m_tabletDevice.get(),<sp/>localPos,<sp/>globalPos,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1aed9088c1ff47be4484e7e4cff9309ef0" kindref="member">buttons</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a0ee3720927b98c3b4c36f21e584946cd" kindref="member">pressure</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a82df28da7d0d7f96028b9bda9e221d14" kindref="member">xTilt</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a31d3e1496ab2fff98e65f2fa20eb0bdc" kindref="member">yTilt</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1aff62c8a9205c0ebdad1d9a5b6bab8070" kindref="member">sliderPosition</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a108406e3d4fa435af54625e162eae404" kindref="member">rotation</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a0b658e0c086170f087c96595cc68ecf2" kindref="member">distance</ref>,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489" refid="class_k_win_1_1_internal_window_event_filter_1a4aec87197f0493176663212bf9489a93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_internal_window_event_filter_1a4aec87197f0493176663212bf9489a93" kindref="member">tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1490"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;tablet()-&gt;focus()<sp/>||<sp/>!<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;tablet()-&gt;focus()-&gt;isInternal())<sp/>{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindow<sp/>*internal<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_internal_window" kindref="compound">InternalWindow</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a28bdc8ee4d962d43d5d8c31411c0569e" kindref="member">tablet</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>())-&gt;handle();</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>globalPos<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;position;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>localPos<sp/>=<sp/>globalPos<sp/>-<sp/>internal-&gt;position();</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWindowSystemInterface::handleTabletEvent(internal,<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1ae9847fdf0d05dfca01e9a7fc774cc21d" kindref="member">timestamp</ref>).count(),<sp/>m_tabletDevice.get(),<sp/>localPos,<sp/>globalPos,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a676c9777973fcf63503ed428f41cfa15" kindref="member">buttons</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a45b96a24547d1bc0a7d0cd4016cd6533" kindref="member">pressure</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1af7c4ea1c44d5b4e3db9d8fe3c7fb7575" kindref="member">xTilt</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a41cf80d1c4251386dbb08a8b2c5c17ae" kindref="member">yTilt</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1abfc9e0fcd3df593547c5bd75cfeb601f" kindref="member">sliderPosition</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a4c25fba30ab005d945e519d146a6b381" kindref="member">rotation</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1ab303628f9c79847ebb026f12585551e1" kindref="member">distance</ref>,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;QPointingDevice&gt;<sp/>m_touchDevice;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;QPointingDevice&gt;<sp/>m_tabletDevice;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QWindowSystemInterface::TouchPoint&gt;<sp/>m_touchPoints;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510" refid="class_k_win_1_1_mouse_wheel_accumulator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_mouse_wheel_accumulator" kindref="compound">MouseWheelAccumulator</ref></highlight></codeline>
<codeline lineno="1511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1513" refid="class_k_win_1_1_mouse_wheel_accumulator_1ac9e8e0a87cf11d6bef94db19d60fea65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_mouse_wheel_accumulator_1ac9e8e0a87cf11d6bef94db19d60fea65" kindref="member">accumulate</ref>(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scrollV120<sp/>+=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;deltaV120;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scrollDistance<sp/>+=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;delta;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(m_scrollV120)<sp/>&gt;=<sp/>120<sp/>||<sp/>(!event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a60bb15d486dcad0970b3874201c90417" kindref="member">deltaV120</ref><sp/>&amp;&amp;<sp/>std::abs(m_scrollDistance)<sp/>&gt;=<sp/>15))<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>m_scrollDistance;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scrollV120<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scrollDistance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_scrollDistance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_scrollV120<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532" refid="class_k_win_1_1_decoration_event_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_decoration_event_filter_1a508c118e6b9bc409e49843029968ab0f" kindref="member">DecorationEventFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="1533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1535" refid="class_k_win_1_1_decoration_event_filter_1a508c118e6b9bc409e49843029968ab0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_decoration_event_filter_1a508c118e6b9bc409e49843029968ab0f" kindref="member">DecorationEventFilter</ref>()</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::<ref refid="namespace_k_win_1_1_decoration" kindref="compound">Decoration</ref>)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539" refid="class_k_win_1_1_decoration_event_filter_1ab7505620e457b63965b5e65b53dbe180" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_event_filter_1ab7505620e457b63965b5e65b53dbe180" kindref="member">pointerMotion</ref>(<ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1540"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoration<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>();</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decoration)<sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;position<sp/>-<sp/>decoration-&gt;window()-&gt;pos();</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHoverEvent<sp/>e(QEvent::HoverMove,<sp/>p,<sp/>p);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::instance()-&gt;sendEvent(decoration-&gt;decoration(),<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;processDecorationMove(p,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1acba1e285b4ecfaa62f1aee65474282aa" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551" refid="class_k_win_1_1_decoration_event_filter_1a1a2452df095b341d0cd384bf3f382a47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_event_filter_1a1a2452df095b341d0cd384bf3f382a47" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1552"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoration<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>();</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decoration)<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>globalPos<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;position;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;position<sp/>-<sp/>decoration-&gt;window()-&gt;pos();</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>actionResult<sp/>=<sp/>performModifierWindowMouseAction(event,<sp/>decoration-&gt;window());</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actionResult)<sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*actionResult;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMouseEvent<sp/>e(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref><sp/>?<sp/>QEvent::MouseButtonPress<sp/>:<sp/>QEvent::MouseButtonRelease,<sp/>p,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a7b963efee82d94c275bd617017004c02" kindref="member">position</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a2b688edc81ae92f9de805943717df4f6" kindref="member">button</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a8951ca8c71ee74f67b520e1e8dccc5dd" kindref="member">buttons</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a1d1f44a2a2aabf1a30d7a0cbcd65ded3" kindref="member">modifiers</ref>);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.setTimestamp(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1ab8f69816000bb2462487fad68fe14283" kindref="member">timestamp</ref>).count());</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::sendEvent(decoration-&gt;decoration(),<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!e.isAccepted()<sp/>&amp;&amp;<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;processDecorationButtonPress(p,<sp/>globalPos,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a2b688edc81ae92f9de805943717df4f6" kindref="member">button</ref>);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">PointerButtonState::Released</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;processDecorationButtonRelease(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a2b688edc81ae92f9de805943717df4f6" kindref="member">button</ref>);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575" refid="class_k_win_1_1_decoration_event_filter_1a652cf7aa58a481b48beb619f0297e162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_event_filter_1a652cf7aa58a481b48beb619f0297e162" kindref="member">pointerAxis</ref>(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1576"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoration<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>();</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decoration)<sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a80ec895eaaf9ac96fa9572e8919aff36" kindref="member">orientation</ref><sp/>==<sp/>Qt::Vertical)<sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>client<sp/>window<sp/>action<sp/>only<sp/>on<sp/>vertical<sp/>scrolling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>actionResult<sp/>=<sp/>performModifierWindowWheelAction(event,<sp/>decoration-&gt;window());</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actionResult)<sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*actionResult;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>localPos<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;position<sp/>-<sp/>decoration-&gt;window()-&gt;pos();</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWheelEvent<sp/>e(localPos,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1af8e62917007526d10a7c9940e2749eb0" kindref="member">position</ref>,<sp/>QPoint(),</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a80ec895eaaf9ac96fa9572e8919aff36" kindref="member">orientation</ref><sp/>==<sp/>Qt::Horizontal)<sp/>?<sp/>QPoint(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a4ce73e8e3e1de2422f88ac799e97a573" kindref="member">delta</ref>,<sp/>0)<sp/>:<sp/>QPoint(0,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a4ce73e8e3e1de2422f88ac799e97a573" kindref="member">delta</ref>),</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a560de1ad4ea0aefe912353a76c1cfb0b" kindref="member">buttons</ref>,</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a5c43198e2af3aeed7d4c1c7cb7720b20" kindref="member">modifiers</ref>,</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::NoScrollPhase,</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::sendEvent(decoration,<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.isAccepted())<sp/>{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a80ec895eaaf9ac96fa9572e8919aff36" kindref="member">orientation</ref><sp/>==<sp/>Qt::Vertical)<sp/>&amp;&amp;<sp/>decoration-&gt;window()-&gt;titlebarPositionUnderMouse())<sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>m_accumulator.accumulate(event))<sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;performMousePressCommand(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>-&gt;operationTitlebarMouseWheel(delta<sp/>*<sp/>-1),</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1af8e62917007526d10a7c9940e2749eb0" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1608" refid="class_k_win_1_1_decoration_event_filter_1a517eae9b57feae01a89dc91d733cc309" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_event_filter_1a517eae9b57feae01a89dc91d733cc309" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1609"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;isTouchSequence())<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decorationPressId()<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>on<sp/>a<sp/>decoration,<sp/>ignore<sp/>further<sp/>touch<sp/>points,<sp/>but<sp/>filter<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoration<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>();</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decoration)<sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_touch_input_redirection_1a392d0d11c39874a12c4f823496c37195" kindref="member">setDecorationPressId</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastGlobalTouchPos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastLocalTouchPos<sp/>=<sp/>pos<sp/>-<sp/>decoration-&gt;window()-&gt;pos();</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHoverEvent<sp/>hoverEvent(QEvent::HoverMove,<sp/>m_lastLocalTouchPos,<sp/>m_lastLocalTouchPos);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::sendEvent(decoration-&gt;decoration(),<sp/>&amp;hoverEvent);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMouseEvent<sp/>e(QEvent::MouseButtonPress,<sp/>m_lastLocalTouchPos,<sp/>pos,<sp/>Qt::LeftButton,<sp/>Qt::LeftButton,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::sendEvent(decoration-&gt;decoration(),<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!e.isAccepted())<sp/>{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;processDecorationButtonPress(m_lastLocalTouchPos,<sp/>m_lastGlobalTouchPos,<sp/>Qt::LeftButton);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638" refid="class_k_win_1_1_decoration_event_filter_1a59f27b89cef2c79e9d8757569d361da8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_event_filter_1a59f27b89cef2c79e9d8757569d361da8" kindref="member">touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1639"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoration<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>();</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decoration)<sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decorationPressId()<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decorationPressId()<sp/>!=<sp/>qint32(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore,<sp/>but<sp/>filter<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastGlobalTouchPos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastLocalTouchPos<sp/>=<sp/>pos<sp/>-<sp/>decoration-&gt;window()-&gt;pos();</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHoverEvent<sp/>e(QEvent::HoverMove,<sp/>m_lastLocalTouchPos,<sp/>m_lastLocalTouchPos);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::instance()-&gt;sendEvent(decoration-&gt;decoration(),<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;processDecorationMove(m_lastLocalTouchPos,<sp/>pos);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1659" refid="class_k_win_1_1_decoration_event_filter_1a5638240253f82b63893d3e14f63d8384" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_event_filter_1a5638240253f82b63893d3e14f63d8384" kindref="member">touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1660"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoration<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>();</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decoration)<sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>happen<sp/>when<sp/>quick<sp/>tiling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decorationPressId()<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastGlobalTouchPos<sp/>=<sp/>QPointF();</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastLocalTouchPos<sp/>=<sp/>QPointF();</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_touch_input_redirection_1a392d0d11c39874a12c4f823496c37195" kindref="member">setDecorationPressId</ref>(-1);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decorationPressId()<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;decorationPressId()<sp/>!=<sp/>qint32(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore,<sp/>but<sp/>filter<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>mouse<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMouseEvent<sp/>e(QEvent::MouseButtonRelease,<sp/>m_lastLocalTouchPos,<sp/>m_lastGlobalTouchPos,<sp/>Qt::LeftButton,<sp/>Qt::MouseButtons(),<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::sendEvent(decoration-&gt;decoration(),<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;processDecorationButtonRelease(Qt::LeftButton);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHoverEvent<sp/>leaveEvent(QEvent::HoverLeave,<sp/>QPointF(),<sp/>QPointF());</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::sendEvent(decoration-&gt;decoration(),<sp/>&amp;leaveEvent);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastGlobalTouchPos<sp/>=<sp/>QPointF();</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastLocalTouchPos<sp/>=<sp/>QPointF();</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_touch_input_redirection_1a392d0d11c39874a12c4f823496c37195" kindref="member">setDecorationPressId</ref>(-1);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695" refid="class_k_win_1_1_decoration_event_filter_1a48ba40b63df4207147ace9cf181eec78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_event_filter_1a48ba40b63df4207147ace9cf181eec78" kindref="member">tabletToolProximityEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1696"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoration<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a28bdc8ee4d962d43d5d8c31411c0569e" kindref="member">tablet</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>();</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decoration)<sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1ab934b54784dbc3ba8b8722736ccfaf8d" kindref="member">type</ref><sp/>==<sp/><ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a8ac5a27fb101222c300388687f9a10eaa7ee808929a819685bad4c5048d78828c" kindref="member">TabletToolProximityEvent::EnterProximity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;position<sp/>-<sp/>decoration-&gt;window()-&gt;pos();</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHoverEvent<sp/>e(QEvent::HoverMove,<sp/>p,<sp/>p);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::instance()-&gt;sendEvent(decoration-&gt;decoration(),<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;processDecorationMove(p,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a717274e3daaca23d6cabfbcb8d0e6b2b" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHoverEvent<sp/>leaveEvent(QEvent::HoverLeave,<sp/>QPointF(),<sp/>QPointF());</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::sendEvent(decoration-&gt;decoration(),<sp/>&amp;leaveEvent);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714" refid="class_k_win_1_1_decoration_event_filter_1acce7be7344459e010b593e1104d7cc6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_event_filter_1acce7be7344459e010b593e1104d7cc6a" kindref="member">tabletToolAxisEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1715"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoration<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a28bdc8ee4d962d43d5d8c31411c0569e" kindref="member">tablet</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>();</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decoration)<sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;position<sp/>-<sp/>decoration-&gt;window()-&gt;pos();</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QHoverEvent<sp/>e(QEvent::HoverMove,<sp/>p,<sp/>p);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::instance()-&gt;sendEvent(decoration-&gt;decoration(),<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;processDecorationMove(p,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a2c3ac2ac4f76952614cb46922a0c2688" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729" refid="class_k_win_1_1_decoration_event_filter_1a0a600c09a0edc185701a00d5bb8e40c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_decoration_event_filter_1a0a600c09a0edc185701a00d5bb8e40c7" kindref="member">tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1730"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decoration<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a28bdc8ee4d962d43d5d8c31411c0569e" kindref="member">tablet</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>();</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decoration)<sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>globalPos<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;position;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;position<sp/>-<sp/>decoration-&gt;window()-&gt;pos();</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPressed<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;type<sp/>==<sp/><ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a26ac1b53980eb001ae80df6d07cc1c2fa572eaad4b4c85f9904fdbd0db31a4907" kindref="member">TabletToolTipEvent::Press</ref>;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMouseEvent<sp/>e(isPressed<sp/>?<sp/>QEvent::MouseButtonPress<sp/>:<sp/>QEvent::MouseButtonRelease,</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aacd3e2e78bb3e98deb5e0711904571a9" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::LeftButton,</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isPressed<sp/>?<sp/>Qt::LeftButton<sp/>:<sp/>Qt::MouseButtons(),</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCoreApplication::sendEvent(decoration-&gt;decoration(),<sp/>&amp;e);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!e.isAccepted()<sp/>&amp;&amp;<sp/>isPressed)<sp/>{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;processDecorationButtonPress(p,<sp/>globalPos,<sp/>Qt::LeftButton);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aab6af1a62ff7db96822715a17b6536ea" kindref="member">type</ref><sp/>==<sp/><ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a26ac1b53980eb001ae80df6d07cc1c2fa169de9deb41de582ce00bc9db60f4428" kindref="member">TabletToolTipEvent::Release</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoration-&gt;window()-&gt;processDecorationButtonRelease(Qt::LeftButton);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>m_lastGlobalTouchPos;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>m_lastLocalTouchPos;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_mouse_wheel_accumulator" kindref="compound">MouseWheelAccumulator</ref><sp/>m_accumulator;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TabBoxInputFilter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>InputEventFilter</highlight></codeline>
<codeline lineno="1765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>TabBoxInputFilter()</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>InputEventFilter(InputFilterOrder::TabBox)</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerMotion(PointerMotionEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1772"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()<sp/>||<sp/>!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;isGrabbed())<sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMouseEvent<sp/>mouseEvent(QEvent::MouseMove,</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;position,</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;position,</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::NoButton,</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;buttons,</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;modifiers);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseEvent.setTimestamp(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;timestamp).count());</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseEvent.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;handleMouseEvent(&amp;mouseEvent);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerButton(PointerButtonEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1787"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()<sp/>||<sp/>!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;isGrabbed())<sp/>{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMouseEvent<sp/>mouseEvent(event-&gt;state<sp/>==<sp/>PointerButtonState::Pressed<sp/>?<sp/>QEvent::MouseButtonPress<sp/>:<sp/>QEvent::MouseButtonRelease,</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;position,</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;position,</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;button,</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;buttons,</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;modifiers);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseEvent.setTimestamp(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;timestamp).count());</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseEvent.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;handleMouseEvent(&amp;mouseEvent);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keyboardKey(KeyboardKeyEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1802"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()<sp/>||<sp/>!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;isGrabbed())<sp/>{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;state<sp/>==<sp/>KeyboardKeyState::Repeated<sp/>||<sp/>event-&gt;state<sp/>==<sp/>KeyboardKeyState::Pressed)<sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;keyPress(*event);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;modifiersRelevantForGlobalShortcuts<sp/>==<sp/>Qt::NoModifier)<sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;modifiersReleased();</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerAxis(PointerAxisEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1816"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()<sp/>||<sp/>!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;isGrabbed())<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWheelEvent<sp/>wheelEvent(event-&gt;position,</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;position,</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPoint(),</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event-&gt;orientation<sp/>==<sp/>Qt::Horizontal)<sp/>?<sp/>QPoint(event-&gt;delta,<sp/>0)<sp/>:<sp/>QPoint(0,<sp/>event-&gt;delta),</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;buttons,</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;modifiers,</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::NoScrollPhase,</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event-&gt;inverted);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelEvent.setAccepted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;tabbox()-&gt;handleWheelEvent(&amp;wheelEvent);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1831"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834" refid="class_k_win_1_1_screen_edge_input_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_screen_edge_input_filter_1a6c9193dd4f80c32cc53d81ba9bb618d1" kindref="member">ScreenEdgeInputFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="1835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1837" refid="class_k_win_1_1_screen_edge_input_filter_1a6c9193dd4f80c32cc53d81ba9bb618d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_screen_edge_input_filter_1a6c9193dd4f80c32cc53d81ba9bb618d1" kindref="member">ScreenEdgeInputFilter</ref>()</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::ScreenEdge)</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1841" refid="class_k_win_1_1_screen_edge_input_filter_1a330b05ab89c292517cda6401a3d7aee1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_screen_edge_input_filter_1a330b05ab89c292517cda6401a3d7aee1" kindref="member">pointerMotion</ref>(<ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1842"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1aa5c8cd787f3a9f0bef1fad08288dc384" kindref="member">isEntered</ref>(event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1acba1e285b4ecfaa62f1aee65474282aa" kindref="member">position</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a91da236ff1690ae4862f76d1b1d3eca1" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>forward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1847" refid="class_k_win_1_1_screen_edge_input_filter_1a58bd46eff8a71753a3b20de8dc2f4444" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_screen_edge_input_filter_1a58bd46eff8a71753a3b20de8dc2f4444" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1848"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>better<sp/>check<sp/>whether<sp/>a<sp/>touch<sp/>sequence<sp/>is<sp/>in<sp/>progress</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchInProgress<sp/>||<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat()-&gt;isTouchSequence())<sp/>{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cancel<sp/>existing<sp/>touch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a4da87a029d5815148210925be6d1aef8" kindref="member">gestureRecognizer</ref>()-&gt;<ref refid="class_k_win_1_1_gesture_recognizer_1ac06d90018011773dec8d56f9a8d4d4d4" kindref="member">cancelSwipeGesture</ref>();</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchInProgress<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;screenEdges()-&gt;gestureRecognizer()-&gt;startSwipeGesture(pos)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchInProgress<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_id<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastPos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1865" refid="class_k_win_1_1_screen_edge_input_filter_1af599d5554be3ab424d1f4dd784ef8558" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_screen_edge_input_filter_1af599d5554be3ab424d1f4dd784ef8558" kindref="member">touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1866"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchInProgress<sp/>&amp;&amp;<sp/>m_id<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a4da87a029d5815148210925be6d1aef8" kindref="member">gestureRecognizer</ref>()-&gt;<ref refid="class_k_win_1_1_gesture_recognizer_1a39aacf2c7d3d096208aa6bd3012ae3ff" kindref="member">updateSwipeGesture</ref>(pos<sp/>-<sp/>m_lastPos);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastPos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1874" refid="class_k_win_1_1_screen_edge_input_filter_1ac18f4727959ccfa951eb3d18ebda5714" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_screen_edge_input_filter_1ac18f4727959ccfa951eb3d18ebda5714" kindref="member">touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1875"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchInProgress<sp/>&amp;&amp;<sp/>m_id<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a4da87a029d5815148210925be6d1aef8" kindref="member">gestureRecognizer</ref>()-&gt;<ref refid="class_k_win_1_1_gesture_recognizer_1a112d2f0856f5019301f9a2681e199b67" kindref="member">endSwipeGesture</ref>();</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchInProgress<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_touchInProgress<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>qint32<sp/>m_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>m_lastPos;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894" refid="class_k_win_1_1_window_action_input_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_window_action_input_filter_1a0a467d41071a40e63862373e3bd22e87" kindref="member">WindowActionInputFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="1895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1897" refid="class_k_win_1_1_window_action_input_filter_1a0a467d41071a40e63862373e3bd22e87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_action_input_filter_1a0a467d41071a40e63862373e3bd22e87" kindref="member">WindowActionInputFilter</ref>()</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::WindowAction)</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901" refid="class_k_win_1_1_window_action_input_filter_1ac1a1756c7089f001e8feaa137993a688" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_action_input_filter_1ac1a1756c7089f001e8feaa137993a688" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1902"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>();</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>performWindowMouseAction(event,<sp/>window).value_or(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>of<sp/>implicit<sp/>pointer<sp/>grab<sp/>while<sp/>a<sp/>button<sp/>is<sp/>pressed,<sp/>this<sp/>may<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>target<sp/>a<sp/>different<sp/>window<sp/>than<sp/>the<sp/>one<sp/>with<sp/>pointer<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1aa7670b19c39bf2fb4f279d565323dd3b" kindref="member">hover</ref>();</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>command<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a3d2bdcd5bd8d81287be54e5184a61f01" kindref="member">getMouseReleaseCommand</ref>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a2b688edc81ae92f9de805943717df4f6" kindref="member">button</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a0a5e4a76a206143596023e553abedfd5" kindref="member">performMouseReleaseCommand</ref>(*command,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a7b963efee82d94c275bd617017004c02" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1922" refid="class_k_win_1_1_window_action_input_filter_1ac160281527b786fdb27b464bab1284e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_action_input_filter_1ac160281527b786fdb27b464bab1284e9" kindref="member">pointerAxis</ref>(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1923"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a80ec895eaaf9ac96fa9572e8919aff36" kindref="member">orientation</ref><sp/>!=<sp/>Qt::Vertical)<sp/>{</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>actions<sp/>on<sp/>vertical<sp/>scroll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>();</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>performWindowWheelAction(event,<sp/>window).value_or(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1934" refid="class_k_win_1_1_window_action_input_filter_1abe989172fb8887a66d9cf56812081879" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_action_input_filter_1abe989172fb8887a66d9cf56812081879" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1935"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;isTouchSequence())<sp/>{</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>();</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>command<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1ac90d9d4441fbcadcc29e53b26d4e20f5" kindref="member">getMousePressCommand</ref>(Qt::LeftButton);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command)<sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1adc4cfddd14db72a5b6337bf3b0f8c639" kindref="member">performMousePressCommand</ref>(*command,<sp/>pos);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950" refid="class_k_win_1_1_window_action_input_filter_1ae1d9eb49e28c5bea65116f942460dcfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_action_input_filter_1ae1d9eb49e28c5bea65116f942460dcfa" kindref="member">touchUp</ref>(int32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1951"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a4c3552afead055652bc9dbbd47512c85" kindref="member">touch</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>();</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>command<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a3d2bdcd5bd8d81287be54e5184a61f01" kindref="member">getMouseReleaseCommand</ref>(Qt::LeftButton);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command)<sp/>{</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a0a5e4a76a206143596023e553abedfd5" kindref="member">performMouseReleaseCommand</ref>(*command,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;touch()-&gt;position());</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1962" refid="class_k_win_1_1_window_action_input_filter_1a8bbfefc61eacfb642e381093ef8a85f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_action_input_filter_1a8bbfefc61eacfb642e381093ef8a85f6" kindref="member">tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1963"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a28bdc8ee4d962d43d5d8c31411c0569e" kindref="member">tablet</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>();</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aab6af1a62ff7db96822715a17b6536ea" kindref="member">type</ref><sp/>==<sp/><ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a26ac1b53980eb001ae80df6d07cc1c2fa572eaad4b4c85f9904fdbd0db31a4907" kindref="member">TabletToolTipEvent::Press</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>command<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1ac90d9d4441fbcadcc29e53b26d4e20f5" kindref="member">getMousePressCommand</ref>(Qt::LeftButton);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command)<sp/>{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1adc4cfddd14db72a5b6337bf3b0f8c639" kindref="member">performMousePressCommand</ref>(*command,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aacd3e2e78bb3e98deb5e0711904571a9" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>command<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a3d2bdcd5bd8d81287be54e5184a61f01" kindref="member">getMouseReleaseCommand</ref>(Qt::LeftButton);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command)<sp/>{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a0a5e4a76a206143596023e553abedfd5" kindref="member">performMouseReleaseCommand</ref>(*command,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aacd3e2e78bb3e98deb5e0711904571a9" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1983" refid="class_k_win_1_1_window_action_input_filter_1adeb00cc4a764e51cc2132904cafad7e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_action_input_filter_1adeb00cc4a764e51cc2132904cafad7e0" kindref="member">tabletToolButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_button_event" kindref="compound">TabletToolButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="1984"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a28bdc8ee4d962d43d5d8c31411c0569e" kindref="member">tablet</ref>()-&gt;<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>();</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a5f50be966c1885fe61b8a54e2dd584d8" kindref="member">isClient</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a00cd2be558c0893711b4c672290e4c42" kindref="member">pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>command<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1ac90d9d4441fbcadcc29e53b26d4e20f5" kindref="member">getMousePressCommand</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a3984ed289233b50a70cfe7f3f8ea8873" kindref="member">button</ref><sp/>==<sp/>BTN_STYLUS<sp/>?<sp/>Qt::MiddleButton<sp/>:<sp/>Qt::RightButton);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command)<sp/>{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1adc4cfddd14db72a5b6337bf3b0f8c639" kindref="member">performMousePressCommand</ref>(*command,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;tablet()-&gt;position());</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>command<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a3d2bdcd5bd8d81287be54e5184a61f01" kindref="member">getMouseReleaseCommand</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a3984ed289233b50a70cfe7f3f8ea8873" kindref="member">button</ref><sp/>==<sp/>BTN_STYLUS<sp/>?<sp/>Qt::MiddleButton<sp/>:<sp/>Qt::RightButton);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command)<sp/>{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a0a5e4a76a206143596023e553abedfd5" kindref="member">performMouseReleaseCommand</ref>(*command,<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;tablet()-&gt;position());</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006" refid="class_k_win_1_1_input_method_event_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_input_method_event_filter_1a5302ad22678dceae9847b99f5d687fce" kindref="member">InputMethodEventFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="2007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2009" refid="class_k_win_1_1_input_method_event_filter_1a5302ad22678dceae9847b99f5d687fce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_method_event_filter_1a5302ad22678dceae9847b99f5d687fce" kindref="member">InputMethodEventFilter</ref>()</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::<ref refid="class_k_win_1_1_input_method" kindref="compound">InputMethod</ref>)</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014" refid="class_k_win_1_1_input_method_event_filter_1ac403c1f398b74cb2d2cee8316e684561" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_method_event_filter_1ac403c1f398b74cb2d2cee8316e684561" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2015"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>inputMethod<sp/>=<sp/>kwinApp()-&gt;inputMethod();</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inputMethod)<sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>!=<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clicking<sp/>on<sp/>an<sp/>on<sp/>screen<sp/>keyboard<sp/>shouldn&apos;t<sp/>flush,<sp/>check<sp/>we&apos;re<sp/>clicking<sp/>on<sp/>our<sp/>target<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;pointer()-&gt;focus()<sp/>!=<sp/>inputMethod-&gt;activeWindow())<sp/>{</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputMethod-&gt;commitPendingText();</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033" refid="class_k_win_1_1_input_method_event_filter_1a88e5c7823c8116e0cd8d9bec73a15f4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_method_event_filter_1a88e5c7823c8116e0cd8d9bec73a15f4b" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2034"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>inputMethod<sp/>=<sp/>kwinApp()-&gt;inputMethod();</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inputMethod)<sp/>{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;findToplevel(point)<sp/>!=<sp/>inputMethod-&gt;activeWindow())<sp/>{</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputMethod-&gt;commitPendingText();</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047" refid="class_k_win_1_1_input_method_event_filter_1a5a6c63ff779bff7e3d5ab62f0d4c7c0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_method_event_filter_1a5a6c63ff779bff7e3d5ab62f0d4c7c0f" kindref="member">keyboardKey</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2048"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1ae72e537c14e9de14f0720c8f25c6c4cd" kindref="member">passToInputMethod</ref>(event);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056" refid="class_k_win_1_1_forward_input_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_forward_input_filter_1ac482f9cfbde21d43b2b8a8e44f5a6743" kindref="member">ForwardInputFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="2057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2059" refid="class_k_win_1_1_forward_input_filter_1ac482f9cfbde21d43b2b8a8e44f5a6743" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_forward_input_filter_1ac482f9cfbde21d43b2b8a8e44f5a6743" kindref="member">ForwardInputFilter</ref>()</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::Forward)</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2063" refid="class_k_win_1_1_forward_input_filter_1ad4eb8786b6c834762c415263991b4a21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1ad4eb8786b6c834762c415263991b4a21" kindref="member">pointerMotion</ref>(<ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2064"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a91da236ff1690ae4862f76d1b1d3eca1" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyPointerMotion(event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1acba1e285b4ecfaa62f1aee65474282aa" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>absolute<sp/>motion<sp/>events<sp/>confuse<sp/>games<sp/>and<sp/>Wayland<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>warp<sp/>event<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>send<sp/>a<sp/>relative<sp/>motion<sp/>event<sp/>with<sp/>a<sp/>zero<sp/>delta<sp/>to<sp/>signal<sp/>the<sp/>warp<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a10056cb0ea5aaea99599ff47de9e67b4" kindref="member">warp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;relativePointerMotion(QPointF(0,<sp/>0),<sp/>QPointF(0,<sp/>0),<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a91da236ff1690ae4862f76d1b1d3eca1" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a2d3efce51f17753d3ba85b595dc4ee02" kindref="member">delta</ref>.isNull())<sp/>{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;relativePointerMotion(event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a2d3efce51f17753d3ba85b595dc4ee02" kindref="member">delta</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a203e3fe91a23d15dac390bfc3b2bcb85" kindref="member">deltaUnaccelerated</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a91da236ff1690ae4862f76d1b1d3eca1" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2077" refid="class_k_win_1_1_forward_input_filter_1a2b93f00cc1a610359d0e4d9e0e154734" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a2b93f00cc1a610359d0e4d9e0e154734" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2078"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1ab8f69816000bb2462487fad68fe14283" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyPointerButton(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1aedf959f24dcbd61558f547fab1012b09" kindref="member">nativeButton</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2084" refid="class_k_win_1_1_forward_input_filter_1abd38c7de35889aaa1706196527894fbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1abd38c7de35889aaa1706196527894fbc" kindref="member">pointerFrame</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2085"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1ab9c928f670fb2f9e9ca77dce6d496464" kindref="member">notifyPointerFrame</ref>();</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2090" refid="class_k_win_1_1_forward_input_filter_1a4a60acff5a0e88c6c8a1317a5004769e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a4a60acff5a0e88c6c8a1317a5004769e" kindref="member">pointerAxis</ref>(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2091"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a2bd891c23b9f1a712873598e44ced6b4" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyPointerAxis(event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a80ec895eaaf9ac96fa9572e8919aff36" kindref="member">orientation</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a4ce73e8e3e1de2422f88ac799e97a573" kindref="member">delta</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a60bb15d486dcad0970b3874201c90417" kindref="member">deltaV120</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a37f755394462828e57df6071f5cd8da7" kindref="member">source</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_axis_event_1a2e4fcbac9cb5e6975f23a5a3fd70869f" kindref="member">inverted</ref>);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097" refid="class_k_win_1_1_forward_input_filter_1ac953f73f4e301075b1e60c2ef4d38c80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1ac953f73f4e301075b1e60c2ef4d38c80" kindref="member">keyboardKey</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2098"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1a7f7309d5a83099309ac04dcb795ad0ce" kindref="member">KeyboardKeyState::Repeated</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handled<sp/>by<sp/>Wayland<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a246b282229b36fc27552487cdd3329d7" kindref="member">keyboard</ref>()-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a6761bebc602f211e72216e4abd5b71b5" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a153d6c4d539a43732a4b3345284b0ed1" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyKeyboardKey(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1aa1d2fad163b7667c59365c67eeb40eaa" kindref="member">nativeScanCode</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2109" refid="class_k_win_1_1_forward_input_filter_1a78f6ea0ebbb488df04a68d4fa36e3718" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a78f6ea0ebbb488df04a68d4fa36e3718" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2110"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>w<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" kindref="member">findToplevel</ref>(pos);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!w)<sp/>{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>touch<sp/>down,<sp/>there&apos;s<sp/>no<sp/>window<sp/>under&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;setTimestamp(time);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tp<sp/>=<sp/>seat-&gt;notifyTouchDown(w-&gt;surface(),<sp/>w-&gt;bufferGeometry().topLeft(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tp)<sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>touch<sp/>down&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::connect(w,<sp/>&amp;<ref refid="class_k_win_1_1_window_1aaa748e21e5fd562e204c3ce1e7410e4c" kindref="member">Window::bufferGeometryChanged</ref>,<sp/>tp,<sp/>[w,<sp/>tp]()<sp/>{</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;setSurfacePosition(w-&gt;bufferGeometry().topLeft());</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2128" refid="class_k_win_1_1_forward_input_filter_1a55cb658c09319b7bad1d789175ce99d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a55cb658c09319b7bad1d789175ce99d8" kindref="member">touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2129"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyTouchMotion(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos);</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2135" refid="class_k_win_1_1_forward_input_filter_1a2485b17a6c34cb6435a188dd3bde0fe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a2485b17a6c34cb6435a188dd3bde0fe5" kindref="member">touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2136"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyTouchUp(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2142" refid="class_k_win_1_1_forward_input_filter_1afbf426f9048d9b67990a29ee578df36f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1afbf426f9048d9b67990a29ee578df36f" kindref="member">touchCancel</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2143"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>()-&gt;<ref refid="class_k_win_1_1_seat_interface_1a3fe38982f099a9a9887e58278d7f8eea" kindref="member">notifyTouchCancel</ref>();</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2147" refid="class_k_win_1_1_forward_input_filter_1a5ede90e175cc645f38cd9a941c0aa2da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a5ede90e175cc645f38cd9a941c0aa2da" kindref="member">touchFrame</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2148"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>()-&gt;<ref refid="class_k_win_1_1_seat_interface_1a871c144ad25becc98e8f9aba1b09e216" kindref="member">notifyTouchFrame</ref>();</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2152" refid="class_k_win_1_1_forward_input_filter_1a65071db47b40357821657a5c38d023fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a65071db47b40357821657a5c38d023fe" kindref="member">pinchGestureBegin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2153"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;startPointerPinchGesture(fingerCount);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2159" refid="class_k_win_1_1_forward_input_filter_1a3d2fb67590b46c504c6c8f44b5768a60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a3d2fb67590b46c504c6c8f44b5768a60" kindref="member">pinchGestureUpdate</ref>(qreal<sp/>scale,<sp/>qreal<sp/>angleDelta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2160"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;updatePointerPinchGesture(delta,<sp/>scale,<sp/>angleDelta);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2166" refid="class_k_win_1_1_forward_input_filter_1aa5b70aa770e6c1bbbbdd939d2ebd9378" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1aa5b70aa770e6c1bbbbdd939d2ebd9378" kindref="member">pinchGestureEnd</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2167"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;endPointerPinchGesture();</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2173" refid="class_k_win_1_1_forward_input_filter_1ab87836dd95b8559456fef03889715bd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1ab87836dd95b8559456fef03889715bd3" kindref="member">pinchGestureCancelled</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2174"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;cancelPointerPinchGesture();</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181" refid="class_k_win_1_1_forward_input_filter_1af8f9169ad81be6647568f0efdd105671" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1af8f9169ad81be6647568f0efdd105671" kindref="member">swipeGestureBegin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2182"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;startPointerSwipeGesture(fingerCount);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2188" refid="class_k_win_1_1_forward_input_filter_1ad647f32df8f5b42abf1edb69fd3373c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1ad647f32df8f5b42abf1edb69fd3373c4" kindref="member">swipeGestureUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2189"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;updatePointerSwipeGesture(delta);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2195" refid="class_k_win_1_1_forward_input_filter_1a31c1f26edec9b98cef0a75fe023fbeb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a31c1f26edec9b98cef0a75fe023fbeb8" kindref="member">swipeGestureEnd</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2196"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;endPointerSwipeGesture();</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2202" refid="class_k_win_1_1_forward_input_filter_1aac71c3fb45fe57a20a1d0d97910d439c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1aac71c3fb45fe57a20a1d0d97910d439c" kindref="member">swipeGestureCancelled</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2203"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;cancelPointerSwipeGesture();</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2209" refid="class_k_win_1_1_forward_input_filter_1ad66c102494dbe18369b000f1c4f54de3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1ad66c102494dbe18369b000f1c4f54de3" kindref="member">holdGestureBegin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2210"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;startPointerHoldGesture(fingerCount);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2216" refid="class_k_win_1_1_forward_input_filter_1a459d558c4e150f71bdc1038ac67d5408" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a459d558c4e150f71bdc1038ac67d5408" kindref="member">holdGestureEnd</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2217"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;endPointerHoldGesture();</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2223" refid="class_k_win_1_1_forward_input_filter_1a0892e140997f976b24a6354faf272d83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a0892e140997f976b24a6354faf272d83" kindref="member">holdGestureCancelled</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2224"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;cancelPointerHoldGesture();</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231" refid="class_k_win_1_1_forward_input_filter_1ac72fc9c645c8ace78fa836d3203614d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1ac72fc9c645c8ace78fa836d3203614d0" kindref="member">tabletToolProximityEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2232"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" kindref="member">findToplevel</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a717274e3daaca23d6cabfbcb8d0e6b2b" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_seat_v2_interface" kindref="compound">TabletSeatV2Interface</ref><sp/>*seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a7615b966ceb5fdb4ae7f75e7ca45b345" kindref="member">tabletManagerV2</ref>()-&gt;<ref refid="class_k_win_1_1_tablet_manager_v2_interface_1abf327c1e9f0a434c00c995325cbfa003" kindref="member">seat</ref>(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat());</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_tool_v2_interface" kindref="compound">TabletToolV2Interface</ref><sp/>*tool<sp/>=<sp/>seat-&gt;<ref refid="class_k_win_1_1_tablet_seat_v2_interface_1a977a222f7459641ba6137a109283dd19" kindref="member">tool</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a4420cc6480904a1fea5cdae4462d4498" kindref="member">tool</ref>);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_v2_interface" kindref="compound">TabletV2Interface</ref><sp/>*tablet<sp/>=<sp/>seat-&gt;<ref refid="class_k_win_1_1_tablet_seat_v2_interface_1a54216662f8e2df8a5ae931a7bc5e7c73" kindref="member">tablet</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1acdf3034dcef8cd66db316c6b999ce514" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>();</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa793b57f04a467c4955e9fe4e669c8d0" kindref="member">setCurrentSurface</ref>(surface);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a975947859dc69bcb2f5d0081f93a2afa" kindref="member">isClientSupported</ref>()<sp/>||<sp/>!tablet-&gt;<ref refid="class_k_win_1_1_tablet_v2_interface_1ae0cd4f8d0fd89f905e19f6ab0a6678cb" kindref="member">isSurfaceSupported</ref>(surface))<sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a6ffe125f802f03528d38c5a44d4f2b45" kindref="member">emulateTabletEvent</ref>(event);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1ab934b54784dbc3ba8b8722736ccfaf8d" kindref="member">type</ref><sp/>==<sp/><ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a8ac5a27fb101222c300388687f9a10eaa7ee808929a819685bad4c5048d78828c" kindref="member">TabletToolProximityEvent::EnterProximity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a1c3e8ef34c495c6f7b850628950b9089" kindref="member">sendProximityIn</ref>(tablet);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a0a853cb76306b951d9f4623e71f8b7c9" kindref="member">sendMotion</ref>(window-&gt;<ref refid="class_k_win_1_1_window_1a9f3e6314899a3ace5b8df65704a41529" kindref="member">mapToLocal</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a717274e3daaca23d6cabfbcb8d0e6b2b" kindref="member">position</ref>));</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1ad9398d4c603a6abf4ce029488c0bb3d1" kindref="member">sendProximityOut</ref>();</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a74c9eb16df9a0bafb82c8a116205f7af" kindref="member">TabletToolV2Interface::Tilt</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a723e29605a3ad45bd77b58d3d1d8d402" kindref="member">sendTilt</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1aba47fc48e9862432cf3723175b166729" kindref="member">xTilt</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a8a8da835bdc072bbedc4396439e002c7" kindref="member">yTilt</ref>);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a61a244a78b33b54c0363545253aa9a38" kindref="member">TabletToolV2Interface::Rotation</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a3c2aa0c9ca25575c71479ec4eef97f4b" kindref="member">sendRotation</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a271021038815f5478129a0b62a8d3ab3" kindref="member">rotation</ref>);</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a530a4fd1abd8e059fbeba90cf31a652b" kindref="member">TabletToolV2Interface::Distance</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa9490fc5f418f7dc16ffe823538dbd62" kindref="member">sendDistance</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1aa5a11e9d9676f0abc27f1f9a231e8f18" kindref="member">distance</ref>);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a7d39022e7e0982cf8878c9cb5c5fc510" kindref="member">TabletToolV2Interface::Slider</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa8c7d0a7893e8c3988330f66e90084a6" kindref="member">sendSlider</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1aef3c95157340d2b9de5b63c23d212d57" kindref="member">sliderPosition</ref>);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a745b403ae5214e417f1bdd062ae1156a" kindref="member">sendFrame</ref>(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a76f7b19f1ef871ea9a53fc716b249aa5" kindref="member">timestamp</ref>).count());</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2273" refid="class_k_win_1_1_forward_input_filter_1aa6be8eabe70a9a4fd537806f9d42b742" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1aa6be8eabe70a9a4fd537806f9d42b742" kindref="member">tabletToolAxisEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2274"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" kindref="member">findToplevel</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a2c3ac2ac4f76952614cb46922a0c2688" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_seat_v2_interface" kindref="compound">TabletSeatV2Interface</ref><sp/>*seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a7615b966ceb5fdb4ae7f75e7ca45b345" kindref="member">tabletManagerV2</ref>()-&gt;<ref refid="class_k_win_1_1_tablet_manager_v2_interface_1abf327c1e9f0a434c00c995325cbfa003" kindref="member">seat</ref>(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat());</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_tool_v2_interface" kindref="compound">TabletToolV2Interface</ref><sp/>*tool<sp/>=<sp/>seat-&gt;<ref refid="class_k_win_1_1_tablet_seat_v2_interface_1a977a222f7459641ba6137a109283dd19" kindref="member">tool</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a36cea79b94e1648210820cea346aaf28" kindref="member">tool</ref>);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_v2_interface" kindref="compound">TabletV2Interface</ref><sp/>*tablet<sp/>=<sp/>seat-&gt;<ref refid="class_k_win_1_1_tablet_seat_v2_interface_1a54216662f8e2df8a5ae931a7bc5e7c73" kindref="member">tablet</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1aafb170dc6b7e7baca8eb0666d190dbae" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>();</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa793b57f04a467c4955e9fe4e669c8d0" kindref="member">setCurrentSurface</ref>(surface);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a975947859dc69bcb2f5d0081f93a2afa" kindref="member">isClientSupported</ref>()<sp/>||<sp/>!tablet-&gt;<ref refid="class_k_win_1_1_tablet_v2_interface_1ae0cd4f8d0fd89f905e19f6ab0a6678cb" kindref="member">isSurfaceSupported</ref>(surface))<sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a6ffe125f802f03528d38c5a44d4f2b45" kindref="member">emulateTabletEvent</ref>(event);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a0a853cb76306b951d9f4623e71f8b7c9" kindref="member">sendMotion</ref>(window-&gt;<ref refid="class_k_win_1_1_window_1a9f3e6314899a3ace5b8df65704a41529" kindref="member">mapToLocal</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a2c3ac2ac4f76952614cb46922a0c2688" kindref="member">position</ref>));</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245ab8b2ad51dd803163e6d8a4b7bb125fd4" kindref="member">TabletToolV2Interface::Pressure</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1ad751c2cdee8c3b910e1bbd8e6bfb51b0" kindref="member">sendPressure</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a0ee3720927b98c3b4c36f21e584946cd" kindref="member">pressure</ref>);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a74c9eb16df9a0bafb82c8a116205f7af" kindref="member">TabletToolV2Interface::Tilt</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a723e29605a3ad45bd77b58d3d1d8d402" kindref="member">sendTilt</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a82df28da7d0d7f96028b9bda9e221d14" kindref="member">xTilt</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a31d3e1496ab2fff98e65f2fa20eb0bdc" kindref="member">yTilt</ref>);</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a61a244a78b33b54c0363545253aa9a38" kindref="member">TabletToolV2Interface::Rotation</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a3c2aa0c9ca25575c71479ec4eef97f4b" kindref="member">sendRotation</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a108406e3d4fa435af54625e162eae404" kindref="member">rotation</ref>);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a530a4fd1abd8e059fbeba90cf31a652b" kindref="member">TabletToolV2Interface::Distance</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa9490fc5f418f7dc16ffe823538dbd62" kindref="member">sendDistance</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a0b658e0c086170f087c96595cc68ecf2" kindref="member">distance</ref>);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a7d39022e7e0982cf8878c9cb5c5fc510" kindref="member">TabletToolV2Interface::Slider</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa8c7d0a7893e8c3988330f66e90084a6" kindref="member">sendSlider</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1aff62c8a9205c0ebdad1d9a5b6bab8070" kindref="member">sliderPosition</ref>);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a745b403ae5214e417f1bdd062ae1156a" kindref="member">sendFrame</ref>(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1ac7b2dd7088da1106f657cf62407aa817" kindref="member">timestamp</ref>).count());</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"></highlight></codeline>
<codeline lineno="2313" refid="class_k_win_1_1_forward_input_filter_1a4d59531f6acece08104b2e727cfa20ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a4d59531f6acece08104b2e727cfa20ce" kindref="member">tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2314"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" kindref="member">findToplevel</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aacd3e2e78bb3e98deb5e0711904571a9" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_seat_v2_interface" kindref="compound">TabletSeatV2Interface</ref><sp/>*seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a7615b966ceb5fdb4ae7f75e7ca45b345" kindref="member">tabletManagerV2</ref>()-&gt;<ref refid="class_k_win_1_1_tablet_manager_v2_interface_1abf327c1e9f0a434c00c995325cbfa003" kindref="member">seat</ref>(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat());</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_tool_v2_interface" kindref="compound">TabletToolV2Interface</ref><sp/>*tool<sp/>=<sp/>seat-&gt;<ref refid="class_k_win_1_1_tablet_seat_v2_interface_1a977a222f7459641ba6137a109283dd19" kindref="member">tool</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1abf3a29e730ad20ca97c8d0be9d67f275" kindref="member">tool</ref>);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_v2_interface" kindref="compound">TabletV2Interface</ref><sp/>*tablet<sp/>=<sp/>seat-&gt;<ref refid="class_k_win_1_1_tablet_seat_v2_interface_1a54216662f8e2df8a5ae931a7bc5e7c73" kindref="member">tablet</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a44ef53e2afa33845d5bb9230b9a82bbb" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>();</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa793b57f04a467c4955e9fe4e669c8d0" kindref="member">setCurrentSurface</ref>(surface);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a975947859dc69bcb2f5d0081f93a2afa" kindref="member">isClientSupported</ref>()<sp/>||<sp/>!tablet-&gt;<ref refid="class_k_win_1_1_tablet_v2_interface_1ae0cd4f8d0fd89f905e19f6ab0a6678cb" kindref="member">isSurfaceSupported</ref>(surface))<sp/>{</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a6ffe125f802f03528d38c5a44d4f2b45" kindref="member">emulateTabletEvent</ref>(event);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aab6af1a62ff7db96822715a17b6536ea" kindref="member">type</ref><sp/>==<sp/><ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a26ac1b53980eb001ae80df6d07cc1c2fa572eaad4b4c85f9904fdbd0db31a4907" kindref="member">TabletToolTipEvent::Press</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a0a853cb76306b951d9f4623e71f8b7c9" kindref="member">sendMotion</ref>(window-&gt;<ref refid="class_k_win_1_1_window_1a9f3e6314899a3ace5b8df65704a41529" kindref="member">mapToLocal</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aacd3e2e78bb3e98deb5e0711904571a9" kindref="member">position</ref>));</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a32e673869e792f4ebac42185d5214977" kindref="member">sendDown</ref>();</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a8528878ca2029a3a7567ab2768c70d26" kindref="member">sendUp</ref>();</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245ab8b2ad51dd803163e6d8a4b7bb125fd4" kindref="member">TabletToolV2Interface::Pressure</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1ad751c2cdee8c3b910e1bbd8e6bfb51b0" kindref="member">sendPressure</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a45b96a24547d1bc0a7d0cd4016cd6533" kindref="member">pressure</ref>);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a74c9eb16df9a0bafb82c8a116205f7af" kindref="member">TabletToolV2Interface::Tilt</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a723e29605a3ad45bd77b58d3d1d8d402" kindref="member">sendTilt</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1af7c4ea1c44d5b4e3db9d8fe3c7fb7575" kindref="member">xTilt</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a41cf80d1c4251386dbb08a8b2c5c17ae" kindref="member">yTilt</ref>);</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a61a244a78b33b54c0363545253aa9a38" kindref="member">TabletToolV2Interface::Rotation</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a3c2aa0c9ca25575c71479ec4eef97f4b" kindref="member">sendRotation</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a4c25fba30ab005d945e519d146a6b381" kindref="member">rotation</ref>);</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a530a4fd1abd8e059fbeba90cf31a652b" kindref="member">TabletToolV2Interface::Distance</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa9490fc5f418f7dc16ffe823538dbd62" kindref="member">sendDistance</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1ab303628f9c79847ebb026f12585551e1" kindref="member">distance</ref>);</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a58eefaa9c4ed7748e6a8426472d0c594" kindref="member">hasCapability</ref>(<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa7766ea8f9ec2b119cfc81fdc9904245a7d39022e7e0982cf8878c9cb5c5fc510" kindref="member">TabletToolV2Interface::Slider</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1aa8c7d0a7893e8c3988330f66e90084a6" kindref="member">sendSlider</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1abfc9e0fcd3df593547c5bd75cfeb601f" kindref="member">sliderPosition</ref>);</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a745b403ae5214e417f1bdd062ae1156a" kindref="member">sendFrame</ref>(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1ae9847fdf0d05dfca01e9a7fc774cc21d" kindref="member">timestamp</ref>).count());</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358" refid="class_k_win_1_1_forward_input_filter_1a6ffe125f802f03528d38c5a44d4f2b45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a6ffe125f802f03528d38c5a44d4f2b45" kindref="member">emulateTabletEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tablet<sp/>input<sp/>emulation<sp/>is<sp/>deprecated.<sp/>It<sp/>will<sp/>be<sp/>removed<sp/>in<sp/>the<sp/>near<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>emulateInput<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_WAYLAND_EMULATE_TABLET&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!emulateInput)<sp/>{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1ab934b54784dbc3ba8b8722736ccfaf8d" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a8ac5a27fb101222c300388687f9a10eaa7ee808929a819685bad4c5048d78828c" kindref="member">TabletToolProximityEvent::EnterProximity</ref>:</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a4055afef3634935ce8ceb536436b97d4" kindref="member">processMotionAbsolute</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a717274e3daaca23d6cabfbcb8d0e6b2b" kindref="member">position</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a76f7b19f1ef871ea9a53fc716b249aa5" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_tablet_tool_proximity_event_1a8ac5a27fb101222c300388687f9a10eaabe4428f8975a1e4667387937ac60e145" kindref="member">TabletToolProximityEvent::LeaveProximity</ref>:</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2376" refid="class_k_win_1_1_forward_input_filter_1a884ac668b052bf04fc63b91be13f0bc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a884ac668b052bf04fc63b91be13f0bc0" kindref="member">emulateTabletEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tablet<sp/>input<sp/>emulation<sp/>is<sp/>deprecated.<sp/>It<sp/>will<sp/>be<sp/>removed<sp/>in<sp/>the<sp/>near<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>emulateInput<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_WAYLAND_EMULATE_TABLET&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!emulateInput)<sp/>{</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aab6af1a62ff7db96822715a17b6536ea" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a26ac1b53980eb001ae80df6d07cc1c2fa572eaad4b4c85f9904fdbd0db31a4907" kindref="member">TabletToolTipEvent::Press</ref>:</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a3aa6d611eb714b9b241977682311fc9c" kindref="member">processButton</ref>(<ref refid="namespace_k_win_1a5bd3095f8d463c5842a11bf3e70a344b" kindref="member">qtMouseButtonToButton</ref>(Qt::LeftButton),</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1ae9847fdf0d05dfca01e9a7fc774cc21d" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a26ac1b53980eb001ae80df6d07cc1c2fa169de9deb41de582ce00bc9db60f4428" kindref="member">TabletToolTipEvent::Release</ref>:</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a3aa6d611eb714b9b241977682311fc9c" kindref="member">processButton</ref>(<ref refid="namespace_k_win_1a5bd3095f8d463c5842a11bf3e70a344b" kindref="member">qtMouseButtonToButton</ref>(Qt::LeftButton),</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">PointerButtonState::Released</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1ae9847fdf0d05dfca01e9a7fc774cc21d" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397" refid="class_k_win_1_1_forward_input_filter_1a0c137466794b94e9a703b3e43fe5499b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a0c137466794b94e9a703b3e43fe5499b" kindref="member">emulateTabletEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tablet<sp/>input<sp/>emulation<sp/>is<sp/>deprecated.<sp/>It<sp/>will<sp/>be<sp/>removed<sp/>in<sp/>the<sp/>near<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>emulateInput<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_WAYLAND_EMULATE_TABLET&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!emulateInput)<sp/>{</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1a4055afef3634935ce8ceb536436b97d4" kindref="member">processMotionAbsolute</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1a2c3ac2ac4f76952614cb46922a0c2688" kindref="member">position</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_axis_event_1ac7b2dd7088da1106f657cf62407aa817" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410" refid="class_k_win_1_1_forward_input_filter_1a246c9f0765d88455386b43d21547e245" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a246c9f0765d88455386b43d21547e245" kindref="member">tabletToolButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_button_event" kindref="compound">TabletToolButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2411"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_tool_v2_interface" kindref="compound">TabletToolV2Interface</ref><sp/>*tool<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a7615b966ceb5fdb4ae7f75e7ca45b345" kindref="member">tabletManagerV2</ref>()-&gt;<ref refid="class_k_win_1_1_tablet_manager_v2_interface_1abf327c1e9f0a434c00c995325cbfa003" kindref="member">seat</ref>(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat())-&gt;<ref refid="class_k_win_1_1_tablet_seat_v2_interface_1a977a222f7459641ba6137a109283dd19" kindref="member">tool</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a3da12e7d1ef69bfc07fc0a1166da612a" kindref="member">tool</ref>);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1a975947859dc69bcb2f5d0081f93a2afa" kindref="member">isClientSupported</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="class_k_win_1_1_tablet_tool_v2_interface_1ab46443d58cc66ba2760edf329d90b566" kindref="member">sendButton</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a3984ed289233b50a70cfe7f3f8ea8873" kindref="member">button</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a00cd2be558c0893711b4c672290e4c42" kindref="member">pressed</ref>);</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420" refid="class_k_win_1_1_forward_input_filter_1a502072ae02aec3ae9988b6ebcf3c7428" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_pad_v2_interface" kindref="compound">TabletPadV2Interface</ref><sp/>*<ref refid="class_k_win_1_1_forward_input_filter_1a502072ae02aec3ae9988b6ebcf3c7428" kindref="member">findAndAdoptPad</ref>(<ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2421"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow</ref>();</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_seat_v2_interface" kindref="compound">TabletSeatV2Interface</ref><sp/>*seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a7615b966ceb5fdb4ae7f75e7ca45b345" kindref="member">tabletManagerV2</ref>()-&gt;<ref refid="class_k_win_1_1_tablet_manager_v2_interface_1abf327c1e9f0a434c00c995325cbfa003" kindref="member">seat</ref>(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat());</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>()<sp/>||<sp/>!seat-&gt;<ref refid="class_k_win_1_1_tablet_seat_v2_interface_1a0cada03dd83477300c621f0e382c4e00" kindref="member">isClientSupported</ref>(window-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>()-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_pad_v2_interface" kindref="compound">TabletPadV2Interface</ref><sp/>*pad<sp/>=<sp/>seat-&gt;<ref refid="class_k_win_1_1_tablet_seat_v2_interface_1a07be2607327882df51935a6bf41ae21b" kindref="member">pad</ref>(device);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pad)<sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_tablet_v2_interface" kindref="compound">TabletV2Interface</ref><sp/>*tablet<sp/>=<sp/>seat-&gt;<ref refid="class_k_win_1_1_tablet_seat_v2_interface_1a6193701ea0f20db89937256bd19141bf" kindref="member">matchingTablet</ref>(pad);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tablet)<sp/>{</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad-&gt;<ref refid="class_k_win_1_1_tablet_pad_v2_interface_1acda38382b303d8ee68bddd74e93ee9a6" kindref="member">setCurrentSurface</ref>(window-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>(),<sp/>tablet);</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pad;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442" refid="class_k_win_1_1_forward_input_filter_1a522fcfb89a15d61798e895b09772bcf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a522fcfb89a15d61798e895b09772bcf5" kindref="member">tabletPadButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_button_event" kindref="compound">TabletPadButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2443"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/><ref refid="class_k_win_1_1_forward_input_filter_1a502072ae02aec3ae9988b6ebcf3c7428" kindref="member">findAndAdoptPad</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1a048d96e057a1153b62cb12fdbdff4231" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pad)<sp/>{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>group<sp/>=<sp/>pad-&gt;group(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1a95566c1b6911a7762b140faed833f707" kindref="member">group</ref>);</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1a8340268e819faca9f19bac6c11972287" kindref="member">isModeSwitch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group-&gt;setCurrentMode(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1ad107236813c84aa067f311986bb8fca2" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>milliseconds<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1a288ef4e5394748d62b1ea1c281da89a4" kindref="member">time</ref>).count();</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group-&gt;sendModeSwitch(milliseconds);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>send<sp/>button<sp/>to<sp/>app?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad-&gt;sendButton(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1a288ef4e5394748d62b1ea1c281da89a4" kindref="member">time</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1a53c77adf0aa68895d58bbabed36f4121" kindref="member">button</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1ab0f014cdb060e7a8eecd30fbd061574e" kindref="member">pressed</ref>);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight></codeline>
<codeline lineno="2461" refid="class_k_win_1_1_forward_input_filter_1ad99c3050d97c1cf0e82f920794ed544a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1ad99c3050d97c1cf0e82f920794ed544a" kindref="member">tabletPadRingEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_ring_event" kindref="compound">TabletPadRingEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2462"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/><ref refid="class_k_win_1_1_forward_input_filter_1a502072ae02aec3ae9988b6ebcf3c7428" kindref="member">findAndAdoptPad</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1a89daef0ce3237d876786d11b5bb8a0f1" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pad)<sp/>{</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ring<sp/>=<sp/>pad-&gt;group(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1a711acc02633489c6d43c72f13382de79" kindref="member">group</ref>)-&gt;ring(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1ab21ceca35741104a310c9b6f2bd9278b" kindref="member">number</ref>);</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1a6aa8d559502f484e1f1ee119f37e88c8" kindref="member">isFinger</ref><sp/>&amp;&amp;<sp/>event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1adf7b401784e57f200b271d02adf48972" kindref="member">position</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ring-&gt;sendStop();</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ring-&gt;sendAngle(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1adf7b401784e57f200b271d02adf48972" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1a6aa8d559502f484e1f1ee119f37e88c8" kindref="member">isFinger</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ring-&gt;sendSource(<ref refid="class_k_win_1_1_tablet_pad_ring_v2_interface_1a7532c1aa2fd8012782556188ce047afea128b7f691a4561955a2a3baa927c0038" kindref="member">TabletPadRingV2Interface::SourceFinger</ref>);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ring-&gt;sendFrame(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_ring_event_1a19cae2728fea1ab71eafa600c9c1ae88" kindref="member">time</ref>).count());</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight></codeline>
<codeline lineno="2482" refid="class_k_win_1_1_forward_input_filter_1a3b6608a0540ae0af7e9925276d47355b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_forward_input_filter_1a3b6608a0540ae0af7e9925276d47355b" kindref="member">tabletPadStripEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_strip_event" kindref="compound">TabletPadStripEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2483"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/><ref refid="class_k_win_1_1_forward_input_filter_1a502072ae02aec3ae9988b6ebcf3c7428" kindref="member">findAndAdoptPad</ref>(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1af16822838c855d599c414df901086c2c" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pad)<sp/>{</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>strip<sp/>=<sp/>pad-&gt;group(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1a3aa8e08d2ff732986ab4dcffbf4562f2" kindref="member">group</ref>)-&gt;strip(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1a1e0def991d4c17dff4b5dc0331dff378" kindref="member">number</ref>);</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip-&gt;sendPosition(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1a8c06751f62b07c1066ac90e845f9b92a" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1a95355c3434e173b7c2c4c343d78a0ce8" kindref="member">isFinger</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip-&gt;sendSource(<ref refid="class_k_win_1_1_tablet_pad_strip_v2_interface_1a3b7137eb9c005365ea275502e193fe6caad4b5682a7fdbd8d03a59af44747c633" kindref="member">TabletPadStripV2Interface::SourceFinger</ref>);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip-&gt;sendFrame(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_strip_event_1a6f2774f81633dc01e26c9958c24ac16c" kindref="member">time</ref>).count());</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>AbstractDropHandler<sp/>*dropHandler(Window<sp/>*window)</highlight></codeline>
<codeline lineno="2500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>surface<sp/>=<sp/>window-&gt;surface();</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!surface)<sp/>{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dropTarget<sp/>=<sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1aa02d7f31bfa5dae6d94f1cf0e312974d" kindref="member">dropHandlerForSurface</ref>(surface);</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dropTarget)<sp/>{</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dropTarget;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qobject_cast&lt;X11Window<sp/>*&gt;(window)<sp/>&amp;&amp;<sp/>kwinApp()-&gt;xwayland())<sp/>{</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kwinApp()-&gt;xwayland()-&gt;xwlDropHandler();</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519" refid="class_k_win_1_1_drag_and_drop_input_filter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_drag_and_drop_input_filter_1ad22ffce9f0e0f5286c9cd17782c8df2b" kindref="member">DragAndDropInputFilter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref></highlight></codeline>
<codeline lineno="2520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2523" refid="class_k_win_1_1_drag_and_drop_input_filter_1ad22ffce9f0e0f5286c9cd17782c8df2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drag_and_drop_input_filter_1ad22ffce9f0e0f5286c9cd17782c8df2b" kindref="member">DragAndDropInputFilter</ref>()</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" kindref="member">InputEventFilter</ref>(<ref refid="namespace_k_win_1_1_input_filter_order" kindref="compound">InputFilterOrder</ref>::DragAndDrop)</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat(),<sp/>&amp;<ref refid="class_k_win_1_1_seat_interface_1a74ad66a32e97bd7aefab3e4ce40a715f" kindref="member">SeatInterface::dragStarted</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[]()<sp/>{</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*dragSource<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>()-&gt;<ref refid="class_k_win_1_1_seat_interface_1af10546626ca0b56147b3ca2af66288a8" kindref="member">dragSource</ref>();</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(dragSource);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragSource-&gt;<ref refid="class_k_win_1_1_abstract_data_source_1af544f751f7ffac38067cd2989d8b42ab" kindref="member">setKeyboardModifiers</ref>(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;keyboardModifiers());</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_input_redirection_1a46a9b495e85862c29e63a8ef8eb4e5d1" kindref="member">InputRedirection::keyboardModifiersChanged</ref>,<sp/>dragSource,<sp/>[dragSource](Qt::KeyboardModifiers<sp/>mods)<sp/>{</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragSource-&gt;<ref refid="class_k_win_1_1_abstract_data_source_1af544f751f7ffac38067cd2989d8b42ab" kindref="member">setKeyboardModifiers</ref>(mods);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_raiseTimer.setSingleShot(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_raiseTimer.setInterval(1000);</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(&amp;m_raiseTimer,<sp/>&amp;QTimer::timeout,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;DragAndDropInputFilter::raiseDragTarget);</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat(),<sp/>&amp;<ref refid="class_k_win_1_1_seat_interface_1abaf30fbfe4e667e4aebb79fd16be4bd5" kindref="member">SeatInterface::dragEnded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_currentToplevelDragWindow)<sp/>{</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_currentToplevelDragWindow-&gt;setKeepAbove(m_wasKeepAbove);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ac5270fc5d7e4887762c87015c4b92e04" kindref="member">takeActivity</ref>(m_currentToplevelDragWindow,<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" kindref="member">Workspace::ActivityFlag::ActivityFocus</ref><sp/>|<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a78fe29e8b597fd1711e6b95911549893" kindref="member">Workspace::ActivityFlag::ActivityRaise</ref>);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_currentToplevelDragWindow<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight></codeline>
<codeline lineno="2550" refid="class_k_win_1_1_drag_and_drop_input_filter_1a858c8c4686826b53859ba95bb52ff814" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drag_and_drop_input_filter_1a858c8c4686826b53859ba95bb52ff814" kindref="member">pointerMotion</ref>(<ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2551"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seat-&gt;isDragPointer())<sp/>{</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;isDragTouch())<sp/>{</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a91da236ff1690ae4862f76d1b1d3eca1" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1af79f50358d894b276f36aaf02d386947" kindref="member">globalPointer</ref>();</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;xdgTopleveldrag())<sp/>{</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragToplevel(pos,<sp/>seat-&gt;xdgTopleveldrag());</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyPointerMotion(pos);</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*dragTarget<sp/>=<sp/>pickDragTarget(pos);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dragTarget)<sp/>{</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dragTarget<sp/>!=<sp/>m_dragTarget)<sp/>{</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ac5270fc5d7e4887762c87015c4b92e04" kindref="member">takeActivity</ref>(dragTarget,<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" kindref="member">Workspace::ActivityFlag::ActivityFocus</ref>);</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_raiseTimer.start();</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pos<sp/>-<sp/>m_lastPos).manhattanLength()<sp/>&gt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastPos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>timer<sp/>to<sp/>delay<sp/>raising<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_raiseTimer.start();</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dragTarget<sp/>=<sp/>dragTarget;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*xwl<sp/>=<sp/>kwinApp()-&gt;xwayland())<sp/>{</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>xwl-&gt;dragMoveFilter(dragTarget);</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/><ref refid="namespace_k_win_1_1_xwl_1a4245fb9cb1310a1304868c4d99186352afd038fc7f319e48f3115d92bf5bdbef9" kindref="member">Xwl::DragEventReply::Ignore</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/><ref refid="namespace_k_win_1_1_xwl_1a4245fb9cb1310a1304868c4d99186352aa1df5b634fdadddf5a2170304c556b90" kindref="member">Xwl::DragEventReply::Take</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dragTarget)<sp/>{</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>consider<sp/>decorations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dragTarget-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>()<sp/>!=<sp/>seat-&gt;dragSurface())<sp/>{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;setDragTarget(dropHandler(dragTarget),<sp/>dragTarget-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>(),<sp/>dragTarget-&gt;<ref refid="class_k_win_1_1_window_1af0d6ef568b401a7e593c0652c66b31b1" kindref="member">inputTransformation</ref>());</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>window<sp/>at<sp/>that<sp/>place,<sp/>if<sp/>we<sp/>have<sp/>a<sp/>surface<sp/>we<sp/>need<sp/>to<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;setDragTarget(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dragTarget<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>should<sp/>we<sp/>pass<sp/>through<sp/>effects?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605" refid="class_k_win_1_1_drag_and_drop_input_filter_1a0c2b228359bfee00203a5964cf069844" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drag_and_drop_input_filter_1a0c2b228359bfee00203a5964cf069844" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2606"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seat-&gt;isDragPointer())<sp/>{</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;isDragTouch())<sp/>{</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1ab8f69816000bb2462487fad68fe14283" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>==<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyPointerButton(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1aedf959f24dcbd61558f547fab1012b09" kindref="member">nativeButton</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseDragTarget();</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dragTarget<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyPointerButton(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1aedf959f24dcbd61558f547fab1012b09" kindref="member">nativeButton</ref>,<sp/>event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>should<sp/>we<sp/>pass<sp/>through<sp/>effects?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626" refid="class_k_win_1_1_drag_and_drop_input_filter_1abf5f7d7d799ca43625ac35b76fd020b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drag_and_drop_input_filter_1abf5f7d7d799ca43625ac35b76fd020b2" kindref="member">pointerFrame</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2627"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seat-&gt;isDragPointer())<sp/>{</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;isDragTouch())<sp/>{</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1ab9c928f670fb2f9e9ca77dce6d496464" kindref="member">notifyPointerFrame</ref>();</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640" refid="class_k_win_1_1_drag_and_drop_input_filter_1a939ce12c01b2e024ecb9841e83649b74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drag_and_drop_input_filter_1a939ce12c01b2e024ecb9841e83649b74" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2641"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;isDragPointer())<sp/>{</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seat-&gt;isDragTouch())<sp/>{</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchId<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" kindref="member">findToplevel</ref>(pos);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;setTimestamp(time);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyTouchDown(window-&gt;<ref refid="class_k_win_1_1_window_1a379c25dec85d7b0aee3b79676327b9b6" kindref="member">surface</ref>(),<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a205c4e3d11f4c4cd184e767829e2afc0" kindref="member">bufferGeometry</ref>().topLeft(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos);</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastPos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2658" refid="class_k_win_1_1_drag_and_drop_input_filter_1a26a32133c20028500be3fc15a082213a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drag_and_drop_input_filter_1a26a32133c20028500be3fc15a082213a" kindref="member">touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2659"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;isDragPointer())<sp/>{</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seat-&gt;isDragTouch())<sp/>{</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchId<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>take<sp/>for<sp/>now<sp/>the<sp/>first<sp/>id<sp/>appearing<sp/>as<sp/>a<sp/>move<sp/>after<sp/>a<sp/>drag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>started.<sp/>We<sp/>can<sp/>optimize<sp/>by<sp/>specifying<sp/>the<sp/>id<sp/>the<sp/>drag<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>associated<sp/>with<sp/>by<sp/>implementing<sp/>a<sp/>key-value<sp/>getter<sp/>in<sp/>KWayland.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchId<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchId<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seat-&gt;xdgTopleveldrag())<sp/>{</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragToplevel(pos,<sp/>seat-&gt;xdgTopleveldrag());</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyTouchMotion(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*t<sp/>=<sp/>pickDragTarget(pos))<sp/>{</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>consider<sp/>decorations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;surface()<sp/>!=<sp/>seat-&gt;dragSurface())<sp/>{</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((m_dragTarget<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(t-&gt;isClient()<sp/>?<sp/>t<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ac5270fc5d7e4887762c87015c4b92e04" kindref="member">takeActivity</ref>(m_dragTarget,<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" kindref="member">Workspace::ActivityFlag::ActivityFocus</ref>);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_raiseTimer.start();</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;setDragTarget(dropHandler(t),<sp/>t-&gt;surface(),<sp/>pos,<sp/>t-&gt;inputTransformation());</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pos<sp/>-<sp/>m_lastPos).manhattanLength()<sp/>&gt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastPos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>timer<sp/>to<sp/>delay<sp/>raising<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_raiseTimer.start();</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>window<sp/>at<sp/>that<sp/>place,<sp/>if<sp/>we<sp/>have<sp/>a<sp/>surface<sp/>we<sp/>need<sp/>to<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;setDragTarget(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dragTarget<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2705" refid="class_k_win_1_1_drag_and_drop_input_filter_1a662ea0c3a818b217689741e2b93db7e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drag_and_drop_input_filter_1a662ea0c3a818b217689741e2b93db7e6" kindref="member">touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2706"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seat-&gt;isDragTouch())<sp/>{</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">setTimestamp</ref>(time);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;notifyTouchUp(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchId<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raiseDragTarget();</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2719" refid="class_k_win_1_1_drag_and_drop_input_filter_1a9417376c829dc99f10ed40f43422d580" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drag_and_drop_input_filter_1a9417376c829dc99f10ed40f43422d580" kindref="member">keyboardKey</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2720"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a5f81ba6145bce999f32aec0b97da7548" kindref="member">key</ref><sp/>!=<sp/>Qt::Key_Escape)<sp/>{</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seat<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5eb1a9f63d831179f22f4baf0c630f0e" kindref="member">seat</ref>();</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seat-&gt;isDrag())<sp/>{</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seat-&gt;<ref refid="class_k_win_1_1_seat_interface_1ad467b51b24c938bb3c7b391d65ea64e1" kindref="member">cancelDrag</ref>();</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>raiseDragTarget()</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_raiseTimer.stop();</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dragTarget)<sp/>{</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ac5270fc5d7e4887762c87015c4b92e04" kindref="member">takeActivity</ref>(m_dragTarget,<sp/><ref refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a78fe29e8b597fd1711e6b95911549893" kindref="member">Workspace::ActivityFlag::ActivityRaise</ref>);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/>Window<sp/>*pickDragTarget(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2745"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Window<sp/>*&gt;<sp/>stacking<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" kindref="member">stackingOrder</ref>();</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stacking.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>stacking.end();</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--it;</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window<sp/>*window<sp/>=<sp/>(*it);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toplevelDrag<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat()-&gt;xdgTopleveldrag();<sp/>toplevelDrag<sp/>&amp;&amp;<sp/>toplevelDrag-&gt;toplevel()<sp/>&amp;&amp;<sp/>toplevelDrag-&gt;toplevel()-&gt;surface()<sp/>==<sp/>window-&gt;surface())<sp/>{</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;isDeleted())<sp/>{</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;isClient())<sp/>{</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;isOnCurrentActivity()<sp/>||<sp/>!window-&gt;isOnCurrentDesktop()<sp/>||<sp/>window-&gt;isMinimized()<sp/>||<sp/>window-&gt;isHidden()<sp/>||<sp/>window-&gt;isHiddenByShowDesktop())<sp/>{</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;readyForPainting())<sp/>{</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;hitTest(pos))<sp/>{</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>stacking.begin());</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dragToplevel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>XdgToplevelDragV1Interface<sp/>*toplevelDrag)</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/>toplevelDrag-&gt;toplevel()<sp/>?<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a5b85a441a6db58a50e401a099e778b27" kindref="member">findWindow</ref>(toplevelDrag-&gt;toplevel()-&gt;surface())<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_currentToplevelDragWindow<sp/>!=<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_currentToplevelDragWindow)<sp/>{</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_currentToplevelDragWindow-&gt;setKeepAbove(m_wasKeepAbove);</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_currentToplevelDragWindow<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window)<sp/>{</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wasKeepAbove<sp/>=<sp/>window-&gt;keepAbove();</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;setKeepAbove(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window)<sp/>{</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;move(pos<sp/>-<sp/>toplevelDrag-&gt;offset());</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/>qint32<sp/>m_touchId<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>m_lastPos<sp/>=<sp/>QPointF(-1,<sp/>-1);</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointer&lt;Window&gt;<sp/>m_dragTarget;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/>QTimer<sp/>m_raiseTimer;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointer&lt;Window&gt;<sp/>m_currentToplevelDragWindow<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_wasKeepAbove<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2803"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><ref refid="globals_8h_1a0f3b25c4c91afa06ea528233a2986681" kindref="member">KWIN_SINGLETON_FACTORY</ref>(<ref refid="class_k_win_1_1_input_redirection" kindref="compound">InputRedirection</ref>)</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal">InputRedirection::InputRedirection(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_keyboard(new<sp/><ref refid="class_k_win_1_1_keyboard_input_redirection" kindref="compound">KeyboardInputRedirection</ref>(this))</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pointer(new<sp/><ref refid="class_k_win_1_1_pointer_input_redirection" kindref="compound">PointerInputRedirection</ref>(this))</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_tablet(new<sp/><ref refid="class_k_win_1_1_tablet_input_redirection" kindref="compound">TabletInputRedirection</ref>(this))</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_touch(new<sp/><ref refid="class_k_win_1_1_touch_input_redirection" kindref="compound">TouchInputRedirection</ref>(this))</highlight></codeline>
<codeline lineno="2813"><highlight class="normal">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_shortcuts(new<sp/><ref refid="class_k_win_1_1_global_shortcuts_manager" kindref="compound">GlobalShortcutsManager</ref>(this))</highlight></codeline>
<codeline lineno="2815"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="2816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/>setupInputBackends();</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(kwinApp(),<sp/>&amp;<ref refid="class_k_win_1_1_application_1acdf94bae1dcb6a4c37890e020addc905" kindref="member">Application::workspaceCreated</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;InputRedirection::setupWorkspace);</highlight></codeline>
<codeline lineno="2820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"></highlight></codeline>
<codeline lineno="2822" refid="class_k_win_1_1_input_redirection_1a8fcc93bb1d10727144819a30a211ead3" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_input_redirection_1a8fcc93bb1d10727144819a30a211ead3" kindref="member">InputRedirection::~InputRedirection</ref>()</highlight></codeline>
<codeline lineno="2823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputBackends.clear();</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputDevices.clear();</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/>s_self<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"></highlight></codeline>
<codeline lineno="2830" refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">InputRedirection::installInputEventFilter</ref>(<ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref><sp/>*filter)</highlight></codeline>
<codeline lineno="2831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!m_filters.contains(filter));</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::lower_bound(m_filters.begin(),<sp/>m_filters.end(),<sp/>filter,<sp/>[](<ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref><sp/>*a,<sp/><ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>a-&gt;weight()<sp/>&lt;<sp/>b-&gt;weight();</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/>m_filters.insert(it,<sp/>filter);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2840" refid="class_k_win_1_1_input_redirection_1a702b94b4e3746a0ee81c3989a219d891" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a702b94b4e3746a0ee81c3989a219d891" kindref="member">InputRedirection::uninstallInputEventFilter</ref>(<ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref><sp/>*filter)</highlight></codeline>
<codeline lineno="2841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/>m_filters.removeOne(filter);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"></highlight></codeline>
<codeline lineno="2845" refid="class_k_win_1_1_input_redirection_1a120eae6615da47a1bc5b86b7387ababd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a120eae6615da47a1bc5b86b7387ababd" kindref="member">InputRedirection::installInputEventSpy</ref>(<ref refid="class_k_win_1_1_input_event_spy" kindref="compound">InputEventSpy</ref><sp/>*spy)</highlight></codeline>
<codeline lineno="2846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/>m_spies<sp/>&lt;&lt;<sp/>spy;</highlight></codeline>
<codeline lineno="2848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight></codeline>
<codeline lineno="2850" refid="class_k_win_1_1_input_redirection_1ab671ac5694d6b546af8715e047ef3647" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1ab671ac5694d6b546af8715e047ef3647" kindref="member">InputRedirection::uninstallInputEventSpy</ref>(<ref refid="class_k_win_1_1_input_event_spy" kindref="compound">InputEventSpy</ref><sp/>*spy)</highlight></codeline>
<codeline lineno="2851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>m_spies.removeOne(spy);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855" refid="class_k_win_1_1_input_redirection_1a3d8dd202544d7da4b89474bbeec9d882" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a3d8dd202544d7da4b89474bbeec9d882" kindref="member">InputRedirection::init</ref>()</highlight></codeline>
<codeline lineno="2856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputConfigWatcher<sp/>=<sp/>KConfigWatcher::create(kwinApp()-&gt;inputConfig());</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(m_inputConfigWatcher.data(),<sp/>&amp;KConfigWatcher::configChanged,</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;InputRedirection::handleInputConfigChanged);</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortcuts-&gt;init();</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InputRedirection::setupWorkspace()</highlight></codeline>
<codeline lineno="2866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1afd27bc2d5c3bd0272375f09238f779f2" kindref="member">Workspace::outputsChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;InputRedirection::updateScreens);</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_keyboard-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a36269f0e7d11d95fae5b65f4525c7973" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ae7c703c2163b12d59c144c63be4cde73" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touch-&gt;<ref refid="class_k_win_1_1_touch_input_redirection_1ad809dd8521589b0e3f90b46bb864768d" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tablet-&gt;<ref refid="class_k_win_1_1_tablet_input_redirection_1a40f601fb56e5cca013391402e29f5142" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateLeds(m_keyboard-&gt;<ref refid="class_k_win_1_1_keyboard_input_redirection_1a830fc6a1e6dc36cfd3436e43023c11a2" kindref="member">xkb</ref>()-&gt;<ref refid="class_k_win_1_1_xkb_1a6484d0b2fbcc5839ef1f2374e9fdd770" kindref="member">leds</ref>());</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(m_keyboard,<sp/>&amp;<ref refid="class_k_win_1_1_keyboard_input_redirection_1ac4608abceabc03373c26ed6222589042" kindref="member">KeyboardInputRedirection::ledsChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;InputRedirection::updateLeds);</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setupInputFilters();</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateScreens();</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InputRedirection::updateScreens()</highlight></codeline>
<codeline lineno="2883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;backend<sp/>:<sp/>m_inputBackends)<sp/>{</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend-&gt;updateScreens();</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight></codeline>
<codeline lineno="2889" refid="class_k_win_1_1_input_redirection_1a7c1d16860aaa4196eff4188061c6610c" refkind="member"><highlight class="normal">QObject<sp/>*<ref refid="class_k_win_1_1_input_redirection_1a7c1d16860aaa4196eff4188061c6610c" kindref="member">InputRedirection::lastInputHandler</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2890"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lastInputDevice;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight></codeline>
<codeline lineno="2894" refid="class_k_win_1_1_input_redirection_1a9c1edee99ea1079725875074997acf1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a9c1edee99ea1079725875074997acf1b" kindref="member">InputRedirection::setLastInputHandler</ref>(QObject<sp/>*device)</highlight></codeline>
<codeline lineno="2895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lastInputDevice<sp/>=<sp/>device;</highlight></codeline>
<codeline lineno="2897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"></highlight></codeline>
<codeline lineno="2899" refid="class_k_win_1_1_window_interacted_spy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_window_interacted_spy" kindref="compound">WindowInteractedSpy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_spy_1a57ca2c40b812786fd52212bab1b2ec1c" kindref="member">InputEventSpy</ref></highlight></codeline>
<codeline lineno="2900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2902" refid="class_k_win_1_1_window_interacted_spy_1acb049ec08f0e54abda209588033c1d95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1acb049ec08f0e54abda209588033c1d95" kindref="member">keyboardKey</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2903"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_keyboard_key_event_1a9a3f8bbb9b2bb84fbb3a0833d11a2baa" kindref="member">state</ref><sp/>!=<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">KeyboardKeyState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1a02f1371dc525dce41f638f3af4b5bb51" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"></highlight></codeline>
<codeline lineno="2910" refid="class_k_win_1_1_window_interacted_spy_1aee6f4e5285d7e53a2abe4cde16a9c1b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1aee6f4e5285d7e53a2abe4cde16a9c1b5" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2911"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_pointer_button_event_1a5a2bb6cbf2c16e3910a2e00c2e98cff4" kindref="member">state</ref><sp/>!=<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1a02f1371dc525dce41f638f3af4b5bb51" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918" refid="class_k_win_1_1_window_interacted_spy_1ada0bc9589a735147ecf9cfc96beb31f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1ada0bc9589a735147ecf9cfc96beb31f1" kindref="member">tabletPadButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_button_event" kindref="compound">TabletPadButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2919"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!event-&gt;<ref refid="struct_k_win_1_1_tablet_pad_button_event_1ab0f014cdb060e7a8eecd30fbd061574e" kindref="member">pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1a02f1371dc525dce41f638f3af4b5bb51" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"></highlight></codeline>
<codeline lineno="2926" refid="class_k_win_1_1_window_interacted_spy_1af40a5af10be8ca7f979c2ce39dfde6d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1af40a5af10be8ca7f979c2ce39dfde6d3" kindref="member">tabletToolButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_button_event" kindref="compound">TabletToolButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2927"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_button_event_1a00cd2be558c0893711b4c672290e4c42" kindref="member">pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1a02f1371dc525dce41f638f3af4b5bb51" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"></highlight></codeline>
<codeline lineno="2934" refid="class_k_win_1_1_window_interacted_spy_1aa6d8b6fa222888179ee79348760387cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1aa6d8b6fa222888179ee79348760387cc" kindref="member">tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2935"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="struct_k_win_1_1_tablet_tool_tip_event_1aab6af1a62ff7db96822715a17b6536ea" kindref="member">type</ref><sp/>!=<sp/><ref refid="struct_k_win_1_1_tablet_tool_tip_event_1a26ac1b53980eb001ae80df6d07cc1c2fa572eaad4b4c85f9904fdbd0db31a4907" kindref="member">TabletToolTipEvent::Type::Press</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1a02f1371dc525dce41f638f3af4b5bb51" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"></highlight></codeline>
<codeline lineno="2942" refid="class_k_win_1_1_window_interacted_spy_1a6ca5cc8a4d4568153808d52d48810395" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1a6ca5cc8a4d4568153808d52d48810395" kindref="member">touchDown</ref>(qint32,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2943"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1a02f1371dc525dce41f638f3af4b5bb51" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"></highlight></codeline>
<codeline lineno="2947" refid="class_k_win_1_1_window_interacted_spy_1a02f1371dc525dce41f638f3af4b5bb51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_interacted_spy_1a02f1371dc525dce41f638f3af4b5bb51" kindref="member">update</ref>()</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow</ref>();</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_k_win_1_1_window_1ab80ea35c277e387008a043b40ed19c3d" kindref="member">setLastUsageSerial</ref>(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;seat()-&gt;display()-&gt;serial());</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ae429c0def62c2cfef0de8613be7c5802" kindref="member">setWasUserInteraction</ref>();</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2956"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2958" refid="class_k_win_1_1_user_activity_spy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_user_activity_spy" kindref="compound">UserActivitySpy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_event_spy_1a57ca2c40b812786fd52212bab1b2ec1c" kindref="member">InputEventSpy</ref></highlight></codeline>
<codeline lineno="2959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2961" refid="class_k_win_1_1_user_activity_spy_1a492fe7d3be57ec0104f80d42cda1dbf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a492fe7d3be57ec0104f80d42cda1dbf7" kindref="member">pointerMotion</ref>(<ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2962"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!event-&gt;<ref refid="struct_k_win_1_1_pointer_motion_event_1a10056cb0ea5aaea99599ff47de9e67b4" kindref="member">warp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2967" refid="class_k_win_1_1_user_activity_spy_1a33da27553708afc527e5cbf48fecc560" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a33da27553708afc527e5cbf48fecc560" kindref="member">pointerButton</ref>(<ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2968"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2971" refid="class_k_win_1_1_user_activity_spy_1a059cf6ae6dc9ea2d45fef466155e8358" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a059cf6ae6dc9ea2d45fef466155e8358" kindref="member">pointerAxis</ref>(<ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2972"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976" refid="class_k_win_1_1_user_activity_spy_1a88de03219ae05e99a3c8516977845a87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a88de03219ae05e99a3c8516977845a87" kindref="member">keyboardKey</ref>(<ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2977"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight></codeline>
<codeline lineno="2981" refid="class_k_win_1_1_user_activity_spy_1a2a22306d2d29b46db89c1502a2ba360c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a2a22306d2d29b46db89c1502a2ba360c" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2982"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2985" refid="class_k_win_1_1_user_activity_spy_1a996e22d9f196bf48434349be2e127449" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a996e22d9f196bf48434349be2e127449" kindref="member">touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2986"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2989" refid="class_k_win_1_1_user_activity_spy_1a2baf5ce70245cd29e7602122c80ac8a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a2baf5ce70245cd29e7602122c80ac8a0" kindref="member">touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2990"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight></codeline>
<codeline lineno="2994" refid="class_k_win_1_1_user_activity_spy_1a4d23735c6a444d6842bc391ad02d76d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a4d23735c6a444d6842bc391ad02d76d3" kindref="member">pinchGestureBegin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2995"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2998" refid="class_k_win_1_1_user_activity_spy_1aa921ac4f1caa4171427106a72606aa1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1aa921ac4f1caa4171427106a72606aa1d" kindref="member">pinchGestureUpdate</ref>(qreal<sp/>scale,<sp/>qreal<sp/>angleDelta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="2999"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3002" refid="class_k_win_1_1_user_activity_spy_1aae5dc8b96c132e73e86b8271723dcad7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1aae5dc8b96c132e73e86b8271723dcad7" kindref="member">pinchGestureEnd</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3003"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3006" refid="class_k_win_1_1_user_activity_spy_1aa5f71754a630b2ee1c416345407c353c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1aa5f71754a630b2ee1c416345407c353c" kindref="member">pinchGestureCancelled</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3007"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"></highlight></codeline>
<codeline lineno="3011" refid="class_k_win_1_1_user_activity_spy_1aed88f331f1b14c06023ed8c4be5158cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1aed88f331f1b14c06023ed8c4be5158cd" kindref="member">swipeGestureBegin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3012"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3015" refid="class_k_win_1_1_user_activity_spy_1aa6879a23ce681aeb7745663e3e2d9525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1aa6879a23ce681aeb7745663e3e2d9525" kindref="member">swipeGestureUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3016"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3019" refid="class_k_win_1_1_user_activity_spy_1a9d39690f59aff6a70a5c001f96727978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a9d39690f59aff6a70a5c001f96727978" kindref="member">swipeGestureEnd</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3020"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3023" refid="class_k_win_1_1_user_activity_spy_1a7e01101f01d3eb8fc4c8f73e3da20d3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a7e01101f01d3eb8fc4c8f73e3da20d3c" kindref="member">swipeGestureCancelled</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3024"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"></highlight></codeline>
<codeline lineno="3028" refid="class_k_win_1_1_user_activity_spy_1a10aa070b2b2f0def83e9a17062519a5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a10aa070b2b2f0def83e9a17062519a5f" kindref="member">holdGestureBegin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingerCount,<sp/>std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3029"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3032" refid="class_k_win_1_1_user_activity_spy_1a379bcc364c93f4d16ed05fe43371f48f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a379bcc364c93f4d16ed05fe43371f48f" kindref="member">holdGestureEnd</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3033"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3036" refid="class_k_win_1_1_user_activity_spy_1a2465e7212e27a5d1b92cc99faddc56f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a2465e7212e27a5d1b92cc99faddc56f2" kindref="member">holdGestureCancelled</ref>(std::chrono::microseconds<sp/>time)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3037"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"></highlight></codeline>
<codeline lineno="3041" refid="class_k_win_1_1_user_activity_spy_1a3d5aacc6790f369e3b516e91deb34efb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a3d5aacc6790f369e3b516e91deb34efb" kindref="member">tabletToolProximityEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3042"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3045" refid="class_k_win_1_1_user_activity_spy_1a4837e1d54780ce293d4be847dbba2bfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a4837e1d54780ce293d4be847dbba2bfe" kindref="member">tabletToolAxisEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3046"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3049" refid="class_k_win_1_1_user_activity_spy_1aa0228a6daf85e6ddfe626112b96c2746" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1aa0228a6daf85e6ddfe626112b96c2746" kindref="member">tabletToolTipEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3050"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3053" refid="class_k_win_1_1_user_activity_spy_1a4b4c64d616c323ad6a51b6674b37449c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a4b4c64d616c323ad6a51b6674b37449c" kindref="member">tabletToolButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_tool_button_event" kindref="compound">TabletToolButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3054"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3057" refid="class_k_win_1_1_user_activity_spy_1a024992c41fa98fdc2e29698943b91407" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a024992c41fa98fdc2e29698943b91407" kindref="member">tabletPadButtonEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_button_event" kindref="compound">TabletPadButtonEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3058"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3061" refid="class_k_win_1_1_user_activity_spy_1a4f6ca7c0b1a9216c3154b8a6bc243759" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a4f6ca7c0b1a9216c3154b8a6bc243759" kindref="member">tabletPadStripEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_strip_event" kindref="compound">TabletPadStripEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3062"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3065" refid="class_k_win_1_1_user_activity_spy_1a26d477e73ca50bad6eaff48fec49867e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_user_activity_spy_1a26d477e73ca50bad6eaff48fec49867e" kindref="member">tabletPadRingEvent</ref>(<ref refid="struct_k_win_1_1_tablet_pad_ring_event" kindref="compound">TabletPadRingEvent</ref><sp/>*event)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="3066"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyActivity();</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>notifyActivity()</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6779f3140053cb30ee8314c34536e8c8" kindref="member">simulateUserActivity</ref>();</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3075"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InputRedirection::setupInputFilters()</highlight></codeline>
<codeline lineno="3078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwinApp()-&gt;session()-&gt;capabilities()<sp/>&amp;<sp/><ref refid="class_k_win_1_1_session_1a737a73dc4ebe0b8c85b7cfa9084b0129a650ffe7852bde4d9cbd37060a6e55585" kindref="member">Session::Capability::SwitchTerminal</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_virtualTerminalFilter<sp/>=<sp/>std::make_unique&lt;VirtualTerminalFilter&gt;();</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_virtualTerminalFilter.get());</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/>m_hideCursorSpy<sp/>=<sp/>std::make_unique&lt;HideCursorSpy&gt;();</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a120eae6615da47a1bc5b86b7387ababd" kindref="member">installInputEventSpy</ref>(m_hideCursorSpy.get());</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/>m_userActivitySpy<sp/>=<sp/>std::make_unique&lt;UserActivitySpy&gt;();</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a120eae6615da47a1bc5b86b7387ababd" kindref="member">installInputEventSpy</ref>(m_userActivitySpy.get());</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"></highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/>m_windowInteractedSpy<sp/>=<sp/>std::make_unique&lt;WindowInteractedSpy&gt;();</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a120eae6615da47a1bc5b86b7387ababd" kindref="member">installInputEventSpy</ref>(m_windowInteractedSpy.get());</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_SCREENLOCKER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lockscreenFilter<sp/>=<sp/>std::make_unique&lt;LockScreenFilter&gt;();</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_lockscreenFilter.get());</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwinApp()-&gt;supportsGlobalShortcuts())<sp/>{</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_screenEdgeFilter<sp/>=<sp/>std::make_unique&lt;ScreenEdgeInputFilter&gt;();</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_screenEdgeFilter.get());</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dragAndDropFilter<sp/>=<sp/>std::make_unique&lt;DragAndDropInputFilter&gt;();</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_dragAndDropFilter.get());</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"></highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/>m_windowSelector<sp/>=<sp/>std::make_unique&lt;WindowSelectorFilter&gt;();</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_windowSelector.get());</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_TABBOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tabboxFilter<sp/>=<sp/>std::make_unique&lt;TabBoxInputFilter&gt;();</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_tabboxFilter.get());</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwinApp()-&gt;supportsGlobalShortcuts())<sp/>{</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_globalShortcutFilter<sp/>=<sp/>std::make_unique&lt;GlobalShortcutFilter&gt;();</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_globalShortcutFilter.get());</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"></highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/>m_effectsFilter<sp/>=<sp/>std::make_unique&lt;EffectsFilter&gt;();</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_effectsFilter.get());</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"></highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/>m_interactiveMoveResizeFilter<sp/>=<sp/>std::make_unique&lt;MoveResizeFilter&gt;();</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_interactiveMoveResizeFilter.get());</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/>m_popupFilter<sp/>=<sp/>std::make_unique&lt;PopupInputFilter&gt;();</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_popupFilter.get());</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/>m_decorationFilter<sp/>=<sp/>std::make_unique&lt;DecorationEventFilter&gt;();</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_decorationFilter.get());</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/>m_windowActionFilter<sp/>=<sp/>std::make_unique&lt;WindowActionInputFilter&gt;();</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_windowActionFilter.get());</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/>m_internalWindowFilter<sp/>=<sp/>std::make_unique&lt;InternalWindowEventFilter&gt;();</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_internalWindowFilter.get());</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputKeyboardFilter<sp/>=<sp/>std::make_unique&lt;InputMethodEventFilter&gt;();</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_inputKeyboardFilter.get());</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>m_forwardFilter<sp/>=<sp/>std::make_unique&lt;ForwardInputFilter&gt;();</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a6e75ac6a40098fee11de022d507b6169" kindref="member">installInputEventFilter</ref>(m_forwardFilter.get());</highlight></codeline>
<codeline lineno="3143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InputRedirection::handleInputConfigChanged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KConfigGroup<sp/>&amp;group)</highlight></codeline>
<codeline lineno="3146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(group.name()<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;Keyboard&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_keyboard-&gt;reconfigure();</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InputRedirection::updateLeds(LEDs<sp/>leds)</highlight></codeline>
<codeline lineno="3153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_leds<sp/>!=<sp/>leds)<sp/>{</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_leds<sp/>=<sp/>leds;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"></highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(InputDevice<sp/>*device<sp/>:<sp/>std::as_const(m_inputDevices))<sp/>{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device-&gt;setLeds(leds);</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight></codeline>
<codeline lineno="3163" refid="class_k_win_1_1_input_redirection_1a6810724dbe269ec24c28a9abb904e42b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a6810724dbe269ec24c28a9abb904e42b" kindref="member">InputRedirection::addInputDevice</ref>(<ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device)</highlight></codeline>
<codeline lineno="3164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a18c0e18750a071e1ab7a3e3cd575071a" kindref="member">InputDevice::keyChanged</ref>,<sp/>m_keyboard,<sp/>&amp;<ref refid="class_k_win_1_1_keyboard_input_redirection_1ab8686e2d59fdc8132969f59f59002765" kindref="member">KeyboardInputRedirection::processKey</ref>);</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1aabda249f682e8597843a656c55525d5d" kindref="member">InputDevice::pointerMotionAbsolute</ref>,</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a4055afef3634935ce8ceb536436b97d4" kindref="member">PointerInputRedirection::processMotionAbsolute</ref>);</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a41f177939241acaec7df62607e7370d3" kindref="member">InputDevice::pointerMotion</ref>,</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1ac75e4f579610b2ce574fbab2f6190b2f" kindref="member">PointerInputRedirection::processMotion</ref>);</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1af2aa67c0f21aa2f83c1e17a611e75f85" kindref="member">InputDevice::pointerButtonChanged</ref>,</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a3aa6d611eb714b9b241977682311fc9c" kindref="member">PointerInputRedirection::processButton</ref>);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a33bbebff1d2b1a59a57c88dafa72eaaa" kindref="member">InputDevice::pointerAxisChanged</ref>,</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1ab8f0ed520baf580bfa7dee69a4bade0d" kindref="member">PointerInputRedirection::processAxis</ref>);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a43d563ab496cbbc60cd1098fce57ab70" kindref="member">InputDevice::pointerFrame</ref>,</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1adc56c3a32f4c50261bce8295147fb14c" kindref="member">PointerInputRedirection::processFrame</ref>);</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a58c19abab1f426b987b0f0690011dfb0" kindref="member">InputDevice::pinchGestureBegin</ref>,</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a1b54502957852f67bda7a257d827f10e" kindref="member">PointerInputRedirection::processPinchGestureBegin</ref>);</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a9720434391b05daee19c3f18b72dc635" kindref="member">InputDevice::pinchGestureUpdate</ref>,</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a33575e03c9bdf67888586f3b92b42efc" kindref="member">PointerInputRedirection::processPinchGestureUpdate</ref>);</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1afcacc8ed046e56243d42f4a7f6cbd2e9" kindref="member">InputDevice::pinchGestureEnd</ref>,</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a971958b2eadbd1b5e3134cf6c6a87d2e" kindref="member">PointerInputRedirection::processPinchGestureEnd</ref>);</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a5b514ccff02b61cf03b9fc23806a58eb" kindref="member">InputDevice::pinchGestureCancelled</ref>,</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a0e20b5f0139176df7949e9d97f16e40f" kindref="member">PointerInputRedirection::processPinchGestureCancelled</ref>);</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1ae7cfe76b5176e42e9e2d1f2eab657d9b" kindref="member">InputDevice::swipeGestureBegin</ref>,</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1aa233d2e65ec0d91757b432ee5a16894a" kindref="member">PointerInputRedirection::processSwipeGestureBegin</ref>);</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a38f9a85f76f779c1736733efacdeff9a" kindref="member">InputDevice::swipeGestureUpdate</ref>,</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a162fb88b597705ee59a6e0ca8aaa01cb" kindref="member">PointerInputRedirection::processSwipeGestureUpdate</ref>);</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1ae57204b3e3e2fd3cde04d13c8a5df366" kindref="member">InputDevice::swipeGestureEnd</ref>,</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a7d8300a8524de516bbcb83c6af62097c" kindref="member">PointerInputRedirection::processSwipeGestureEnd</ref>);</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a4ae913ffc5ba93bf20441d17608a2323" kindref="member">InputDevice::swipeGestureCancelled</ref>,</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a7a0e695b97d13bf76427659fc4f4e491" kindref="member">PointerInputRedirection::processSwipeGestureCancelled</ref>);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a4f46cbd5727c3b81b2d3b0238f6efa4a" kindref="member">InputDevice::holdGestureBegin</ref>,</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a3f4952e95f039a62059a25ec19372a28" kindref="member">PointerInputRedirection::processHoldGestureBegin</ref>);</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1ab362e3f2d08b666a98e71afd11b34de4" kindref="member">InputDevice::holdGestureEnd</ref>,</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a33658f240a084aac27ac7de8a589ff07" kindref="member">PointerInputRedirection::processHoldGestureEnd</ref>);</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a5d0e018e878d5ffb65cc906ed841873a" kindref="member">InputDevice::holdGestureCancelled</ref>,</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pointer,<sp/>&amp;<ref refid="class_k_win_1_1_pointer_input_redirection_1a8daa23181d2ac8819b6ca50f996bba57" kindref="member">PointerInputRedirection::processHoldGestureCancelled</ref>);</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a980b0a91ad2c70a7c1ed4360fccb76e7" kindref="member">InputDevice::touchDown</ref>,<sp/>m_touch,<sp/>&amp;<ref refid="class_k_win_1_1_touch_input_redirection_1ae032c416a0aa75dca44c824442c3411f" kindref="member">TouchInputRedirection::processDown</ref>);</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1afcc35ba1cd647736c8122951a54025b8" kindref="member">InputDevice::touchUp</ref>,<sp/>m_touch,<sp/>&amp;<ref refid="class_k_win_1_1_touch_input_redirection_1a55de3f2cdcae4cb7c48b38d4b0ddf6bf" kindref="member">TouchInputRedirection::processUp</ref>);</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a3179642a0ae2196f397d221d0ff38b3d" kindref="member">InputDevice::touchMotion</ref>,<sp/>m_touch,<sp/>&amp;<ref refid="class_k_win_1_1_touch_input_redirection_1a01e0c84fe66bf01cc1345a9662f1b8fb" kindref="member">TouchInputRedirection::processMotion</ref>);</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a3605b08e0a373f1e91c09c87557fd020" kindref="member">InputDevice::touchCanceled</ref>,<sp/>m_touch,<sp/>&amp;<ref refid="class_k_win_1_1_touch_input_redirection_1a8b36aea41977e6617f4e4aa02714e9dd" kindref="member">TouchInputRedirection::cancel</ref>);</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a2af070611afbc3b97fb0930ac3898346" kindref="member">InputDevice::touchFrame</ref>,<sp/>m_touch,<sp/>&amp;<ref refid="class_k_win_1_1_touch_input_redirection_1a4e1a77f414893a846eea15e34dd33e2b" kindref="member">TouchInputRedirection::frame</ref>);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a7be97fe8f11738c6bd6d6ec6fa810f5c" kindref="member">InputDevice::switchToggle</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="namespace_k_win_1abbce8a26ea93b91db7bbdceca2155130" kindref="member">SwitchState</ref><sp/>state,<sp/>std::chrono::microseconds<sp/>time,<sp/><ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device)<sp/>{</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_switch_event" kindref="compound">SwitchEvent</ref><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.device<sp/>=<sp/>device,</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.state<sp/>=<sp/>state,</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.timestamp<sp/>=<sp/>time,</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a51a5e831bd16e20e71dd4c904ef8f450" kindref="member">processSpies</ref>(std::bind(&amp;<ref refid="class_k_win_1_1_input_event_spy_1aad8e1b6c2c9a12e0886fe59300196ac3" kindref="member">InputEventSpy::switchEvent</ref>,<sp/>std::placeholders::_1,<sp/>&amp;event));</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a725a24b7fb60484bd6ec55a85c845e43" kindref="member">processFilters</ref>(std::bind(&amp;<ref refid="class_k_win_1_1_input_event_filter_1aed8b92865343626379d8ac71f4bd2ea4" kindref="member">InputEventFilter::switchEvent</ref>,<sp/>std::placeholders::_1,<sp/>&amp;event));</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a36fd21ea27d722c88455fa7315619593" kindref="member">InputDevice::tabletToolAxisEvent</ref>,</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tablet,<sp/>&amp;<ref refid="class_k_win_1_1_tablet_input_redirection_1abdd8522a9b5093deb19f7102ff6f9b71" kindref="member">TabletInputRedirection::tabletToolAxisEvent</ref>);</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1aee6146b2bf9d22adc82d8fdedb2b496d" kindref="member">InputDevice::tabletToolProximityEvent</ref>,</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tablet,<sp/>&amp;<ref refid="class_k_win_1_1_tablet_input_redirection_1afcbedbfeaa45c7d2c72d080df54c3732" kindref="member">TabletInputRedirection::tabletToolProximityEvent</ref>);</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1a567ce8c3e12e5d82725bcfb6f27d34a7" kindref="member">InputDevice::tabletToolTipEvent</ref>,</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tablet,<sp/>&amp;<ref refid="class_k_win_1_1_tablet_input_redirection_1a7836868eb4791fd23cf2e25fa8c180b7" kindref="member">TabletInputRedirection::tabletToolTipEvent</ref>);</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1aeae463b5a1bf527c63ee0ae32d28e45c" kindref="member">InputDevice::tabletToolButtonEvent</ref>,</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tablet,<sp/>&amp;<ref refid="class_k_win_1_1_tablet_input_redirection_1af578d4a8698614d54fbf7ab7321937f1" kindref="member">TabletInputRedirection::tabletToolButtonEvent</ref>);</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1adf7e491468284b12bf62f422af23bc8e" kindref="member">InputDevice::tabletPadButtonEvent</ref>,</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tablet,<sp/>&amp;<ref refid="class_k_win_1_1_tablet_input_redirection_1a6154c7ba276450910bcc47dce4550421" kindref="member">TabletInputRedirection::tabletPadButtonEvent</ref>);</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1aa55d18855d95e08d65fe225497342fc6" kindref="member">InputDevice::tabletPadRingEvent</ref>,</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tablet,<sp/>&amp;<ref refid="class_k_win_1_1_tablet_input_redirection_1a564cb298f96ee65235f87a42d48b2d7c" kindref="member">TabletInputRedirection::tabletPadRingEvent</ref>);</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(device,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_1af637ebd5021ae6b6d37121d8896768fb" kindref="member">InputDevice::tabletPadStripEvent</ref>,</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tablet,<sp/>&amp;<ref refid="class_k_win_1_1_tablet_input_redirection_1a16194a1b0d904d51c5b7701aa11b3192" kindref="member">TabletInputRedirection::tabletPadStripEvent</ref>);</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/>device-&gt;<ref refid="class_k_win_1_1_input_device_1a582970abbfe7a7cfdf16d865991a2e97" kindref="member">setLeds</ref>(m_leds);</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputDevices.append(device);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_input_redirection_1a17f7b2bbc9947927d26a0c97197e06a0" kindref="member">deviceAdded</ref>(device);</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAvailableInputDevices();</highlight></codeline>
<codeline lineno="3237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"></highlight></codeline>
<codeline lineno="3239" refid="class_k_win_1_1_input_redirection_1a23b8f0260935a76ae54359f801916716" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a23b8f0260935a76ae54359f801916716" kindref="member">InputRedirection::removeInputDevice</ref>(<ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device)</highlight></codeline>
<codeline lineno="3240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputDevices.removeOne(device);</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_input_redirection_1a3e47d4e8b771fa66d335b484290da827" kindref="member">deviceRemoved</ref>(device);</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAvailableInputDevices();</highlight></codeline>
<codeline lineno="3245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InputRedirection::updateAvailableInputDevices()</highlight></codeline>
<codeline lineno="3248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasKeyboard<sp/>=<sp/>std::any_of(m_inputDevices.constBegin(),<sp/>m_inputDevices.constEnd(),<sp/>[](<ref refid="class_k_win_1_1_input_device" kindref="compound">InputDevice</ref><sp/>*device)<sp/>{</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>device-&gt;isKeyboard();</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_hasKeyboard<sp/>!=<sp/>hasKeyboard)<sp/>{</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_hasKeyboard<sp/>=<sp/>hasKeyboard;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_input_redirection_1a90e01d369c061da9cf5ccd21204d1f2d" kindref="member">hasKeyboardChanged</ref>(hasKeyboard);</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a986f23cda629c5916b6203642aa7faa0" kindref="member">hasPointer</ref><sp/>=<sp/>std::any_of(m_inputDevices.constBegin(),<sp/>m_inputDevices.constEnd(),<sp/>[](<ref refid="class_input_device" kindref="compound">InputDevice</ref><sp/>*device)<sp/>{</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>device-&gt;isPointer();</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_hasPointer<sp/>!=<sp/><ref refid="class_k_win_1_1_input_redirection_1a986f23cda629c5916b6203642aa7faa0" kindref="member">hasPointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_hasPointer<sp/>=<sp/><ref refid="class_k_win_1_1_input_redirection_1a986f23cda629c5916b6203642aa7faa0" kindref="member">hasPointer</ref>;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_input_redirection_1a69724b4815b9560d1ce0fde10991dc2e" kindref="member">hasPointerChanged</ref>(<ref refid="class_k_win_1_1_input_redirection_1a986f23cda629c5916b6203642aa7faa0" kindref="member">hasPointer</ref>);</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1adcb3f54996dd1bf70073076c50778769" kindref="member">hasTouch</ref><sp/>=<sp/>std::any_of(m_inputDevices.constBegin(),<sp/>m_inputDevices.constEnd(),<sp/>[](InputDevice<sp/>*device)<sp/>{</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>device-&gt;isTouch();</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_hasTouch<sp/>!=<sp/><ref refid="class_k_win_1_1_input_redirection_1adcb3f54996dd1bf70073076c50778769" kindref="member">hasTouch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_hasTouch<sp/>=<sp/><ref refid="class_k_win_1_1_input_redirection_1adcb3f54996dd1bf70073076c50778769" kindref="member">hasTouch</ref>;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_input_redirection_1a901171f39665bf42ea0e003ae0f2046e" kindref="member">hasTouchChanged</ref>(<ref refid="class_k_win_1_1_input_redirection_1adcb3f54996dd1bf70073076c50778769" kindref="member">hasTouch</ref>);</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a595aef9d04d9840c88348b8b733933c3" kindref="member">hasTabletModeSwitch</ref><sp/>=<sp/>std::any_of(m_inputDevices.constBegin(),<sp/>m_inputDevices.constEnd(),<sp/>[](InputDevice<sp/>*device)<sp/>{</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>device-&gt;isTabletModeSwitch();</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_hasTabletModeSwitch<sp/>!=<sp/><ref refid="class_k_win_1_1_input_redirection_1a595aef9d04d9840c88348b8b733933c3" kindref="member">hasTabletModeSwitch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_hasTabletModeSwitch<sp/>=<sp/><ref refid="class_k_win_1_1_input_redirection_1a595aef9d04d9840c88348b8b733933c3" kindref="member">hasTabletModeSwitch</ref>;</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_input_redirection_1a2b7aa4aa7406afd3f67e43ada5dcb5df" kindref="member">hasTabletModeSwitchChanged</ref>(<ref refid="class_k_win_1_1_input_redirection_1a595aef9d04d9840c88348b8b733933c3" kindref="member">hasTabletModeSwitch</ref>);</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight></codeline>
<codeline lineno="3282" refid="class_k_win_1_1_input_redirection_1a7dd0de7cdfb0344f7361c4c770c5d973" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a7dd0de7cdfb0344f7361c4c770c5d973" kindref="member">InputRedirection::addInputBackend</ref>(std::unique_ptr&lt;InputBackend&gt;<sp/>&amp;&amp;inputBackend)</highlight></codeline>
<codeline lineno="3283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(inputBackend.get(),<sp/>&amp;<ref refid="class_k_win_1_1_input_backend_1a19b5202df8b13ed96b2c5b8b58ace7ed" kindref="member">InputBackend::deviceAdded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_input_redirection_1a6810724dbe269ec24c28a9abb904e42b" kindref="member">InputRedirection::addInputDevice</ref>);</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(inputBackend.get(),<sp/>&amp;<ref refid="class_k_win_1_1_input_backend_1adebbb4d3d5a5cb6db383c823ee391419" kindref="member">InputBackend::deviceRemoved</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_input_redirection_1a23b8f0260935a76ae54359f801916716" kindref="member">InputRedirection::removeInputDevice</ref>);</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>inputBackend-&gt;setConfig(kwinApp()-&gt;inputConfig());</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/>inputBackend-&gt;initialize();</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputBackends.push_back(std::move(inputBackend));</highlight></codeline>
<codeline lineno="3291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InputRedirection::setupInputBackends()</highlight></codeline>
<codeline lineno="3294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;InputBackend&gt;<sp/>inputBackend<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;createInputBackend();</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputBackend)<sp/>{</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a7dd0de7cdfb0344f7361c4c770c5d973" kindref="member">addInputBackend</ref>(std::move(inputBackend));</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_redirection_1a7dd0de7cdfb0344f7361c4c770c5d973" kindref="member">addInputBackend</ref>(std::make_unique&lt;FakeInputBackend&gt;(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;display()));</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight></codeline>
<codeline lineno="3304" refid="class_k_win_1_1_input_redirection_1a986f23cda629c5916b6203642aa7faa0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a986f23cda629c5916b6203642aa7faa0" kindref="member">InputRedirection::hasPointer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3305"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_hasPointer;</highlight></codeline>
<codeline lineno="3307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309" refid="class_k_win_1_1_input_redirection_1adcb3f54996dd1bf70073076c50778769" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1adcb3f54996dd1bf70073076c50778769" kindref="member">InputRedirection::hasTouch</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3310"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_hasTouch;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314" refid="class_k_win_1_1_input_redirection_1a595aef9d04d9840c88348b8b733933c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a595aef9d04d9840c88348b8b733933c3" kindref="member">InputRedirection::hasTabletModeSwitch</ref>()</highlight></codeline>
<codeline lineno="3315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_hasTabletModeSwitch;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight></codeline>
<codeline lineno="3319" refid="class_k_win_1_1_input_redirection_1a7eb995003eabae0a699fe7003179c42b" refkind="member"><highlight class="normal">Qt::MouseButtons<sp/><ref refid="class_k_win_1_1_input_redirection_1a7eb995003eabae0a699fe7003179c42b" kindref="member">InputRedirection::qtButtonStates</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3320"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pointer-&gt;buttons();</highlight></codeline>
<codeline lineno="3322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"></highlight></codeline>
<codeline lineno="3324" refid="class_k_win_1_1_input_redirection_1a6779f3140053cb30ee8314c34536e8c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a6779f3140053cb30ee8314c34536e8c8" kindref="member">InputRedirection::simulateUserActivity</ref>()</highlight></codeline>
<codeline lineno="3325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idleDetectors<sp/>=<sp/>m_idleDetectors;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>detector<sp/>list<sp/>can<sp/>potentially<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref><sp/>*idleDetector<sp/>:<sp/>idleDetectors)<sp/>{</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idleDetector-&gt;activity();</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"></highlight></codeline>
<codeline lineno="3332" refid="class_k_win_1_1_input_redirection_1a014def7aae023556e9078f7468437146" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a014def7aae023556e9078f7468437146" kindref="member">InputRedirection::addIdleDetector</ref>(<ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref><sp/>*detector)</highlight></codeline>
<codeline lineno="3333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!m_idleDetectors.contains(detector));</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/>detector-&gt;<ref refid="class_k_win_1_1_idle_detector_1a73099303fac18675edd7b52f899a809e" kindref="member">setInhibited</ref>(!m_idleInhibitors.isEmpty());</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/>m_idleDetectors.append(detector);</highlight></codeline>
<codeline lineno="3337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight></codeline>
<codeline lineno="3339" refid="class_k_win_1_1_input_redirection_1a4714c16eefbfd9ea747ef3d120c59d72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a4714c16eefbfd9ea747ef3d120c59d72" kindref="member">InputRedirection::removeIdleDetector</ref>(<ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref><sp/>*detector)</highlight></codeline>
<codeline lineno="3340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/>m_idleDetectors.removeOne(detector);</highlight></codeline>
<codeline lineno="3342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight></codeline>
<codeline lineno="3344" refid="class_k_win_1_1_input_redirection_1a4e039e826153ec53d521c71ea6ab00a1" refkind="member"><highlight class="normal">QList&lt;Window<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_input_redirection_1a4e039e826153ec53d521c71ea6ab00a1" kindref="member">InputRedirection::idleInhibitors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3345"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_idleInhibitors;</highlight></codeline>
<codeline lineno="3347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight></codeline>
<codeline lineno="3349" refid="class_k_win_1_1_input_redirection_1a3edf4ca9576c5111a5692191e07ce57f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a3edf4ca9576c5111a5692191e07ce57f" kindref="member">InputRedirection::addIdleInhibitor</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*inhibitor)</highlight></codeline>
<codeline lineno="3350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_idleInhibitors.contains(inhibitor))<sp/>{</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_idleInhibitors.append(inhibitor);</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref><sp/>*idleDetector<sp/>:<sp/>std::as_const(m_idleDetectors))<sp/>{</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idleDetector-&gt;setInhibited(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"></highlight></codeline>
<codeline lineno="3359" refid="class_k_win_1_1_input_redirection_1affa5c5d60c1cd1d296d1e45f7e242d8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1affa5c5d60c1cd1d296d1e45f7e242d8d" kindref="member">InputRedirection::removeIdleInhibitor</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*inhibitor)</highlight></codeline>
<codeline lineno="3360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_idleInhibitors.removeOne(inhibitor)<sp/>&amp;&amp;<sp/>m_idleInhibitors.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref><sp/>*idleDetector<sp/>:<sp/>std::as_const(m_idleDetectors))<sp/>{</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idleDetector-&gt;setInhibited(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"></highlight></codeline>
<codeline lineno="3368" refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" kindref="member">InputRedirection::findToplevel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)</highlight></codeline>
<codeline lineno="3369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isScreenLocked<sp/>=<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;<ref refid="class_k_win_1_1_wayland_server_1a10fdc669c5562df9a1c91d65a42f4b16" kindref="member">isScreenLocked</ref>();</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isScreenLocked)<sp/>{</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>an<sp/>effect<sp/>overrides<sp/>the<sp/>cursor<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>window<sp/>to<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref><sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;isMouseInterception())<sp/>{</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Window<sp/>*&gt;<sp/>&amp;stacking<sp/>=<sp/><ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" kindref="member">stackingOrder</ref>();</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stacking.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>stacking.end();</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--it;</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window<sp/>=<sp/>(*it);</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;<ref refid="class_k_win_1_1_window_1a3eb5ffa931e4a6f5b817084cf0cc9b71" kindref="member">isDeleted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>deleted<sp/>window<sp/>doesn&apos;t<sp/>get<sp/>mouse<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;<ref refid="class_k_win_1_1_window_1a6214074a0338d546c1c97c736f1b1fe6" kindref="member">isOnCurrentActivity</ref>()<sp/>||<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1aa975d4f4a79a999c827e0a4d7bb5c1dd" kindref="member">isOnCurrentDesktop</ref>()<sp/>||<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a7ee9515027aa5076af42776c20b3a4a5" kindref="member">isMinimized</ref>()<sp/>||<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1a4eb66b6e398d1fecaf5a18adfcd5d621" kindref="member">isHidden</ref>()<sp/>||<sp/>window-&gt;<ref refid="class_k_win_1_1_window_1ac07f6126d0cbaa1688090ceadefe5ded" kindref="member">isHiddenByShowDesktop</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;<ref refid="class_k_win_1_1_window_1af15bc927a7938e696dfcaf8e5ddb20c1" kindref="member">readyForPainting</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isScreenLocked)<sp/>{</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window-&gt;<ref refid="class_k_win_1_1_window_1ac53e1dd7ab4f57c3e323ac3d675b5cac" kindref="member">isLockScreen</ref>()<sp/>&amp;&amp;<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1a901d9f764423ff5f2498705fa038d224" kindref="member">isInputMethod</ref>()<sp/>&amp;&amp;<sp/>!window-&gt;<ref refid="class_k_win_1_1_window_1ab7937ac44130efc04c6bc24f65f71958" kindref="member">isLockScreenOverlay</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;<ref refid="class_k_win_1_1_window_1aaed4b5db1f86e8e62e77a13197ed987f" kindref="member">hitTest</ref>(pos))<sp/>{</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window;</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>stacking.begin());</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight></codeline>
<codeline lineno="3410" refid="class_k_win_1_1_input_redirection_1a95d5ccabfaa4a8cb034bb4e96959e7d8" refkind="member"><highlight class="normal">Qt::KeyboardModifiers<sp/><ref refid="class_k_win_1_1_input_redirection_1a95d5ccabfaa4a8cb034bb4e96959e7d8" kindref="member">InputRedirection::keyboardModifiers</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3411"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_keyboard-&gt;modifiers();</highlight></codeline>
<codeline lineno="3413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight></codeline>
<codeline lineno="3415" refid="class_k_win_1_1_input_redirection_1abbd6b8583398b8c63085b8e1f3deadbc" refkind="member"><highlight class="normal">Qt::KeyboardModifiers<sp/><ref refid="class_k_win_1_1_input_redirection_1abbd6b8583398b8c63085b8e1f3deadbc" kindref="member">InputRedirection::modifiersRelevantForGlobalShortcuts</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3416"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_keyboard-&gt;modifiersRelevantForGlobalShortcuts();</highlight></codeline>
<codeline lineno="3418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"></highlight></codeline>
<codeline lineno="3420" refid="class_k_win_1_1_input_redirection_1a0560a20eeb52d5fcfaf3f396a87d0dcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a0560a20eeb52d5fcfaf3f396a87d0dcb" kindref="member">InputRedirection::registerPointerShortcut</ref>(Qt::KeyboardModifiers<sp/>modifiers,<sp/>Qt::MouseButton<sp/>pointerButtons,<sp/>QAction<sp/>*action)</highlight></codeline>
<codeline lineno="3421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortcuts-&gt;registerPointerShortcut(action,<sp/>modifiers,<sp/>pointerButtons);</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight></codeline>
<codeline lineno="3427" refid="class_k_win_1_1_input_redirection_1a5201ae78ff3397c97d658fd659a2c41f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a5201ae78ff3397c97d658fd659a2c41f" kindref="member">InputRedirection::registerAxisShortcut</ref>(Qt::KeyboardModifiers<sp/>modifiers,<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0" kindref="member">PointerAxisDirection</ref><sp/>axis,<sp/>QAction<sp/>*action)</highlight></codeline>
<codeline lineno="3428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortcuts-&gt;registerAxisShortcut(action,<sp/>modifiers,<sp/>axis);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight></codeline>
<codeline lineno="3434" refid="class_k_win_1_1_input_redirection_1a7caf1163636cc26c9b68285c349f2a64" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a7caf1163636cc26c9b68285c349f2a64" kindref="member">InputRedirection::registerTouchpadSwipeShortcut</ref>(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/>direction,<sp/>uint<sp/>fingerCount,<sp/>QAction<sp/>*action,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>cb)</highlight></codeline>
<codeline lineno="3435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortcuts-&gt;registerTouchpadSwipe(direction,<sp/>fingerCount,<sp/>action,<sp/>cb);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"></highlight></codeline>
<codeline lineno="3441" refid="class_k_win_1_1_input_redirection_1a67077fd387ec37d737f536d8b796497e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a67077fd387ec37d737f536d8b796497e" kindref="member">InputRedirection::registerTouchpadPinchShortcut</ref>(<ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05" kindref="member">PinchDirection</ref><sp/>direction,<sp/>uint<sp/>fingerCount,<sp/>QAction<sp/>*onUp,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>progressCallback)</highlight></codeline>
<codeline lineno="3442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortcuts-&gt;registerTouchpadPinch(direction,<sp/>fingerCount,<sp/>onUp,<sp/>progressCallback);</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"></highlight></codeline>
<codeline lineno="3448" refid="class_k_win_1_1_input_redirection_1ab94715019245ea02da2f675082a53095" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1ab94715019245ea02da2f675082a53095" kindref="member">InputRedirection::registerGlobalAccel</ref>(KGlobalAccelInterface<sp/>*interface)</highlight></codeline>
<codeline lineno="3449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortcuts-&gt;setKGlobalAccelInterface(interface);</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight></codeline>
<codeline lineno="3455" refid="class_k_win_1_1_input_redirection_1a10ceda2362de198cb4e7e14726e300b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a10ceda2362de198cb4e7e14726e300b0" kindref="member">InputRedirection::registerTouchscreenSwipeShortcut</ref>(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/>direction,<sp/>uint<sp/>fingerCount,<sp/>QAction<sp/>*action,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>progressCallback)</highlight></codeline>
<codeline lineno="3456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortcuts-&gt;registerTouchscreenSwipe(direction,<sp/>fingerCount,<sp/>action,<sp/>progressCallback);</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"></highlight></codeline>
<codeline lineno="3462" refid="class_k_win_1_1_input_redirection_1a9bb700ffee83add3dbdef2e71cd5660d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a9bb700ffee83add3dbdef2e71cd5660d" kindref="member">InputRedirection::forceRegisterTouchscreenSwipeShortcut</ref>(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/>direction,<sp/>uint<sp/>fingerCount,<sp/>QAction<sp/>*action,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>progressCallback)</highlight></codeline>
<codeline lineno="3463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortcuts-&gt;forceRegisterTouchscreenSwipe(direction,<sp/>fingerCount,<sp/>action,<sp/>progressCallback);</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"></highlight></codeline>
<codeline lineno="3469" refid="class_k_win_1_1_input_redirection_1aa57c43682e0dc7f2fa1f3b0054f9b86a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1aa57c43682e0dc7f2fa1f3b0054f9b86a" kindref="member">InputRedirection::warpPointer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)</highlight></codeline>
<codeline lineno="3470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pointer-&gt;warp(pos);</highlight></codeline>
<codeline lineno="3472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"></highlight></codeline>
<codeline lineno="3474" refid="class_k_win_1_1_input_redirection_1a37465aaedbe8f64e75a92d760a5bf0af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1a37465aaedbe8f64e75a92d760a5bf0af" kindref="member">InputRedirection::supportsPointerWarping</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3475"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pointer-&gt;supportsWarping();</highlight></codeline>
<codeline lineno="3477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"></highlight></codeline>
<codeline lineno="3479" refid="class_k_win_1_1_input_redirection_1af79f50358d894b276f36aaf02d386947" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_input_redirection_1af79f50358d894b276f36aaf02d386947" kindref="member">InputRedirection::globalPointer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3480"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pointer-&gt;pos();</highlight></codeline>
<codeline lineno="3482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"></highlight></codeline>
<codeline lineno="3484" refid="class_k_win_1_1_input_redirection_1af7002d3d0260d2846e0f613d6d6b7656" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1af7002d3d0260d2846e0f613d6d6b7656" kindref="member">InputRedirection::startInteractiveWindowSelection</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*)&gt;<sp/>callback,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QByteArray<sp/>&amp;cursorName)</highlight></codeline>
<codeline lineno="3485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_windowSelector<sp/>||<sp/>m_windowSelector-&gt;isActive())<sp/>{</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/>m_windowSelector-&gt;start(callback);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pointer-&gt;setWindowSelectionCursor(cursorName);</highlight></codeline>
<codeline lineno="3492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight></codeline>
<codeline lineno="3494" refid="class_k_win_1_1_input_redirection_1ad4c28557f4e7c7b3d3d7cb0cd1e4323a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1ad4c28557f4e7c7b3d3d7cb0cd1e4323a" kindref="member">InputRedirection::startInteractivePositionSelection</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;)&gt;<sp/>callback)</highlight></codeline>
<codeline lineno="3495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_windowSelector<sp/>||<sp/>m_windowSelector-&gt;isActive())<sp/>{</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback(QPoint(-1,<sp/>-1));</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/>m_windowSelector-&gt;start(callback);</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pointer-&gt;setWindowSelectionCursor(QByteArray());</highlight></codeline>
<codeline lineno="3502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight></codeline>
<codeline lineno="3504" refid="class_k_win_1_1_input_redirection_1af31ac695fd107e559b4f80cc62261bc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_redirection_1af31ac695fd107e559b4f80cc62261bc1" kindref="member">InputRedirection::isSelectingWindow</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3505"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_windowSelector<sp/>?<sp/>m_windowSelector-&gt;isActive()<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight></codeline>
<codeline lineno="3509" refid="class_k_win_1_1_input_device_handler_1ab186557ecccd161f355597a6fce96d47" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_input_device_handler_1ab186557ecccd161f355597a6fce96d47" kindref="member">InputDeviceHandler::InputDeviceHandler</ref>(<ref refid="class_k_win_1_1_input_redirection" kindref="compound">InputRedirection</ref><sp/>*<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>)</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(<ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>)</highlight></codeline>
<codeline lineno="3511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><ref refid="class_k_win_1_1_input_device_handler_1aeadcc418b2452a982ccf5557a8a981e0" kindref="member">InputDeviceHandler::~InputDeviceHandler</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight></codeline>
<codeline lineno="3516" refid="class_k_win_1_1_input_device_handler_1ad8971fb917d7fec00762afc6ca094933" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_handler_1ad8971fb917d7fec00762afc6ca094933" kindref="member">InputDeviceHandler::init</ref>()</highlight></codeline>
<codeline lineno="3517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a47f5cff26f9f97c938e9adb15c8f643b" kindref="member">Workspace::stackingOrderChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_handler_1aad703ac93c943a7aaa32dd8030135832" kindref="member">InputDeviceHandler::update</ref>);</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1aca2c97c1f18951364978827022677849" kindref="member">Workspace::windowMinimizedChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_handler_1aad703ac93c943a7aaa32dd8030135832" kindref="member">InputDeviceHandler::update</ref>);</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(VirtualDesktopManager::self(),<sp/>&amp;<ref refid="class_k_win_1_1_virtual_desktop_manager_1aa70de53d9fe2da52c13fb46c27598fe2" kindref="member">VirtualDesktopManager::currentChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_handler_1aad703ac93c943a7aaa32dd8030135832" kindref="member">InputDeviceHandler::update</ref>);</highlight></codeline>
<codeline lineno="3521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InputDeviceHandler::setHover(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window)</highlight></codeline>
<codeline lineno="3524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_hover.window<sp/>==<sp/><ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>m_hover.window;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(m_hover.surfaceCreatedConnection);</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/>m_hover.surfaceCreatedConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/>m_hover.window<sp/>=<sp/><ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"></highlight></codeline>
<codeline lineno="3536" refid="class_k_win_1_1_input_device_handler_1a5bf6dfbcdf05bcc782edaedb8e0f5487" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_handler_1a5bf6dfbcdf05bcc782edaedb8e0f5487" kindref="member">InputDeviceHandler::setFocus</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref>)</highlight></codeline>
<codeline lineno="3537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_focus.window<sp/>==<sp/><ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*oldFocus<sp/>=<sp/>m_focus.window;</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldFocus)<sp/>{</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(oldFocus,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a75b348e50a34a4881ce281e40d1e8f02" kindref="member">Window::closed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_handler_1aad703ac93c943a7aaa32dd8030135832" kindref="member">InputDeviceHandler::update</ref>);</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/>m_focus.window<sp/>=<sp/><ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a75b348e50a34a4881ce281e40d1e8f02" kindref="member">Window::closed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_handler_1aad703ac93c943a7aaa32dd8030135832" kindref="member">InputDeviceHandler::update</ref>);</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_device_handler_1a77b43cbbf5daeec7adaac975a2d6d215" kindref="member">focusUpdate</ref>(oldFocus,<sp/><ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="3553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555" refid="class_k_win_1_1_input_device_handler_1a0d81647cca3841c4c8f6525bbd03af08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_handler_1a0d81647cca3841c4c8f6525bbd03af08" kindref="member">InputDeviceHandler::setDecoration</ref>(<ref refid="class_k_win_1_1_decoration_1_1_decorated_window_impl" kindref="compound">Decoration::DecoratedWindowImpl</ref><sp/>*<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>)</highlight></codeline>
<codeline lineno="3556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_focus.decoration<sp/>!=<sp/><ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>oldDeco<sp/>=<sp/>m_focus.decoration;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_focus.decoration<sp/>=<sp/><ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>;</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_device_handler_1a871dbdb45546665a936c81621698b3da" kindref="member">cleanupDecoration</ref>(oldDeco.data(),<sp/>m_focus.decoration.data());</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_input_device_handler_1a065d868fc5b75d0989659af424a79396" kindref="member">decorationChanged</ref>();</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InputDeviceHandler::updateFocus()</highlight></codeline>
<codeline lineno="3566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref><sp/>=<sp/>m_hover.window;</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_focus.decoration)<sp/>{</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_hover.window<sp/>&amp;&amp;<sp/>!m_hover.window-&gt;surface()<sp/>&amp;&amp;<sp/>!m_hover.window-&gt;isInternal())<sp/>{</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>surface<sp/>has<sp/>not<sp/>yet<sp/>been<sp/>created<sp/>(special<sp/>XWayland<sp/>case).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore<sp/>listen<sp/>for<sp/>its<sp/>creation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_hover.surfaceCreatedConnection)<sp/>{</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_hover.surfaceCreatedConnection<sp/>=<sp/>connect(m_hover.window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a5ab5cf58669820a49608cb46f3ea3e5b" kindref="member">Window::surfaceChanged</ref>,</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_input_device_handler_1aad703ac93c943a7aaa32dd8030135832" kindref="member">InputDeviceHandler::update</ref>);</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_device_handler_1a5bf6dfbcdf05bcc782edaedb8e0f5487" kindref="member">setFocus</ref>(<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">focus</ref>);</highlight></codeline>
<codeline lineno="3582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InputDeviceHandler::updateDecoration()</highlight></codeline>
<codeline lineno="3585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/>Decoration::DecoratedWindowImpl<sp/>*<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_handler_1aa7670b19c39bf2fb4f279d565323dd3b" kindref="member">hover</ref><sp/>=<sp/>m_hover.window.data();</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_input_device_handler_1aa7670b19c39bf2fb4f279d565323dd3b" kindref="member">hover</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_input_device_handler_1aa7670b19c39bf2fb4f279d565323dd3b" kindref="member">hover</ref>-&gt;decoratedWindow())<sp/>{</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!exclusiveContains(<ref refid="class_k_win_1_1_input_device_handler_1aa7670b19c39bf2fb4f279d565323dd3b" kindref="member">hover</ref>-&gt;clientGeometry(),<sp/><ref refid="namespace_k_win_1ac2130505c2734e5f398d4ad54d7b7558" kindref="member">flooredPoint</ref>(<ref refid="class_k_win_1_1_input_device_handler_1aaf80804bd28251a2d522492f56feea95" kindref="member">position</ref>())))<sp/>{</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>device<sp/>above<sp/>decoration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref><sp/>=<sp/><ref refid="class_k_win_1_1_input_device_handler_1aa7670b19c39bf2fb4f279d565323dd3b" kindref="member">hover</ref>-&gt;decoratedWindow();</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_device_handler_1a0d81647cca3841c4c8f6525bbd03af08" kindref="member">setDecoration</ref>(<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">decoration</ref>);</highlight></codeline>
<codeline lineno="3596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"></highlight></codeline>
<codeline lineno="3598" refid="class_k_win_1_1_input_device_handler_1aad703ac93c943a7aaa32dd8030135832" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_handler_1aad703ac93c943a7aaa32dd8030135832" kindref="member">InputDeviceHandler::update</ref>()</highlight></codeline>
<codeline lineno="3599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_inited)<sp/>{</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_input_device_handler_1a4eea9970fb19867f6898883e5685fbb6" kindref="member">positionValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref><sp/>=<sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1abe58b9b1da907bb38f10ac4eac78f4db" kindref="member">findToplevel</ref>(<ref refid="class_k_win_1_1_input_device_handler_1aaf80804bd28251a2d522492f56feea95" kindref="member">position</ref>());</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>set<sp/>the<sp/>window<sp/>at<sp/>the<sp/>position<sp/>of<sp/>the<sp/>input<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/>setHover(<ref refid="class_k_win_1_1_input_device_handler_1a03b7568add6fd607a1ddba5d0acef0ae" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_input_device_handler_1aacbc15f624839124f512c3ba56cd0d94" kindref="member">focusUpdatesBlocked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a9d46ff69d3fe34c0691f5f1f4d271bca" kindref="member">updateFocusMousePosition</ref>(<ref refid="class_k_win_1_1_input_device_handler_1aaf80804bd28251a2d522492f56feea95" kindref="member">position</ref>());</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/>updateDecoration();</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/>updateFocus();</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a9d46ff69d3fe34c0691f5f1f4d271bca" kindref="member">updateFocusMousePosition</ref>(<ref refid="class_k_win_1_1_input_device_handler_1aaf80804bd28251a2d522492f56feea95" kindref="member">position</ref>());</highlight></codeline>
<codeline lineno="3620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight></codeline>
<codeline lineno="3622" refid="class_k_win_1_1_input_device_handler_1aa7670b19c39bf2fb4f279d565323dd3b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_input_device_handler_1aa7670b19c39bf2fb4f279d565323dd3b" kindref="member">InputDeviceHandler::hover</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3623"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_hover.window.data();</highlight></codeline>
<codeline lineno="3625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"></highlight></codeline>
<codeline lineno="3627" refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_input_device_handler_1abc8e00afe86eb250dee0ef1739a2faad" kindref="member">InputDeviceHandler::focus</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3628"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_focus.window.data();</highlight></codeline>
<codeline lineno="3630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><ref refid="class_k_win_1_1_decoration_1_1_decorated_window_impl" kindref="compound">Decoration::DecoratedWindowImpl</ref><sp/>*<ref refid="class_k_win_1_1_input_device_handler_1ad7baa2818246f9fa7ff6b528e67351ef" kindref="member">InputDeviceHandler::decoration</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3633"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_focus.decoration;</highlight></codeline>
<codeline lineno="3635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"></highlight></codeline>
<codeline lineno="3639"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;input.moc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"></highlight></codeline>
<codeline lineno="3641"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_input.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/input.cpp"/>
  </compounddef>
</doxygen>
