<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="eglnativefence_8cpp" kind="file" language="C++">
    <compoundname>eglnativefence.cpp</compoundname>
    <includes refid="eglnativefence_8h" local="yes">eglnativefence.h</includes>
    <includes refid="egldisplay_8h" local="yes">egldisplay.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="6">
        <label>egldisplay.h</label>
        <link refid="egldisplay_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/opengl/eglnativefence.cpp</label>
        <link refid="eglnativefence_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>eglnativefence.h</label>
        <link refid="eglnativefence_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>QByteArray</label>
      </node>
      <node id="8">
        <label>QHash</label>
      </node>
      <node id="9">
        <label>QList</label>
      </node>
      <node id="10">
        <label>QSize</label>
      </node>
      <node id="3">
        <label>epoxy/egl.h</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="11">
        <label>sys/types.h</label>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="eglnativefence_8cpp_1ab862dbdff7f5e7923e301119fc972817" prot="public" static="no">
        <name>EGL_SYNC_NATIVE_FENCE_ANDROID</name>
        <initializer>0x3144</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.cpp" line="16" column="9" bodyfile="kwin/src/opengl/eglnativefence.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="eglnativefence_8cpp_1aa48951a865680d3030419ce5839dc1cb" prot="public" static="no">
        <name>EGL_NO_NATIVE_FENCE_FD_ANDROID</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglnativefence.cpp" line="17" column="9" bodyfile="kwin/src/opengl/eglnativefence.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglnativefence_8h" kindref="compound">eglnativefence.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="egldisplay_8h" kindref="compound">egldisplay.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EGL_ANDROID_native_fence_sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="eglnativefence_8cpp_1ab862dbdff7f5e7923e301119fc972817" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EGL_SYNC_NATIVE_FENCE_ANDROID<sp/>0x3144</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="eglnativefence_8cpp_1aa48951a865680d3030419ce5839dc1cb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EGL_NO_NATIVE_FENCE_FD_ANDROID<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>EGL_ANDROID_native_fence_sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_k_win_1_1_e_g_l_native_fence_1adf5d5bba2d3fea56a2b527ff1f16afce" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_e_g_l_native_fence_1adf5d5bba2d3fea56a2b527ff1f16afce" kindref="member">EGLNativeFence::EGLNativeFence</ref>(<ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref><sp/>*display)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_e_g_l_native_fence_1adf5d5bba2d3fea56a2b527ff1f16afce" kindref="member">EGLNativeFence</ref>(display,<sp/>eglCreateSyncKHR(display-&gt;handle(),<sp/><ref refid="eglnativefence_8cpp_1ab862dbdff7f5e7923e301119fc972817" kindref="member">EGL_SYNC_NATIVE_FENCE_ANDROID</ref>,<sp/>nullptr))</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_sync<sp/>!=<sp/>EGL_NO_SYNC_KHR)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>native<sp/>fence<sp/>will<sp/>get<sp/>a<sp/>valid<sp/>sync<sp/>file<sp/>fd<sp/>only<sp/>after<sp/>a<sp/>flush.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glFlush();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fileDescriptor<sp/>=<sp/><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref>(eglDupNativeFenceFDANDROID(m_display-&gt;handle(),<sp/>m_sync));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_k_win_1_1_e_g_l_native_fence_1af6cf926b1526507e173ba981be148e2a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_e_g_l_native_fence_1adf5d5bba2d3fea56a2b527ff1f16afce" kindref="member">EGLNativeFence::EGLNativeFence</ref>(<ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref><sp/>*display,<sp/>EGLSyncKHR<sp/>sync)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_sync(sync)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_display(display)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_k_win_1_1_e_g_l_native_fence_1ad71ccd9379331269132a21e1c641f5c0" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_e_g_l_native_fence_1ad71ccd9379331269132a21e1c641f5c0" kindref="member">EGLNativeFence::~EGLNativeFence</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileDescriptor.reset();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_sync<sp/>!=<sp/>EGL_NO_SYNC_KHR)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eglDestroySyncKHR(m_display-&gt;handle(),<sp/>m_sync);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_k_win_1_1_e_g_l_native_fence_1ae2d79a7ccab167ab1b43bd5e73e5879d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_e_g_l_native_fence_1ae2d79a7ccab167ab1b43bd5e73e5879d" kindref="member">EGLNativeFence::isValid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="45"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_sync<sp/>!=<sp/>EGL_NO_SYNC_KHR<sp/>&amp;&amp;<sp/>m_fileDescriptor.isValid();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_k_win_1_1_e_g_l_native_fence_1ae2d25d198ffb8ade15d8349641c044dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref><sp/>&amp;<ref refid="class_k_win_1_1_e_g_l_native_fence_1ae2d25d198ffb8ade15d8349641c044dc" kindref="member">EGLNativeFence::fileDescriptor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="50"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_fileDescriptor;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_k_win_1_1_e_g_l_native_fence_1a191dd78483825613103040493daba390" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref><sp/>&amp;&amp;<ref refid="class_k_win_1_1_e_g_l_native_fence_1a191dd78483825613103040493daba390" kindref="member">EGLNativeFence::takeFileDescriptor</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m_fileDescriptor);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_k_win_1_1_e_g_l_native_fence_1a6b519d55ba03309ea3b65deb0529c061" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_e_g_l_native_fence_1a6b519d55ba03309ea3b65deb0529c061" kindref="member">EGLNativeFence::waitSync</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="60"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eglWaitSync(m_display-&gt;handle(),<sp/>m_sync,<sp/>0)<sp/>==<sp/>EGL_TRUE;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_k_win_1_1_e_g_l_native_fence_1a707936f9c9d02c1f15b1c673a0b90d6c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_e_g_l_native_fence_1adf5d5bba2d3fea56a2b527ff1f16afce" kindref="member">EGLNativeFence</ref><sp/><ref refid="class_k_win_1_1_e_g_l_native_fence_1a707936f9c9d02c1f15b1c673a0b90d6c" kindref="member">EGLNativeFence::importFence</ref>(<ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref><sp/>*display,<sp/><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref><sp/>&amp;&amp;fd)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>EGLint<sp/>attributes[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EGL_SYNC_NATIVE_FENCE_FD_ANDROID,<sp/>fd.get(),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EGL_NONE};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>eglCreateSyncKHR(display-&gt;<ref refid="class_k_win_1_1_egl_display_1ac973be65040c0fd4bf08c77d65d2b96d" kindref="member">handle</ref>(),<sp/><ref refid="eglnativefence_8cpp_1ab862dbdff7f5e7923e301119fc972817" kindref="member">EGL_SYNC_NATIVE_FENCE_ANDROID</ref>,<sp/>attributes);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>EGL_NO_SYNC_KHR)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eglCreateSyncKHR<sp/>takes<sp/>ownership<sp/>only<sp/>on<sp/>success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd.take();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_e_g_l_native_fence_1adf5d5bba2d3fea56a2b527ff1f16afce" kindref="member">EGLNativeFence</ref>(display,<sp/>ret);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/opengl/eglnativefence.cpp"/>
  </compounddef>
</doxygen>
