<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="screenedge__test_8cpp" kind="file" language="C++">
    <compoundname>screenedge_test.cpp</compoundname>
    <includes refid="kwin__wayland__test_8h" local="yes">kwin_wayland_test.h</includes>
    <includes refid="effectloader_8h" local="yes">effect/effectloader.h</includes>
    <includes refid="pointer__input_8h" local="yes">pointer_input.h</includes>
    <includes refid="scripting_8h" local="yes">scripting/scripting.h</includes>
    <includes refid="wayland__server_8h" local="yes">wayland_server.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes refid="screenedge_8h" local="yes">screenedge.h</includes>
    <includes local="no">KConfigGroup</includes>
    <includes local="yes">screenedge_test.moc</includes>
    <incdepgraph>
      <node id="2">
        <label>kwin_wayland_test.h</label>
        <link refid="kwin__wayland__test_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/autotests/integration/scripting/screenedge_test.cpp</label>
        <link refid="screenedge__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>core/renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>effect/effectloader.h</label>
        <link refid="effectloader_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>screenedge.h</label>
        <link refid="screenedge_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>scripting/scripting.h</label>
        <link refid="scripting_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>utils/cursortheme.h</label>
        <link refid="cursortheme_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>wayland_server.h</label>
        <link refid="wayland__server_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>KConfigGroup</label>
      </node>
      <node id="49">
        <label>KConfigWatcher</label>
      </node>
      <node id="36">
        <label>KPluginMetaData</label>
      </node>
      <node id="37">
        <label>KSharedConfig</label>
      </node>
      <node id="17">
        <label>KWayland/Client/surface.h</label>
      </node>
      <node id="71">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="72">
        <label>QApplication</label>
      </node>
      <node id="80">
        <label>QByteArray</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="63">
        <label>QDBusContext</label>
      </node>
      <node id="64">
        <label>QDBusMessage</label>
      </node>
      <node id="75">
        <label>QDataStream</label>
      </node>
      <node id="56">
        <label>QElapsedTimer</label>
      </node>
      <node id="38">
        <label>QFlags</label>
      </node>
      <node id="45">
        <label>QHash</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="59">
        <label>QJSEngine</label>
      </node>
      <node id="60">
        <label>QJSValue</label>
      </node>
      <node id="53">
        <label>QList</label>
      </node>
      <node id="82">
        <label>QLoggingCategory</label>
      </node>
      <node id="39">
        <label>QMap</label>
      </node>
      <node id="83">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="40">
        <label>QPair</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="57">
        <label>QPointF</label>
      </node>
      <node id="48">
        <label>QPointer</label>
      </node>
      <node id="73">
        <label>QProcessEnvironment</label>
      </node>
      <node id="41">
        <label>QQueue</label>
      </node>
      <node id="76">
        <label>QRect</label>
      </node>
      <node id="50">
        <label>QSet</label>
      </node>
      <node id="54">
        <label>QSharedDataPointer</label>
      </node>
      <node id="15">
        <label>QSignalSpy</label>
      </node>
      <node id="42">
        <label>QStaticPlugin</label>
      </node>
      <node id="81">
        <label>QString</label>
      </node>
      <node id="61">
        <label>QStringList</label>
      </node>
      <node id="16">
        <label>QTest</label>
      </node>
      <node id="62">
        <label>QTimer</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="55">
        <label>chrono</label>
      </node>
      <node id="84">
        <label>climits</label>
      </node>
      <node id="5">
        <label>config-kwin.h</label>
      </node>
      <node id="51">
        <label>functional</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="13">
        <label>main.h</label>
      </node>
      <node id="70">
        <label>memory</label>
      </node>
      <node id="85">
        <label>netwm_def.h</label>
      </node>
      <node id="18">
        <label>optional</label>
      </node>
      <node id="19">
        <label>qwayland-color-management-v1.h</label>
      </node>
      <node id="20">
        <label>qwayland-cursor-shape-v1.h</label>
      </node>
      <node id="21">
        <label>qwayland-fake-input.h</label>
      </node>
      <node id="22">
        <label>qwayland-fractional-scale-v1.h</label>
      </node>
      <node id="23">
        <label>qwayland-idle-inhibit-unstable-v1.h</label>
      </node>
      <node id="24">
        <label>qwayland-input-method-unstable-v1.h</label>
      </node>
      <node id="25">
        <label>qwayland-kde-output-device-v2.h</label>
      </node>
      <node id="26">
        <label>qwayland-kde-output-management-v2.h</label>
      </node>
      <node id="27">
        <label>qwayland-kde-screen-edge-v1.h</label>
      </node>
      <node id="28">
        <label>qwayland-security-context-v1.h</label>
      </node>
      <node id="29">
        <label>qwayland-text-input-unstable-v3.h</label>
      </node>
      <node id="30">
        <label>qwayland-wlr-layer-shell-unstable-v1.h</label>
      </node>
      <node id="31">
        <label>qwayland-xdg-decoration-unstable-v1.h</label>
      </node>
      <node id="32">
        <label>qwayland-xdg-dialog-v1.h</label>
      </node>
      <node id="33">
        <label>qwayland-xdg-shell.h</label>
      </node>
      <node id="34">
        <label>qwayland-zkde-screencast-unstable-v1.h</label>
      </node>
      <node id="87">
        <label>screenedge_test.moc</label>
      </node>
      <node id="14">
        <label>window.h</label>
      </node>
      <node id="46">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_screen_edge_test" prot="public">ScreenEdgeTest</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="screenedge__test_8cpp_1a6a1d6e1a12975a4e9a0b5b952e79eaad" prot="public" static="no">
        <name>private</name>
        <initializer>public</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/scripting/screenedge_test.cpp" line="17" column="9" bodyfile="kwin/autotests/integration/scripting/screenedge_test.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="screenedge__test_8cpp_1a485d6ddd568caea0908934bfdb9fbadb" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString s_socketName</definition>
        <argsstring></argsstring>
        <name>s_socketName</name>
        <initializer>= QStringLiteral(&quot;wayland_test_kwin_scripting_screenedge-0&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/scripting/screenedge_test.cpp" line="28" column="22" bodyfile="kwin/autotests/integration/scripting/screenedge_test.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2016<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kwin__wayland__test_8h" kindref="compound">kwin_wayland_test.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effectloader_8h" kindref="compound">effect/effectloader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__input_8h" kindref="compound">pointer_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scripting_8h" kindref="compound">scripting/scripting.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland__server_8h" kindref="compound">wayland_server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="screenedge__test_8cpp_1a6a1d6e1a12975a4e9a0b5b952e79eaad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>private<sp/>public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="screenedge_8h" kindref="compound">screenedge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KConfigGroup&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="x11keyread_8cpp_1ac0925a94f4858115ad1f04be885ac3b3" kindref="member">Q_DECLARE_METATYPE</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">KWin::ElectricBorder</ref>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>s_socketName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;wayland_test_kwin_scripting_screenedge-0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_screen_edge_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_screen_edge_test" kindref="compound">ScreenEdgeTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Q_SLOTS:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanup();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testEdge_data();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testEdge();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testTouchEdge_data();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testTouchEdge();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testEdgeUnregister();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testDeclarativeTouchEdge();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>triggerConfigReload();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScreenEdgeTest::initTestCase()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;init(s_socketName));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({QRect(0,<sp/>0,<sp/>1280,<sp/>1024)});</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>config<sp/>to<sp/>have<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>config<sp/>=<sp/>KSharedConfig::openConfig(QString(),<sp/>KConfig::SimpleConfig);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>all<sp/>effects<sp/>to<sp/>prevent<sp/>them<sp/>grabbing<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>KConfigGroup<sp/>plugins(config,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Plugins&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builtinNames<sp/>=<sp/>EffectLoader().listOfKnownEffects();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QString<sp/>name<sp/>:<sp/>builtinNames)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugins.writeEntry(name<sp/>+<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>electric<sp/>border<sp/>pushback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Windows&quot;</highlight><highlight class="normal">)).writeEntry(</highlight><highlight class="stringliteral">&quot;ElectricBorderPushbackPixels&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;group(QStringLiteral(</highlight><highlight class="stringliteral">&quot;TabBox&quot;</highlight><highlight class="normal">)).writeEntry(</highlight><highlight class="stringliteral">&quot;TouchBorderActivate&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a0400ba008d8d9f0d019ec7b76d6efb29" kindref="member">ElectricNone</ref>));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;sync();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;setConfig(config);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;start();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;setTimeThreshold(0ms);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;setReActivationThreshold(0ms);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScreenEdgeTest::init()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">KWin::input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(QPointF(640,<sp/>512));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;showingDesktop())<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a006f0f96142b8ccb882aa05eea0f1a73" kindref="member">slotToggleShowDesktop</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;showingDesktop());</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScreenEdgeTest::cleanup()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>unload<sp/>the<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>scripts<sp/>=<sp/>{QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;./scripts/screenedge.js&quot;</highlight><highlight class="normal">),<sp/>QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;./scripts/screenedgeunregister.js&quot;</highlight><highlight class="normal">),<sp/>QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;./scripts/touchScreenedge.js&quot;</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;script<sp/>:<sp/>scripts)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!script.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;isScriptLoaded(script))<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;unloadScript(script));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTRY_VERIFY(!<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;isScriptLoaded(script));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScreenEdgeTest::testEdge_data()</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;KWin::ElectricBorder&gt;(</highlight><highlight class="stringliteral">&quot;edge&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPoint&gt;(</highlight><highlight class="stringliteral">&quot;triggerPos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Top&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a929278994e070e1f867508f07e3258b8" kindref="member">KWin::ElectricTop</ref><sp/>&lt;&lt;<sp/>QPoint(512,<sp/>0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;TopRight&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a6d7ab73bac857b678bb92c281e2d3572" kindref="member">KWin::ElectricTopRight</ref><sp/>&lt;&lt;<sp/>QPoint(1279,<sp/>0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a93cc1ac713156a4b4de68018f01f30cf" kindref="member">KWin::ElectricRight</ref><sp/>&lt;&lt;<sp/>QPoint(1279,<sp/>512);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;BottomRight&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5acb8c8f58e5e51ecdebbcc5bb68c157b1" kindref="member">KWin::ElectricBottomRight</ref><sp/>&lt;&lt;<sp/>QPoint(1279,<sp/>1023);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Bottom&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a370207e11a2d2e90ec64262effae4953" kindref="member">KWin::ElectricBottom</ref><sp/>&lt;&lt;<sp/>QPoint(512,<sp/>1023);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;BottomLeft&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a201c4b00d53ee2f73816e59198df9c59" kindref="member">KWin::ElectricBottomLeft</ref><sp/>&lt;&lt;<sp/>QPoint(0,<sp/>1023);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5ae5facf4c47b5ddcfc937c8f9974a2b30" kindref="member">KWin::ElectricLeft</ref><sp/>&lt;&lt;<sp/>QPoint(0,<sp/>512);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;TopLeft&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a183f33faf88c2cfa027443ec7ba28823" kindref="member">KWin::ElectricTopLeft</ref><sp/>&lt;&lt;<sp/>QPoint(0,<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>repeat<sp/>a<sp/>row<sp/>to<sp/>show<sp/>previously<sp/>unloading<sp/>and<sp/>re-registering<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Top&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a929278994e070e1f867508f07e3258b8" kindref="member">KWin::ElectricTop</ref><sp/>&lt;&lt;<sp/>QPoint(512,<sp/>0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScreenEdgeTest::testEdge()</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>scriptToLoad<sp/>=<sp/>QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;./scripts/screenedge.js&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!scriptToLoad.isEmpty());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mock<sp/>the<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>config<sp/>=<sp/>kwinApp()-&gt;config();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">KWin::ElectricBorder</ref>,<sp/>edge);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;group(QLatin1String(</highlight><highlight class="stringliteral">&quot;Script-&quot;</highlight><highlight class="normal">)<sp/>+<sp/>scriptToLoad).writeEntry(</highlight><highlight class="stringliteral">&quot;Edge&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(edge));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;sync();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;isScriptLoaded(scriptToLoad));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;<ref refid="class_k_win_1_1_scripting_1adb86674cfb829b7b89bc88556db9a29f" kindref="member">loadScript</ref>(scriptToLoad);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;isScriptLoaded(scriptToLoad));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;<ref refid="class_k_win_1_1_scripting_1a157a8abdd6f6b334e80f9cd2ba697494" kindref="member">findScript</ref>(scriptToLoad);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(s);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>runningChangedSpy(s,<sp/>&amp;<ref refid="class_k_win_1_1_abstract_script_1a34df1d9d42de65f3acc4daa41ded88af" kindref="member">AbstractScript::runningChanged</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;run();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(runningChangedSpy.wait());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(runningChangedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(runningChangedSpy.first().first().toBool(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>triggering<sp/>the<sp/>edge<sp/>will<sp/>result<sp/>in<sp/>show<sp/>desktop<sp/>being<sp/>triggered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>showDesktopSpy(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a683e1ce1a2cb1301a7096a323e2111e2" kindref="member">Workspace::showingDesktopChanged</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trigger<sp/>the<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPoint,<sp/>triggerPos);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">KWin::input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(triggerPos);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(showDesktopSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;showingDesktop());</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScreenEdgeTest::testTouchEdge_data()</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;KWin::ElectricBorder&gt;(</highlight><highlight class="stringliteral">&quot;edge&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPoint&gt;(</highlight><highlight class="stringliteral">&quot;triggerPos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QPoint&gt;(</highlight><highlight class="stringliteral">&quot;motionPos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Top&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a929278994e070e1f867508f07e3258b8" kindref="member">KWin::ElectricTop</ref><sp/>&lt;&lt;<sp/>QPoint(50,<sp/>0)<sp/>&lt;&lt;<sp/>QPoint(50,<sp/>500);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a93cc1ac713156a4b4de68018f01f30cf" kindref="member">KWin::ElectricRight</ref><sp/>&lt;&lt;<sp/>QPoint(1279,<sp/>50)<sp/>&lt;&lt;<sp/>QPoint(500,<sp/>50);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Bottom&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a370207e11a2d2e90ec64262effae4953" kindref="member">KWin::ElectricBottom</ref><sp/>&lt;&lt;<sp/>QPoint(512,<sp/>1023)<sp/>&lt;&lt;<sp/>QPoint(512,<sp/>500);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5ae5facf4c47b5ddcfc937c8f9974a2b30" kindref="member">KWin::ElectricLeft</ref><sp/>&lt;&lt;<sp/>QPoint(0,<sp/>50)<sp/>&lt;&lt;<sp/>QPoint(500,<sp/>50);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>repeat<sp/>a<sp/>row<sp/>to<sp/>show<sp/>previously<sp/>unloading<sp/>and<sp/>re-registering<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::newRow(</highlight><highlight class="stringliteral">&quot;Top&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5a929278994e070e1f867508f07e3258b8" kindref="member">KWin::ElectricTop</ref><sp/>&lt;&lt;<sp/>QPoint(512,<sp/>0)<sp/>&lt;&lt;<sp/>QPoint(512,<sp/>500);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScreenEdgeTest::testTouchEdge()</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>scriptToLoad<sp/>=<sp/>QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;./scripts/touchScreenedge.js&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!scriptToLoad.isEmpty());</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mock<sp/>the<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>config<sp/>=<sp/>kwinApp()-&gt;config();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">KWin::ElectricBorder</ref>,<sp/>edge);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;group(QLatin1String(</highlight><highlight class="stringliteral">&quot;Script-&quot;</highlight><highlight class="normal">)<sp/>+<sp/>scriptToLoad).writeEntry(</highlight><highlight class="stringliteral">&quot;Edge&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(edge));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;sync();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;isScriptLoaded(scriptToLoad));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;<ref refid="class_k_win_1_1_scripting_1adb86674cfb829b7b89bc88556db9a29f" kindref="member">loadScript</ref>(scriptToLoad);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;isScriptLoaded(scriptToLoad));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;<ref refid="class_k_win_1_1_scripting_1a157a8abdd6f6b334e80f9cd2ba697494" kindref="member">findScript</ref>(scriptToLoad);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(s);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>runningChangedSpy(s,<sp/>&amp;<ref refid="class_k_win_1_1_abstract_script_1a34df1d9d42de65f3acc4daa41ded88af" kindref="member">AbstractScript::runningChanged</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;run();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(runningChangedSpy.wait());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(runningChangedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(runningChangedSpy.first().first().toBool(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>triggering<sp/>the<sp/>edge<sp/>will<sp/>result<sp/>in<sp/>show<sp/>desktop<sp/>being<sp/>triggered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>showDesktopSpy(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a683e1ce1a2cb1301a7096a323e2111e2" kindref="member">Workspace::showingDesktopChanged</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trigger<sp/>the<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPoint,<sp/>triggerPos);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">Test::touchDown</ref>(0,<sp/>triggerPos,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QPoint,<sp/>motionPos);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a374744d98acd1329e4133c7ab30a1cb4" kindref="member">Test::touchMotion</ref>(0,<sp/>motionPos,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">Test::touchUp</ref>(0,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(showDesktopSpy.wait());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(showDesktopSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;showingDesktop());</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScreenEdgeTest::triggerConfigReload()</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1ae78f215cb85fe7ea6cadea0067efbc72" kindref="member">slotReconfigure</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScreenEdgeTest::testEdgeUnregister()</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>scriptToLoad<sp/>=<sp/>QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;./scripts/screenedgeunregister.js&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!scriptToLoad.isEmpty());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;<ref refid="class_k_win_1_1_scripting_1adb86674cfb829b7b89bc88556db9a29f" kindref="member">loadScript</ref>(scriptToLoad);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;<ref refid="class_k_win_1_1_scripting_1a157a8abdd6f6b334e80f9cd2ba697494" kindref="member">findScript</ref>(scriptToLoad);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>configGroup<sp/>=<sp/>s-&gt;<ref refid="class_k_win_1_1_abstract_script_1adedebe311021f5d95fe467faeffca8dc" kindref="member">config</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>configGroup.writeEntry(</highlight><highlight class="stringliteral">&quot;Edge&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5ae5facf4c47b5ddcfc937c8f9974a2b30" kindref="member">KWin::ElectricLeft</ref>));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>configGroup.sync();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>triggerPos<sp/>=<sp/>QPoint(0,<sp/>512);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>runningChangedSpy(s,<sp/>&amp;<ref refid="class_k_win_1_1_abstract_script_1a34df1d9d42de65f3acc4daa41ded88af" kindref="member">AbstractScript::runningChanged</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;run();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(runningChangedSpy.wait());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>showDesktopSpy(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a683e1ce1a2cb1301a7096a323e2111e2" kindref="member">Workspace::showingDesktopChanged</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trigger<sp/>the<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">KWin::input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(triggerPos);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(showDesktopSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">KWin::input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(QPointF(500,<sp/>500));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a006f0f96142b8ccb882aa05eea0f1a73" kindref="member">slotToggleShowDesktop</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>showDesktopSpy.clear();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trigger<sp/>again,<sp/>to<sp/>show<sp/>that<sp/>retriggering<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">KWin::input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(triggerPos);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(showDesktopSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">KWin::input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(QPointF(500,<sp/>500));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a006f0f96142b8ccb882aa05eea0f1a73" kindref="member">slotToggleShowDesktop</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>showDesktopSpy.clear();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>the<sp/>script<sp/>unregister<sp/>the<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>configGroup.writeEntry(</highlight><highlight class="stringliteral">&quot;mode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;unregister&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerConfigReload();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">KWin::input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(triggerPos);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(showDesktopSpy.count(),<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>not<sp/>triggered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>the<sp/>script<sp/>to<sp/>unregister<sp/>a<sp/>non-registered<sp/>edge<sp/>to<sp/>prove<sp/>it<sp/>doesn&apos;t<sp/>explode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>triggerConfigReload();</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScreenEdgeTest::testDeclarativeTouchEdge()</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>scriptToLoad<sp/>=<sp/>QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;./scripts/screenedgetouch.qml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!scriptToLoad.isEmpty());</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;loadDeclarativeScript(scriptToLoad)<sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;isScriptLoaded(scriptToLoad));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;<ref refid="class_k_win_1_1_scripting_1a157a8abdd6f6b334e80f9cd2ba697494" kindref="member">findScript</ref>(scriptToLoad);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>runningChangedSpy(s,<sp/>&amp;<ref refid="class_k_win_1_1_abstract_script_1a34df1d9d42de65f3acc4daa41ded88af" kindref="member">AbstractScript::runningChanged</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;run();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>QTRY_COMPARE(runningChangedSpy.count(),<sp/>1);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>showDesktopSpy(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a683e1ce1a2cb1301a7096a323e2111e2" kindref="member">Workspace::showingDesktopChanged</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>the<sp/>edge<sp/>through<sp/>touch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>timestamp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">Test::touchDown</ref>(0,<sp/>QPointF(0,<sp/>50),<sp/>timestamp++);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a374744d98acd1329e4133c7ab30a1cb4" kindref="member">Test::touchMotion</ref>(0,<sp/>QPointF(500,<sp/>50),<sp/>timestamp++);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">Test::touchUp</ref>(0,<sp/>timestamp++);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(showDesktopSpy.wait());</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><ref refid="kwin__wayland__test_8h_1a105fcd0c1d5eb52370ab30db8ad37c4c" kindref="member">WAYLANDTEST_MAIN</ref>(<ref refid="class_screen_edge_test" kindref="compound">ScreenEdgeTest</ref>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;screenedge_test.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="kwin/autotests/integration/scripting/screenedge_test.cpp"/>
  </compounddef>
</doxygen>
