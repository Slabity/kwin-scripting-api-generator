<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="windowthumbnailitem_8cpp" kind="file" language="C++">
    <compoundname>windowthumbnailitem.cpp</compoundname>
    <includes refid="windowthumbnailitem_8h" local="yes">windowthumbnailitem.h</includes>
    <includes local="yes">compositor.h</includes>
    <includes refid="renderbackend_8h" local="yes">core/renderbackend.h</includes>
    <includes refid="rendertarget_8h" local="yes">core/rendertarget.h</includes>
    <includes refid="renderviewport_8h" local="yes">core/renderviewport.h</includes>
    <includes refid="effect_8h" local="yes">effect/effect.h</includes>
    <includes refid="glframebuffer_8h" local="yes">opengl/glframebuffer.h</includes>
    <includes refid="itemrenderer_8h" local="yes">scene/itemrenderer.h</includes>
    <includes refid="windowitem_8h" local="yes">scene/windowitem.h</includes>
    <includes refid="workspacescene_8h" local="yes">scene/workspacescene.h</includes>
    <includes refid="scripting__logging_8h" local="yes">scripting_logging.h</includes>
    <includes local="yes">window.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes refid="gltexture_8h" local="yes">opengl/gltexture.h</includes>
    <includes local="no">QOpenGLContext</includes>
    <includes local="no">QQuickWindow</includes>
    <includes local="no">QRunnable</includes>
    <includes local="no">QSGImageNode</includes>
    <includes local="no">QSGTextureProvider</includes>
    <includes local="yes">moc_windowthumbnailitem.cpp</includes>
    <incdepgraph>
      <node id="9">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>core/renderlayerdelegate.h</label>
        <link refid="renderlayerdelegate_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>core/renderviewport.h</label>
        <link refid="renderviewport_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>effect/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>opengl/glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>scene/item.h</label>
        <link refid="item_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>scene/itemgeometry.h</label>
        <link refid="itemgeometry_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>scene/itemrenderer.h</label>
        <link refid="itemrenderer_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>scene/scene.h</label>
        <link refid="scene_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>scene/windowitem.h</label>
        <link refid="windowitem_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>scene/workspacescene.h</label>
        <link refid="workspacescene_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>scripting_logging.h</label>
        <link refid="scripting__logging_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/scripting/windowthumbnailitem.cpp</label>
        <link refid="windowthumbnailitem_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>windowthumbnailitem.h</label>
        <link refid="windowthumbnailitem_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>KConfigGroup</label>
      </node>
      <node id="62">
        <label>KConfigWatcher</label>
      </node>
      <node id="36">
        <label>KPluginFactory</label>
      </node>
      <node id="37">
        <label>KSharedConfig</label>
      </node>
      <node id="59">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="60">
        <label>QApplication</label>
      </node>
      <node id="24">
        <label>QByteArray</label>
      </node>
      <node id="45">
        <label>QColor</label>
      </node>
      <node id="18">
        <label>QCoreApplication</label>
      </node>
      <node id="64">
        <label>QDBusContext</label>
      </node>
      <node id="65">
        <label>QDataStream</label>
      </node>
      <node id="27">
        <label>QDebug</label>
      </node>
      <node id="76">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="19">
        <label>QImage</label>
      </node>
      <node id="25">
        <label>QList</label>
      </node>
      <node id="54">
        <label>QLoggingCategory</label>
      </node>
      <node id="11">
        <label>QMatrix4x4</label>
      </node>
      <node id="22">
        <label>QObject</label>
      </node>
      <node id="77">
        <label>QOpenGLContext</label>
      </node>
      <node id="20">
        <label>QPoint</label>
      </node>
      <node id="30">
        <label>QPointer</label>
      </node>
      <node id="61">
        <label>QProcessEnvironment</label>
      </node>
      <node id="3">
        <label>QQuickItem</label>
      </node>
      <node id="78">
        <label>QQuickWindow</label>
      </node>
      <node id="28">
        <label>QRect</label>
      </node>
      <node id="33">
        <label>QRectF</label>
      </node>
      <node id="34">
        <label>QRegion</label>
      </node>
      <node id="79">
        <label>QRunnable</label>
      </node>
      <node id="80">
        <label>QSGImageNode</label>
      </node>
      <node id="81">
        <label>QSGTextureProvider</label>
      </node>
      <node id="26">
        <label>QSize</label>
      </node>
      <node id="39">
        <label>QStack</label>
      </node>
      <node id="71">
        <label>QString</label>
      </node>
      <node id="66">
        <label>QStringList</label>
      </node>
      <node id="67">
        <label>QTimer</label>
      </node>
      <node id="48">
        <label>QTransform</label>
      </node>
      <node id="4">
        <label>QUuid</label>
      </node>
      <node id="21">
        <label>QVariant</label>
      </node>
      <node id="12">
        <label>QVector2D</label>
      </node>
      <node id="52">
        <label>chrono</label>
      </node>
      <node id="72">
        <label>climits</label>
      </node>
      <node id="6">
        <label>compositor.h</label>
      </node>
      <node id="17">
        <label>config-kwin.h</label>
      </node>
      <node id="5">
        <label>epoxy/gl.h</label>
      </node>
      <node id="74">
        <label>functional</label>
      </node>
      <node id="13">
        <label>kwin_export.h</label>
      </node>
      <node id="31">
        <label>memory</label>
      </node>
      <node id="82">
        <label>moc_windowthumbnailitem.cpp</label>
      </node>
      <node id="73">
        <label>netwm_def.h</label>
      </node>
      <node id="10">
        <label>optional</label>
      </node>
      <node id="46">
        <label>ranges</label>
      </node>
      <node id="47">
        <label>span</label>
      </node>
      <node id="55">
        <label>window.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_thumbnail_texture_provider" prot="public">KWin::ThumbnailTextureProvider</innerclass>
    <innerclass refid="class_k_win_1_1_thumbnail_texture_provider_cleanup_job" prot="public">KWin::ThumbnailTextureProviderCleanupJob</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2011<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>David<sp/>Edmundson<sp/>&lt;davidedmundson@kde.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="windowthumbnailitem_8h" kindref="compound">windowthumbnailitem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compositor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderbackend_8h" kindref="compound">core/renderbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rendertarget_8h" kindref="compound">core/rendertarget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderviewport_8h" kindref="compound">core/renderviewport.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effect_8h" kindref="compound">effect/effect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glframebuffer_8h" kindref="compound">opengl/glframebuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="itemrenderer_8h" kindref="compound">scene/itemrenderer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="windowitem_8h" kindref="compound">scene/windowitem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspacescene_8h" kindref="compound">scene/workspacescene.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scripting__logging_8h" kindref="compound">scripting_logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gltexture_8h" kindref="compound">opengl/gltexture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QOpenGLContext&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QQuickWindow&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QRunnable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSGImageNode&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSGTextureProvider&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useGlThumbnails()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>qtQuickIsSoftware<sp/>=<sp/>QStringList({QStringLiteral(</highlight><highlight class="stringliteral">&quot;software&quot;</highlight><highlight class="normal">),<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;softwarecontext&quot;</highlight><highlight class="normal">)}).contains(QQuickWindow::sceneGraphBackend());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>()-&gt;<ref refid="class_k_win_1_1_compositor_1a7dfc838e5a8eb0a42d1e1007cd9c2b76" kindref="member">backend</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>()-&gt;<ref refid="class_k_win_1_1_compositor_1a7dfc838e5a8eb0a42d1e1007cd9c2b76" kindref="member">backend</ref>()-&gt;<ref refid="class_k_win_1_1_render_backend_1a84af4f818dd7b805d02ce523b8a5e7bc" kindref="member">compositingType</ref>()<sp/>==<sp/><ref refid="namespace_k_win_1aa1e33474a7077a13169f350a5949a79aa9d91b030a3a42dc544de4de6f0d46b1d" kindref="member">OpenGLCompositing</ref><sp/>&amp;&amp;<sp/>!qtQuickIsSoftware;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_k_win_1_1_window_thumbnail_source_1a30a7aff4ae58e654a9cc15c05db5e375" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window_thumbnail_source_1a30a7aff4ae58e654a9cc15c05db5e375" kindref="member">WindowThumbnailSource::WindowThumbnailSource</ref>(QQuickWindow<sp/>*view,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_view(view)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_handle(handle)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(handle,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_thumbnail_source_1a2cabeeae211877607e43cf8c5466fe14" kindref="member">changed</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(handle,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ad783ee7d4155cdd17ee6ca4138038b87" kindref="member">Window::damaged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_thumbnail_source_1a2cabeeae211877607e43cf8c5466fe14" kindref="member">changed</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>()-&gt;scene(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_scene_1ab48d5722a8b0b12c32d006791dbc15aa" kindref="member">WorkspaceScene::preFrameRender</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;WindowThumbnailSource::update);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>m_handle-&gt;refOffscreenRendering();</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_k_win_1_1_window_thumbnail_source_1a1426a798ccf7792724a5ce3d07313229" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window_thumbnail_source_1a1426a798ccf7792724a5ce3d07313229" kindref="member">WindowThumbnailSource::~WindowThumbnailSource</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_handle)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_handle-&gt;unrefOffscreenRendering();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_offscreenTexture)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!QOpenGLContext::currentContext())<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>()-&gt;<ref refid="class_k_win_1_1_compositor_1a42a38d690d77c464869c520189c99904" kindref="member">scene</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_scene_1a2f1a696b3c4f2a1bc4a73611f828491b" kindref="member">makeOpenGLContextCurrent</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>m_offscreenTarget.reset();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>m_offscreenTexture.reset();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_acquireFence)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteSync(m_acquireFence);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_acquireFence<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_k_win_1_1_window_thumbnail_source_1ad1493744b97a33e8799d3ba9b9cdff0b" refkind="member"><highlight class="normal">std::shared_ptr&lt;WindowThumbnailSource&gt;<sp/><ref refid="class_k_win_1_1_window_thumbnail_source_1ad1493744b97a33e8799d3ba9b9cdff0b" kindref="member">WindowThumbnailSource::getOrCreate</ref>(QQuickWindow<sp/>*window,<sp/><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">WindowThumbnailSourceKey<sp/>=<sp/>std::pair&lt;QQuickWindow<sp/>*,<sp/>Window<sp/>*&gt;;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WindowThumbnailSourceKey<sp/>key{window,<sp/>handle};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;WindowThumbnailSourceKey,<sp/>std::weak_ptr&lt;WindowThumbnailSource&gt;&gt;<sp/>sources;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;source<sp/>=<sp/>sources[key];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!source.expired())<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>source.lock();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>std::make_shared&lt;WindowThumbnailSource&gt;(window,<sp/>handle);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(handle,<sp/>&amp;Window::destroyed,<sp/>[key]()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sources.erase(key);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(window,<sp/>&amp;QQuickWindow::destroyed,<sp/>[key]()<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sources.erase(key);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_k_win_1_1_window_thumbnail_source_1a2c56adb9a476e9215ed736dfe5cd236e" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_window_thumbnail_source_1_1_frame" kindref="compound">WindowThumbnailSource::Frame</ref><sp/><ref refid="class_k_win_1_1_window_thumbnail_source_1a2c56adb9a476e9215ed736dfe5cd236e" kindref="member">WindowThumbnailSource::acquire</ref>()</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_window_thumbnail_source_1_1_frame" kindref="compound">Frame</ref>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.texture<sp/>=<sp/>m_offscreenTexture,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fence<sp/>=<sp/>std::exchange(m_acquireFence,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WindowThumbnailSource::update()</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_acquireFence<sp/>||<sp/>!m_dirty<sp/>||<sp/>!m_handle)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_view);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>geometry<sp/>=<sp/>m_handle-&gt;visibleGeometry();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>devicePixelRatio<sp/>=<sp/>m_view-&gt;devicePixelRatio();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>textureSize<sp/>=<sp/>geometry.toAlignedRect().size()<sp/>*<sp/>devicePixelRatio;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_offscreenTexture<sp/>||<sp/>m_offscreenTexture-&gt;size()<sp/>!=<sp/>textureSize)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_offscreenTexture<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a22b5bb33ada7c4b53f73c57f5405289f" kindref="member">GLTexture::allocate</ref>(GL_RGBA8,<sp/>textureSize);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_offscreenTexture)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_offscreenTexture-&gt;setContentTransform(<ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a16cbb90948f3bcab5a9ea45724e0ca17" kindref="member">OutputTransform::FlipY</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_offscreenTexture-&gt;setFilter(GL_LINEAR);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_offscreenTexture-&gt;setWrapMode(GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_offscreenTarget<sp/>=<sp/>std::make_unique&lt;GLFramebuffer&gt;(m_offscreenTexture.get());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderTarget<sp/>offscreenRenderTarget(m_offscreenTarget.get());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>RenderViewport<sp/>offscreenViewport(geometry,<sp/>devicePixelRatio,<sp/>offscreenRenderTarget);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a7eb3049da73a065dcf8ff137fd9b5e3f" kindref="member">GLFramebuffer::pushFramebuffer</ref>(m_offscreenTarget.get());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>glClearColor(0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>thumbnail<sp/>must<sp/>be<sp/>rendered<sp/>using<sp/>kwin&apos;s<sp/>opengl<sp/>context<sp/>as<sp/>VAOs<sp/>are<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shared<sp/>across<sp/>contexts.<sp/>Unfortunately,<sp/>this<sp/>also<sp/>introduces<sp/>a<sp/>latency<sp/>of<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>frame,<sp/>which<sp/>is<sp/>not<sp/>ideal,<sp/>but<sp/>it<sp/>is<sp/>acceptable<sp/>for<sp/>things<sp/>such<sp/>as<sp/>thumbnails.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/><ref refid="class_k_win_1_1_scene_1a3a01125b0e9a25abdd13bb4a4ab1287eaff3757651aac719a5d50361799c21750" kindref="member">Scene::PAINT_WINDOW_TRANSFORMED</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>()-&gt;<ref refid="class_k_win_1_1_compositor_1a42a38d690d77c464869c520189c99904" kindref="member">scene</ref>()-&gt;<ref refid="class_k_win_1_1_scene_1acfa97f94e5f1b3a91f94f813d437388c" kindref="member">renderer</ref>()-&gt;<ref refid="class_k_win_1_1_item_renderer_1ab9c99d20822bb966d02f42937fd7b784" kindref="member">renderItem</ref>(offscreenRenderTarget,<sp/>offscreenViewport,<sp/>m_handle-&gt;windowItem(),<sp/>mask,<sp/><ref refid="namespace_k_win_1a0655524c1f1ba8dbb2cf16a1e4b9bb97" kindref="member">infiniteRegion</ref>(),<sp/>WindowPaintData{});</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a3f7265ef927c8b0ab82728c5118c7bed" kindref="member">GLFramebuffer::popFramebuffer</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>fence<sp/>is<sp/>needed<sp/>to<sp/>avoid<sp/>the<sp/>case<sp/>where<sp/>qtquick<sp/>renderer<sp/>starts<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>texture<sp/>while<sp/>all<sp/>rendering<sp/>commands<sp/>to<sp/>it<sp/>haven&apos;t<sp/>completed<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>m_acquireFence<sp/>=<sp/>glFenceSync(GL_SYNC_GPU_COMMANDS_COMPLETE,<sp/>0);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_thumbnail_source_1a2cabeeae211877607e43cf8c5466fe14" kindref="member">changed</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_k_win_1_1_thumbnail_texture_provider" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_thumbnail_texture_provider_1ada818a48c829c8c5ea0172fb402bb287" kindref="member">ThumbnailTextureProvider</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QSGTextureProvider</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_thumbnail_texture_provider_1ada818a48c829c8c5ea0172fb402bb287" kindref="member">ThumbnailTextureProvider</ref>(QQuickWindow<sp/>*window);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>QSGTexture<sp/>*<ref refid="class_k_win_1_1_thumbnail_texture_provider_1aa04f83e96a40e3f05580badf66a6f6d7" kindref="member">texture</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_thumbnail_texture_provider_1a8e076cd882698bf6924ecb8c74c1fc28" kindref="member">setTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;GLTexture&gt;<sp/>&amp;nativeTexture);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_thumbnail_texture_provider_1a8e076cd882698bf6924ecb8c74c1fc28" kindref="member">setTexture</ref>(QSGTexture<sp/>*<ref refid="class_k_win_1_1_thumbnail_texture_provider_1aa04f83e96a40e3f05580badf66a6f6d7" kindref="member">texture</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>QQuickWindow<sp/>*m_window;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;GLTexture&gt;<sp/>m_nativeTexture;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;QSGTexture&gt;<sp/>m_texture;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="class_k_win_1_1_thumbnail_texture_provider_1ada818a48c829c8c5ea0172fb402bb287" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_thumbnail_texture_provider_1ada818a48c829c8c5ea0172fb402bb287" kindref="member">ThumbnailTextureProvider::ThumbnailTextureProvider</ref>(QQuickWindow<sp/>*window)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_window(window)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_k_win_1_1_thumbnail_texture_provider_1aa04f83e96a40e3f05580badf66a6f6d7" refkind="member"><highlight class="normal">QSGTexture<sp/>*<ref refid="class_k_win_1_1_thumbnail_texture_provider_1aa04f83e96a40e3f05580badf66a6f6d7" kindref="member">ThumbnailTextureProvider::texture</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="175"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_texture.get();</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_k_win_1_1_thumbnail_texture_provider_1a8e076cd882698bf6924ecb8c74c1fc28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_thumbnail_texture_provider_1a8e076cd882698bf6924ecb8c74c1fc28" kindref="member">ThumbnailTextureProvider::setTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;GLTexture&gt;<sp/>&amp;nativeTexture)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nativeTexture<sp/>!=<sp/>nativeTexture)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>textureId<sp/>=<sp/>nativeTexture-&gt;texture();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nativeTexture<sp/>=<sp/>nativeTexture;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture.reset(QNativeInterface::QSGOpenGLTexture::fromNative(textureId,<sp/>m_window,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nativeTexture-&gt;size(),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QQuickWindow::TextureHasAlphaChannel));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture-&gt;setFiltering(QSGTexture::Linear);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture-&gt;setHorizontalWrapMode(QSGTexture::ClampToEdge);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture-&gt;setVerticalWrapMode(QSGTexture::ClampToEdge);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>textureChanged<sp/>signal<sp/>must<sp/>be<sp/>emitted<sp/>also<sp/>if<sp/>only<sp/>texture<sp/>data<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/>textureChanged();</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="class_k_win_1_1_thumbnail_texture_provider_1a1f132afc29b185d532849fa6ed914576" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_thumbnail_texture_provider_1a8e076cd882698bf6924ecb8c74c1fc28" kindref="member">ThumbnailTextureProvider::setTexture</ref>(QSGTexture<sp/>*<ref refid="class_k_win_1_1_thumbnail_texture_provider_1aa04f83e96a40e3f05580badf66a6f6d7" kindref="member">texture</ref>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nativeTexture<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>m_texture.reset(<ref refid="class_k_win_1_1_thumbnail_texture_provider_1aa04f83e96a40e3f05580badf66a6f6d7" kindref="member">texture</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/>textureChanged();</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_k_win_1_1_thumbnail_texture_provider_cleanup_job" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_thumbnail_texture_provider_cleanup_job_1af4c67efb10a931c33827f8f1e82d154b" kindref="member">ThumbnailTextureProviderCleanupJob</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QRunnable</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206" refid="class_k_win_1_1_thumbnail_texture_provider_cleanup_job_1af4c67efb10a931c33827f8f1e82d154b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_thumbnail_texture_provider_cleanup_job_1af4c67efb10a931c33827f8f1e82d154b" kindref="member">ThumbnailTextureProviderCleanupJob</ref>(<ref refid="class_k_win_1_1_thumbnail_texture_provider" kindref="compound">ThumbnailTextureProvider</ref><sp/>*provider)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_provider(provider)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_k_win_1_1_thumbnail_texture_provider_cleanup_job_1a61b40c89889c1ab5bb538f810a5bfb0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_thumbnail_texture_provider_cleanup_job_1a61b40c89889c1ab5bb538f810a5bfb0e" kindref="member">run</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="212"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_provider.reset();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ThumbnailTextureProvider&gt;<sp/>m_provider;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><ref refid="class_k_win_1_1_window_thumbnail_item_1ab574c9ee0d77683da19b46920ae42ff8" kindref="member">WindowThumbnailItem::WindowThumbnailItem</ref>(QQuickItem<sp/>*parent)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QQuickItem(parent)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>setFlag(ItemHasContents);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_compositor_1a339b45ef1f23460988c64545f71a8b68" kindref="member">Compositor::aboutToToggleCompositing</ref>,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;WindowThumbnailItem::resetSource);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_compositor_1aec1859708602d6270fb960c919a23cd7" kindref="member">Compositor::self</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_compositor_1a04c48b6cdd3fee5e2999b6d95af41ab1" kindref="member">Compositor::compositingToggled</ref>,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;WindowThumbnailItem::updateSource);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="class_k_win_1_1_window_thumbnail_item_1a79af69c5b78129e9aa075acebd5ea2b1" kindref="member">WindowThumbnailItem::~WindowThumbnailItem</ref>()</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_provider)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window())<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window()-&gt;scheduleRenderJob(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ThumbnailTextureProviderCleanupJob(m_provider),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QQuickWindow::AfterSynchronizingStage);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_SCRIPTING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>destroy<sp/>thumbnail<sp/>texture<sp/>provider<sp/>because<sp/>window<sp/>is<sp/>null&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="class_k_win_1_1_window_thumbnail_item_1a99042a9c94e654243a9a45a18b223a65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1a99042a9c94e654243a9a45a18b223a65" kindref="member">WindowThumbnailItem::releaseResources</ref>()</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_provider)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window()-&gt;scheduleRenderJob(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_thumbnail_texture_provider_cleanup_job" kindref="compound">ThumbnailTextureProviderCleanupJob</ref>(m_provider),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QQuickWindow::AfterSynchronizingStage);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_provider<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="class_k_win_1_1_window_thumbnail_item_1ae030f8c72395f032d20de1346ae53488" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1ae030f8c72395f032d20de1346ae53488" kindref="member">WindowThumbnailItem::itemChange</ref>(QQuickItem::ItemChange<sp/>change,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QQuickItem::ItemChangeData<sp/>&amp;value)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(change<sp/>==<sp/>QQuickItem::ItemSceneChange)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateSource();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>QQuickItem::itemChange(change,<sp/>value);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="class_k_win_1_1_window_thumbnail_item_1a764a83b2ecb7c438a11405f8ed06f00e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1a764a83b2ecb7c438a11405f8ed06f00e" kindref="member">WindowThumbnailItem::isTextureProvider</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="261"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_k_win_1_1_window_thumbnail_item_1a70aa50bb23ee3e597a2a06b6cfc35d92" refkind="member"><highlight class="normal">QSGTextureProvider<sp/>*<ref refid="class_k_win_1_1_window_thumbnail_item_1a70aa50bb23ee3e597a2a06b6cfc35d92" kindref="member">WindowThumbnailItem::textureProvider</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="266"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QQuickItem::isTextureProvider())<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QQuickItem::textureProvider();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_provider)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_provider<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_thumbnail_texture_provider" kindref="compound">ThumbnailTextureProvider</ref>(window());</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_provider;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WindowThumbnailItem::resetSource()</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>m_source.reset();</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WindowThumbnailItem::updateSource()</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useGlThumbnails()<sp/>&amp;&amp;<sp/>window()<sp/>&amp;&amp;<sp/>m_client)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_source<sp/>=<sp/><ref refid="class_k_win_1_1_window_thumbnail_source_1ad1493744b97a33e8799d3ba9b9cdff0b" kindref="member">WindowThumbnailSource::getOrCreate</ref>(window(),<sp/>m_client);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(m_source.get(),<sp/>&amp;<ref refid="class_k_win_1_1_window_thumbnail_source_1a2cabeeae211877607e43cf8c5466fe14" kindref="member">WindowThumbnailSource::changed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;WindowThumbnailItem::update);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_source.reset();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="class_k_win_1_1_window_thumbnail_item_1a0fdf0d141728aca138225f0de3afadfe" refkind="member"><highlight class="normal">QSGNode<sp/>*<ref refid="class_k_win_1_1_window_thumbnail_item_1a27e840180f3036db1e89af7339439a4e" kindref="member">WindowThumbnailItem::updatePaintNode</ref>(QSGNode<sp/>*oldNode,<sp/>QQuickItem::UpdatePaintNodeData<sp/>*)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_source)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oldNode;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[texture,<sp/>acquireFence]<sp/>=<sp/>m_source-&gt;acquire();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!texture)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oldNode;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>rendering<sp/>commands<sp/>to<sp/>the<sp/>offscreen<sp/>texture<sp/>complete<sp/>if<sp/>there<sp/>are<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acquireFence)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glWaitSync(acquireFence,<sp/>0,<sp/>GL_TIMEOUT_IGNORED);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteSync(acquireFence);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_provider)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_provider<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_thumbnail_texture_provider" kindref="compound">ThumbnailTextureProvider</ref>(window());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>m_provider-&gt;setTexture(texture);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>QSGImageNode<sp/>*node<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">QSGImageNode<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(oldNode);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>window()-&gt;createImageNode();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;setFiltering(QSGTexture::Linear);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;setTexture(m_provider-&gt;texture());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;setTextureCoordinatesTransform(QSGImageNode::NoTransform);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;setRect(paintedRect());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">QUuid<sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1abc8092fce882520b61569642548df26d" kindref="member">WindowThumbnailItem::wId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="326"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wId;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="class_k_win_1_1_window_thumbnail_item_1a02b59af902f710349efb6ed970c22a04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1a22e4c8c627e7f20d7ea96fb5cda143c3" kindref="member">WindowThumbnailItem::setWId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QUuid<sp/>&amp;<ref refid="class_k_win_1_1_window_thumbnail_item_1abc8092fce882520b61569642548df26d" kindref="member">wId</ref>)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_wId<sp/>==<sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1abc8092fce882520b61569642548df26d" kindref="member">wId</ref>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wId<sp/>=<sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1abc8092fce882520b61569642548df26d" kindref="member">wId</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_wId.isNull())<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1ac1c9c9f60f250dc8f3f4918a912f2f9a" kindref="member">setClient</ref>(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;findWindow(<ref refid="class_k_win_1_1_window_thumbnail_item_1abc8092fce882520b61569642548df26d" kindref="member">wId</ref>));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_client)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_client<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateSource();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateImplicitSize();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1af4305d6d2e5cd4cf71fd3def0ad296cb" kindref="member">clientChanged</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1a7118696c1ea208bd5d84e306dfa33897" kindref="member">wIdChanged</ref>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="class_k_win_1_1_window_thumbnail_item_1abccdbd60ae9035061dae6b6b7fe301e6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_window_thumbnail_item_1adcaa7f8a67c5a29984e416a75b21b5b1" kindref="member">WindowThumbnailItem::client</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="349"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_client;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="class_k_win_1_1_window_thumbnail_item_1ac1c9c9f60f250dc8f3f4918a912f2f9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1ac1c9c9f60f250dc8f3f4918a912f2f9a" kindref="member">WindowThumbnailItem::setClient</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="class_k_win_1_1_window_thumbnail_item_1adcaa7f8a67c5a29984e416a75b21b5b1" kindref="member">client</ref>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_client<sp/>==<sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1adcaa7f8a67c5a29984e416a75b21b5b1" kindref="member">client</ref>)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_client)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(m_client,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;WindowThumbnailItem::updateImplicitSize);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>m_client<sp/>=<sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1adcaa7f8a67c5a29984e416a75b21b5b1" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_client)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(m_client,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;WindowThumbnailItem::updateImplicitSize);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1a22e4c8c627e7f20d7ea96fb5cda143c3" kindref="member">setWId</ref>(m_client-&gt;internalId());</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1a22e4c8c627e7f20d7ea96fb5cda143c3" kindref="member">setWId</ref>(QUuid());</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>updateSource();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>updateImplicitSize();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_window_thumbnail_item_1af4305d6d2e5cd4cf71fd3def0ad296cb" kindref="member">clientChanged</ref>();</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WindowThumbnailItem::updateImplicitSize()</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>frameSize;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_client)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameSize<sp/>=<sp/>m_client-&gt;frameGeometry().toAlignedRect().size();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>setImplicitSize(frameSize.width(),<sp/>frameSize.height());</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">QImage<sp/>WindowThumbnailItem::fallbackImage()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="385"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_client)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_client-&gt;icon().pixmap(window(),<sp/>boundingRect().size().toSize()).toImage();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QImage();</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">QRectF<sp/>WindowThumbnailItem::paintedRect()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="393"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_client)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRectF();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>visibleGeometry<sp/>=<sp/>m_client-&gt;visibleGeometry();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>frameGeometry<sp/>=<sp/>m_client-&gt;frameGeometry();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSizeF<sp/>scaled<sp/>=<sp/>QSizeF(frameGeometry.size()).scaled(boundingRect().size(),<sp/>Qt::KeepAspectRatio);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>xScale<sp/>=<sp/>scaled.width()<sp/>/<sp/>frameGeometry.width();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>yScale<sp/>=<sp/>scaled.height()<sp/>/<sp/>frameGeometry.height();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>paintedRect(boundingRect().x()<sp/>+<sp/>(boundingRect().width()<sp/>-<sp/>scaled.width())<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundingRect().y()<sp/>+<sp/>(boundingRect().height()<sp/>-<sp/>scaled.height())<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visibleGeometry.width()<sp/>*<sp/>xScale,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visibleGeometry.height()<sp/>*<sp/>yScale);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>paintedRect.moveLeft(paintedRect.x()<sp/>+<sp/>(visibleGeometry.x()<sp/>-<sp/>frameGeometry.x())<sp/>*<sp/>xScale);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>paintedRect.moveTop(paintedRect.y()<sp/>+<sp/>(visibleGeometry.y()<sp/>-<sp/>frameGeometry.y())<sp/>*<sp/>yScale);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paintedRect;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_windowthumbnailitem.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/scripting/windowthumbnailitem.cpp"/>
  </compounddef>
</doxygen>
