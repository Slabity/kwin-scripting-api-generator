<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="renderviewport_8cpp" kind="file" language="C++">
    <compoundname>renderviewport.cpp</compoundname>
    <includes refid="renderviewport_8h" local="yes">core/renderviewport.h</includes>
    <includes refid="pixelgrid_8h" local="yes">core/pixelgrid.h</includes>
    <includes refid="rendertarget_8h" local="yes">core/rendertarget.h</includes>
    <includes refid="globals_8h" local="yes">effect/globals.h</includes>
    <incdepgraph>
      <node id="15">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>core/pixelgrid.h</label>
        <link refid="pixelgrid_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/core/renderviewport.cpp</label>
        <link refid="renderviewport_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/renderviewport.h</label>
        <link refid="renderviewport_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>QByteArray</label>
      </node>
      <node id="8">
        <label>QCoreApplication</label>
      </node>
      <node id="21">
        <label>QDebug</label>
      </node>
      <node id="9">
        <label>QImage</label>
      </node>
      <node id="19">
        <label>QList</label>
      </node>
      <node id="17">
        <label>QMatrix4x4</label>
      </node>
      <node id="13">
        <label>QObject</label>
      </node>
      <node id="10">
        <label>QPoint</label>
      </node>
      <node id="27">
        <label>QPointF</label>
      </node>
      <node id="22">
        <label>QRect</label>
      </node>
      <node id="24">
        <label>QRectF</label>
      </node>
      <node id="25">
        <label>QRegion</label>
      </node>
      <node id="20">
        <label>QSize</label>
      </node>
      <node id="23">
        <label>QUuid</label>
      </node>
      <node id="11">
        <label>QVariant</label>
      </node>
      <node id="12">
        <label>QVector2D</label>
      </node>
      <node id="7">
        <label>config-kwin.h</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="16">
        <label>optional</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderviewport_8h" kindref="compound">core/renderviewport.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pixelgrid_8h" kindref="compound">core/pixelgrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rendertarget_8h" kindref="compound">core/rendertarget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">effect/globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>createProjectionMatrix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;renderTarget,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>ret;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.scale(1,<sp/>-1);<sp/></highlight><highlight class="comment">//<sp/>flip<sp/>the<sp/>y<sp/>axis<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>*=<sp/>renderTarget.transform().toMatrix();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.scale(1,<sp/>-1);<sp/></highlight><highlight class="comment">//<sp/>undo<sp/>ortho()<sp/>flipping<sp/>the<sp/>y<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.ortho(rect);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_k_win_1_1_render_viewport_1a5b1460f9dd0f0c0f98e00e99ae4cd9c5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_render_viewport_1a5b1460f9dd0f0c0f98e00e99ae4cd9c5" kindref="member">RenderViewport::RenderViewport</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;<ref refid="class_k_win_1_1_render_viewport_1acfce0ac88a0af475daceb3a87544d464" kindref="member">renderRect</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_viewport_1aa06db1277771d5021b3e7be43de747f3" kindref="member">scale</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;renderTarget)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_transform(renderTarget.transform())</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_transformBounds(m_transform.map(renderTarget.size()))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_renderRect(<ref refid="class_k_win_1_1_render_viewport_1acfce0ac88a0af475daceb3a87544d464" kindref="member">renderRect</ref>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_deviceRenderRect(<ref refid="namespace_k_win_1aa1b95aced41e7391cc9ef85da08a95ae" kindref="member">snapToPixelGrid</ref>(<ref refid="namespace_k_win_1ad2cb4485a63133f92ea417a626f28b6e" kindref="member">scaledRect</ref>(<ref refid="class_k_win_1_1_render_viewport_1acfce0ac88a0af475daceb3a87544d464" kindref="member">renderRect</ref>,<sp/><ref refid="class_k_win_1_1_render_viewport_1aa06db1277771d5021b3e7be43de747f3" kindref="member">scale</ref>)))</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_projectionMatrix(createProjectionMatrix(renderTarget,<sp/>m_deviceRenderRect))</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_scale(<ref refid="class_k_win_1_1_render_viewport_1aa06db1277771d5021b3e7be43de747f3" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_k_win_1_1_render_viewport_1a57942b073324499fae7848baf801d9a5" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_render_viewport_1a57942b073324499fae7848baf801d9a5" kindref="member">RenderViewport::projectionMatrix</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="37"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_projectionMatrix;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_k_win_1_1_render_viewport_1acfce0ac88a0af475daceb3a87544d464" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_render_viewport_1acfce0ac88a0af475daceb3a87544d464" kindref="member">RenderViewport::renderRect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="42"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_renderRect;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_k_win_1_1_render_viewport_1aa06db1277771d5021b3e7be43de747f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_viewport_1aa06db1277771d5021b3e7be43de747f3" kindref="member">RenderViewport::scale</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="47"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_scale;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_k_win_1_1_render_viewport_1adb90b7fe02d43db769e9aa33dcb110eb" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_render_viewport_1adb90b7fe02d43db769e9aa33dcb110eb" kindref="member">RenderViewport::mapToRenderTarget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;logicalGeometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="52"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>deviceGeometry<sp/>=<sp/><ref refid="namespace_k_win_1ad2cb4485a63133f92ea417a626f28b6e" kindref="member">scaledRect</ref>(logicalGeometry,<sp/>m_scale)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.translated(-m_deviceRenderRect.topLeft());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_transform.map(deviceGeometry,<sp/>m_transformBounds);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_k_win_1_1_render_viewport_1aad3fd13adae15eaec20a4f3e5892b849" refkind="member"><highlight class="normal">QRect<sp/><ref refid="class_k_win_1_1_render_viewport_1adb90b7fe02d43db769e9aa33dcb110eb" kindref="member">RenderViewport::mapToRenderTarget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;logicalGeometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="59"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>deviceGeometry<sp/>=<sp/><ref refid="namespace_k_win_1aa1b95aced41e7391cc9ef85da08a95ae" kindref="member">snapToPixelGrid</ref>(<ref refid="namespace_k_win_1ad2cb4485a63133f92ea417a626f28b6e" kindref="member">scaledRect</ref>(logicalGeometry,<sp/>m_scale))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.translated(-m_deviceRenderRect.topLeft());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_transform.map(deviceGeometry,<sp/>m_transformBounds);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_k_win_1_1_render_viewport_1a4f3220623ddfba553806dab5d5ccb9de" refkind="member"><highlight class="normal">QPoint<sp/><ref refid="class_k_win_1_1_render_viewport_1adb90b7fe02d43db769e9aa33dcb110eb" kindref="member">RenderViewport::mapToRenderTarget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;logicalGeometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="66"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>devicePoint<sp/>=<sp/><ref refid="namespace_k_win_1aa1b95aced41e7391cc9ef85da08a95ae" kindref="member">snapToPixelGrid</ref>(QPointF(logicalGeometry)<sp/>*<sp/>m_scale)<sp/>-<sp/>m_deviceRenderRect.topLeft();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_transform.map(devicePoint,<sp/>m_transformBounds);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_k_win_1_1_render_viewport_1a8fc2839496a9dbe63c8b81157deee23c" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_render_viewport_1adb90b7fe02d43db769e9aa33dcb110eb" kindref="member">RenderViewport::mapToRenderTarget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;logicalGeometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>devicePoint<sp/>=<sp/>logicalGeometry<sp/>*<sp/>m_scale<sp/>-<sp/>m_deviceRenderRect.topLeft();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_transform.map(devicePoint,<sp/>m_transformBounds);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_k_win_1_1_render_viewport_1ad573e58e69a1df78f70d5e76f0cdea2d" refkind="member"><highlight class="normal">QRegion<sp/><ref refid="class_k_win_1_1_render_viewport_1adb90b7fe02d43db769e9aa33dcb110eb" kindref="member">RenderViewport::mapToRenderTarget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;logicalGeometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="78"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>ret;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;rect<sp/>:<sp/>logicalGeometry)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/><ref refid="class_k_win_1_1_render_viewport_1adb90b7fe02d43db769e9aa33dcb110eb" kindref="member">mapToRenderTarget</ref>(rect);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_k_win_1_1_render_viewport_1a464ad286bc61f61933405ab05759bf1b" refkind="member"><highlight class="normal">QRectF<sp/><ref refid="class_k_win_1_1_render_viewport_1a464ad286bc61f61933405ab05759bf1b" kindref="member">RenderViewport::mapToRenderTargetTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;logicalGeometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad2cb4485a63133f92ea417a626f28b6e" kindref="member">scaledRect</ref>(logicalGeometry,<sp/>m_scale)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.translated(-m_deviceRenderRect.topLeft());</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_k_win_1_1_render_viewport_1ae7ef31c65e4448dbf77f69c2eeba4f4e" refkind="member"><highlight class="normal">QRect<sp/><ref refid="class_k_win_1_1_render_viewport_1a464ad286bc61f61933405ab05759bf1b" kindref="member">RenderViewport::mapToRenderTargetTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;logicalGeometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="93"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aa1b95aced41e7391cc9ef85da08a95ae" kindref="member">snapToPixelGrid</ref>(<ref refid="namespace_k_win_1ad2cb4485a63133f92ea417a626f28b6e" kindref="member">scaledRect</ref>(logicalGeometry,<sp/>m_scale))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.translated(-m_deviceRenderRect.topLeft());</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_k_win_1_1_render_viewport_1a79dd97d13c467333790dbf6ecb7c7ade" refkind="member"><highlight class="normal">QPoint<sp/><ref refid="class_k_win_1_1_render_viewport_1a464ad286bc61f61933405ab05759bf1b" kindref="member">RenderViewport::mapToRenderTargetTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;logicalGeometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aa1b95aced41e7391cc9ef85da08a95ae" kindref="member">snapToPixelGrid</ref>(QPointF(logicalGeometry)<sp/>*<sp/>m_scale)<sp/>-<sp/>m_deviceRenderRect.topLeft();</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_k_win_1_1_render_viewport_1a4e33f6bd1a99a92b902e9632f0657ac3" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_render_viewport_1a464ad286bc61f61933405ab05759bf1b" kindref="member">RenderViewport::mapToRenderTargetTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;logicalGeometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="104"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>logicalGeometry<sp/>*<sp/>m_scale<sp/>-<sp/>m_deviceRenderRect.topLeft();</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_k_win_1_1_render_viewport_1a6e1759dc649f70de60c518ca65821835" refkind="member"><highlight class="normal">QRegion<sp/><ref refid="class_k_win_1_1_render_viewport_1a464ad286bc61f61933405ab05759bf1b" kindref="member">RenderViewport::mapToRenderTargetTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;logicalGeometry)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>QRegion<sp/>ret;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;rect<sp/>:<sp/>logicalGeometry)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/><ref refid="class_k_win_1_1_render_viewport_1a464ad286bc61f61933405ab05759bf1b" kindref="member">mapToRenderTargetTexture</ref>(rect);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/core/renderviewport.cpp"/>
  </compounddef>
</doxygen>
