<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="idledetector_8h" kind="file" language="C++">
    <compoundname>idledetector.h</compoundname>
    <includes local="no">kwin_export.h</includes>
    <includes local="no">QBasicTimer</includes>
    <includes local="no">QObject</includes>
    <includedby refid="idledetector_8cpp" local="yes">kwin/src/idledetector.cpp</includedby>
    <includedby refid="input_8cpp" local="yes">kwin/src/input.cpp</includedby>
    <includedby refid="poller_8cpp" local="yes">kwin/src/plugins/idletime/poller.cpp</includedby>
    <includedby refid="idle_8cpp" local="yes">kwin/src/wayland/idle.cpp</includedby>
    <includedby refid="idlenotify__v1_8cpp" local="yes">kwin/src/wayland/idlenotify_v1.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/idledetector.h</label>
        <link refid="idledetector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>QBasicTimer</label>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="2">
        <label>kwin_export.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/idledetector.cpp</label>
        <link refid="idledetector_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/idledetector.h</label>
        <link refid="idledetector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>kwin/src/input.cpp</label>
        <link refid="input_8cpp"/>
      </node>
      <node id="4">
        <label>kwin/src/plugins/idletime/poller.cpp</label>
        <link refid="poller_8cpp"/>
      </node>
      <node id="5">
        <label>kwin/src/wayland/idle.cpp</label>
        <link refid="idle_8cpp"/>
      </node>
      <node id="6">
        <label>kwin/src/wayland/idlenotify_v1.cpp</label>
        <link refid="idlenotify__v1_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_idle_detector" prot="public">KWin::IdleDetector</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kwin_export.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QBasicTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_k_win_1_1_idle_detector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KWIN_EXPORT<sp/><ref refid="class_k_win_1_1_idle_detector_1a87872b83a8f5f076b80ac8f0d847a738" kindref="member">IdleDetector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1" kindref="member">OperatingMode</ref><sp/>{</highlight></codeline>
<codeline lineno="23" refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1a165b4318dea692b5be9d2a63ca5b224a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1a165b4318dea692b5be9d2a63ca5b224a" kindref="member">FollowsInhibitors</ref>,</highlight></codeline>
<codeline lineno="24" refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1ae43d46b8e033de5b20e9d82bc54236cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1ae43d46b8e033de5b20e9d82bc54236cf" kindref="member">IgnoresInhibitors</ref>,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_detector" kindref="compound">IdleDetector</ref>(std::chrono::milliseconds<sp/>timeout,<sp/>OperatingMode<sp/>mode,<sp/>QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_idle_detector" kindref="compound">~IdleDetector</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>activity();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>OperatingMode<sp/>mode()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInhibited()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInhibited(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inhibited);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="38" refid="class_k_win_1_1_idle_detector_1aaffa15bb55ac7fb4406309ee79e8dc01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_detector_1aaffa15bb55ac7fb4406309ee79e8dc01" kindref="member">idle</ref>();</highlight></codeline>
<codeline lineno="39" refid="class_k_win_1_1_idle_detector_1ae82738d04ededa79d4139519431f7ff5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_detector_1ae82738d04ededa79d4139519431f7ff5" kindref="member">resumed</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_idle_detector_1a2d8505f8bb481b884c514686548d36b0" kindref="member">timerEvent</ref>(QTimerEvent<sp/>*event)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>markAsIdle();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>markAsResumed();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>QBasicTimer<sp/>m_timer;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::milliseconds<sp/>m_timeout;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_isIdle<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_isInhibited<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1" kindref="member">OperatingMode</ref><sp/>m_mode<sp/>=<sp/><ref refid="class_k_win_1_1_idle_detector_1ad0b017bde19f90fdf0836774554f47d1a165b4318dea692b5be9d2a63ca5b224a" kindref="member">OperatingMode::FollowsInhibitors</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/idledetector.h"/>
  </compounddef>
</doxygen>
