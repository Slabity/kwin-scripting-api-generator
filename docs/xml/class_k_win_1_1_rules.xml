<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_rules" kind="class" language="C++" prot="public">
    <compoundname>KWin::Rules</compoundname>
    <includes refid="rules_8h" local="no">rules.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <qualifiedname>KWin::Rules::Type</qualifiedname>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae8e82741545bf75f43f5f971d62ffbd6" prot="public">
          <name>Position</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a98872c479ff663adf89c4656b46506a2" prot="public">
          <name>Size</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae15718d4d074235c37f2b5b899e105c8" prot="public">
          <name>Desktops</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae5557c83671660f0caedbda58b2f1f60" prot="public">
          <name>MaximizeVert</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a8b1181910f884f7d16f6e3fe061edc1f" prot="public">
          <name>MaximizeHoriz</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a076193cef29d4fad01d5915d49217d5c" prot="public">
          <name>Minimize</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ad92e266ca5b9633196abf6ef67b9d1d6" prot="public">
          <name>Shade</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a3778b9a70daa9e6b547b2f621e891237" prot="public">
          <name>SkipTaskbar</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a63b5b672e7e2bdeeafb169eac6e59ea0" prot="public">
          <name>SkipPager</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501afe598d667d904cf382db4cea1e0bf2b4" prot="public">
          <name>SkipSwitcher</name>
          <initializer>= 1 &lt;&lt; 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a152dd924fe063b475d694ebe7a05de34" prot="public">
          <name>Above</name>
          <initializer>= 1 &lt;&lt; 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a20257c499bbd0c317cdd518730b40db3" prot="public">
          <name>Below</name>
          <initializer>= 1 &lt;&lt; 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae48a0a07682a4ff7d16fd3f828840ddb" prot="public">
          <name>Fullscreen</name>
          <initializer>= 1 &lt;&lt; 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501afcb5c068c1240d2fc13ef796839d66d2" prot="public">
          <name>NoBorder</name>
          <initializer>= 1 &lt;&lt; 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ad37ba7a442c30430b02fe296275fca2e" prot="public">
          <name>OpacityActive</name>
          <initializer>= 1 &lt;&lt; 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a6c1f9822cc51abfdd702f1500783dac9" prot="public">
          <name>OpacityInactive</name>
          <initializer>= 1 &lt;&lt; 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a23d1f71fe66bb98e95d0f29db33d981b" prot="public">
          <name>Activity</name>
          <initializer>= 1 &lt;&lt; 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a906ef0a5b18d341f72287cf2156966c7" prot="public">
          <name>Screen</name>
          <initializer>= 1 &lt;&lt; 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501adeac35bbe8a897ab63fed7f602e62eb9" prot="public">
          <name>DesktopFile</name>
          <initializer>= 1 &lt;&lt; 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ad70c157fd9bca63a342b2bfb33280a06" prot="public">
          <name>Layer</name>
          <initializer>= 1 &lt;&lt; 19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a5f34a4989e40d5351a197908f48c5ab0" prot="public">
          <name>All</name>
          <initializer>= 0xffffffff</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="96" column="5" bodyfile="kwin/src/rules.h" bodystart="96" bodyend="118"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0f" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <qualifiedname>KWin::Rules</qualifiedname>
        <enumvalue id="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0facc37e0017bef763c49bfdf8514dcefb2" prot="public">
          <name>Unused</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fad8654164af2701cecba994f9fcbd4574" prot="public">
          <name>DontAffect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fab1338032c84210e28b1695cac5a56dd8" prot="public">
          <name>Force</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fa8f877047dca681e1b75bab4073fb357c" prot="public">
          <name>Apply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fad81e2f8dc4ab8dfb9c441b90f5efd685" prot="public">
          <name>Remember</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fa99977bbfbbc333138d5cd785aadcc633" prot="public">
          <name>ApplyNow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fa4cb46150c01bb5ed33a5f34083dd4eb2" prot="public">
          <name>ForceTemporarily</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="121" column="5" bodyfile="kwin/src/rules.h" bodystart="121" bodyend="129"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098" prot="public" static="no" strong="no">
        <type></type>
        <name>StringMatch</name>
        <qualifiedname>KWin::Rules::StringMatch</qualifiedname>
        <enumvalue id="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098a23d8a43a5e2e199e47e6c142757e23f3" prot="public">
          <name>FirstStringMatch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098aa7ed98a10182ddf4c84dece771352aa1" prot="public">
          <name>UnimportantMatch</name>
          <initializer>= FirstStringMatch</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098ae8b12f19270b40da0bae11ac0648d4e6" prot="public">
          <name>ExactMatch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098a25295112a91872affcb2077f0dc220ea" prot="public">
          <name>SubstringMatch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098a8f65f0246651bdf89b45f1d72ffe046a" prot="public">
          <name>RegExpMatch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098a5a908d601c9baca1b5a95ee98c2347e2" prot="public">
          <name>LastStringMatch</name>
          <initializer>= RegExpMatch</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="130" column="5" bodyfile="kwin/src/rules.h" bodystart="130" bodyend="137"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" prot="public" static="no" strong="no">
        <type></type>
        <name>SetRule</name>
        <qualifiedname>KWin::Rules::SetRule</qualifiedname>
        <enumvalue id="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52ea83cab1e4ac8d8a1da5b3a3f73e54c375" prot="public">
          <name>UnusedSetRule</name>
          <initializer>= Unused</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52ead9d1fbb3a1955b56f6860e3084e673cd" prot="public">
          <name>SetRuleDummy</name>
          <initializer>= 256</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="138" column="5" bodyfile="kwin/src/rules.h" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" prot="public" static="no" strong="no">
        <type></type>
        <name>ForceRule</name>
        <qualifiedname>KWin::Rules::ForceRule</qualifiedname>
        <enumvalue id="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fea451e39dff53ba7fc188523812b4e07f7" prot="public">
          <name>UnusedForceRule</name>
          <initializer>= Unused</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936feade16d6909b3548fe884af39e42502d3f" prot="public">
          <name>ForceRuleDummy</name>
          <initializer>= 256</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="142" column="5" bodyfile="kwin/src/rules.h" bodystart="142" bodyend="145"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_rules_1abee170e444d1d7ff1b6229042af1352c" prot="private" static="no" mutable="no">
        <type>enum <ref refid="namespace_k_win_1ad43bbfea407edd7454680404fd8f3a7b" kindref="member">Layer</ref></type>
        <definition>enum Layer KWin::Rules::layer</definition>
        <argsstring></argsstring>
        <name>layer</name>
        <qualifiedname>KWin::Rules::layer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="214" column="15" bodyfile="kwin/src/rules.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a55bd1a577f2b52d97ed026c3e48eaa52" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::layerrule</definition>
        <argsstring></argsstring>
        <name>layerrule</name>
        <qualifiedname>KWin::Rules::layerrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="215" column="15" bodyfile="kwin/src/rules.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1acae171d02583f9f620ecd010be29df73" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Rules::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <qualifiedname>KWin::Rules::m_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="216" column="13" bodyfile="kwin/src/rules.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ab36f2a6d78eb7a63ba014622349217eb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::m_enabled</definition>
        <argsstring></argsstring>
        <name>m_enabled</name>
        <qualifiedname>KWin::Rules::m_enabled</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="217" column="10" bodyfile="kwin/src/rules.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a7ee1f3ae101e28cc931d41fe63b2b3d0" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Rules::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <qualifiedname>KWin::Rules::description</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="218" column="13" bodyfile="kwin/src/rules.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1acb6e5c896fc3b8e72c4d170332b3c2ef" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Rules::wmclass</definition>
        <argsstring></argsstring>
        <name>wmclass</name>
        <qualifiedname>KWin::Rules::wmclass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="219" column="13" bodyfile="kwin/src/rules.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a4556fb80c1d76135d8025110792c95d2" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098" kindref="member">StringMatch</ref></type>
        <definition>StringMatch KWin::Rules::wmclassmatch</definition>
        <argsstring></argsstring>
        <name>wmclassmatch</name>
        <qualifiedname>KWin::Rules::wmclassmatch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="220" column="17" bodyfile="kwin/src/rules.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a4856c09b9247199d555c5588ce5c8bbc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::wmclasscomplete</definition>
        <argsstring></argsstring>
        <name>wmclasscomplete</name>
        <qualifiedname>KWin::Rules::wmclasscomplete</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="221" column="10" bodyfile="kwin/src/rules.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a8b733236f7b7320aebb1ff1c2b594b8b" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Rules::windowrole</definition>
        <argsstring></argsstring>
        <name>windowrole</name>
        <qualifiedname>KWin::Rules::windowrole</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="222" column="13" bodyfile="kwin/src/rules.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aa98884e22f40f6a8aea11cc29b8238ad" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098" kindref="member">StringMatch</ref></type>
        <definition>StringMatch KWin::Rules::windowrolematch</definition>
        <argsstring></argsstring>
        <name>windowrolematch</name>
        <qualifiedname>KWin::Rules::windowrolematch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="223" column="17" bodyfile="kwin/src/rules.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a9d671646ed1ed0457da307cc0d2fb1fb" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Rules::title</definition>
        <argsstring></argsstring>
        <name>title</name>
        <qualifiedname>KWin::Rules::title</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="224" column="13" bodyfile="kwin/src/rules.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a700a85b740769c2ab0db753d74c1b365" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098" kindref="member">StringMatch</ref></type>
        <definition>StringMatch KWin::Rules::titlematch</definition>
        <argsstring></argsstring>
        <name>titlematch</name>
        <qualifiedname>KWin::Rules::titlematch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="225" column="17" bodyfile="kwin/src/rules.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ac15d4dbb40ac92d20520b8b760588577" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Rules::clientmachine</definition>
        <argsstring></argsstring>
        <name>clientmachine</name>
        <qualifiedname>KWin::Rules::clientmachine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="226" column="13" bodyfile="kwin/src/rules.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ac61225f3fd8f65523e1a78f1d7b778f2" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098" kindref="member">StringMatch</ref></type>
        <definition>StringMatch KWin::Rules::clientmachinematch</definition>
        <argsstring></argsstring>
        <name>clientmachinematch</name>
        <qualifiedname>KWin::Rules::clientmachinematch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="227" column="17" bodyfile="kwin/src/rules.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1afef9f1640a641953d53bcdb95c38deb0" prot="private" static="no" mutable="no">
        <type>WindowTypes</type>
        <definition>WindowTypes KWin::Rules::types</definition>
        <argsstring></argsstring>
        <name>types</name>
        <qualifiedname>KWin::Rules::types</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="228" column="17" bodyfile="kwin/src/rules.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aa936581088773a70cf5f25759d92f91b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a69974eb9a12efe6c7ee471da23d023fc" kindref="member">PlacementPolicy</ref></type>
        <definition>PlacementPolicy KWin::Rules::placement</definition>
        <argsstring></argsstring>
        <name>placement</name>
        <qualifiedname>KWin::Rules::placement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="229" column="21" bodyfile="kwin/src/rules.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a3c4fc44ce3c03c5ff022e4d8a8720aaf" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::placementrule</definition>
        <argsstring></argsstring>
        <name>placementrule</name>
        <qualifiedname>KWin::Rules::placementrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="230" column="15" bodyfile="kwin/src/rules.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a769056d1719c21fbc72e87858a34ab2b" prot="private" static="no" mutable="no">
        <type>QPoint</type>
        <definition>QPoint KWin::Rules::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <qualifiedname>KWin::Rules::position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="231" column="12" bodyfile="kwin/src/rules.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a61649dcef37a0f673219f2acbc031fcb" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::positionrule</definition>
        <argsstring></argsstring>
        <name>positionrule</name>
        <qualifiedname>KWin::Rules::positionrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="232" column="13" bodyfile="kwin/src/rules.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a205f8b6a3b87baf723e333db8d899fa3" prot="private" static="no" mutable="no">
        <type>QSize</type>
        <definition>QSize KWin::Rules::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <qualifiedname>KWin::Rules::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="233" column="11" bodyfile="kwin/src/rules.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aa7ace305da5b8aafe64b3ee9dd9d7580" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::sizerule</definition>
        <argsstring></argsstring>
        <name>sizerule</name>
        <qualifiedname>KWin::Rules::sizerule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="234" column="13" bodyfile="kwin/src/rules.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aca49512b80b06823bee6803615396fb8" prot="private" static="no" mutable="no">
        <type>QSize</type>
        <definition>QSize KWin::Rules::minsize</definition>
        <argsstring></argsstring>
        <name>minsize</name>
        <qualifiedname>KWin::Rules::minsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="235" column="11" bodyfile="kwin/src/rules.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a0135071f8897c5f7dce3798213c16b88" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::minsizerule</definition>
        <argsstring></argsstring>
        <name>minsizerule</name>
        <qualifiedname>KWin::Rules::minsizerule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="236" column="15" bodyfile="kwin/src/rules.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1abf29911825f5d0d0efa6bdd0053e0a7a" prot="private" static="no" mutable="no">
        <type>QSize</type>
        <definition>QSize KWin::Rules::maxsize</definition>
        <argsstring></argsstring>
        <name>maxsize</name>
        <qualifiedname>KWin::Rules::maxsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="237" column="11" bodyfile="kwin/src/rules.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a9fc3b30ec283af5abeb6014910a195aa" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::maxsizerule</definition>
        <argsstring></argsstring>
        <name>maxsizerule</name>
        <qualifiedname>KWin::Rules::maxsizerule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="238" column="15" bodyfile="kwin/src/rules.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a32ea89f8ee8837ba7e0fd347169fcbb2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Rules::opacityactive</definition>
        <argsstring></argsstring>
        <name>opacityactive</name>
        <qualifiedname>KWin::Rules::opacityactive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="239" column="9" bodyfile="kwin/src/rules.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a5b7afe8a44355dbad73e99aecd728514" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::opacityactiverule</definition>
        <argsstring></argsstring>
        <name>opacityactiverule</name>
        <qualifiedname>KWin::Rules::opacityactiverule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="240" column="15" bodyfile="kwin/src/rules.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a6a98aecf9340e3b074ba16f9bf4c7072" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Rules::opacityinactive</definition>
        <argsstring></argsstring>
        <name>opacityinactive</name>
        <qualifiedname>KWin::Rules::opacityinactive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="241" column="9" bodyfile="kwin/src/rules.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aa10eaf1ebb618b7e7f75b0135d81b093" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::opacityinactiverule</definition>
        <argsstring></argsstring>
        <name>opacityinactiverule</name>
        <qualifiedname>KWin::Rules::opacityinactiverule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="242" column="15" bodyfile="kwin/src/rules.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a141b89b81a3fa8c91a354c7d7c676d88" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::ignoregeometry</definition>
        <argsstring></argsstring>
        <name>ignoregeometry</name>
        <qualifiedname>KWin::Rules::ignoregeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="243" column="10" bodyfile="kwin/src/rules.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a3c7b66f13f07f8354bb1e47d00f5bb52" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::ignoregeometryrule</definition>
        <argsstring></argsstring>
        <name>ignoregeometryrule</name>
        <qualifiedname>KWin::Rules::ignoregeometryrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="244" column="13" bodyfile="kwin/src/rules.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aca3371febf5dccc9bdc1ffb42244818b" prot="private" static="no" mutable="no">
        <type>QStringList</type>
        <definition>QStringList KWin::Rules::desktops</definition>
        <argsstring></argsstring>
        <name>desktops</name>
        <qualifiedname>KWin::Rules::desktops</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="245" column="17" bodyfile="kwin/src/rules.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aec9e345704da22d2446a29886ac43885" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::desktopsrule</definition>
        <argsstring></argsstring>
        <name>desktopsrule</name>
        <qualifiedname>KWin::Rules::desktopsrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="246" column="13" bodyfile="kwin/src/rules.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aae42e77e839bc2e73fb138f898f9c9c9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Rules::screen</definition>
        <argsstring></argsstring>
        <name>screen</name>
        <qualifiedname>KWin::Rules::screen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="247" column="9" bodyfile="kwin/src/rules.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a7a2d473452453f936d1a2460e1212014" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::screenrule</definition>
        <argsstring></argsstring>
        <name>screenrule</name>
        <qualifiedname>KWin::Rules::screenrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="248" column="13" bodyfile="kwin/src/rules.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ac51588668bccb042ee665bdd1479a1e4" prot="private" static="no" mutable="no">
        <type>QStringList</type>
        <definition>QStringList KWin::Rules::activity</definition>
        <argsstring></argsstring>
        <name>activity</name>
        <qualifiedname>KWin::Rules::activity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="249" column="17" bodyfile="kwin/src/rules.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a7273f10e45abf5abac6d2877e06cb2e9" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::activityrule</definition>
        <argsstring></argsstring>
        <name>activityrule</name>
        <qualifiedname>KWin::Rules::activityrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="250" column="13" bodyfile="kwin/src/rules.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a49dd39f0490013a5e8e8a1e7864c1edb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::maximizevert</definition>
        <argsstring></argsstring>
        <name>maximizevert</name>
        <qualifiedname>KWin::Rules::maximizevert</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="251" column="10" bodyfile="kwin/src/rules.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a71cbea7a07939bd276b65e28714fba29" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::maximizevertrule</definition>
        <argsstring></argsstring>
        <name>maximizevertrule</name>
        <qualifiedname>KWin::Rules::maximizevertrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="252" column="13" bodyfile="kwin/src/rules.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a6b161e8fdc85fdaf44dceb15ed6fe27d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::maximizehoriz</definition>
        <argsstring></argsstring>
        <name>maximizehoriz</name>
        <qualifiedname>KWin::Rules::maximizehoriz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="253" column="10" bodyfile="kwin/src/rules.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a3eab299c7aa211d49e07b1d7a0e98854" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::maximizehorizrule</definition>
        <argsstring></argsstring>
        <name>maximizehorizrule</name>
        <qualifiedname>KWin::Rules::maximizehorizrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="254" column="13" bodyfile="kwin/src/rules.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a4ddb3490d6005a1e3ba2473c2a7633f2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::minimize</definition>
        <argsstring></argsstring>
        <name>minimize</name>
        <qualifiedname>KWin::Rules::minimize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="255" column="10" bodyfile="kwin/src/rules.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a66729f00281e945dcec6fb04d7b76759" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::minimizerule</definition>
        <argsstring></argsstring>
        <name>minimizerule</name>
        <qualifiedname>KWin::Rules::minimizerule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="256" column="13" bodyfile="kwin/src/rules.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aa65e8ffdd34409b24e1d8744e0c4b647" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::shade</definition>
        <argsstring></argsstring>
        <name>shade</name>
        <qualifiedname>KWin::Rules::shade</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="257" column="10" bodyfile="kwin/src/rules.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a629f06a8f7e45d2e2ec227f5dbf34eba" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::shaderule</definition>
        <argsstring></argsstring>
        <name>shaderule</name>
        <qualifiedname>KWin::Rules::shaderule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="258" column="13" bodyfile="kwin/src/rules.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1abefcfece072c5e9a3645c04e500b3e84" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::skiptaskbar</definition>
        <argsstring></argsstring>
        <name>skiptaskbar</name>
        <qualifiedname>KWin::Rules::skiptaskbar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="259" column="10" bodyfile="kwin/src/rules.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1af4009d050fbc14140895adc37bf1d0bb" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::skiptaskbarrule</definition>
        <argsstring></argsstring>
        <name>skiptaskbarrule</name>
        <qualifiedname>KWin::Rules::skiptaskbarrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="260" column="13" bodyfile="kwin/src/rules.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a936eaba24d6326ccd9b410476aca6823" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::skippager</definition>
        <argsstring></argsstring>
        <name>skippager</name>
        <qualifiedname>KWin::Rules::skippager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="261" column="10" bodyfile="kwin/src/rules.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a028d0bc8b7fca89d9aad7d9350b9963b" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::skippagerrule</definition>
        <argsstring></argsstring>
        <name>skippagerrule</name>
        <qualifiedname>KWin::Rules::skippagerrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="262" column="13" bodyfile="kwin/src/rules.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a3c82c372c9089ebb456f7063bf02dc5a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::skipswitcher</definition>
        <argsstring></argsstring>
        <name>skipswitcher</name>
        <qualifiedname>KWin::Rules::skipswitcher</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="263" column="10" bodyfile="kwin/src/rules.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aa16ea5edc520848883414b251896fd6a" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::skipswitcherrule</definition>
        <argsstring></argsstring>
        <name>skipswitcherrule</name>
        <qualifiedname>KWin::Rules::skipswitcherrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="264" column="13" bodyfile="kwin/src/rules.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aee97b99b7ad1a0a6693d2ac28101e3dc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::above</definition>
        <argsstring></argsstring>
        <name>above</name>
        <qualifiedname>KWin::Rules::above</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="265" column="10" bodyfile="kwin/src/rules.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1af8d1644935a3dac8ea490c4ce79d5d82" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::aboverule</definition>
        <argsstring></argsstring>
        <name>aboverule</name>
        <qualifiedname>KWin::Rules::aboverule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="266" column="13" bodyfile="kwin/src/rules.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ada5b3746db09c18dca1d326c5855c644" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::below</definition>
        <argsstring></argsstring>
        <name>below</name>
        <qualifiedname>KWin::Rules::below</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="267" column="10" bodyfile="kwin/src/rules.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ac4aa1f4042de59a4309103d490afc49a" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::belowrule</definition>
        <argsstring></argsstring>
        <name>belowrule</name>
        <qualifiedname>KWin::Rules::belowrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="268" column="13" bodyfile="kwin/src/rules.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a78c004981bc59cee7054992abc4238d2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::fullscreen</definition>
        <argsstring></argsstring>
        <name>fullscreen</name>
        <qualifiedname>KWin::Rules::fullscreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="269" column="10" bodyfile="kwin/src/rules.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aff85402ba135429834e92516e6befb33" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::fullscreenrule</definition>
        <argsstring></argsstring>
        <name>fullscreenrule</name>
        <qualifiedname>KWin::Rules::fullscreenrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="270" column="13" bodyfile="kwin/src/rules.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a834bd1fc4c1123fb48556f5654f6f170" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::noborder</definition>
        <argsstring></argsstring>
        <name>noborder</name>
        <qualifiedname>KWin::Rules::noborder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="271" column="10" bodyfile="kwin/src/rules.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a837296aea326f85e506e2411fc30e3a8" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::noborderrule</definition>
        <argsstring></argsstring>
        <name>noborderrule</name>
        <qualifiedname>KWin::Rules::noborderrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="272" column="13" bodyfile="kwin/src/rules.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a1cb4758b0d1eb03bc6c5407c3c293935" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Rules::decocolor</definition>
        <argsstring></argsstring>
        <name>decocolor</name>
        <qualifiedname>KWin::Rules::decocolor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="273" column="13" bodyfile="kwin/src/rules.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ab2321b6124de5bda30ccd8f1440ed493" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::decocolorrule</definition>
        <argsstring></argsstring>
        <name>decocolorrule</name>
        <qualifiedname>KWin::Rules::decocolorrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="274" column="15" bodyfile="kwin/src/rules.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a8929c323d830e3983790424090fac69b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::blockcompositing</definition>
        <argsstring></argsstring>
        <name>blockcompositing</name>
        <qualifiedname>KWin::Rules::blockcompositing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="275" column="10" bodyfile="kwin/src/rules.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aa6e21872ace4b98dbd230797ca18beee" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::blockcompositingrule</definition>
        <argsstring></argsstring>
        <name>blockcompositingrule</name>
        <qualifiedname>KWin::Rules::blockcompositingrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="276" column="15" bodyfile="kwin/src/rules.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a3ee0a8ac02b58e30f8a2372288c8553b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Rules::fsplevel</definition>
        <argsstring></argsstring>
        <name>fsplevel</name>
        <qualifiedname>KWin::Rules::fsplevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="277" column="9" bodyfile="kwin/src/rules.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ad44698c10b98907ac456cffdac882be9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Rules::fpplevel</definition>
        <argsstring></argsstring>
        <name>fpplevel</name>
        <qualifiedname>KWin::Rules::fpplevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="278" column="9" bodyfile="kwin/src/rules.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1afbecc19f169213cbe26f503091bd7e1a" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::fsplevelrule</definition>
        <argsstring></argsstring>
        <name>fsplevelrule</name>
        <qualifiedname>KWin::Rules::fsplevelrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="279" column="15" bodyfile="kwin/src/rules.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1add8fe637c25927111d1080623bdf447f" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::fpplevelrule</definition>
        <argsstring></argsstring>
        <name>fpplevelrule</name>
        <qualifiedname>KWin::Rules::fpplevelrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="280" column="15" bodyfile="kwin/src/rules.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a588c1347b6f83546236c94967b327afc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::acceptfocus</definition>
        <argsstring></argsstring>
        <name>acceptfocus</name>
        <qualifiedname>KWin::Rules::acceptfocus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="281" column="10" bodyfile="kwin/src/rules.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ab44f112dc118968e99720ddd30fca9c3" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::acceptfocusrule</definition>
        <argsstring></argsstring>
        <name>acceptfocusrule</name>
        <qualifiedname>KWin::Rules::acceptfocusrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="282" column="15" bodyfile="kwin/src/rules.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ac38b058f85a6bc2d76000d49d8af5232" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::closeable</definition>
        <argsstring></argsstring>
        <name>closeable</name>
        <qualifiedname>KWin::Rules::closeable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="283" column="10" bodyfile="kwin/src/rules.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ad2517651011abaec0965cd365225063e" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::closeablerule</definition>
        <argsstring></argsstring>
        <name>closeablerule</name>
        <qualifiedname>KWin::Rules::closeablerule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="284" column="15" bodyfile="kwin/src/rules.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a8670fb155344b07553384fa99af6887f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::autogroup</definition>
        <argsstring></argsstring>
        <name>autogroup</name>
        <qualifiedname>KWin::Rules::autogroup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="285" column="10" bodyfile="kwin/src/rules.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a7365badcec40d6e225bf74c811d7fd4b" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::autogrouprule</definition>
        <argsstring></argsstring>
        <name>autogrouprule</name>
        <qualifiedname>KWin::Rules::autogrouprule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="286" column="15" bodyfile="kwin/src/rules.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ad143a9331973f5939d798e8243eeaa02" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::autogroupfg</definition>
        <argsstring></argsstring>
        <name>autogroupfg</name>
        <qualifiedname>KWin::Rules::autogroupfg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="287" column="10" bodyfile="kwin/src/rules.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a24ae2e78883f7faa85b55d8aad7cf5af" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::autogroupfgrule</definition>
        <argsstring></argsstring>
        <name>autogroupfgrule</name>
        <qualifiedname>KWin::Rules::autogroupfgrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="288" column="15" bodyfile="kwin/src/rules.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a353e3edb2da8369c36e380d7349d717a" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Rules::autogroupid</definition>
        <argsstring></argsstring>
        <name>autogroupid</name>
        <qualifiedname>KWin::Rules::autogroupid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="289" column="13" bodyfile="kwin/src/rules.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a073a1a8acbacde37399133c0989a139b" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::autogroupidrule</definition>
        <argsstring></argsstring>
        <name>autogroupidrule</name>
        <qualifiedname>KWin::Rules::autogroupidrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="290" column="15" bodyfile="kwin/src/rules.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ae9c243c87bea255859010a9aa6e39f01" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::strictgeometry</definition>
        <argsstring></argsstring>
        <name>strictgeometry</name>
        <qualifiedname>KWin::Rules::strictgeometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="291" column="10" bodyfile="kwin/src/rules.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a418a613bb555a63cea41db21762474dd" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::strictgeometryrule</definition>
        <argsstring></argsstring>
        <name>strictgeometryrule</name>
        <qualifiedname>KWin::Rules::strictgeometryrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="292" column="15" bodyfile="kwin/src/rules.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a53395f5070a4c6c5d78a8ef78246d9fd" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Rules::shortcut</definition>
        <argsstring></argsstring>
        <name>shortcut</name>
        <qualifiedname>KWin::Rules::shortcut</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="293" column="13" bodyfile="kwin/src/rules.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a6ed8395dbd0c3fdf696bdd76b5bd3a9f" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::shortcutrule</definition>
        <argsstring></argsstring>
        <name>shortcutrule</name>
        <qualifiedname>KWin::Rules::shortcutrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="294" column="13" bodyfile="kwin/src/rules.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a69a39b9f2f833e3ff7b5742e1189f39d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::disableglobalshortcuts</definition>
        <argsstring></argsstring>
        <name>disableglobalshortcuts</name>
        <qualifiedname>KWin::Rules::disableglobalshortcuts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="295" column="10" bodyfile="kwin/src/rules.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ae6a5ef63730f4625c6c1af11353ad6cc" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::disableglobalshortcutsrule</definition>
        <argsstring></argsstring>
        <name>disableglobalshortcutsrule</name>
        <qualifiedname>KWin::Rules::disableglobalshortcutsrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="296" column="15" bodyfile="kwin/src/rules.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a048c420c051c69f99acdcd8c4820b1b5" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString KWin::Rules::desktopfile</definition>
        <argsstring></argsstring>
        <name>desktopfile</name>
        <qualifiedname>KWin::Rules::desktopfile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="297" column="13" bodyfile="kwin/src/rules.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1a999eadd86f679adc5fdd317734c151a6" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
        <definition>SetRule KWin::Rules::desktopfilerule</definition>
        <argsstring></argsstring>
        <name>desktopfilerule</name>
        <qualifiedname>KWin::Rules::desktopfilerule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="298" column="13" bodyfile="kwin/src/rules.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ab3a358a64fb2edb35cfb8acb6c9354bd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::adaptivesync</definition>
        <argsstring></argsstring>
        <name>adaptivesync</name>
        <qualifiedname>KWin::Rules::adaptivesync</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="299" column="10" bodyfile="kwin/src/rules.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1ad6953d4a614f93be2fd41859e7852c56" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::adaptivesyncrule</definition>
        <argsstring></argsstring>
        <name>adaptivesyncrule</name>
        <qualifiedname>KWin::Rules::adaptivesyncrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="300" column="15" bodyfile="kwin/src/rules.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aa95fa6727bf09a5aa7a897c094a4d5d8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Rules::tearing</definition>
        <argsstring></argsstring>
        <name>tearing</name>
        <qualifiedname>KWin::Rules::tearing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="301" column="10" bodyfile="kwin/src/rules.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_rules_1aa0010f6365db41eb07be29e7db2f9672" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>ForceRule KWin::Rules::tearingrule</definition>
        <argsstring></argsstring>
        <name>tearingrule</name>
        <qualifiedname>KWin::Rules::tearingrule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="302" column="15" bodyfile="kwin/src/rules.h" bodystart="302" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_rules_1abb622a5ec8318387c8e62bb6c534c197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Rules::Rules</definition>
        <argsstring>()</argsstring>
        <name>Rules</name>
        <qualifiedname>KWin::Rules::Rules</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="94" column="5" bodyfile="kwin/src/rules.cpp" bodystart="35" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1aab6421c7013c91fd51c66d9c541890d5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Rules::Rules</definition>
        <argsstring>(const RuleSettings *)</argsstring>
        <name>Rules</name>
        <qualifiedname>KWin::Rules::Rules</qualifiedname>
        <param>
          <type>const RuleSettings *</type>
          <defname>settings</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="95" column="14" bodyfile="kwin/src/rules.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a571fc934be6a8cb9a2a0c3120b3431eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Rules::write</definition>
        <argsstring>(RuleSettings *) const</argsstring>
        <name>write</name>
        <qualifiedname>KWin::Rules::write</qualifiedname>
        <param>
          <type>RuleSettings *</type>
          <defname>settings</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="146" column="10" bodyfile="kwin/src/rules.cpp" bodystart="196" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1aeb5b9472599d86912b62d85f05b3a659" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <qualifiedname>KWin::Rules::isEmpty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="147" column="10" bodyfile="kwin/src/rules.cpp" bodystart="260" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1ac06ce64486df959e3c057412c59b2242" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Rules::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <qualifiedname>KWin::Rules::id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="148" column="13" bodyfile="kwin/src/rules.cpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1acaeba46770f906cd8c8b256838fa3ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::discardUsed</definition>
        <argsstring>(bool withdrawn)</argsstring>
        <name>discardUsed</name>
        <qualifiedname>KWin::Rules::discardUsed</qualifiedname>
        <param>
          <type>bool</type>
          <declname>withdrawn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="151" column="10" bodyfile="kwin/src/rules.cpp" bodystart="717" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1afbd084c7c995ad77567c6eecac66fa49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::match</definition>
        <argsstring>(const Window *c) const</argsstring>
        <name>match</name>
        <qualifiedname>KWin::Rules::match</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="152" column="10" bodyfile="kwin/src/rules.cpp" bodystart="446" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a99849b30a0b5d6de3fd3fd719ff2b70c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::update</definition>
        <argsstring>(Window *, int selection)</argsstring>
        <name>update</name>
        <qualifiedname>KWin::Rules::update</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <defname>c</defname>
        </param>
        <param>
          <type>int</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="153" column="10" bodyfile="kwin/src/rules.cpp" bodystart="474" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a769c7c374e850fc51966b27def270c42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyPlacement</definition>
        <argsstring>(PlacementPolicy &amp;placement) const</argsstring>
        <name>applyPlacement</name>
        <qualifiedname>KWin::Rules::applyPlacement</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a69974eb9a12efe6c7ee471da23d023fc" kindref="member">PlacementPolicy</ref> &amp;</type>
          <declname>placement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="154" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a19d722de24181a2d9e3a5ce53a9a4884" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyGeometry</definition>
        <argsstring>(QRectF &amp;rect, bool init) const</argsstring>
        <name>applyGeometry</name>
        <qualifiedname>KWin::Rules::applyGeometry</qualifiedname>
        <param>
          <type>QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="155" column="10" bodyfile="kwin/src/rules.cpp" bodystart="590" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a31cc8da27dc7002af3b5f864fdf7522d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyPosition</definition>
        <argsstring>(QPointF &amp;pos, bool init) const</argsstring>
        <name>applyPosition</name>
        <qualifiedname>KWin::Rules::applyPosition</qualifiedname>
        <param>
          <type>QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="157" column="10" bodyfile="kwin/src/rules.cpp" bodystart="606" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1ae6cabefa0c202499dfad9d9b60b4bb57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applySize</definition>
        <argsstring>(QSizeF &amp;s, bool init) const</argsstring>
        <name>applySize</name>
        <qualifiedname>KWin::Rules::applySize</qualifiedname>
        <param>
          <type>QSizeF &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="158" column="10" bodyfile="kwin/src/rules.cpp" bodystart="614" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a5ca2015acfb9f97bb7ec07fdb66b3a3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyMinSize</definition>
        <argsstring>(QSizeF &amp;s) const</argsstring>
        <name>applyMinSize</name>
        <qualifiedname>KWin::Rules::applyMinSize</qualifiedname>
        <param>
          <type>QSizeF &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="159" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a5b4837e0e2f9ba9903638d6437fa4bee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyMaxSize</definition>
        <argsstring>(QSizeF &amp;s) const</argsstring>
        <name>applyMaxSize</name>
        <qualifiedname>KWin::Rules::applyMaxSize</qualifiedname>
        <param>
          <type>QSizeF &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="160" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a6b0568b5c01801c5707ba6a807dd0f42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyOpacityActive</definition>
        <argsstring>(int &amp;s) const</argsstring>
        <name>applyOpacityActive</name>
        <qualifiedname>KWin::Rules::applyOpacityActive</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="161" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a45d53d48393ca796901d24755094d368" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyOpacityInactive</definition>
        <argsstring>(int &amp;s) const</argsstring>
        <name>applyOpacityInactive</name>
        <qualifiedname>KWin::Rules::applyOpacityInactive</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="162" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a5a4d83430c92c4ced45d2fd34d31abea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyIgnoreGeometry</definition>
        <argsstring>(bool &amp;ignore, bool init) const</argsstring>
        <name>applyIgnoreGeometry</name>
        <qualifiedname>KWin::Rules::applyIgnoreGeometry</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>ignore</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="163" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a3adae796bdd906771cb29951f62484d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyDesktops</definition>
        <argsstring>(QList&lt; VirtualDesktop * &gt; &amp;desktops, bool init) const</argsstring>
        <name>applyDesktops</name>
        <qualifiedname>KWin::Rules::applyDesktops</qualifiedname>
        <param>
          <type>QList&lt; <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> * &gt; &amp;</type>
          <declname>desktops</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="164" column="10" bodyfile="kwin/src/rules.cpp" bodystart="632" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a0e5b2c58f41f6f4fb3c6ccdbff08b78b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyScreen</definition>
        <argsstring>(int &amp;desktop, bool init) const</argsstring>
        <name>applyScreen</name>
        <qualifiedname>KWin::Rules::applyScreen</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="165" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a6bce7e6dffd01e77ee966ebe61a44a8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyActivity</definition>
        <argsstring>(QStringList &amp;activity, bool init) const</argsstring>
        <name>applyActivity</name>
        <qualifiedname>KWin::Rules::applyActivity</qualifiedname>
        <param>
          <type>QStringList &amp;</type>
          <declname>activity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="166" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a000b54da2368f160e0fd319904b7063a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyMaximizeVert</definition>
        <argsstring>(MaximizeMode &amp;mode, bool init) const</argsstring>
        <name>applyMaximizeVert</name>
        <qualifiedname>KWin::Rules::applyMaximizeVert</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref> &amp;</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="167" column="10" bodyfile="kwin/src/rules.cpp" bodystart="653" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a1188d8143540315ffbf56e40e04d2a87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyMaximizeHoriz</definition>
        <argsstring>(MaximizeMode &amp;mode, bool init) const</argsstring>
        <name>applyMaximizeHoriz</name>
        <qualifiedname>KWin::Rules::applyMaximizeHoriz</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref> &amp;</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="168" column="10" bodyfile="kwin/src/rules.cpp" bodystart="645" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a9d76cb4844314398874b704903f3e1ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyMinimize</definition>
        <argsstring>(bool &amp;minimized, bool init) const</argsstring>
        <name>applyMinimize</name>
        <qualifiedname>KWin::Rules::applyMinimize</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>minimized</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="169" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1ab7ecb45e75709a29600d40a76d42f52b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyShade</definition>
        <argsstring>(ShadeMode &amp;shade, bool init) const</argsstring>
        <name>applyShade</name>
        <qualifiedname>KWin::Rules::applyShade</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a14799797d985d6375dd7684fff01585f" kindref="member">ShadeMode</ref> &amp;</type>
          <declname>shade</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="170" column="10" bodyfile="kwin/src/rules.cpp" bodystart="663" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a1e2b161450042f4def11b3e22a088b10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applySkipTaskbar</definition>
        <argsstring>(bool &amp;skip, bool init) const</argsstring>
        <name>applySkipTaskbar</name>
        <qualifiedname>KWin::Rules::applySkipTaskbar</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>skip</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="171" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a9350363711a78a01be73837592840813" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applySkipPager</definition>
        <argsstring>(bool &amp;skip, bool init) const</argsstring>
        <name>applySkipPager</name>
        <qualifiedname>KWin::Rules::applySkipPager</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>skip</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="172" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a1dd083855f17d209f67144b7c5381de7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applySkipSwitcher</definition>
        <argsstring>(bool &amp;skip, bool init) const</argsstring>
        <name>applySkipSwitcher</name>
        <qualifiedname>KWin::Rules::applySkipSwitcher</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>skip</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="173" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1aaae2237fd493da3d076e09d445cc68b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyKeepAbove</definition>
        <argsstring>(bool &amp;above, bool init) const</argsstring>
        <name>applyKeepAbove</name>
        <qualifiedname>KWin::Rules::applyKeepAbove</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>above</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="174" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a0aafb5c5bf31b66d97486602b203b1dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyKeepBelow</definition>
        <argsstring>(bool &amp;below, bool init) const</argsstring>
        <name>applyKeepBelow</name>
        <qualifiedname>KWin::Rules::applyKeepBelow</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>below</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="175" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a503c324b3526adc87aa0ccc66adf116a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyFullScreen</definition>
        <argsstring>(bool &amp;fs, bool init) const</argsstring>
        <name>applyFullScreen</name>
        <qualifiedname>KWin::Rules::applyFullScreen</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="176" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a373c08778a7d2560bec9fe948d2d5036" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyNoBorder</definition>
        <argsstring>(bool &amp;noborder, bool init) const</argsstring>
        <name>applyNoBorder</name>
        <qualifiedname>KWin::Rules::applyNoBorder</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>noborder</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="177" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a83e5d0f59f2c1ac125bd31df02d1149f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyDecoColor</definition>
        <argsstring>(QString &amp;schemeFile) const</argsstring>
        <name>applyDecoColor</name>
        <qualifiedname>KWin::Rules::applyDecoColor</qualifiedname>
        <param>
          <type>QString &amp;</type>
          <declname>schemeFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="178" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1afe0ecf316870fbac1aec43790c34fe3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyBlockCompositing</definition>
        <argsstring>(bool &amp;block) const</argsstring>
        <name>applyBlockCompositing</name>
        <qualifiedname>KWin::Rules::applyBlockCompositing</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="179" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a5c55337cc9472223dcc98eedc79d2dae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyFSP</definition>
        <argsstring>(int &amp;fsp) const</argsstring>
        <name>applyFSP</name>
        <qualifiedname>KWin::Rules::applyFSP</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>fsp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="180" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a1def045c0acc38a3dd0197f2f7198072" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyFPP</definition>
        <argsstring>(int &amp;fpp) const</argsstring>
        <name>applyFPP</name>
        <qualifiedname>KWin::Rules::applyFPP</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>fpp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="181" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1ae4322056a602fa340522e1c13542040e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyAcceptFocus</definition>
        <argsstring>(bool &amp;focus) const</argsstring>
        <name>applyAcceptFocus</name>
        <qualifiedname>KWin::Rules::applyAcceptFocus</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>focus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="182" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a0bfadb50837c932d887b9159039adf16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyCloseable</definition>
        <argsstring>(bool &amp;closeable) const</argsstring>
        <name>applyCloseable</name>
        <qualifiedname>KWin::Rules::applyCloseable</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>closeable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="183" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a480c4e82b683d5cceed303d553a5b1c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyAutogrouping</definition>
        <argsstring>(bool &amp;autogroup) const</argsstring>
        <name>applyAutogrouping</name>
        <qualifiedname>KWin::Rules::applyAutogrouping</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>autogroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="184" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a659a0422fe2e32f3a8e7b78d19f58a47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyAutogroupInForeground</definition>
        <argsstring>(bool &amp;fg) const</argsstring>
        <name>applyAutogroupInForeground</name>
        <qualifiedname>KWin::Rules::applyAutogroupInForeground</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>fg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="185" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1ac865e20a04006efb30bc83b3d7e6280f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyAutogroupById</definition>
        <argsstring>(QString &amp;id) const</argsstring>
        <name>applyAutogroupById</name>
        <qualifiedname>KWin::Rules::applyAutogroupById</qualifiedname>
        <param>
          <type>QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="186" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a52fab10b85435bd3f3333ce56457421d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyStrictGeometry</definition>
        <argsstring>(bool &amp;strict) const</argsstring>
        <name>applyStrictGeometry</name>
        <qualifiedname>KWin::Rules::applyStrictGeometry</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>strict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="187" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1ab200493d552685f30f6b0fe336bc06e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyShortcut</definition>
        <argsstring>(QString &amp;shortcut, bool init) const</argsstring>
        <name>applyShortcut</name>
        <qualifiedname>KWin::Rules::applyShortcut</qualifiedname>
        <param>
          <type>QString &amp;</type>
          <declname>shortcut</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="188" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1aac162a8ec63133b5f08b9cd222421d22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyDisableGlobalShortcuts</definition>
        <argsstring>(bool &amp;disable) const</argsstring>
        <name>applyDisableGlobalShortcuts</name>
        <qualifiedname>KWin::Rules::applyDisableGlobalShortcuts</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>disable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="189" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1aa3f6c9b14465419f524ad1ab6d672ac4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyDesktopFile</definition>
        <argsstring>(QString &amp;desktopFile, bool init) const</argsstring>
        <name>applyDesktopFile</name>
        <qualifiedname>KWin::Rules::applyDesktopFile</qualifiedname>
        <param>
          <type>QString &amp;</type>
          <declname>desktopFile</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="190" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a0ececa09d88b625bab31be869e84317d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyLayer</definition>
        <argsstring>(enum Layer &amp;layer) const</argsstring>
        <name>applyLayer</name>
        <qualifiedname>KWin::Rules::applyLayer</qualifiedname>
        <param>
          <type>enum <ref refid="namespace_k_win_1ad43bbfea407edd7454680404fd8f3a7b" kindref="member">Layer</ref> &amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="191" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a359ca366755e6b1b6ef2b27a18e95061" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyAdaptiveSync</definition>
        <argsstring>(bool &amp;adaptivesync) const</argsstring>
        <name>applyAdaptiveSync</name>
        <qualifiedname>KWin::Rules::applyAdaptiveSync</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>adaptivesync</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="192" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a11f258af8ec31a19dea25545872514dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::applyTearing</definition>
        <argsstring>(bool &amp;tearing) const</argsstring>
        <name>applyTearing</name>
        <qualifiedname>KWin::Rules::applyTearing</qualifiedname>
        <param>
          <type>bool &amp;</type>
          <declname>tearing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="193" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_rules_1af0f26fba9e89d85d0213256b59f19853" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::matchType</definition>
        <argsstring>(WindowType match_type) const</argsstring>
        <name>matchType</name>
        <qualifiedname>KWin::Rules::matchType</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1ad892545facf36d334d4558298117fbc7" kindref="member">WindowType</ref></type>
          <declname>match_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="197" column="10" bodyfile="kwin/src/rules.cpp" bodystart="356" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a4c1efd6c41be99061b7014710970380c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::matchWMClass</definition>
        <argsstring>(const QString &amp;match_class, const QString &amp;match_name) const</argsstring>
        <name>matchWMClass</name>
        <qualifiedname>KWin::Rules::matchWMClass</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>match_class</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>match_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="198" column="10" bodyfile="kwin/src/rules.cpp" bodystart="369" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a6d960299032befe69ca6515e584ba44f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::matchRole</definition>
        <argsstring>(const QString &amp;match_role) const</argsstring>
        <name>matchRole</name>
        <qualifiedname>KWin::Rules::matchRole</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>match_role</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="199" column="10" bodyfile="kwin/src/rules.cpp" bodystart="389" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a807b73296e2e2afb5330d9e01e57d5c3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::matchTitle</definition>
        <argsstring>(const QString &amp;match_title) const</argsstring>
        <name>matchTitle</name>
        <qualifiedname>KWin::Rules::matchTitle</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>match_title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="200" column="10" bodyfile="kwin/src/rules.cpp" bodystart="405" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a562f290d92f09be56c3ae120922d1b61" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::matchClientMachine</definition>
        <argsstring>(const QString &amp;match_machine, bool local) const</argsstring>
        <name>matchClientMachine</name>
        <qualifiedname>KWin::Rules::matchClientMachine</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>match_machine</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="201" column="10" bodyfile="kwin/src/rules.cpp" bodystart="421" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1afa965ea87169e80eb87220c8e1de609f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Rules::readFromSettings</definition>
        <argsstring>(const RuleSettings *settings)</argsstring>
        <name>readFromSettings</name>
        <qualifiedname>KWin::Rules::readFromSettings</qualifiedname>
        <param>
          <type>const RuleSettings *</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="205" column="10" bodyfile="kwin/src/rules.cpp" bodystart="100" bodyend="166"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_k_win_1_1_rules_1aef920d4d136a57fe7291b3e8bbc1d405" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
        <definition>Rules::ForceRule KWin::Rules::convertForceRule</definition>
        <argsstring>(int v)</argsstring>
        <name>convertForceRule</name>
        <qualifiedname>KWin::Rules::convertForceRule</qualifiedname>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="206" column="22" bodyfile="kwin/src/rules.cpp" bodystart="302" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1aa0e52a6c9972bcd8cf19b7695107781f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Rules::getDecoColor</definition>
        <argsstring>(const QString &amp;themeName)</argsstring>
        <name>getDecoColor</name>
        <qualifiedname>KWin::Rules::getDecoColor</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>themeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="207" column="20" bodyfile="kwin/src/rules.cpp" bodystart="310" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1afdb77901e0a7a9027ca135b42448fdc7" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::checkSetRule</definition>
        <argsstring>(SetRule rule, bool init)</argsstring>
        <name>checkSetRule</name>
        <qualifiedname>KWin::Rules::checkSetRule</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
          <declname>rule</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="209" column="17" bodyfile="kwin/src/rules.h" bodystart="338" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a9f905e920ac5949f7bc65916b1562a86" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::checkForceRule</definition>
        <argsstring>(ForceRule rule)</argsstring>
        <name>checkForceRule</name>
        <qualifiedname>KWin::Rules::checkForceRule</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="210" column="17" bodyfile="kwin/src/rules.h" bodystart="349" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a0f74c6fac5e3aa578884f272da185bac" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::checkSetStop</definition>
        <argsstring>(SetRule rule)</argsstring>
        <name>checkSetStop</name>
        <qualifiedname>KWin::Rules::checkSetStop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" kindref="member">SetRule</ref></type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="211" column="17" bodyfile="kwin/src/rules.h" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_rules_1a9687f24ac2f921dadc5354b201dc6d9e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Rules::checkForceStop</definition>
        <argsstring>(ForceRule rule)</argsstring>
        <name>checkForceStop</name>
        <qualifiedname>KWin::Rules::checkForceStop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" kindref="member">ForceRule</ref></type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="212" column="17" bodyfile="kwin/src/rules.h" bodystart="359" bodyend="362"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_rules_1a354b67caf5c5c5cf60c92c1c685fe908" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QDebug &amp;</type>
        <definition>QDebug &amp; operator&lt;&lt;</definition>
        <argsstring>(QDebug &amp;stream, const Rules *r)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>KWin::Rules::operator&lt;&lt;</qualifiedname>
        <param>
          <type>QDebug &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_rules" kindref="compound">Rules</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/rules.h" line="303" column="12" bodyfile="kwin/src/rules.cpp" bodystart="766" bodyend="769"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/rules.h" line="91" column="1" bodyfile="kwin/src/rules.h" bodystart="92" bodyend="304"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a152dd924fe063b475d694ebe7a05de34" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Above</name></member>
      <member refid="class_k_win_1_1_rules_1aee97b99b7ad1a0a6693d2ac28101e3dc" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>above</name></member>
      <member refid="class_k_win_1_1_rules_1af8d1644935a3dac8ea490c4ce79d5d82" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>aboverule</name></member>
      <member refid="class_k_win_1_1_rules_1a588c1347b6f83546236c94967b327afc" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>acceptfocus</name></member>
      <member refid="class_k_win_1_1_rules_1ab44f112dc118968e99720ddd30fca9c3" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>acceptfocusrule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a23d1f71fe66bb98e95d0f29db33d981b" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Activity</name></member>
      <member refid="class_k_win_1_1_rules_1ac51588668bccb042ee665bdd1479a1e4" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>activity</name></member>
      <member refid="class_k_win_1_1_rules_1a7273f10e45abf5abac6d2877e06cb2e9" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>activityrule</name></member>
      <member refid="class_k_win_1_1_rules_1ab3a358a64fb2edb35cfb8acb6c9354bd" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>adaptivesync</name></member>
      <member refid="class_k_win_1_1_rules_1ad6953d4a614f93be2fd41859e7852c56" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>adaptivesyncrule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a5f34a4989e40d5351a197908f48c5ab0" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>All</name></member>
      <member refid="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fa8f877047dca681e1b75bab4073fb357c" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Apply</name></member>
      <member refid="class_k_win_1_1_rules_1ae4322056a602fa340522e1c13542040e" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyAcceptFocus</name></member>
      <member refid="class_k_win_1_1_rules_1a6bce7e6dffd01e77ee966ebe61a44a8c" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyActivity</name></member>
      <member refid="class_k_win_1_1_rules_1a359ca366755e6b1b6ef2b27a18e95061" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyAdaptiveSync</name></member>
      <member refid="class_k_win_1_1_rules_1ac865e20a04006efb30bc83b3d7e6280f" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyAutogroupById</name></member>
      <member refid="class_k_win_1_1_rules_1a659a0422fe2e32f3a8e7b78d19f58a47" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyAutogroupInForeground</name></member>
      <member refid="class_k_win_1_1_rules_1a480c4e82b683d5cceed303d553a5b1c5" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyAutogrouping</name></member>
      <member refid="class_k_win_1_1_rules_1afe0ecf316870fbac1aec43790c34fe3c" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyBlockCompositing</name></member>
      <member refid="class_k_win_1_1_rules_1a0bfadb50837c932d887b9159039adf16" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyCloseable</name></member>
      <member refid="class_k_win_1_1_rules_1a83e5d0f59f2c1ac125bd31df02d1149f" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyDecoColor</name></member>
      <member refid="class_k_win_1_1_rules_1aa3f6c9b14465419f524ad1ab6d672ac4" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyDesktopFile</name></member>
      <member refid="class_k_win_1_1_rules_1a3adae796bdd906771cb29951f62484d2" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyDesktops</name></member>
      <member refid="class_k_win_1_1_rules_1aac162a8ec63133b5f08b9cd222421d22" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyDisableGlobalShortcuts</name></member>
      <member refid="class_k_win_1_1_rules_1a1def045c0acc38a3dd0197f2f7198072" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyFPP</name></member>
      <member refid="class_k_win_1_1_rules_1a5c55337cc9472223dcc98eedc79d2dae" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyFSP</name></member>
      <member refid="class_k_win_1_1_rules_1a503c324b3526adc87aa0ccc66adf116a" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyFullScreen</name></member>
      <member refid="class_k_win_1_1_rules_1a19d722de24181a2d9e3a5ce53a9a4884" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyGeometry</name></member>
      <member refid="class_k_win_1_1_rules_1a5a4d83430c92c4ced45d2fd34d31abea" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyIgnoreGeometry</name></member>
      <member refid="class_k_win_1_1_rules_1aaae2237fd493da3d076e09d445cc68b3" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyKeepAbove</name></member>
      <member refid="class_k_win_1_1_rules_1a0aafb5c5bf31b66d97486602b203b1dc" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyKeepBelow</name></member>
      <member refid="class_k_win_1_1_rules_1a0ececa09d88b625bab31be869e84317d" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyLayer</name></member>
      <member refid="class_k_win_1_1_rules_1a1188d8143540315ffbf56e40e04d2a87" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyMaximizeHoriz</name></member>
      <member refid="class_k_win_1_1_rules_1a000b54da2368f160e0fd319904b7063a" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyMaximizeVert</name></member>
      <member refid="class_k_win_1_1_rules_1a5b4837e0e2f9ba9903638d6437fa4bee" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyMaxSize</name></member>
      <member refid="class_k_win_1_1_rules_1a9d76cb4844314398874b704903f3e1ac" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyMinimize</name></member>
      <member refid="class_k_win_1_1_rules_1a5ca2015acfb9f97bb7ec07fdb66b3a3e" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyMinSize</name></member>
      <member refid="class_k_win_1_1_rules_1a373c08778a7d2560bec9fe948d2d5036" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyNoBorder</name></member>
      <member refid="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fa99977bbfbbc333138d5cd785aadcc633" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>ApplyNow</name></member>
      <member refid="class_k_win_1_1_rules_1a6b0568b5c01801c5707ba6a807dd0f42" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyOpacityActive</name></member>
      <member refid="class_k_win_1_1_rules_1a45d53d48393ca796901d24755094d368" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyOpacityInactive</name></member>
      <member refid="class_k_win_1_1_rules_1a769c7c374e850fc51966b27def270c42" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyPlacement</name></member>
      <member refid="class_k_win_1_1_rules_1a31cc8da27dc7002af3b5f864fdf7522d" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyPosition</name></member>
      <member refid="class_k_win_1_1_rules_1a0e5b2c58f41f6f4fb3c6ccdbff08b78b" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyScreen</name></member>
      <member refid="class_k_win_1_1_rules_1ab7ecb45e75709a29600d40a76d42f52b" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyShade</name></member>
      <member refid="class_k_win_1_1_rules_1ab200493d552685f30f6b0fe336bc06e8" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyShortcut</name></member>
      <member refid="class_k_win_1_1_rules_1ae6cabefa0c202499dfad9d9b60b4bb57" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applySize</name></member>
      <member refid="class_k_win_1_1_rules_1a9350363711a78a01be73837592840813" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applySkipPager</name></member>
      <member refid="class_k_win_1_1_rules_1a1dd083855f17d209f67144b7c5381de7" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applySkipSwitcher</name></member>
      <member refid="class_k_win_1_1_rules_1a1e2b161450042f4def11b3e22a088b10" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applySkipTaskbar</name></member>
      <member refid="class_k_win_1_1_rules_1a52fab10b85435bd3f3333ce56457421d" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyStrictGeometry</name></member>
      <member refid="class_k_win_1_1_rules_1a11f258af8ec31a19dea25545872514dc" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>applyTearing</name></member>
      <member refid="class_k_win_1_1_rules_1a8670fb155344b07553384fa99af6887f" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>autogroup</name></member>
      <member refid="class_k_win_1_1_rules_1ad143a9331973f5939d798e8243eeaa02" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>autogroupfg</name></member>
      <member refid="class_k_win_1_1_rules_1a24ae2e78883f7faa85b55d8aad7cf5af" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>autogroupfgrule</name></member>
      <member refid="class_k_win_1_1_rules_1a353e3edb2da8369c36e380d7349d717a" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>autogroupid</name></member>
      <member refid="class_k_win_1_1_rules_1a073a1a8acbacde37399133c0989a139b" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>autogroupidrule</name></member>
      <member refid="class_k_win_1_1_rules_1a7365badcec40d6e225bf74c811d7fd4b" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>autogrouprule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a20257c499bbd0c317cdd518730b40db3" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Below</name></member>
      <member refid="class_k_win_1_1_rules_1ada5b3746db09c18dca1d326c5855c644" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>below</name></member>
      <member refid="class_k_win_1_1_rules_1ac4aa1f4042de59a4309103d490afc49a" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>belowrule</name></member>
      <member refid="class_k_win_1_1_rules_1a8929c323d830e3983790424090fac69b" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>blockcompositing</name></member>
      <member refid="class_k_win_1_1_rules_1aa6e21872ace4b98dbd230797ca18beee" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>blockcompositingrule</name></member>
      <member refid="class_k_win_1_1_rules_1a9f905e920ac5949f7bc65916b1562a86" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>checkForceRule</name></member>
      <member refid="class_k_win_1_1_rules_1a9687f24ac2f921dadc5354b201dc6d9e" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>checkForceStop</name></member>
      <member refid="class_k_win_1_1_rules_1afdb77901e0a7a9027ca135b42448fdc7" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>checkSetRule</name></member>
      <member refid="class_k_win_1_1_rules_1a0f74c6fac5e3aa578884f272da185bac" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>checkSetStop</name></member>
      <member refid="class_k_win_1_1_rules_1ac15d4dbb40ac92d20520b8b760588577" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>clientmachine</name></member>
      <member refid="class_k_win_1_1_rules_1ac61225f3fd8f65523e1a78f1d7b778f2" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>clientmachinematch</name></member>
      <member refid="class_k_win_1_1_rules_1ac38b058f85a6bc2d76000d49d8af5232" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>closeable</name></member>
      <member refid="class_k_win_1_1_rules_1ad2517651011abaec0965cd365225063e" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>closeablerule</name></member>
      <member refid="class_k_win_1_1_rules_1aef920d4d136a57fe7291b3e8bbc1d405" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>convertForceRule</name></member>
      <member refid="class_k_win_1_1_rules_1a1cb4758b0d1eb03bc6c5407c3c293935" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>decocolor</name></member>
      <member refid="class_k_win_1_1_rules_1ab2321b6124de5bda30ccd8f1440ed493" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>decocolorrule</name></member>
      <member refid="class_k_win_1_1_rules_1a7ee1f3ae101e28cc931d41fe63b2b3d0" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>description</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501adeac35bbe8a897ab63fed7f602e62eb9" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>DesktopFile</name></member>
      <member refid="class_k_win_1_1_rules_1a048c420c051c69f99acdcd8c4820b1b5" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>desktopfile</name></member>
      <member refid="class_k_win_1_1_rules_1a999eadd86f679adc5fdd317734c151a6" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>desktopfilerule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae15718d4d074235c37f2b5b899e105c8" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Desktops</name></member>
      <member refid="class_k_win_1_1_rules_1aca3371febf5dccc9bdc1ffb42244818b" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>desktops</name></member>
      <member refid="class_k_win_1_1_rules_1aec9e345704da22d2446a29886ac43885" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>desktopsrule</name></member>
      <member refid="class_k_win_1_1_rules_1a69a39b9f2f833e3ff7b5742e1189f39d" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>disableglobalshortcuts</name></member>
      <member refid="class_k_win_1_1_rules_1ae6a5ef63730f4625c6c1af11353ad6cc" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>disableglobalshortcutsrule</name></member>
      <member refid="class_k_win_1_1_rules_1acaeba46770f906cd8c8b256838fa3ae4" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>discardUsed</name></member>
      <member refid="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fad8654164af2701cecba994f9fcbd4574" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>DontAffect</name></member>
      <member refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098ae8b12f19270b40da0bae11ac0648d4e6" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>ExactMatch</name></member>
      <member refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098a23d8a43a5e2e199e47e6c142757e23f3" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>FirstStringMatch</name></member>
      <member refid="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fab1338032c84210e28b1695cac5a56dd8" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Force</name></member>
      <member refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fe" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>ForceRule</name></member>
      <member refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936feade16d6909b3548fe884af39e42502d3f" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>ForceRuleDummy</name></member>
      <member refid="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fa4cb46150c01bb5ed33a5f34083dd4eb2" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>ForceTemporarily</name></member>
      <member refid="class_k_win_1_1_rules_1ad44698c10b98907ac456cffdac882be9" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>fpplevel</name></member>
      <member refid="class_k_win_1_1_rules_1add8fe637c25927111d1080623bdf447f" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>fpplevelrule</name></member>
      <member refid="class_k_win_1_1_rules_1a3ee0a8ac02b58e30f8a2372288c8553b" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>fsplevel</name></member>
      <member refid="class_k_win_1_1_rules_1afbecc19f169213cbe26f503091bd7e1a" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>fsplevelrule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae48a0a07682a4ff7d16fd3f828840ddb" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Fullscreen</name></member>
      <member refid="class_k_win_1_1_rules_1a78c004981bc59cee7054992abc4238d2" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>fullscreen</name></member>
      <member refid="class_k_win_1_1_rules_1aff85402ba135429834e92516e6befb33" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>fullscreenrule</name></member>
      <member refid="class_k_win_1_1_rules_1aa0e52a6c9972bcd8cf19b7695107781f" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>getDecoColor</name></member>
      <member refid="class_k_win_1_1_rules_1ac06ce64486df959e3c057412c59b2242" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>id</name></member>
      <member refid="class_k_win_1_1_rules_1a141b89b81a3fa8c91a354c7d7c676d88" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>ignoregeometry</name></member>
      <member refid="class_k_win_1_1_rules_1a3c7b66f13f07f8354bb1e47d00f5bb52" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>ignoregeometryrule</name></member>
      <member refid="class_k_win_1_1_rules_1aeb5b9472599d86912b62d85f05b3a659" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>isEmpty</name></member>
      <member refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098a5a908d601c9baca1b5a95ee98c2347e2" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>LastStringMatch</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ad70c157fd9bca63a342b2bfb33280a06" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Layer</name></member>
      <member refid="class_k_win_1_1_rules_1abee170e444d1d7ff1b6229042af1352c" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>layer</name></member>
      <member refid="class_k_win_1_1_rules_1a55bd1a577f2b52d97ed026c3e48eaa52" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>layerrule</name></member>
      <member refid="class_k_win_1_1_rules_1ab36f2a6d78eb7a63ba014622349217eb" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>m_enabled</name></member>
      <member refid="class_k_win_1_1_rules_1acae171d02583f9f620ecd010be29df73" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>m_id</name></member>
      <member refid="class_k_win_1_1_rules_1afbd084c7c995ad77567c6eecac66fa49" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>match</name></member>
      <member refid="class_k_win_1_1_rules_1a562f290d92f09be56c3ae120922d1b61" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>matchClientMachine</name></member>
      <member refid="class_k_win_1_1_rules_1a6d960299032befe69ca6515e584ba44f" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>matchRole</name></member>
      <member refid="class_k_win_1_1_rules_1a807b73296e2e2afb5330d9e01e57d5c3" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>matchTitle</name></member>
      <member refid="class_k_win_1_1_rules_1af0f26fba9e89d85d0213256b59f19853" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>matchType</name></member>
      <member refid="class_k_win_1_1_rules_1a4c1efd6c41be99061b7014710970380c" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>matchWMClass</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a8b1181910f884f7d16f6e3fe061edc1f" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>MaximizeHoriz</name></member>
      <member refid="class_k_win_1_1_rules_1a6b161e8fdc85fdaf44dceb15ed6fe27d" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>maximizehoriz</name></member>
      <member refid="class_k_win_1_1_rules_1a3eab299c7aa211d49e07b1d7a0e98854" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>maximizehorizrule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae5557c83671660f0caedbda58b2f1f60" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>MaximizeVert</name></member>
      <member refid="class_k_win_1_1_rules_1a49dd39f0490013a5e8e8a1e7864c1edb" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>maximizevert</name></member>
      <member refid="class_k_win_1_1_rules_1a71cbea7a07939bd276b65e28714fba29" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>maximizevertrule</name></member>
      <member refid="class_k_win_1_1_rules_1abf29911825f5d0d0efa6bdd0053e0a7a" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>maxsize</name></member>
      <member refid="class_k_win_1_1_rules_1a9fc3b30ec283af5abeb6014910a195aa" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>maxsizerule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a076193cef29d4fad01d5915d49217d5c" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Minimize</name></member>
      <member refid="class_k_win_1_1_rules_1a4ddb3490d6005a1e3ba2473c2a7633f2" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>minimize</name></member>
      <member refid="class_k_win_1_1_rules_1a66729f00281e945dcec6fb04d7b76759" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>minimizerule</name></member>
      <member refid="class_k_win_1_1_rules_1aca49512b80b06823bee6803615396fb8" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>minsize</name></member>
      <member refid="class_k_win_1_1_rules_1a0135071f8897c5f7dce3798213c16b88" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>minsizerule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501afcb5c068c1240d2fc13ef796839d66d2" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>NoBorder</name></member>
      <member refid="class_k_win_1_1_rules_1a834bd1fc4c1123fb48556f5654f6f170" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>noborder</name></member>
      <member refid="class_k_win_1_1_rules_1a837296aea326f85e506e2411fc30e3a8" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>noborderrule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ad37ba7a442c30430b02fe296275fca2e" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>OpacityActive</name></member>
      <member refid="class_k_win_1_1_rules_1a32ea89f8ee8837ba7e0fd347169fcbb2" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>opacityactive</name></member>
      <member refid="class_k_win_1_1_rules_1a5b7afe8a44355dbad73e99aecd728514" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>opacityactiverule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a6c1f9822cc51abfdd702f1500783dac9" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>OpacityInactive</name></member>
      <member refid="class_k_win_1_1_rules_1a6a98aecf9340e3b074ba16f9bf4c7072" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>opacityinactive</name></member>
      <member refid="class_k_win_1_1_rules_1aa10eaf1ebb618b7e7f75b0135d81b093" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>opacityinactiverule</name></member>
      <member refid="class_k_win_1_1_rules_1a354b67caf5c5c5cf60c92c1c685fe908" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_k_win_1_1_rules_1aa936581088773a70cf5f25759d92f91b" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>placement</name></member>
      <member refid="class_k_win_1_1_rules_1a3c4fc44ce3c03c5ff022e4d8a8720aaf" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>placementrule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ae8e82741545bf75f43f5f971d62ffbd6" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Position</name></member>
      <member refid="class_k_win_1_1_rules_1a769056d1719c21fbc72e87858a34ab2b" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>position</name></member>
      <member refid="class_k_win_1_1_rules_1a61649dcef37a0f673219f2acbc031fcb" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>positionrule</name></member>
      <member refid="class_k_win_1_1_rules_1afa965ea87169e80eb87220c8e1de609f" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>readFromSettings</name></member>
      <member refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098a8f65f0246651bdf89b45f1d72ffe046a" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>RegExpMatch</name></member>
      <member refid="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0fad81e2f8dc4ab8dfb9c441b90f5efd685" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Remember</name></member>
      <member refid="class_k_win_1_1_rules_1abb622a5ec8318387c8e62bb6c534c197" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Rules</name></member>
      <member refid="class_k_win_1_1_rules_1aab6421c7013c91fd51c66d9c541890d5" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Rules</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a906ef0a5b18d341f72287cf2156966c7" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Screen</name></member>
      <member refid="class_k_win_1_1_rules_1aae42e77e839bc2e73fb138f898f9c9c9" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>screen</name></member>
      <member refid="class_k_win_1_1_rules_1a7a2d473452453f936d1a2460e1212014" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>screenrule</name></member>
      <member refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52e" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>SetRule</name></member>
      <member refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52ead9d1fbb3a1955b56f6860e3084e673cd" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>SetRuleDummy</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501ad92e266ca5b9633196abf6ef67b9d1d6" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Shade</name></member>
      <member refid="class_k_win_1_1_rules_1aa65e8ffdd34409b24e1d8744e0c4b647" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>shade</name></member>
      <member refid="class_k_win_1_1_rules_1a629f06a8f7e45d2e2ec227f5dbf34eba" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>shaderule</name></member>
      <member refid="class_k_win_1_1_rules_1a53395f5070a4c6c5d78a8ef78246d9fd" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>shortcut</name></member>
      <member refid="class_k_win_1_1_rules_1a6ed8395dbd0c3fdf696bdd76b5bd3a9f" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>shortcutrule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a98872c479ff663adf89c4656b46506a2" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Size</name></member>
      <member refid="class_k_win_1_1_rules_1a205f8b6a3b87baf723e333db8d899fa3" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>size</name></member>
      <member refid="class_k_win_1_1_rules_1aa7ace305da5b8aafe64b3ee9dd9d7580" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>sizerule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a63b5b672e7e2bdeeafb169eac6e59ea0" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>SkipPager</name></member>
      <member refid="class_k_win_1_1_rules_1a936eaba24d6326ccd9b410476aca6823" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>skippager</name></member>
      <member refid="class_k_win_1_1_rules_1a028d0bc8b7fca89d9aad7d9350b9963b" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>skippagerrule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501afe598d667d904cf382db4cea1e0bf2b4" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>SkipSwitcher</name></member>
      <member refid="class_k_win_1_1_rules_1a3c82c372c9089ebb456f7063bf02dc5a" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>skipswitcher</name></member>
      <member refid="class_k_win_1_1_rules_1aa16ea5edc520848883414b251896fd6a" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>skipswitcherrule</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501a3778b9a70daa9e6b547b2f621e891237" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>SkipTaskbar</name></member>
      <member refid="class_k_win_1_1_rules_1abefcfece072c5e9a3645c04e500b3e84" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>skiptaskbar</name></member>
      <member refid="class_k_win_1_1_rules_1af4009d050fbc14140895adc37bf1d0bb" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>skiptaskbarrule</name></member>
      <member refid="class_k_win_1_1_rules_1ae9c243c87bea255859010a9aa6e39f01" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>strictgeometry</name></member>
      <member refid="class_k_win_1_1_rules_1a418a613bb555a63cea41db21762474dd" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>strictgeometryrule</name></member>
      <member refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>StringMatch</name></member>
      <member refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098a25295112a91872affcb2077f0dc220ea" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>SubstringMatch</name></member>
      <member refid="class_k_win_1_1_rules_1aa95fa6727bf09a5aa7a897c094a4d5d8" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>tearing</name></member>
      <member refid="class_k_win_1_1_rules_1aa0010f6365db41eb07be29e7db2f9672" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>tearingrule</name></member>
      <member refid="class_k_win_1_1_rules_1a9d671646ed1ed0457da307cc0d2fb1fb" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>title</name></member>
      <member refid="class_k_win_1_1_rules_1a700a85b740769c2ab0db753d74c1b365" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>titlematch</name></member>
      <member refid="class_k_win_1_1_rules_1af260e8f34c4f8e04cc312fe34c135501" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Type</name></member>
      <member refid="class_k_win_1_1_rules_1afef9f1640a641953d53bcdb95c38deb0" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>types</name></member>
      <member refid="class_k_win_1_1_rules_1ab5b1f944efe8dcfcf154d516a74dd098aa7ed98a10182ddf4c84dece771352aa1" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>UnimportantMatch</name></member>
      <member refid="class_k_win_1_1_rules_1a330018e7dee844f4fcb79a62d86c4b0facc37e0017bef763c49bfdf8514dcefb2" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>Unused</name></member>
      <member refid="class_k_win_1_1_rules_1abb4ba13fcf2fc89cf7384622837936fea451e39dff53ba7fc188523812b4e07f7" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>UnusedForceRule</name></member>
      <member refid="class_k_win_1_1_rules_1a755bcebcf58c0c7d86be94fbb8c1f52ea83cab1e4ac8d8a1da5b3a3f73e54c375" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>UnusedSetRule</name></member>
      <member refid="class_k_win_1_1_rules_1a99849b30a0b5d6de3fd3fd719ff2b70c" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>update</name></member>
      <member refid="class_k_win_1_1_rules_1a8b733236f7b7320aebb1ff1c2b594b8b" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>windowrole</name></member>
      <member refid="class_k_win_1_1_rules_1aa98884e22f40f6a8aea11cc29b8238ad" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>windowrolematch</name></member>
      <member refid="class_k_win_1_1_rules_1acb6e5c896fc3b8e72c4d170332b3c2ef" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>wmclass</name></member>
      <member refid="class_k_win_1_1_rules_1a4856c09b9247199d555c5588ce5c8bbc" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>wmclasscomplete</name></member>
      <member refid="class_k_win_1_1_rules_1a4556fb80c1d76135d8025110792c95d2" prot="private" virt="non-virtual"><scope>KWin::Rules</scope><name>wmclassmatch</name></member>
      <member refid="class_k_win_1_1_rules_1a571fc934be6a8cb9a2a0c3120b3431eb" prot="public" virt="non-virtual"><scope>KWin::Rules</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
