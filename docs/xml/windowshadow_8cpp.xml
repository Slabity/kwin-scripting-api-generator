<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="windowshadow_8cpp" kind="file" language="C++">
    <compoundname>windowshadow.cpp</compoundname>
    <includes refid="windowshadow_8h" local="yes">windowshadow.h</includes>
    <includes local="no">QVariant</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/plugins/windowsystem/windowshadow.cpp</label>
        <link refid="windowshadow_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>windowshadow.h</label>
        <link refid="windowshadow_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>QVariant</label>
      </node>
      <node id="3">
        <label>private/kwindowshadow_p.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-only<sp/>OR<sp/>GPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-GPL</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="windowshadow_8h" kindref="compound">windowshadow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QVariant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">Q_DECLARE_METATYPE(QMargins)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_k_win_1_1_window_shadow_tile_1a8b2547b57e29d61b4b34e32bdbcdc3f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_shadow_tile_1a8b2547b57e29d61b4b34e32bdbcdc3f3" kindref="member">WindowShadowTile::create</ref>()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_k_win_1_1_window_shadow_tile_1a1e617de78cf4a5e31661a8bf8ca33f64" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_shadow_tile_1a1e617de78cf4a5e31661a8bf8ca33f64" kindref="member">WindowShadowTile::destroy</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_k_win_1_1_window_shadow_1a97e098631f4b33863e31da9c9971e200" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_shadow_1a97e098631f4b33863e31da9c9971e200" kindref="member">WindowShadow::create</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Perhaps<sp/>we<sp/>set<sp/>way<sp/>too<sp/>many<sp/>properties<sp/>here.<sp/>Alternatively<sp/>we<sp/>could<sp/>put<sp/>all<sp/>shadow<sp/>tiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>one<sp/>big<sp/>image<sp/>and<sp/>attach<sp/>it<sp/>rather<sp/>than<sp/>8<sp/>separate<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftTile)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_left_tile&quot;</highlight><highlight class="normal">,<sp/>QVariant::fromValue(leftTile-&gt;image()));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topLeftTile)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_top_left_tile&quot;</highlight><highlight class="normal">,<sp/>QVariant::fromValue(topLeftTile-&gt;image()));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topTile)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_top_tile&quot;</highlight><highlight class="normal">,<sp/>QVariant::fromValue(topTile-&gt;image()));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topRightTile)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_top_right_tile&quot;</highlight><highlight class="normal">,<sp/>QVariant::fromValue(topRightTile-&gt;image()));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rightTile)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_right_tile&quot;</highlight><highlight class="normal">,<sp/>QVariant::fromValue(rightTile-&gt;image()));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottomRightTile)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_bottom_right_tile&quot;</highlight><highlight class="normal">,<sp/>QVariant::fromValue(bottomRightTile-&gt;image()));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottomTile)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_bottom_tile&quot;</highlight><highlight class="normal">,<sp/>QVariant::fromValue(bottomTile-&gt;image()));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottomLeftTile)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_bottom_left_tile&quot;</highlight><highlight class="normal">,<sp/>QVariant::fromValue(bottomLeftTile-&gt;image()));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_padding&quot;</highlight><highlight class="normal">,<sp/>QVariant::fromValue(padding));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notice<sp/>that<sp/>the<sp/>enabled<sp/>property<sp/>must<sp/>be<sp/>set<sp/>last.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_enabled&quot;</highlight><highlight class="normal">,<sp/>QVariant::fromValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_k_win_1_1_window_shadow_1ac8eaf563f03f58128920639d2ecec935" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_window_shadow_1ac8eaf563f03f58128920639d2ecec935" kindref="member">WindowShadow::destroy</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempting<sp/>to<sp/>uninstall<sp/>the<sp/>shadow<sp/>after<sp/>the<sp/>decorated<sp/>window<sp/>has<sp/>been<sp/>destroyed.<sp/>It&apos;s<sp/>doomed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>relevant<sp/>shadow<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_left_tile&quot;</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_top_left_tile&quot;</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_top_tile&quot;</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_top_right_tile&quot;</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_right_tile&quot;</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_bottom_right_tile&quot;</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_bottom_tile&quot;</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_bottom_left_tile&quot;</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_padding&quot;</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;kwin_shadow_enabled&quot;</highlight><highlight class="normal">,<sp/>{});</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/plugins/windowsystem/windowshadow.cpp"/>
  </compounddef>
</doxygen>
