<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_fake_input_backend_private" kind="class" language="C++" prot="public">
    <compoundname>KWin::FakeInputBackendPrivate</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QtWaylandServer::org_kde_kwin_fake_input</basecompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_k_win_1_1_fake_input_backend_private_1ace2ff34d7c0961f1d348f71d65ca0e82" prot="public" static="no">
        <type>std::map&lt; Resource *, std::unique_ptr&lt; <ref refid="class_k_win_1_1_fake_input_device" kindref="compound">FakeInputDevice</ref> &gt; &gt;</type>
        <definition>using KWin::FakeInputBackendPrivate::FakeInputDeviceMap =  std::map&lt;Resource *, std::unique_ptr&lt;FakeInputDevice&gt;&gt;</definition>
        <argsstring></argsstring>
        <name>FakeInputDeviceMap</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::FakeInputDeviceMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="23" column="5" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_fake_input_backend_private_1a4cf689cac974bb3cfc63d8cfcf9c80d5" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_fake_input_backend" kindref="compound">FakeInputBackend</ref> *</type>
        <definition>FakeInputBackend* KWin::FakeInputBackendPrivate::q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::q</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="30" column="22" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_fake_input_backend_private_1ade9f440e78a7d080e122d30751355bcb" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> *</type>
        <definition>Display* KWin::FakeInputBackendPrivate::display</definition>
        <argsstring></argsstring>
        <name>display</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::display</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="31" column="13" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_fake_input_backend_private_1a1d5526b6510177a4cc20cfe5e46cced4" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_fake_input_backend_private_1ace2ff34d7c0961f1d348f71d65ca0e82" kindref="member">FakeInputDeviceMap</ref></type>
        <definition>FakeInputDeviceMap KWin::FakeInputBackendPrivate::devices</definition>
        <argsstring></argsstring>
        <name>devices</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::devices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="32" column="24" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1aa7f7eba5abe49abef5254eb2ce4c8ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::FakeInputBackendPrivate::FakeInputBackendPrivate</definition>
        <argsstring>(FakeInputBackend *q, Display *display)</argsstring>
        <name>FakeInputBackendPrivate</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::FakeInputBackendPrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_fake_input_backend" kindref="compound">FakeInputBackend</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> *</type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="21" column="5" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1ae29a61cc98bfb5983ca3c27cfdd658cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_fake_input_device" kindref="compound">FakeInputDevice</ref> *</type>
        <definition>FakeInputDevice * KWin::FakeInputBackendPrivate::findDevice</definition>
        <argsstring>(Resource *resource)</argsstring>
        <name>findDevice</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::findDevice</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="25" column="21" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1acb2ab7101a9b21082f703e9f3303517c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::removeDeviceByResource</definition>
        <argsstring>(Resource *resource)</argsstring>
        <name>removeDeviceByResource</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::removeDeviceByResource</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="26" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1abb8cf05f5c522dbe3e9df8949dae69f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::removeDeviceByIterator</definition>
        <argsstring>(FakeInputDeviceMap::iterator it)</argsstring>
        <name>removeDeviceByIterator</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::removeDeviceByIterator</qualifiedname>
        <param>
          <type>FakeInputDeviceMap::iterator</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="27" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="86" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a61b1cce62466808e85b957985e1bc72b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::microseconds</type>
        <definition>std::chrono::microseconds KWin::FakeInputBackendPrivate::currentTime</definition>
        <argsstring>() const</argsstring>
        <name>currentTime</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::currentTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="28" column="31" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="102" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a010beef7b5d3959524c5c144d11ca6ca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_bind_resource</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>org_kde_kwin_fake_input_bind_resource</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_bind_resource</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="35" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a0ed1842259ad7adfce581ada72c82d98" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_destroy_resource</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>org_kde_kwin_fake_input_destroy_resource</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_destroy_resource</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="36" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a40c96ef1418a6d197045b41fc453716d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_authenticate</definition>
        <argsstring>(Resource *resource, const QString &amp;application, const QString &amp;reason) override</argsstring>
        <name>org_kde_kwin_fake_input_authenticate</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_authenticate</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>application</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="37" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="107" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1ad44534e920bc0086264aa116eea3e433" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_pointer_motion</definition>
        <argsstring>(Resource *resource, wl_fixed_t delta_x, wl_fixed_t delta_y) override</argsstring>
        <name>org_kde_kwin_fake_input_pointer_motion</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_pointer_motion</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>delta_x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>delta_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="38" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="116" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a31e0399bba2c9fe4f346f2f4c0f1f885" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_button</definition>
        <argsstring>(Resource *resource, uint32_t button, uint32_t state) override</argsstring>
        <name>org_kde_kwin_fake_input_button</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_button</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="39" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="128" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a8f93b26bff32343d45f49c398cca716d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_axis</definition>
        <argsstring>(Resource *resource, uint32_t axis, wl_fixed_t value) override</argsstring>
        <name>org_kde_kwin_fake_input_axis</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_axis</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="40" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="158" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a4ad0ff965d7f5f1655ecc7a10aaf361e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_touch_down</definition>
        <argsstring>(Resource *resource, uint32_t id, wl_fixed_t x, wl_fixed_t y) override</argsstring>
        <name>org_kde_kwin_fake_input_touch_down</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_touch_down</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="41" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="183" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a1a94c3ec574ca1dc48a97ad0d1c2e051" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_touch_motion</definition>
        <argsstring>(Resource *resource, uint32_t id, wl_fixed_t x, wl_fixed_t y) override</argsstring>
        <name>org_kde_kwin_fake_input_touch_motion</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_touch_motion</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="42" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="196" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a01aa8cdfbedbf093a3d1ccba00b9bd4f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_touch_up</definition>
        <argsstring>(Resource *resource, uint32_t id) override</argsstring>
        <name>org_kde_kwin_fake_input_touch_up</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_touch_up</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="43" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="208" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a4f013c0c3bea0c561da283893b552887" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_touch_cancel</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>org_kde_kwin_fake_input_touch_cancel</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_touch_cancel</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="44" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="219" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a8d607f63fdc0628861abb466fccf1fc5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_touch_frame</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>org_kde_kwin_fake_input_touch_frame</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_touch_frame</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="45" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="229" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a8f54456eb5897d42b1a390bdaf9c03fd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_pointer_motion_absolute</definition>
        <argsstring>(Resource *resource, wl_fixed_t x, wl_fixed_t y) override</argsstring>
        <name>org_kde_kwin_fake_input_pointer_motion_absolute</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_pointer_motion_absolute</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>wl_fixed_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="46" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="238" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a6caaa6e158dedaeaea4964b5604a283a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_keyboard_key</definition>
        <argsstring>(Resource *resource, uint32_t button, uint32_t state) override</argsstring>
        <name>org_kde_kwin_fake_input_keyboard_key</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_keyboard_key</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>button</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="47" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="249" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_fake_input_backend_private_1a9998653afca8b9ae5a2de6d0e1d7b653" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_destroy</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>org_kde_kwin_fake_input_destroy</name>
        <qualifiedname>KWin::FakeInputBackendPrivate::org_kde_kwin_fake_input_destroy</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="48" column="10" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::FakeInputBackendPrivate</label>
        <link refid="class_k_win_1_1_fake_input_backend_private"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QtWaylandServer::org_kde_kwin_fake_input</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>KWin::Display</label>
        <link refid="class_k_win_1_1_display"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::FakeInputBackend</label>
        <link refid="class_k_win_1_1_fake_input_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::FakeInputBackendPrivate</label>
        <link refid="class_k_win_1_1_fake_input_backend_private"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>q</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>display</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>KWin::InputBackend</label>
        <link refid="class_k_win_1_1_input_backend"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
      <node id="2">
        <label>QtWaylandServer::org_kde_kwin_fake_input</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/fakeinput/fakeinputbackend.cpp" line="18" column="1" bodyfile="kwin/src/backends/fakeinput/fakeinputbackend.cpp" bodystart="19" bodyend="49"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a61b1cce62466808e85b957985e1bc72b" prot="public" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>currentTime</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a1d5526b6510177a4cc20cfe5e46cced4" prot="public" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>devices</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1ade9f440e78a7d080e122d30751355bcb" prot="public" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>display</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1aa7f7eba5abe49abef5254eb2ce4c8ef4" prot="public" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>FakeInputBackendPrivate</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1ace2ff34d7c0961f1d348f71d65ca0e82" prot="public" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>FakeInputDeviceMap</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1ae29a61cc98bfb5983ca3c27cfdd658cf" prot="public" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>findDevice</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a40c96ef1418a6d197045b41fc453716d" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_authenticate</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a8f93b26bff32343d45f49c398cca716d" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_axis</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a010beef7b5d3959524c5c144d11ca6ca" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_bind_resource</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a31e0399bba2c9fe4f346f2f4c0f1f885" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_button</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a9998653afca8b9ae5a2de6d0e1d7b653" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_destroy</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a0ed1842259ad7adfce581ada72c82d98" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_destroy_resource</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a6caaa6e158dedaeaea4964b5604a283a" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_keyboard_key</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1ad44534e920bc0086264aa116eea3e433" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_pointer_motion</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a8f54456eb5897d42b1a390bdaf9c03fd" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_pointer_motion_absolute</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a4f013c0c3bea0c561da283893b552887" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_touch_cancel</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a4ad0ff965d7f5f1655ecc7a10aaf361e" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_touch_down</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a8d607f63fdc0628861abb466fccf1fc5" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_touch_frame</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a1a94c3ec574ca1dc48a97ad0d1c2e051" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_touch_motion</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a01aa8cdfbedbf093a3d1ccba00b9bd4f" prot="protected" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>org_kde_kwin_fake_input_touch_up</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1a4cf689cac974bb3cfc63d8cfcf9c80d5" prot="public" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>q</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1abb8cf05f5c522dbe3e9df8949dae69f0" prot="public" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>removeDeviceByIterator</name></member>
      <member refid="class_k_win_1_1_fake_input_backend_private_1acb2ab7101a9b21082f703e9f3303517c" prot="public" virt="non-virtual"><scope>KWin::FakeInputBackendPrivate</scope><name>removeDeviceByResource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
