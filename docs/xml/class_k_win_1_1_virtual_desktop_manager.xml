<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_virtual_desktop_manager" kind="class" language="C++" prot="public">
    <compoundname>KWin::VirtualDesktopManager</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="virtualdesktops_8h" local="no">virtualdesktops.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29" prot="public" static="no" strong="yes">
        <type></type>
        <name>Direction</name>
        <qualifiedname>KWin::VirtualDesktopManager::Direction</qualifiedname>
        <enumvalue id="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29a258f49887ef8d14ac268c92b02503aaa" prot="public">
          <name>Up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29a08a38277b0309070706f6652eeae9a53" prot="public">
          <name>Down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29a92b09c7c48c520c3c55e497875da437c" prot="public">
          <name>Right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29a945d5e233cf7d6240f6b783b36a374ff" prot="public">
          <name>Left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29a10ac3d04253ef7e1ddc73e6091c0cd55" prot="public">
          <name>Next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29add1f775e443ff3b9a89270713580a51b" prot="public">
          <name>Previous</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="220" column="5" bodyfile="kwin/src/virtualdesktops.h" bodystart="220" bodyend="227"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_virtual_desktop_manager_1a41db9a5b639d7560d2246c7da5f4da81" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>uint</type>
        <definition>uint KWin::VirtualDesktopManager::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <qualifiedname>KWin::VirtualDesktopManager::count</qualifiedname>
        <read>count</read>
        <write>setCount</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of virtual desktops currently available. The ids of the virtual desktops are in the range [1, <ref refid="class_k_win_1_1_virtual_desktop_manager_1a99697823bbb3d162799924c07e8d3135" kindref="member">VirtualDesktopManager::maximum()</ref>]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="143" column="5" bodyfile="kwin/src/virtualdesktops.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_virtual_desktop_manager_1abc4871a760f54bec3110f1a48b804dad" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>uint</type>
        <definition>uint KWin::VirtualDesktopManager::current</definition>
        <argsstring></argsstring>
        <name>current</name>
        <qualifiedname>KWin::VirtualDesktopManager::current</qualifiedname>
        <read>current</read>
        <write>setCurrent</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The id of the virtual desktop which is currently in use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="148" column="5" bodyfile="kwin/src/virtualdesktops.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_virtual_desktop_manager_1a115541ea5feaefb0407f533c3b2fcbdd" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool KWin::VirtualDesktopManager::navigationWrappingAround</definition>
        <argsstring></argsstring>
        <name>navigationWrappingAround</name>
        <qualifiedname>KWin::VirtualDesktopManager::navigationWrappingAround</qualifiedname>
        <read>isNavigationWrappingAround</read>
        <write>setNavigationWrappingAround</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether navigation in the desktop layout wraps around at the borders. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="153" column="5" bodyfile="kwin/src/virtualdesktops.h" bodystart="153" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_virtual_desktop_manager_1a7a895d5a58357c5fc9e057c3f1395241" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> * &gt;</type>
        <definition>QList&lt;VirtualDesktop *&gt; KWin::VirtualDesktopManager::m_desktops</definition>
        <argsstring></argsstring>
        <name>m_desktops</name>
        <qualifiedname>KWin::VirtualDesktopManager::m_desktops</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="516" column="11" bodyfile="kwin/src/virtualdesktops.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_desktop_manager_1aceea9f81c281b0579dc2e26fd0285009" prot="private" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> &gt;</type>
        <definition>QPointer&lt;VirtualDesktop&gt; KWin::VirtualDesktopManager::m_current</definition>
        <argsstring></argsstring>
        <name>m_current</name>
        <qualifiedname>KWin::VirtualDesktopManager::m_current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="517" column="14" bodyfile="kwin/src/virtualdesktops.h" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_desktop_manager_1a39d56b9179d14b485492069f10607d8d" prot="private" static="no" mutable="no">
        <type>quint32</type>
        <definition>quint32 KWin::VirtualDesktopManager::m_rows</definition>
        <argsstring></argsstring>
        <name>m_rows</name>
        <qualifiedname>KWin::VirtualDesktopManager::m_rows</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="518" column="13" bodyfile="kwin/src/virtualdesktops.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_desktop_manager_1ae425f9498ef1e172b5ff3725f1c36952" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::VirtualDesktopManager::m_navigationWrapsAround</definition>
        <argsstring></argsstring>
        <name>m_navigationWrapsAround</name>
        <qualifiedname>KWin::VirtualDesktopManager::m_navigationWrapsAround</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="519" column="10" bodyfile="kwin/src/virtualdesktops.h" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_desktop_manager_1a42f6f0cd230522561f5d0962720342b8" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_virtual_desktop_grid" kindref="compound">VirtualDesktopGrid</ref></type>
        <definition>VirtualDesktopGrid KWin::VirtualDesktopManager::m_grid</definition>
        <argsstring></argsstring>
        <name>m_grid</name>
        <qualifiedname>KWin::VirtualDesktopManager::m_grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="520" column="24" bodyfile="kwin/src/virtualdesktops.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_desktop_manager_1aaab2d0f6b4a108e11e014f55cc2fe397" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_plasma_virtual_desktop_management_interface" kindref="compound">PlasmaVirtualDesktopManagementInterface</ref> *</type>
        <definition>PlasmaVirtualDesktopManagementInterface* KWin::VirtualDesktopManager::m_virtualDesktopManagement</definition>
        <argsstring></argsstring>
        <name>m_virtualDesktopManagement</name>
        <qualifiedname>KWin::VirtualDesktopManager::m_virtualDesktopManagement</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="525" column="45" bodyfile="kwin/src/virtualdesktops.h" bodystart="525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_desktop_manager_1a4bb2ed21af43a656fe441b0b7bde483a" prot="private" static="no" mutable="no">
        <type>KSharedConfig::Ptr</type>
        <definition>KSharedConfig::Ptr KWin::VirtualDesktopManager::m_config</definition>
        <argsstring></argsstring>
        <name>m_config</name>
        <qualifiedname>KWin::VirtualDesktopManager::m_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="526" column="24" bodyfile="kwin/src/virtualdesktops.h" bodystart="526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_desktop_manager_1a1e28afbd96e7ab7fa0cdf21b54965478" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; QAction &gt;</type>
        <definition>std::unique_ptr&lt;QAction&gt; KWin::VirtualDesktopManager::m_swipeGestureReleasedY</definition>
        <argsstring></argsstring>
        <name>m_swipeGestureReleasedY</name>
        <qualifiedname>KWin::VirtualDesktopManager::m_swipeGestureReleasedY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="528" column="21" bodyfile="kwin/src/virtualdesktops.h" bodystart="528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_desktop_manager_1a2d77a67b90cd831853add8be5375d3cd" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; QAction &gt;</type>
        <definition>std::unique_ptr&lt;QAction&gt; KWin::VirtualDesktopManager::m_swipeGestureReleasedX</definition>
        <argsstring></argsstring>
        <name>m_swipeGestureReleasedX</name>
        <qualifiedname>KWin::VirtualDesktopManager::m_swipeGestureReleasedX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="529" column="21" bodyfile="kwin/src/virtualdesktops.h" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_desktop_manager_1ad5a60c183035232fc1c1fa93c2e328c0" prot="private" static="no" mutable="no">
        <type>QPointF</type>
        <definition>QPointF KWin::VirtualDesktopManager::m_currentDesktopOffset</definition>
        <argsstring></argsstring>
        <name>m_currentDesktopOffset</name>
        <qualifiedname>KWin::VirtualDesktopManager::m_currentDesktopOffset</qualifiedname>
        <initializer>= QPointF(0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="530" column="13" bodyfile="kwin/src/virtualdesktops.h" bodystart="530" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a8c6206c73d69c438167eabc29effb40c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::VirtualDesktopManager::~VirtualDesktopManager</definition>
        <argsstring>() override</argsstring>
        <name>~VirtualDesktopManager</name>
        <qualifiedname>KWin::VirtualDesktopManager::~VirtualDesktopManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="155" column="5" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a56e0a800fabd765141dc8db11dfb084a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::setRootInfo</definition>
        <argsstring>(NETRootInfo *info)</argsstring>
        <name>setRootInfo</name>
        <qualifiedname>KWin::VirtualDesktopManager::setRootInfo</qualifiedname>
        <param>
          <type>NETRootInfo *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="160" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="214" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a623a75f6fe79cfa100584510a88e1e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::setVirtualDesktopManagement</definition>
        <argsstring>(PlasmaVirtualDesktopManagementInterface *management)</argsstring>
        <name>setVirtualDesktopManagement</name>
        <qualifiedname>KWin::VirtualDesktopManager::setVirtualDesktopManagement</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_plasma_virtual_desktop_management_interface" kindref="compound">PlasmaVirtualDesktopManagementInterface</ref> *</type>
          <declname>management</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="165" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="49" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a80069fe92fbc0d74626d9f8da316e508" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::setConfig</definition>
        <argsstring>(KSharedConfig::Ptr config)</argsstring>
        <name>setConfig</name>
        <qualifiedname>KWin::VirtualDesktopManager::setConfig</qualifiedname>
        <param>
          <type>KSharedConfig::Ptr</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="170" column="10" bodyfile="kwin/src/virtualdesktops.h" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a1d8d81c4d2f75a9b6771449be1a5254c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint KWin::VirtualDesktopManager::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <qualifiedname>KWin::VirtualDesktopManager::count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Total number of desktops currently in existence. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1abaf69d1d87ff0b752a15a828b678e867" kindref="member">setCount</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1a869eb4fbfc9abb337bf8e514592e588f" kindref="member">countChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="177" column="10" bodyfile="kwin/src/virtualdesktops.h" bodystart="555" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a49a3238a72ef63f091911ae215a753de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>uint KWin::VirtualDesktopManager::rows</definition>
        <argsstring>() const</argsstring>
        <name>rows</name>
        <qualifiedname>KWin::VirtualDesktopManager::rows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of rows the layout has. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1a47bc0c3d04fb266f8691de99aac66dce" kindref="member">setRows</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1ac43af72e370e441de30582503f8ed7e5" kindref="member">rowsChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="184" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a0dc1aa8406b572f7868e30a2fdc2d499" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>uint KWin::VirtualDesktopManager::current</definition>
        <argsstring>() const</argsstring>
        <name>current</name>
        <qualifiedname>KWin::VirtualDesktopManager::current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The ID of the current desktop. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1ae456ac7afa42a1c05eb8623bd98560d0" kindref="member">setCurrent</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1aa70de53d9fe2da52c13fb46c27598fe2" kindref="member">currentChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="191" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="512" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1aa1edbc43652aa8c5a9951605819c61de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::currentDesktop</definition>
        <argsstring>() const</argsstring>
        <name>currentDesktop</name>
        <qualifiedname>KWin::VirtualDesktopManager::currentDesktop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current desktop </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1ae456ac7afa42a1c05eb8623bd98560d0" kindref="member">setCurrent</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1aa70de53d9fe2da52c13fb46c27598fe2" kindref="member">currentChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="198" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="517" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a1f7bbeb3e281f179354c9ea083ac243b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29" kindref="member">Direction</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::moveTo</definition>
        <argsstring>(bool wrap=false)</argsstring>
        <name>moveTo</name>
        <qualifiedname>KWin::VirtualDesktopManager::moveTo</qualifiedname>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves to the desktop through the algorithm described by <ref refid="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29" kindref="member">Direction</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wrap</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput> wraps around to the other side of the layout </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1ae456ac7afa42a1c05eb8623bd98560d0" kindref="member">setCurrent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="206" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1ae6e0b49ea34dd03fbc853fd1040f7a87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::VirtualDesktopManager::isNavigationWrappingAround</definition>
        <argsstring>() const</argsstring>
        <name>isNavigationWrappingAround</name>
        <qualifiedname>KWin::VirtualDesktopManager::isNavigationWrappingAround</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if navigation at borders of layout wraps around, <computeroutput>false</computeroutput> otherwise </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1add1fedba523087a6a2b53c2a8e4cd1b5" kindref="member">setNavigationWrappingAround</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1aa6fb207899d7e491561291f0f4393d90" kindref="member">navigationWrappingAroundChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="213" column="10" bodyfile="kwin/src/virtualdesktops.h" bodystart="560" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a191e6b781832cdb0f785a0634ab4f88e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_virtual_desktop_grid" kindref="compound">VirtualDesktopGrid</ref> &amp;</type>
        <definition>const VirtualDesktopGrid &amp; KWin::VirtualDesktopManager::grid</definition>
        <argsstring>() const</argsstring>
        <name>grid</name>
        <qualifiedname>KWin::VirtualDesktopManager::grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The layout aware virtual desktop grid used by this manager. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="218" column="30" bodyfile="kwin/src/virtualdesktops.h" bodystart="570" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a9b7c6dbb1c215cc97ea9beb7890dbe47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::inDirection</definition>
        <argsstring>(VirtualDesktop *desktop, Direction direction, bool wrap=true)</argsstring>
        <name>inDirection</name>
        <qualifiedname>KWin::VirtualDesktopManager::inDirection</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29" kindref="member">Direction</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="228" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="230" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1ae5c218c49e2b841b4798286eabe33091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>uint KWin::VirtualDesktopManager::inDirection</definition>
        <argsstring>(uint desktop, Direction direction, bool wrap=true)</argsstring>
        <name>inDirection</name>
        <qualifiedname>KWin::VirtualDesktopManager::inDirection</qualifiedname>
        <param>
          <type>uint</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29" kindref="member">Direction</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="229" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a541261b507ae0fc1472d54170b2b6c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::moveTo</definition>
        <argsstring>(Direction direction, bool wrap=true)</argsstring>
        <name>moveTo</name>
        <qualifiedname>KWin::VirtualDesktopManager::moveTo</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29" kindref="member">Direction</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="230" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a6acdeee3094eb78310eb14e693df9550" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::above</definition>
        <argsstring>(VirtualDesktop *desktop, bool wrap=true) const</argsstring>
        <name>above</name>
        <qualifiedname>KWin::VirtualDesktopManager::above</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The desktop above desktop <emphasis>desktop</emphasis>. Wraps around to the bottom of the layout if <emphasis>wrap</emphasis> is set. If <emphasis>desktop</emphasis> is <computeroutput>null</computeroutput> use the current one. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="236" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="259" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1ac1110762de8c7aaee925d4f266992b08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::toRight</definition>
        <argsstring>(VirtualDesktop *desktop, bool wrap=true) const</argsstring>
        <name>toRight</name>
        <qualifiedname>KWin::VirtualDesktopManager::toRight</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The desktop to the right of desktop <emphasis>desktop</emphasis>. Wraps around to the left of the layout if <emphasis>wrap</emphasis> is set. If <emphasis>desktop</emphasis> is <computeroutput>null</computeroutput> use the current one. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="242" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="283" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1ab692028333832da304b5b6bb671b969b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::below</definition>
        <argsstring>(VirtualDesktop *desktop, bool wrap=true) const</argsstring>
        <name>below</name>
        <qualifiedname>KWin::VirtualDesktopManager::below</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The desktop below desktop <emphasis>desktop</emphasis>. Wraps around to the top of the layout if <emphasis>wrap</emphasis> is set. If <emphasis>desktop</emphasis> is <computeroutput>null</computeroutput> use the current one. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="248" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="307" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1acd39bf52a5a47634f359e339b5912710" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::toLeft</definition>
        <argsstring>(VirtualDesktop *desktop, bool wrap=true) const</argsstring>
        <name>toLeft</name>
        <qualifiedname>KWin::VirtualDesktopManager::toLeft</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The desktop to the left of desktop <emphasis>desktop</emphasis>. Wraps around to the right of the layout if <emphasis>wrap</emphasis> is set. If <emphasis>desktop</emphasis> is <computeroutput>null</computeroutput> use the current one. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="254" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="332" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1ad461a96e8a4faa2b020d5bbd5d9c992a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::next</definition>
        <argsstring>(VirtualDesktop *desktop=nullptr, bool wrap=true) const</argsstring>
        <name>next</name>
        <qualifiedname>KWin::VirtualDesktopManager::next</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The desktop after the desktop <emphasis>desktop</emphasis>. Wraps around to the first desktop if <emphasis>wrap</emphasis> is set. If <emphasis>desktop</emphasis> is <computeroutput>null</computeroutput> use the current desktop. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="260" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="356" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a027c57a045adda2ed6e41d369124b633" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::previous</definition>
        <argsstring>(VirtualDesktop *desktop=nullptr, bool wrap=true) const</argsstring>
        <name>previous</name>
        <qualifiedname>KWin::VirtualDesktopManager::previous</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The desktop in front of the desktop <emphasis>desktop</emphasis>. Wraps around to the last desktop if <emphasis>wrap</emphasis> is set. If <emphasis>desktop</emphasis> is <computeroutput>null</computeroutput> use the current desktop. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="266" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="375" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1ae732def7caf20f5733d372f0731a70ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::initShortcuts</definition>
        <argsstring>()</argsstring>
        <name>initShortcuts</name>
        <qualifiedname>KWin::VirtualDesktopManager::initShortcuts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="268" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="742" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a8dd5e6c6a909a82b8aa32fa6823e9e4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> * &gt;</type>
        <definition>QList&lt; VirtualDesktop * &gt; KWin::VirtualDesktopManager::desktops</definition>
        <argsstring>() const</argsstring>
        <name>desktops</name>
        <qualifiedname>KWin::VirtualDesktopManager::desktops</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>all currently managed <ref refid="class_k_win_1_1_virtual_desktops" kindref="compound">VirtualDesktops</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="273" column="11" bodyfile="kwin/src/virtualdesktops.h" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1abd98dbeca5d5d0674a05eef703616f0d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::desktopForX11Id</definition>
        <argsstring>(uint id) const</argsstring>
        <name>desktopForX11Id</name>
        <qualifiedname>KWin::VirtualDesktopManager::desktopForX11Id</qualifiedname>
        <param>
          <type>uint</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> for the x11 <computeroutput>id</computeroutput>, if no such <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> <computeroutput>null</computeroutput> is returned </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="281" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="394" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a623f4a96d988d03871b91c31b1a05b97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::desktopForId</definition>
        <argsstring>(const QString &amp;id) const</argsstring>
        <name>desktopForId</name>
        <qualifiedname>KWin::VirtualDesktopManager::desktopForId</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> for the internal desktop string <computeroutput>id</computeroutput>, if no such <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> <computeroutput>null</computeroutput> is returned </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="286" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="402" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a854a5b2bad3d4a1bbdd6ef466777b1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
        <definition>VirtualDesktop * KWin::VirtualDesktopManager::createVirtualDesktop</definition>
        <argsstring>(uint position, const QString &amp;name=QString())</argsstring>
        <name>createVirtualDesktop</name>
        <qualifiedname>KWin::VirtualDesktopManager::createVirtualDesktop</qualifiedname>
        <param>
          <type>uint</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new virtual desktop at the requested position. The difference with setCount is that setCount always adds new desktops at the end of the chain. The Id is automatically generated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the desktop. It should be in range [0, count]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name for the new desktop, if empty the default name will be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref>, nullptr if we reached the maximum number of desktops </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="295" column="20" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="418" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a5addae7248f171cb6908059f4102d962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::removeVirtualDesktop</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>removeVirtualDesktop</name>
        <qualifiedname>KWin::VirtualDesktopManager::removeVirtualDesktop</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the virtual desktop identified by id, if it exists difference with setCount is that is possible to remove an arbitrary desktop, not only the last one. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the string id of the desktop to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="303" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="470" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1ac63755a19665fca7a2e0afb995228e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::removeVirtualDesktop</definition>
        <argsstring>(VirtualDesktop *desktop)</argsstring>
        <name>removeVirtualDesktop</name>
        <qualifiedname>KWin::VirtualDesktopManager::removeVirtualDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="304" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="478" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a18d0bf0a402049ddff72aefdab1b84da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::updateRootInfo</definition>
        <argsstring>()</argsstring>
        <name>updateRootInfo</name>
        <qualifiedname>KWin::VirtualDesktopManager::updateRootInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates the net root info for new number of desktops </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="309" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="623" bodyend="635"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a99697823bbb3d162799924c07e8d3135" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint KWin::VirtualDesktopManager::maximum</definition>
        <argsstring>()</argsstring>
        <name>maximum</name>
        <qualifiedname>KWin::VirtualDesktopManager::maximum</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The maximum number of desktops that <ref refid="namespace_k_win" kindref="compound">KWin</ref> supports. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="314" column="17" bodyfile="kwin/src/virtualdesktops.h" bodystart="550" bodyend="553"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1abaf69d1d87ff0b752a15a828b678e867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::setCount</definition>
        <argsstring>(uint count)</argsstring>
        <name>setCount</name>
        <qualifiedname>KWin::VirtualDesktopManager::setCount</qualifiedname>
        <param>
          <type>uint</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of available desktops to <emphasis>count</emphasis>. This function overrides any previous grid layout. There needs to be at least one virtual desktop and the new value is capped at the maximum number of desktops. A caller of this function cannot expect that the change has been applied. It is the callers responsibility to either check the numberOfDesktops or connect to the countChanged signal.</para>
<para>In case the <ref refid="class_k_win_1_1_virtual_desktop_manager_1abc4871a760f54bec3110f1a48b804dad" kindref="member">current</ref> desktop is on a desktop higher than the new count, the current desktop is changed to be the new desktop with highest id. In that situation the signal desktopRemoved is emitted. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The new number of desktops to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1a41db9a5b639d7560d2246c7da5f4da81" kindref="member">count</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1a99697823bbb3d162799924c07e8d3135" kindref="member">maximum</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1a869eb4fbfc9abb337bf8e514592e588f" kindref="member">countChanged</ref> </para>
</simplesect>
<simplesect kind="see"><para>desktopCreated </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1ae4653e9f1b10c56eb1421e073ed73cec" kindref="member">desktopRemoved</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="335" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="544" bodyend="604"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1ae456ac7afa42a1c05eb8623bd98560d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::VirtualDesktopManager::setCurrent</definition>
        <argsstring>(uint current)</argsstring>
        <name>setCurrent</name>
        <qualifiedname>KWin::VirtualDesktopManager::setCurrent</qualifiedname>
        <param>
          <type>uint</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current desktop to <emphasis>current</emphasis>. <simplesect kind="return"><para>True on success, false otherwise. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1abc4871a760f54bec3110f1a48b804dad" kindref="member">current</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1aa70de53d9fe2da52c13fb46c27598fe2" kindref="member">currentChanged</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1a1f7bbeb3e281f179354c9ea083ac243b" kindref="member">moveTo</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="344" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="522" bodyend="530"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1a12176e9bc57fefbf74cf557d0fc94782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::VirtualDesktopManager::setCurrent</definition>
        <argsstring>(VirtualDesktop *current)</argsstring>
        <name>setCurrent</name>
        <qualifiedname>KWin::VirtualDesktopManager::setCurrent</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current desktop to <emphasis>current</emphasis>. <simplesect kind="return"><para>True on success, false otherwise. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1abc4871a760f54bec3110f1a48b804dad" kindref="member">current</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1aa70de53d9fe2da52c13fb46c27598fe2" kindref="member">currentChanged</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1a1f7bbeb3e281f179354c9ea083ac243b" kindref="member">moveTo</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="353" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="532" bodyend="542"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1a47bc0c3d04fb266f8691de99aac66dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::setRows</definition>
        <argsstring>(uint rows)</argsstring>
        <name>setRows</name>
        <qualifiedname>KWin::VirtualDesktopManager::setRows</qualifiedname>
        <param>
          <type>uint</type>
          <declname>rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates the layout to a new number of rows. The number of columns will be calculated accordingly </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="358" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="611" bodyend="621"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1aa6c735d4501f7257be80b6b4212b93a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::updateLayout</definition>
        <argsstring>()</argsstring>
        <name>updateLayout</name>
        <qualifiedname>KWin::VirtualDesktopManager::updateLayout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called from within <ref refid="class_k_win_1_1_virtual_desktop_manager_1abaf69d1d87ff0b752a15a828b678e867" kindref="member">setCount()</ref> to ensure the desktop layout is still valid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="363" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="637" bodyend="650"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1add1fedba523087a6a2b53c2a8e4cd1b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::setNavigationWrappingAround</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setNavigationWrappingAround</name>
        <qualifiedname>KWin::VirtualDesktopManager::setNavigationWrappingAround</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>wrapping around borders for navigation in desktop layout </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1ae6e0b49ea34dd03fbc853fd1040f7a87" kindref="member">isNavigationWrappingAround</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_virtual_desktop_manager_1aa6fb207899d7e491561291f0f4393d90" kindref="member">navigationWrappingAroundChanged</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="370" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="889" bodyend="896"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1a13019046a9c1b57983c942be83b33cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::load</definition>
        <argsstring>()</argsstring>
        <name>load</name>
        <qualifiedname>KWin::VirtualDesktopManager::load</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads number of desktops and names from configuration file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="375" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="652" bodyend="688"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1a4f2e10764ffb9b8aa59fa1bdbfb3c673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::save</definition>
        <argsstring>()</argsstring>
        <name>save</name>
        <qualifiedname>KWin::VirtualDesktopManager::save</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Saves number of desktops and names to configuration file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="380" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="690" bodyend="735"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_virtual_desktop_manager_1a869eb4fbfc9abb337bf8e514592e588f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::countChanged</definition>
        <argsstring>(uint previousCount, uint newCount)</argsstring>
        <name>countChanged</name>
        <qualifiedname>KWin::VirtualDesktopManager::countChanged</qualifiedname>
        <param>
          <type>uint</type>
          <declname>previousCount</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>newCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signal emitted whenever the number of virtual desktops changes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>previousCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of desktops prior to the change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The new current number of desktops </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="388" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_virtual_desktop_manager_1ac43af72e370e441de30582503f8ed7e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::rowsChanged</definition>
        <argsstring>(uint rows)</argsstring>
        <name>rowsChanged</name>
        <qualifiedname>KWin::VirtualDesktopManager::rowsChanged</qualifiedname>
        <param>
          <type>uint</type>
          <declname>rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signal when the number of rows in the layout changes <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="394" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_virtual_desktop_manager_1a77985fc2aa2d269ca937055ef6f82980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::desktopAdded</definition>
        <argsstring>(KWin::VirtualDesktop *desktop)</argsstring>
        <name>desktopAdded</name>
        <qualifiedname>KWin::VirtualDesktopManager::desktopAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">KWin::VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A new desktop has been created <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desktop</parametername>
</parameternamelist>
<parameterdescription>
<para>the new just crated desktop </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="400" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_virtual_desktop_manager_1ae4653e9f1b10c56eb1421e073ed73cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::desktopRemoved</definition>
        <argsstring>(KWin::VirtualDesktop *desktop)</argsstring>
        <name>desktopRemoved</name>
        <qualifiedname>KWin::VirtualDesktopManager::desktopRemoved</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">KWin::VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A desktop has been removed and is about to be deleted <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desktop</parametername>
</parameternamelist>
<parameterdescription>
<para>the desktop that has been removed. It&apos;s guaranteed to stil la valid pointer when the signal arrives, but it&apos;s about to be deleted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="408" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_virtual_desktop_manager_1aa70de53d9fe2da52c13fb46c27598fe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::currentChanged</definition>
        <argsstring>(KWin::VirtualDesktop *previousDesktop, KWin::VirtualDesktop *newDesktop)</argsstring>
        <name>currentChanged</name>
        <qualifiedname>KWin::VirtualDesktopManager::currentChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">KWin::VirtualDesktop</ref> *</type>
          <declname>previousDesktop</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">KWin::VirtualDesktop</ref> *</type>
          <declname>newDesktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signal emitted whenever the current desktop changes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>previousDesktop</parametername>
</parameternamelist>
<parameterdescription>
<para>The virtual desktop changed from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newDesktop</parametername>
</parameternamelist>
<parameterdescription>
<para>The virtual desktop changed to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="415" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_virtual_desktop_manager_1a8e3bc603265e630def2c35d473ac2269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::currentChanging</definition>
        <argsstring>(KWin::VirtualDesktop *currentDesktop, QPointF offset)</argsstring>
        <name>currentChanging</name>
        <qualifiedname>KWin::VirtualDesktopManager::currentChanging</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">KWin::VirtualDesktop</ref> *</type>
          <declname>currentDesktop</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signal emmitted for realtime desktop switching animations. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentDesktop</parametername>
</parameternamelist>
<parameterdescription>
<para>The current virtual desktop </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The current total change in desktop coordinate Offset x and y are negative if switching Left and Down. Example: x = 0.6 means 60% of the way to the desktop to the right. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="424" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_virtual_desktop_manager_1abeb3f46de5bc238ddcd746383b436e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::currentChangingCancelled</definition>
        <argsstring>()</argsstring>
        <name>currentChangingCancelled</name>
        <qualifiedname>KWin::VirtualDesktopManager::currentChangingCancelled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="425" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_virtual_desktop_manager_1a4446f0f03e6b5123d740dafe27078e59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::layoutChanged</definition>
        <argsstring>(int columns, int rows)</argsstring>
        <name>layoutChanged</name>
        <qualifiedname>KWin::VirtualDesktopManager::layoutChanged</qualifiedname>
        <param>
          <type>int</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signal emitted whenever the desktop layout changes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>columns</parametername>
</parameternamelist>
<parameterdescription>
<para>The new number of columns in the layout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>The new number of rows in the layout </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="432" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_virtual_desktop_manager_1aa6fb207899d7e491561291f0f4393d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::navigationWrappingAroundChanged</definition>
        <argsstring>()</argsstring>
        <name>navigationWrappingAroundChanged</name>
        <qualifiedname>KWin::VirtualDesktopManager::navigationWrappingAroundChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signal emitted whenever the navigationWrappingAround property changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="437" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1aaa15145f1ce5ad6badb16ddaa6b2d8a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::slotSwitchTo</definition>
        <argsstring>()</argsstring>
        <name>slotSwitchTo</name>
        <qualifiedname>KWin::VirtualDesktopManager::slotSwitchTo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common slot for all &quot;Switch to Desktop n&quot; shortcuts. This method uses the sender() method to access some data. DO NOT CALL DIRECTLY! ONLY TO BE USED FROM AN ACTION! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="445" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="875" bodyend="887"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1a3b7c1a97be565309cdb5f2d52ebae5e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::slotNext</definition>
        <argsstring>()</argsstring>
        <name>slotNext</name>
        <qualifiedname>KWin::VirtualDesktopManager::slotNext</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slot for switch to next desktop action. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="450" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="913" bodyend="916"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1a75f2ec00843d6574e5c7db426f471618" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::slotPrevious</definition>
        <argsstring>()</argsstring>
        <name>slotPrevious</name>
        <qualifiedname>KWin::VirtualDesktopManager::slotPrevious</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slot for switch to previous desktop action. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="455" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="908" bodyend="911"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1ad9914c506c27f9c017f5f544d1f3c713" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::slotRight</definition>
        <argsstring>()</argsstring>
        <name>slotRight</name>
        <qualifiedname>KWin::VirtualDesktopManager::slotRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slot for switch to right desktop action. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="460" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="918" bodyend="921"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1a052b17fbcaa10dba6f7df9cbfe80f260" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::slotLeft</definition>
        <argsstring>()</argsstring>
        <name>slotLeft</name>
        <qualifiedname>KWin::VirtualDesktopManager::slotLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slot for switch to left desktop action. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="465" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="903" bodyend="906"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1aa4879b0de408d45b849da23aed2431bb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::slotUp</definition>
        <argsstring>()</argsstring>
        <name>slotUp</name>
        <qualifiedname>KWin::VirtualDesktopManager::slotUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slot for switch to desktop above action. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="470" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="923" bodyend="926"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1ab6318d84f609a04cd079877ba577c023" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::slotDown</definition>
        <argsstring>()</argsstring>
        <name>slotDown</name>
        <qualifiedname>KWin::VirtualDesktopManager::slotDown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slot for switch to desktop below action. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="475" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="898" bodyend="901"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1ad4542a735028936e3724c945b14e8c3e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::gestureReleasedY</definition>
        <argsstring>()</argsstring>
        <name>gestureReleasedY</name>
        <qualifiedname>KWin::VirtualDesktopManager::gestureReleasedY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="480" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="798" bodyend="816"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_virtual_desktop_manager_1a3c987e5890ed43e8c50c7996670e7f62" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::gestureReleasedX</definition>
        <argsstring>()</argsstring>
        <name>gestureReleasedX</name>
        <qualifiedname>KWin::VirtualDesktopManager::gestureReleasedX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="481" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="818" bodyend="836"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a2027a22497420b97945980e58636ceca" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::VirtualDesktopManager::defaultName</definition>
        <argsstring>(int desktop) const</argsstring>
        <name>defaultName</name>
        <qualifiedname>KWin::VirtualDesktopManager::defaultName</qualifiedname>
        <param>
          <type>int</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A default name for the given <computeroutput>desktop</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="487" column="13" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="737" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a4d06b6f3b9950a38d27e4c19322ec025" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::VirtualDesktopManager::initSwitchToShortcuts</definition>
        <argsstring>()</argsstring>
        <name>initSwitchToShortcuts</name>
        <qualifiedname>KWin::VirtualDesktopManager::initSwitchToShortcuts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates all the global keyboard shortcuts for &quot;Switch To Desktop n&quot; actions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="492" column="10" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="838" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1af52b93a8ad0ae39eaa13f94542a5c538" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QAction *</type>
        <definition>QAction * KWin::VirtualDesktopManager::addAction</definition>
        <argsstring>(const QString &amp;name, const KLocalizedString &amp;label, uint value, const QKeySequence &amp;key, void(VirtualDesktopManager::*slot)())</argsstring>
        <name>addAction</name>
        <qualifiedname>KWin::VirtualDesktopManager::addAction</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const KLocalizedString &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void(VirtualDesktopManager::*)()</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an action and connects it to the <computeroutput>slot</computeroutput> in this Manager. This method is meant to be used for the case that an additional information needs to be stored in the action and the label. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The localized name for the action to be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>An additional value added to the label and to the created action </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The global shortcut for the action </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot to invoke when the action is triggered </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="504" column="13" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="852" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_desktop_manager_1a452b2874c9e36bc8019108ac64994c5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QAction *</type>
        <definition>QAction * KWin::VirtualDesktopManager::addAction</definition>
        <argsstring>(const QString &amp;name, const QString &amp;label, const QKeySequence &amp;key, void(VirtualDesktopManager::*slot)())</argsstring>
        <name>addAction</name>
        <qualifiedname>KWin::VirtualDesktopManager::addAction</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void(VirtualDesktopManager::*)()</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an action and connects it to the <computeroutput>slot</computeroutput> in this Manager. Overloaded method for the case that no additional value needs to be passed to the action. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The localized name for the action to be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The global shortcut for the action. If an empty QKeySequence is passed, no global shortcut is defined by default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot to invoke when the action is triggered </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/virtualdesktops.h" line="514" column="13" bodyfile="kwin/src/virtualdesktops.cpp" bodystart="864" bodyend="873"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Manages the number of available virtual desktops, the layout of those and which virtual desktop is the current one. </para>
    </briefdescription>
    <detaileddescription>
<para>This manager is responsible for Virtual Desktop handling inside <ref refid="namespace_k_win" kindref="compound">KWin</ref>. It has a property for the count of available virtual desktops and a property for the currently active virtual desktop. All changes to the number of virtual desktops and the current virtual desktop need to go through this manager.</para>
<para>On all changes a signal is emitted and interested parties should connect to the signal. The manager itself does not interact with other parts of the system. E.g. it does not hide/show windows of desktop changes. This is outside the scope of this manager.</para>
<para>Internally the manager organizes the virtual desktops in a grid allowing to navigate over the virtual desktops. For this a set of convenient methods are available which allow to get the id of an adjacent desktop or to switch to an adjacent desktop. Interested parties should make use of these methods and not replicate the logic to switch to the next desktop. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::VirtualDesktopManager</label>
        <link refid="class_k_win_1_1_virtual_desktop_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::VirtualDesktopManager</label>
        <link refid="class_k_win_1_1_virtual_desktop_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/virtualdesktops.h" line="135" column="1" bodyfile="kwin/src/virtualdesktops.h" bodystart="136" bodyend="533"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a6acdeee3094eb78310eb14e693df9550" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>above</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1af52b93a8ad0ae39eaa13f94542a5c538" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>addAction</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a452b2874c9e36bc8019108ac64994c5e" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>addAction</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ab692028333832da304b5b6bb671b969b" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>below</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a41db9a5b639d7560d2246c7da5f4da81" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>count</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a1d8d81c4d2f75a9b6771449be1a5254c" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>count</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a869eb4fbfc9abb337bf8e514592e588f" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>countChanged</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a854a5b2bad3d4a1bbdd6ef466777b1bd" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>createVirtualDesktop</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1abc4871a760f54bec3110f1a48b804dad" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>current</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a0dc1aa8406b572f7868e30a2fdc2d499" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>current</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1aa70de53d9fe2da52c13fb46c27598fe2" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>currentChanged</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a8e3bc603265e630def2c35d473ac2269" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>currentChanging</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1abeb3f46de5bc238ddcd746383b436e8f" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>currentChangingCancelled</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1aa1edbc43652aa8c5a9951605819c61de" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>currentDesktop</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a2027a22497420b97945980e58636ceca" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>defaultName</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a77985fc2aa2d269ca937055ef6f82980" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>desktopAdded</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a623f4a96d988d03871b91c31b1a05b97" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>desktopForId</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1abd98dbeca5d5d0674a05eef703616f0d" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>desktopForX11Id</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ae4653e9f1b10c56eb1421e073ed73cec" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>desktopRemoved</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a8dd5e6c6a909a82b8aa32fa6823e9e4f" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>desktops</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ad1f5332604277a0529822e027e471f29" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>Direction</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a3c987e5890ed43e8c50c7996670e7f62" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>gestureReleasedX</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ad4542a735028936e3724c945b14e8c3e" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>gestureReleasedY</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a191e6b781832cdb0f785a0634ab4f88e" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>grid</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a9b7c6dbb1c215cc97ea9beb7890dbe47" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>inDirection</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ae5c218c49e2b841b4798286eabe33091" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>inDirection</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ae732def7caf20f5733d372f0731a70ae" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>initShortcuts</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a4d06b6f3b9950a38d27e4c19322ec025" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>initSwitchToShortcuts</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ae6e0b49ea34dd03fbc853fd1040f7a87" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>isNavigationWrappingAround</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a4446f0f03e6b5123d740dafe27078e59" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>layoutChanged</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a13019046a9c1b57983c942be83b33cae" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>load</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a4bb2ed21af43a656fe441b0b7bde483a" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>m_config</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1aceea9f81c281b0579dc2e26fd0285009" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>m_current</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ad5a60c183035232fc1c1fa93c2e328c0" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>m_currentDesktopOffset</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a7a895d5a58357c5fc9e057c3f1395241" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>m_desktops</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a42f6f0cd230522561f5d0962720342b8" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>m_grid</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ae425f9498ef1e172b5ff3725f1c36952" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>m_navigationWrapsAround</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a39d56b9179d14b485492069f10607d8d" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>m_rows</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a2d77a67b90cd831853add8be5375d3cd" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>m_swipeGestureReleasedX</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a1e28afbd96e7ab7fa0cdf21b54965478" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>m_swipeGestureReleasedY</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1aaab2d0f6b4a108e11e014f55cc2fe397" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>m_virtualDesktopManagement</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a99697823bbb3d162799924c07e8d3135" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>maximum</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a1f7bbeb3e281f179354c9ea083ac243b" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>moveTo</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a541261b507ae0fc1472d54170b2b6c8c" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>moveTo</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a115541ea5feaefb0407f533c3b2fcbdd" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>navigationWrappingAround</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1aa6fb207899d7e491561291f0f4393d90" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>navigationWrappingAroundChanged</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ad461a96e8a4faa2b020d5bbd5d9c992a" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>next</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a027c57a045adda2ed6e41d369124b633" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>previous</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a5addae7248f171cb6908059f4102d962" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>removeVirtualDesktop</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ac63755a19665fca7a2e0afb995228e2b" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>removeVirtualDesktop</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a49a3238a72ef63f091911ae215a753de" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>rows</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ac43af72e370e441de30582503f8ed7e5" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>rowsChanged</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a4f2e10764ffb9b8aa59fa1bdbfb3c673" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>save</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a80069fe92fbc0d74626d9f8da316e508" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>setConfig</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1abaf69d1d87ff0b752a15a828b678e867" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>setCount</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ae456ac7afa42a1c05eb8623bd98560d0" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>setCurrent</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a12176e9bc57fefbf74cf557d0fc94782" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>setCurrent</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1add1fedba523087a6a2b53c2a8e4cd1b5" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>setNavigationWrappingAround</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a56e0a800fabd765141dc8db11dfb084a" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>setRootInfo</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a47bc0c3d04fb266f8691de99aac66dce" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>setRows</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a623a75f6fe79cfa100584510a88e1e21" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>setVirtualDesktopManagement</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ab6318d84f609a04cd079877ba577c023" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>slotDown</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a052b17fbcaa10dba6f7df9cbfe80f260" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>slotLeft</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a3b7c1a97be565309cdb5f2d52ebae5e1" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>slotNext</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a75f2ec00843d6574e5c7db426f471618" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>slotPrevious</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ad9914c506c27f9c017f5f544d1f3c713" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>slotRight</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1aaa15145f1ce5ad6badb16ddaa6b2d8a7" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>slotSwitchTo</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1aa4879b0de408d45b849da23aed2431bb" prot="private" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>slotUp</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1acd39bf52a5a47634f359e339b5912710" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>toLeft</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1ac1110762de8c7aaee925d4f266992b08" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>toRight</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1aa6c735d4501f7257be80b6b4212b93a9" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>updateLayout</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a18d0bf0a402049ddff72aefdab1b84da" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>updateRootInfo</name></member>
      <member refid="class_k_win_1_1_virtual_desktop_manager_1a8c6206c73d69c438167eabc29effb40c" prot="public" virt="non-virtual"><scope>KWin::VirtualDesktopManager</scope><name>~VirtualDesktopManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
