<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="screencastbuffer_8h" kind="file" language="C++">
    <compoundname>screencastbuffer.h</compoundname>
    <includes refid="graphicsbufferview_8h" local="yes">core/graphicsbufferview.h</includes>
    <includes refid="syncobjtimeline_8h" local="yes">core/syncobjtimeline.h</includes>
    <includes local="no">pipewire/pipewire.h</includes>
    <includedby refid="screencastbuffer_8cpp" local="yes">kwin/src/plugins/screencast/screencastbuffer.cpp</includedby>
    <includedby refid="screencaststream_8cpp" local="yes">kwin/src/plugins/screencast/screencaststream.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/graphicsbufferview.h</label>
        <link refid="graphicsbufferview_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>core/syncobjtimeline.h</label>
        <link refid="syncobjtimeline_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/plugins/screencast/screencastbuffer.h</label>
        <link refid="screencastbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>QImage</label>
      </node>
      <node id="6">
        <label>QObject</label>
      </node>
      <node id="7">
        <label>QSize</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="13">
        <label>pipewire/pipewire.h</label>
      </node>
      <node id="12">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/plugins/screencast/screencastbuffer.cpp</label>
        <link refid="screencastbuffer_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/plugins/screencast/screencastbuffer.h</label>
        <link refid="screencastbuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>kwin/src/plugins/screencast/screencaststream.cpp</label>
        <link refid="screencaststream_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_screen_cast_buffer" prot="public">KWin::ScreenCastBuffer</innerclass>
    <innerclass refid="class_k_win_1_1_dma_buf_screen_cast_buffer" prot="public">KWin::DmaBufScreenCastBuffer</innerclass>
    <innerclass refid="class_k_win_1_1_mem_fd_screen_cast_buffer" prot="public">KWin::MemFdScreenCastBuffer</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphicsbufferview_8h" kindref="compound">core/graphicsbufferview.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="syncobjtimeline_8h" kindref="compound">core/syncobjtimeline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pipewire/pipewire.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_graphics_buffer_options" kindref="compound">GraphicsBufferOptions</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_k_win_1_1_screen_cast_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_screen_cast_buffer_1a25592993a495d100db800634460aa621" kindref="member">ScreenCastBuffer</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_screen_cast_buffer_1a25592993a495d100db800634460aa621" kindref="member">ScreenCastBuffer</ref>(<ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_screen_cast_buffer_1a788e5d3d51d29f800fbeb39a2a98be33" kindref="member">~ScreenCastBuffer</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*m_buffer;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_k_win_1_1_dma_buf_screen_cast_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DmaBufScreenCastBuffer<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_screen_cast_buffer_1a25592993a495d100db800634460aa621" kindref="member">ScreenCastBuffer</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DmaBufScreenCastBuffer<sp/>*<ref refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a26e76c0f5e7385ab28f9957d1c35c1e3" kindref="member">create</ref>(pw_buffer<sp/>*pwBuffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_graphics_buffer_options" kindref="compound">GraphicsBufferOptions</ref><sp/>&amp;<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1ab0b29adabbc752cb7f782e56f4a11c36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;GLTexture&gt;<sp/><ref refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1ab0b29adabbc752cb7f782e56f4a11c36" kindref="member">texture</ref>;</highlight></codeline>
<codeline lineno="38" refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a53f0e2abe90acbecd7194b1c0ef6f2c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;GLFramebuffer&gt;<sp/><ref refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a53f0e2abe90acbecd7194b1c0ef6f2c3" kindref="member">framebuffer</ref>;</highlight></codeline>
<codeline lineno="39" refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a87a86f4ed29597dfacdb8212846e0625" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;SyncTimeline&gt;<sp/><ref refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a87a86f4ed29597dfacdb8212846e0625" kindref="member">synctimeline</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>DmaBufScreenCastBuffer(<ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*buffer,<sp/>std::shared_ptr&lt;GLTexture&gt;<sp/>&amp;&amp;<ref refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1ab0b29adabbc752cb7f782e56f4a11c36" kindref="member">texture</ref>,<sp/>std::unique_ptr&lt;GLFramebuffer&gt;<sp/>&amp;&amp;<ref refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a53f0e2abe90acbecd7194b1c0ef6f2c3" kindref="member">framebuffer</ref>,<sp/>std::unique_ptr&lt;SyncTimeline&gt;<sp/>&amp;&amp;<ref refid="class_k_win_1_1_dma_buf_screen_cast_buffer_1a87a86f4ed29597dfacdb8212846e0625" kindref="member">synctimeline</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_k_win_1_1_mem_fd_screen_cast_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MemFdScreenCastBuffer<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_screen_cast_buffer_1a25592993a495d100db800634460aa621" kindref="member">ScreenCastBuffer</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MemFdScreenCastBuffer<sp/>*<ref refid="class_k_win_1_1_mem_fd_screen_cast_buffer_1a60fe80bd556c5968e4baa510658ff6c2" kindref="member">create</ref>(pw_buffer<sp/>*pwBuffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_graphics_buffer_options" kindref="compound">GraphicsBufferOptions</ref><sp/>&amp;<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_k_win_1_1_mem_fd_screen_cast_buffer_1ae8d9f0222815fd99aa8728a45c94bc73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_graphics_buffer_view" kindref="compound">GraphicsBufferView</ref><sp/><ref refid="class_k_win_1_1_mem_fd_screen_cast_buffer_1ae8d9f0222815fd99aa8728a45c94bc73" kindref="member">view</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>MemFdScreenCastBuffer(<ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*buffer,<sp/><ref refid="class_k_win_1_1_graphics_buffer_view" kindref="compound">GraphicsBufferView</ref><sp/>&amp;&amp;<ref refid="class_k_win_1_1_mem_fd_screen_cast_buffer_1ae8d9f0222815fd99aa8728a45c94bc73" kindref="member">view</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/plugins/screencast/screencastbuffer.h"/>
  </compounddef>
</doxygen>
