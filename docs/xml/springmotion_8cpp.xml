<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="springmotion_8cpp" kind="file" language="C++">
    <compoundname>springmotion.cpp</compoundname>
    <includes refid="springmotion_8h" local="yes">springmotion.h</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/plugins/slide/springmotion.cpp</label>
        <link refid="springmotion_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>springmotion.h</label>
        <link refid="springmotion_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>QtGlobal</label>
      </node>
      <node id="4">
        <label>chrono</label>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2022<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="springmotion_8h" kindref="compound">springmotion.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>qreal<sp/>lerp(qreal<sp/>a,<sp/>qreal<sp/>b,<sp/>qreal<sp/>t)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>*<sp/>(1<sp/>-<sp/>t)<sp/>+<sp/>b<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_k_win_1_1_spring_motion_1ae70d0b7e56adca95f96f20a548d72898" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_spring_motion_1ae70d0b7e56adca95f96f20a548d72898" kindref="member">SpringMotion::SpringMotion</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_spring_motion_1ae70d0b7e56adca95f96f20a548d72898" kindref="member">SpringMotion</ref>(200.0,<sp/>1.1)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_k_win_1_1_spring_motion_1aaec4096c908fb4d8f67afd77568b74b1" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_spring_motion_1ae70d0b7e56adca95f96f20a548d72898" kindref="member">SpringMotion::SpringMotion</ref>(qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1a17811b2930b0cef4c931abcc169a31a9" kindref="member">springConstant</ref>,<sp/>qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1afcacf0810c7f673e90f85b3e81a40e37" kindref="member">dampingRatio</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_prev({0,<sp/>0})</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_next({0,<sp/>0})</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_t(1.0)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_timestep(1.0<sp/>/<sp/>100.0)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_anchor(0)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_springConstant(springConstant)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_dampingRatio(dampingRatio)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_dampingCoefficient(2<sp/>*<sp/>std::sqrt(m_springConstant)<sp/>*<sp/>m_dampingRatio)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_epsilon(1.0)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_k_win_1_1_spring_motion_1ad6ccafbb4c2f0e2843ebf41259f7fc22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_spring_motion_1ad6ccafbb4c2f0e2843ebf41259f7fc22" kindref="member">SpringMotion::isMoving</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(<ref refid="class_k_win_1_1_spring_motion_1adb0547ac688d6276315a0935de345acd" kindref="member">position</ref>()<sp/>-<sp/><ref refid="class_k_win_1_1_spring_motion_1adb9393d41cb9d298a96b0db0eff0e2f2" kindref="member">anchor</ref>())<sp/>&gt;<sp/>m_epsilon<sp/>||<sp/>std::fabs(<ref refid="class_k_win_1_1_spring_motion_1a515cd7fd689c8d46f279702186a4f1db" kindref="member">velocity</ref>())<sp/>&gt;<sp/>m_epsilon;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_k_win_1_1_spring_motion_1a17811b2930b0cef4c931abcc169a31a9" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1a17811b2930b0cef4c931abcc169a31a9" kindref="member">SpringMotion::springConstant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="43"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_springConstant;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_spring_motion_1afcacf0810c7f673e90f85b3e81a40e37" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1afcacf0810c7f673e90f85b3e81a40e37" kindref="member">SpringMotion::dampingRatio</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="48"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dampingRatio;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_k_win_1_1_spring_motion_1a515cd7fd689c8d46f279702186a4f1db" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1a515cd7fd689c8d46f279702186a4f1db" kindref="member">SpringMotion::velocity</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lerp(m_prev.velocity,<sp/>m_next.velocity,<sp/>m_t);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_k_win_1_1_spring_motion_1aa48045267bb0c01be9fa17cfd1bde67d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_spring_motion_1aa48045267bb0c01be9fa17cfd1bde67d" kindref="member">SpringMotion::setVelocity</ref>(qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1a515cd7fd689c8d46f279702186a4f1db" kindref="member">velocity</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>m_next<sp/>=<sp/>State{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.position<sp/>=<sp/><ref refid="class_k_win_1_1_spring_motion_1adb0547ac688d6276315a0935de345acd" kindref="member">position</ref>(),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.velocity<sp/>=<sp/><ref refid="class_k_win_1_1_spring_motion_1a515cd7fd689c8d46f279702186a4f1db" kindref="member">velocity</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>m_t<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_k_win_1_1_spring_motion_1adb0547ac688d6276315a0935de345acd" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1adb0547ac688d6276315a0935de345acd" kindref="member">SpringMotion::position</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="67"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lerp(m_prev.position,<sp/>m_next.position,<sp/>m_t);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_k_win_1_1_spring_motion_1a7ab9ebf04b8b82460c1fb1e76956cae2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_spring_motion_1a7ab9ebf04b8b82460c1fb1e76956cae2" kindref="member">SpringMotion::setPosition</ref>(qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1adb0547ac688d6276315a0935de345acd" kindref="member">position</ref>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>m_next<sp/>=<sp/>State{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.position<sp/>=<sp/><ref refid="class_k_win_1_1_spring_motion_1adb0547ac688d6276315a0935de345acd" kindref="member">position</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.velocity<sp/>=<sp/><ref refid="class_k_win_1_1_spring_motion_1a515cd7fd689c8d46f279702186a4f1db" kindref="member">velocity</ref>(),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>m_t<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_k_win_1_1_spring_motion_1a9dc952e373ce0862ef402f0f80e04115" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1a9dc952e373ce0862ef402f0f80e04115" kindref="member">SpringMotion::epsilon</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="81"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_epsilon;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_k_win_1_1_spring_motion_1a20a192e292a5b9e00684003f65b21bc0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_spring_motion_1a20a192e292a5b9e00684003f65b21bc0" kindref="member">SpringMotion::setEpsilon</ref>(qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1a9dc952e373ce0862ef402f0f80e04115" kindref="member">epsilon</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>m_epsilon<sp/>=<sp/><ref refid="class_k_win_1_1_spring_motion_1a9dc952e373ce0862ef402f0f80e04115" kindref="member">epsilon</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_k_win_1_1_spring_motion_1adb9393d41cb9d298a96b0db0eff0e2f2" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1adb9393d41cb9d298a96b0db0eff0e2f2" kindref="member">SpringMotion::anchor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="91"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_anchor;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_k_win_1_1_spring_motion_1a83539cacc8faddf33ab245660728716c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_spring_motion_1a83539cacc8faddf33ab245660728716c" kindref="member">SpringMotion::setAnchor</ref>(qreal<sp/><ref refid="class_k_win_1_1_spring_motion_1adb9393d41cb9d298a96b0db0eff0e2f2" kindref="member">anchor</ref>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>m_anchor<sp/>=<sp/><ref refid="class_k_win_1_1_spring_motion_1adb9393d41cb9d298a96b0db0eff0e2f2" kindref="member">anchor</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">SpringMotion::Slope<sp/>SpringMotion::evaluate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>State<sp/>&amp;state,<sp/>qreal<sp/>dt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slope<sp/>&amp;slope)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>State<sp/>next{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.position<sp/>=<sp/>state.position<sp/>+<sp/>slope.dp<sp/>*<sp/>dt,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.velocity<sp/>=<sp/>state.velocity<sp/>+<sp/>slope.dv<sp/>*<sp/>dt,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>math<sp/>here<sp/>follows<sp/>from<sp/>the<sp/>mass-spring-damper<sp/>model<sp/>equation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>springForce<sp/>=<sp/>(m_anchor<sp/>-<sp/>next.position)<sp/>*<sp/>m_springConstant;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>dampingForce<sp/>=<sp/>-next.velocity<sp/>*<sp/>m_dampingCoefficient;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>acceleration<sp/>=<sp/>springForce<sp/>+<sp/>dampingForce;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Slope{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dp<sp/>=<sp/>state.velocity,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dv<sp/>=<sp/>acceleration,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">SpringMotion::State<sp/>SpringMotion::integrate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>State<sp/>&amp;state,<sp/>qreal<sp/>dt)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Runge-Kutta<sp/>method<sp/>(RK4)<sp/>to<sp/>integrate<sp/>the<sp/>mass-spring-damper<sp/>equation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slope<sp/>initial{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dp<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dv<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slope<sp/>k1<sp/>=<sp/>evaluate(state,<sp/>0.0,<sp/>initial);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slope<sp/>k2<sp/>=<sp/>evaluate(state,<sp/>0.5<sp/>*<sp/>dt,<sp/>k1);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slope<sp/>k3<sp/>=<sp/>evaluate(state,<sp/>0.5<sp/>*<sp/>dt,<sp/>k2);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slope<sp/>k4<sp/>=<sp/>evaluate(state,<sp/>dt,<sp/>k3);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>dpdt<sp/>=<sp/>1.0<sp/>/<sp/>6.0<sp/>*<sp/>(k1.dp<sp/>+<sp/>2<sp/>*<sp/>k2.dp<sp/>+<sp/>2<sp/>*<sp/>k3.dp<sp/>+<sp/>k4.dp);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>dvdt<sp/>=<sp/>1.0<sp/>/<sp/>6.0<sp/>*<sp/>(k1.dv<sp/>+<sp/>2<sp/>*<sp/>k2.dv<sp/>+<sp/>2<sp/>*<sp/>k3.dv<sp/>+<sp/>k4.dv);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>State{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.position<sp/>=<sp/>state.position<sp/>+<sp/>dpdt<sp/>*<sp/>dt,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.velocity<sp/>=<sp/>state.velocity<sp/>+<sp/>dvdt<sp/>*<sp/>dt,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_k_win_1_1_spring_motion_1a26148664c8c853e7f9b2c5d9c26d8e33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_spring_motion_1a26148664c8c853e7f9b2c5d9c26d8e33" kindref="member">SpringMotion::advance</ref>(std::chrono::milliseconds<sp/>delta)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_spring_motion_1ad6ccafbb4c2f0e2843ebf41259f7fc22" kindref="member">isMoving</ref>())<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>m_springConstant<sp/>is<sp/>infinite,<sp/>we<sp/>have<sp/>an<sp/>animation<sp/>time<sp/>factor<sp/>of<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>such,<sp/>we<sp/>should<sp/>advance<sp/>to<sp/>the<sp/>target<sp/>immediately.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isinf(m_springConstant))<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_next<sp/>=<sp/>State{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.position<sp/>=<sp/>m_anchor,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.velocity<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>delta<sp/>interval<sp/>is<sp/>not<sp/>multiple<sp/>of<sp/>m_timestep<sp/>precisely,<sp/>the<sp/>previous<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>samples<sp/>will<sp/>be<sp/>linearly<sp/>interpolated<sp/>to<sp/>get<sp/>current<sp/>position<sp/>and<sp/>velocity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>steps<sp/>=<sp/>(delta.count()<sp/>/<sp/>1000.0)<sp/>/<sp/>m_timestep;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m_t<sp/>+=<sp/>steps;<sp/>m_t<sp/>&gt;<sp/>1.0;<sp/>m_t<sp/>-=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prev<sp/>=<sp/>m_next;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_next<sp/>=<sp/>integrate(m_next,<sp/>m_timestep);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/plugins/slide/springmotion.cpp"/>
  </compounddef>
</doxygen>
