<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_offscreen_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::OffscreenEffect</compoundname>
    <basecompoundref refid="class_k_win_1_1_effect" prot="public" virt="non-virtual">KWin::Effect</basecompoundref>
    <derivedcompoundref refid="class_k_win_1_1_color_blindness_correction_effect" prot="public" virt="non-virtual">KWin::ColorBlindnessCorrectionEffect</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_fall_apart_effect" prot="public" virt="non-virtual">KWin::FallApartEffect</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_glide_effect" prot="public" virt="non-virtual">KWin::GlideEffect</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_invert_effect" prot="public" virt="non-virtual">KWin::InvertEffect</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_magic_lamp_effect" prot="public" virt="non-virtual">KWin::MagicLampEffect</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_sheet_effect" prot="public" virt="non-virtual">KWin::SheetEffect</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_system_bell_effect" prot="public" virt="non-virtual">KWin::SystemBellEffect</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_wobbly_windows_effect" prot="public" virt="non-virtual">KWin::WobblyWindowsEffect</derivedcompoundref>
    <includes refid="offscreeneffect_8h" local="no">offscreeneffect.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_offscreen_effect_1a6a454e8bf03cf225e3b207a6c8a4f201" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_offscreen_effect_private" kindref="compound">OffscreenEffectPrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;OffscreenEffectPrivate&gt; KWin::OffscreenEffect::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::OffscreenEffect::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="85" column="21" bodyfile="kwin/src/effect/offscreeneffect.h" bodystart="85" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1ac2af5bb9d718ff03474cdd2d6715a055" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::OffscreenEffect::OffscreenEffect</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>OffscreenEffect</name>
        <qualifiedname>KWin::OffscreenEffect::OffscreenEffect</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="38" column="14" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1ac913e0092c54576890821b0bcb3e7033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::OffscreenEffect::~OffscreenEffect</definition>
        <argsstring>() override</argsstring>
        <name>~OffscreenEffect</name>
        <qualifiedname>KWin::OffscreenEffect::~OffscreenEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="39" column="5"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1adad3bef365b5939d04c257e0731e5013" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::OffscreenEffect::supported</definition>
        <argsstring>()</argsstring>
        <name>supported</name>
        <qualifiedname>KWin::OffscreenEffect::supported</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="41" column="17" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1a0a6ba121aa03a17457d3080054ef1615" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::OffscreenEffect::drawWindow</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, EffectWindow *window, int mask, const QRegion &amp;region, WindowPaintData &amp;data) override</argsstring>
        <name>drawWindow</name>
        <qualifiedname>KWin::OffscreenEffect::drawWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga254b1a3e8bb8b9b671e9b000ca027b7c">drawWindow</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Can be called to draw multiple copies (e.g. thumbnails) of a window. You can change window&apos;s opacity/brightness/etc here, but you can&apos;t do any transformations.</para>
<para>In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="44" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="228" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1a6f9911e49dbaf73975c2f238937930be" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenEffect::redirect</definition>
        <argsstring>(EffectWindow *window)</argsstring>
        <name>redirect</name>
        <qualifiedname>KWin::OffscreenEffect::redirect</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function must be called when the effect wants to animate the specified <emphasis>window</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="50" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="64" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1a503d5105f32353e6a0046b8a0ea91b22" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenEffect::unredirect</definition>
        <argsstring>(EffectWindow *window)</argsstring>
        <name>unredirect</name>
        <qualifiedname>KWin::OffscreenEffect::unredirect</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function must be called when the effect is done animating the specified <emphasis>window</emphasis>. The window will be automatically unredirected if it&apos;s deleted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="55" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="81" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1a770fb27f108f87402051ca3f320092b2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::OffscreenEffect::apply</definition>
        <argsstring>(EffectWindow *window, int mask, WindowPaintData &amp;data, WindowQuadList &amp;quads)</argsstring>
        <name>apply</name>
        <qualifiedname>KWin::OffscreenEffect::apply</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_fall_apart_effect_1a79dc241d91dd5d56df75715ac6f7c944">apply</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_glide_effect_1a453aeeb243a89f0c46eb247f1639b903">apply</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_magic_lamp_effect_1ac22f72637dfb2da5da0749fdcdf05ef6">apply</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_sheet_effect_1a4c9a8848895f3602b173670439428b00">apply</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_wobbly_windows_effect_1a1fe350cb507b59572c72f7e26f8f7741">apply</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref> &amp;</type>
          <declname>quads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override this function to transform the window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="60" column="18" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1ae98f808ad3750003d4a1f7f24fa284a5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenEffect::setShader</definition>
        <argsstring>(EffectWindow *window, GLShader *shader)</argsstring>
        <name>setShader</name>
        <qualifiedname>KWin::OffscreenEffect::setShader</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref> *</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows to specify a <computeroutput>shader</computeroutput> to draw the redirected texture for <computeroutput>window</computeroutput>. Can only be called once the window is redirected. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="66" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1ae390a8c07620d899b467b6c919901649" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenEffect::setVertexSnappingMode</definition>
        <argsstring>(RenderGeometry::VertexSnappingMode mode)</argsstring>
        <name>setVertexSnappingMode</name>
        <qualifiedname>KWin::OffscreenEffect::setVertexSnappingMode</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_geometry_1a7bc1c02ecb839871aadec8895abda2e4" kindref="member">RenderGeometry::VertexSnappingMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set what mode to use to snap the vertices of this effect.</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_render_geometry_1a7bc1c02ecb839871aadec8895abda2e4" kindref="member">RenderGeometry::VertexSnappingMode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="73" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="281" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1a112119e708233a1ddcfac249089f2fee" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::OffscreenEffect::blocksDirectScanout</definition>
        <argsstring>() const override</argsstring>
        <name>blocksDirectScanout</name>
        <qualifiedname>KWin::OffscreenEffect::blocksDirectScanout</qualifiedname>
        <reimplements refid="group__kwineffects_1ga7cf8035c970fcde177e3038d79015289">blocksDirectScanout</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>overwrite this method to return false if your effect does not need to be drawn over opaque fullscreen windows </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="75" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="289" bodyend="292"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_offscreen_effect_1af37ee20e3f9ff00b082b0d670aa0b984" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenEffect::handleWindowDamaged</definition>
        <argsstring>(EffectWindow *window)</argsstring>
        <name>handleWindowDamaged</name>
        <qualifiedname>KWin::OffscreenEffect::handleWindowDamaged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="78" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="256" bodyend="261"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_offscreen_effect_1ab0a1adfa9624b7b8d4dec08db41d5004" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenEffect::handleWindowDeleted</definition>
        <argsstring>(EffectWindow *window)</argsstring>
        <name>handleWindowDeleted</name>
        <qualifiedname>KWin::OffscreenEffect::handleWindowDeleted</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="79" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="263" bodyend="266"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1a15d9bfbb4400d5c1360951a63680deeb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenEffect::setupConnections</definition>
        <argsstring>()</argsstring>
        <name>setupConnections</name>
        <qualifiedname>KWin::OffscreenEffect::setupConnections</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="82" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="268" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_offscreen_effect_1af60a546ffa3327e8aeda25a0bc8e55b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenEffect::destroyConnections</definition>
        <argsstring>()</argsstring>
        <name>destroyConnections</name>
        <qualifiedname>KWin::OffscreenEffect::destroyConnections</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.h" line="83" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="274" bodyend="279"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_offscreen_effect" kindref="compound">OffscreenEffect</ref> class is the base class for effects that paint deformed windows.</para>
<para>Under the hood, the <ref refid="class_k_win_1_1_offscreen_effect" kindref="compound">OffscreenEffect</ref> will paint the window into an offscreen texture and the offscreen texture will be transformed afterwards.</para>
<para>The <ref refid="class_k_win_1_1_offscreen_effect_1a6f9911e49dbaf73975c2f238937930be" kindref="member">redirect()</ref> function must be called when the effect wants to transform a window. Once the effect is no longer interested in the window, the <ref refid="class_k_win_1_1_offscreen_effect_1a503d5105f32353e6a0046b8a0ea91b22" kindref="member">unredirect()</ref> function must be called.</para>
<para>If a window is redirected into offscreen texture, the deform() function will be called to transform the offscreen texture. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>KWin::ColorBlindnessCorrectionEffect</label>
        <link refid="class_k_win_1_1_color_blindness_correction_effect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::FallApartEffect</label>
        <link refid="class_k_win_1_1_fall_apart_effect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>KWin::GlideEffect</label>
        <link refid="class_k_win_1_1_glide_effect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>KWin::InvertEffect</label>
        <link refid="class_k_win_1_1_invert_effect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>KWin::MagicLampEffect</label>
        <link refid="class_k_win_1_1_magic_lamp_effect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::OffscreenEffect</label>
        <link refid="class_k_win_1_1_offscreen_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>KWin::SheetEffect</label>
        <link refid="class_k_win_1_1_sheet_effect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>KWin::SystemBellEffect</label>
        <link refid="class_k_win_1_1_system_bell_effect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>KWin::WobblyWindowsEffect</label>
        <link refid="class_k_win_1_1_wobbly_windows_effect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::OffscreenEffect</label>
        <link refid="class_k_win_1_1_offscreen_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/effect/offscreeneffect.h" line="33" column="1" bodyfile="kwin/src/effect/offscreeneffect.h" bodystart="34" bodyend="86"/>
    <listofallmembers>
      <member refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga3a167fe6d9c46376ed46db13caf2d135" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga0ba05f1463195d0f92ea1dd3396a5d16" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>animationTime</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a770fb27f108f87402051ca3f320092b2" prot="protected" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>apply</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a112119e708233a1ddcfac249089f2fee" prot="protected" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>blocksDirectScanout</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea67d120ab5ce1dc424476e63c132af6c1" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>Blur</name></member>
      <member refid="group__kwineffects_1gab8a94f591b743b59b7285911e641e7d5" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>borderActivated</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aead805f717a48c23959a1e9ecd7722d15d" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>Contrast</name></member>
      <member refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>cursorPos</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a6a454e8bf03cf225e3b207a6c8a4f201" prot="private" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>d</name></member>
      <member refid="group__kwineffects_1ga0c159e00c3a51ca733bea49cf8d52691" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>debug</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1af60a546ffa3327e8aeda25a0bc8e55b5" prot="private" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>destroyConnections</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a0a6ba121aa03a17457d3080054ef1615" prot="protected" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>drawWindow</name></member>
      <member refid="group__kwineffects_1ga7bd8262f4cb2c5c3090c748eb388ad7e" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>Effect</name></member>
      <member refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>Feature</name></member>
      <member refid="group__kwineffects_1gab5e0581ae4b2dffe8014ff5cf6c21158" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>grabbedKeyboardEvent</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1af37ee20e3f9ff00b082b0d670aa0b984" prot="private" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>handleWindowDamaged</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ab0a1adfa9624b7b8d4dec08db41d5004" prot="private" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>handleWindowDeleted</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>HighlightWindows</name></member>
      <member refid="group__kwineffects_1ga7b0ecb57667179e95c188f0ee7416d00" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>interpolate</name></member>
      <member refid="group__kwineffects_1ga596b6c0ed146b97b293f5db5f27fc40f" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>isActive</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea170229312ed2ec0e446ee89ba7f6b6ca" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>Nothing</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ac2af5bb9d718ff03474cdd2d6715a055" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>OffscreenEffect</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dab0de2932c45bde6df3de10d00dbd6fcd" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>PAINT_SCREEN_BACKGROUND_FIRST</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da43acbfc913cae9eb3c363aeb0524f18f" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>PAINT_SCREEN_REGION</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>PAINT_SCREEN_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da124dd798e5f793087e81da77e11a9b1e" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>PAINT_SCREEN_WITH_TRANSFORMED_WINDOWS</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac606d3dcf2dd150234f71c4c39083c7d" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>PAINT_WINDOW_OPAQUE</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da684bb6c6c278b900b6d0c889e79233b8" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>PAINT_WINDOW_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac7237bf4bb4d6ea6d6fb1215db19b45e" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>PAINT_WINDOW_TRANSLUCENT</name></member>
      <member refid="group__kwineffects_1ga44ee94161446ce6fb2502376af6515a8" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>paintScreen</name></member>
      <member refid="group__kwineffects_1ga0f0292db2bf016a0843ef7cc06219378" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>paintWindow</name></member>
      <member refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>perform</name></member>
      <member refid="group__kwineffects_1ga10021cf9704c00d60beae284d53846e2" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>postPaintScreen</name></member>
      <member refid="group__kwineffects_1ga9b7cf82c6f74331cffabb06c63ef914c" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>postPaintWindow</name></member>
      <member refid="group__kwineffects_1ga2edc1b757e36bb6bcbbacde454dfc05c" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>prePaintScreen</name></member>
      <member refid="group__kwineffects_1ga2832c7831c0f49f9f5cf0267ffc53672" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>prePaintWindow</name></member>
      <member refid="group__kwineffects_1ga30fc2cbbdd90f95568a9e350f34bf2b7" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>provides</name></member>
      <member refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>reconfigure</name></member>
      <member refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>ReconfigureAll</name></member>
      <member refid="group__kwineffects_1ga4aebd7d0f695e37678debaa118fa92dc" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>ReconfigureFlag</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a6f9911e49dbaf73975c2f238937930be" prot="protected" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>redirect</name></member>
      <member refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>requestedEffectChainPosition</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea592ea0de7a4d658a1ef9bbb48b18e15a" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>ScreenInversion</name></member>
      <member refid="group__kwineffects_1ga1efc42cd9be15e8200c6e55f6bf47cb8" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>setPositionTransformations</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ae98f808ad3750003d4a1f7f24fa284a5" prot="protected" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>setShader</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a15d9bfbb4400d5c1360951a63680deeb" prot="private" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>setupConnections</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ae390a8c07620d899b467b6c919901649" prot="protected" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>setVertexSnappingMode</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1adad3bef365b5939d04c257e0731e5013" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>supported</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea19036d413806c53978a3234e7eb197c4" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>SystemBell</name></member>
      <member refid="group__kwineffects_1ga2d22a8f0b8a4d81615dff67dc1ef970f" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>tabletPadButtonEvent</name></member>
      <member refid="group__kwineffects_1gaa084e5a45597f5775213715eb5506f63" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>tabletPadRingEvent</name></member>
      <member refid="group__kwineffects_1ga4998fb0983bd97163935cad2c4dedd76" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>tabletPadStripEvent</name></member>
      <member refid="group__kwineffects_1ga1d4ae01f5935ea887a12018d59191cbf" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>tabletToolAxis</name></member>
      <member refid="group__kwineffects_1ga7a984d7d83dfa97962b8404301c6aba9" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>tabletToolButtonEvent</name></member>
      <member refid="group__kwineffects_1ga4ed77506be381680bf664dbc8c20e036" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>tabletToolProximity</name></member>
      <member refid="group__kwineffects_1gaf16e9ca42cceb738fb859d1a1a462548" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>tabletToolTip</name></member>
      <member refid="group__kwineffects_1gaa31554949bc00085e6380b50be16138e" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>touchCancel</name></member>
      <member refid="group__kwineffects_1ga315fd305e7570f41e7bce7db6812381f" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>touchDown</name></member>
      <member refid="group__kwineffects_1ga54d00a9e05b5d4597db40c2f5b1d36de" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>touchMotion</name></member>
      <member refid="group__kwineffects_1gaf3871967d6199eb7c87621bc75b925bb" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a503d5105f32353e6a0046b8a0ea91b22" prot="protected" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>unredirect</name></member>
      <member refid="group__kwineffects_1ga7b142933c38cb9b4a433b768b266e7cb" prot="public" virt="virtual"><scope>KWin::OffscreenEffect</scope><name>windowInputMouseEvent</name></member>
      <member refid="group__kwineffects_1ga50174eb0169aebceb78ebd5aff71c481" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>~Effect</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ac913e0092c54576890821b0bcb3e7033" prot="public" virt="non-virtual"><scope>KWin::OffscreenEffect</scope><name>~OffscreenEffect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
