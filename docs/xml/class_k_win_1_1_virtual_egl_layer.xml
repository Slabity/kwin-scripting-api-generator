<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_virtual_egl_layer" kind="class" language="C++" prot="public">
    <compoundname>KWin::VirtualEglLayer</compoundname>
    <basecompoundref refid="class_k_win_1_1_output_layer" prot="public" virt="non-virtual">KWin::OutputLayer</basecompoundref>
    <includes refid="virtual__egl__backend_8h" local="no">virtual_egl_backend.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_layer_1a6af9fcd253f48d28d87c16afbaa4526b" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_virtual_egl_backend" kindref="compound">VirtualEglBackend</ref> *const</type>
        <definition>VirtualEglBackend* const KWin::VirtualEglLayer::m_backend</definition>
        <argsstring></argsstring>
        <name>m_backend</name>
        <qualifiedname>KWin::VirtualEglLayer::m_backend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="41" column="29" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_layer_1abcfe33f55d4cbf509edcb7d846afabf6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_egl_swapchain" kindref="compound">EglSwapchain</ref> &gt;</type>
        <definition>std::shared_ptr&lt;EglSwapchain&gt; KWin::VirtualEglLayer::m_swapchain</definition>
        <argsstring></argsstring>
        <name>m_swapchain</name>
        <qualifiedname>KWin::VirtualEglLayer::m_swapchain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="42" column="21" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_layer_1a7a29a7e4967a11b4be0098b4e1ae1043" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_egl_swapchain_slot" kindref="compound">EglSwapchainSlot</ref> &gt;</type>
        <definition>std::shared_ptr&lt;EglSwapchainSlot&gt; KWin::VirtualEglLayer::m_current</definition>
        <argsstring></argsstring>
        <name>m_current</name>
        <qualifiedname>KWin::VirtualEglLayer::m_current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="43" column="21" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_layer_1a030b97ce3ad89eec02711184765b0d3f" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_g_l_render_time_query" kindref="compound">GLRenderTimeQuery</ref> &gt;</type>
        <definition>std::unique_ptr&lt;GLRenderTimeQuery&gt; KWin::VirtualEglLayer::m_query</definition>
        <argsstring></argsstring>
        <name>m_query</name>
        <qualifiedname>KWin::VirtualEglLayer::m_query</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="44" column="21" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.h" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_layer_1af3d7a52655e8cb35ad093265c20f7ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::VirtualEglLayer::VirtualEglLayer</definition>
        <argsstring>(Output *output, VirtualEglBackend *backend)</argsstring>
        <name>VirtualEglLayer</name>
        <qualifiedname>KWin::VirtualEglLayer::VirtualEglLayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_egl_backend" kindref="compound">VirtualEglBackend</ref> *</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="31" column="5" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.cpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_layer_1ac90790075eaae995d772de1bc82d79d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::optional&lt; <ref refid="struct_k_win_1_1_output_layer_begin_frame_info" kindref="compound">OutputLayerBeginFrameInfo</ref> &gt;</type>
        <definition>std::optional&lt; OutputLayerBeginFrameInfo &gt; KWin::VirtualEglLayer::doBeginFrame</definition>
        <argsstring>() override</argsstring>
        <name>doBeginFrame</name>
        <qualifiedname>KWin::VirtualEglLayer::doBeginFrame</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1aa468802d01855b8978b27bbc03be0c5b">doBeginFrame</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="33" column="19" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.cpp" bodystart="36" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_layer_1a75ee5e50ce1e9bd2aad38d18e33a2d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::VirtualEglLayer::doEndFrame</definition>
        <argsstring>(const QRegion &amp;renderedRegion, const QRegion &amp;damagedRegion, OutputFrame *frame) override</argsstring>
        <name>doEndFrame</name>
        <qualifiedname>KWin::VirtualEglLayer::doEndFrame</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1a693ed0b18329db5416bab2c60b00304b">doEndFrame</reimplements>
        <param>
          <type>const QRegion &amp;</type>
          <declname>renderedRegion</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>damagedRegion</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="34" column="10" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.cpp" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_layer_1a6e82e63a7c1e89a317454d3eaf7d9b72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> &gt;</type>
        <definition>std::shared_ptr&lt; GLTexture &gt; KWin::VirtualEglLayer::texture</definition>
        <argsstring>() const</argsstring>
        <name>texture</name>
        <qualifiedname>KWin::VirtualEglLayer::texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="36" column="21" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_layer_1af0c6b5b194ff17c518620cdf978c6982" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref> *</type>
        <definition>DrmDevice * KWin::VirtualEglLayer::scanoutDevice</definition>
        <argsstring>() const override</argsstring>
        <name>scanoutDevice</name>
        <qualifiedname>KWin::VirtualEglLayer::scanoutDevice</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1ab43b39c7559453fd517bc4f1ee726784">scanoutDevice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="37" column="15" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_layer_1a4a0cd005c19ea6a8935dbe704a6b7375" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt;</type>
        <definition>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt; KWin::VirtualEglLayer::supportedDrmFormats</definition>
        <argsstring>() const override</argsstring>
        <name>supportedDrmFormats</name>
        <qualifiedname>KWin::VirtualEglLayer::supportedDrmFormats</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1ace0c0e616f28f53a53498291526ff62d">supportedDrmFormats</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="38" column="11" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::OutputLayer</label>
        <link refid="class_k_win_1_1_output_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::VirtualEglLayer</label>
        <link refid="class_k_win_1_1_virtual_egl_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>KWin::BrightnessDevice</label>
        <link refid="class_k_win_1_1_brightness_device"/>
      </node>
      <node id="7">
        <label>KWin::ColorDescription</label>
        <link refid="class_k_win_1_1_color_description"/>
        <childnode refid="7" relation="usage">
          <edgelabel>sRGB</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>KWin::Edid</label>
        <link refid="class_k_win_1_1_edid"/>
      </node>
      <node id="5">
        <label>KWin::Output</label>
        <link refid="class_k_win_1_1_output"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_state</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_information</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_brightnessDevice</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>KWin::Output::Information</label>
        <link refid="struct_k_win_1_1_output_1_1_information"/>
        <childnode refid="9" relation="usage">
          <edgelabel>edid</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>panelOrientation</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>KWin::Output::State</label>
        <link refid="struct_k_win_1_1_output_1_1_state"/>
        <childnode refid="4" relation="usage">
          <edgelabel>manualTransform</edgelabel>
          <edgelabel>transform</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>colorDescription</edgelabel>
          <edgelabel>originalColorDescription</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>KWin::OutputLayer</label>
        <link refid="class_k_win_1_1_output_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_bufferTransform</edgelabel>
          <edgelabel>m_offloadTransform</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_output</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>KWin::OutputTransform</label>
        <link refid="class_k_win_1_1_output_transform"/>
      </node>
      <node id="1">
        <label>KWin::VirtualEglLayer</label>
        <link refid="class_k_win_1_1_virtual_egl_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/virtual/virtual_egl_backend.h" line="28" column="1" bodyfile="kwin/src/backends/virtual/virtual_egl_backend.h" bodystart="29" bodyend="45"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>addRepaint</name></member>
      <member refid="class_k_win_1_1_output_layer_1a0c35fab74670dc55d6778c0ba83f65b3" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>beginFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1abcd7fbb2032b11fdd392da6b6247c725" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>bufferTransform</name></member>
      <member refid="class_k_win_1_1_virtual_egl_layer_1ac90790075eaae995d772de1bc82d79d9" prot="public" virt="virtual"><scope>KWin::VirtualEglLayer</scope><name>doBeginFrame</name></member>
      <member refid="class_k_win_1_1_virtual_egl_layer_1a75ee5e50ce1e9bd2aad38d18e33a2d68" prot="public" virt="virtual"><scope>KWin::VirtualEglLayer</scope><name>doEndFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1a1843ff1def5379cfad784d76df2b5bbb" prot="protected" virt="virtual"><scope>KWin::VirtualEglLayer</scope><name>doImportScanoutBuffer</name></member>
      <member refid="class_k_win_1_1_output_layer_1a742e96adf296b32a4f1efaca57d602fe" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>endFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1ab5b0f0faaea0c7e881db718a64658dc0" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>hotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1a54ee1bcc42a4346ddce4860b37339203" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>importScanoutBuffer</name></member>
      <member refid="class_k_win_1_1_output_layer_1ade038d52e72b155d6ee023524d066d7d" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_virtual_egl_layer_1a6af9fcd253f48d28d87c16afbaa4526b" prot="private" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_backend</name></member>
      <member refid="class_k_win_1_1_output_layer_1ae5b61066054d6f2f817700a2ad38c338" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_bufferTransform</name></member>
      <member refid="class_k_win_1_1_virtual_egl_layer_1a7a29a7e4967a11b4be0098b4e1ae1043" prot="private" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_current</name></member>
      <member refid="class_k_win_1_1_output_layer_1a8b34de14c7ce7f8f60fbb0899afd9d42" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_enabled</name></member>
      <member refid="class_k_win_1_1_output_layer_1a30b570aaca0b11d2a9d395703dedfa2e" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_hotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1abe5864edf1b1412b7a922151b603907d" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_offloadTransform</name></member>
      <member refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_output</name></member>
      <member refid="class_k_win_1_1_virtual_egl_layer_1a030b97ce3ad89eec02711184765b0d3f" prot="private" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_query</name></member>
      <member refid="class_k_win_1_1_output_layer_1a55f0b76d433dc0f1dcbb41ca834e5d00" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_repaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a00e5d48f76d5f74421c89655a66824b7" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_scale</name></member>
      <member refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_scanoutCandidate</name></member>
      <member refid="class_k_win_1_1_output_layer_1a81b53e2bbdca8faeb1fe25f53da077e6" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_sourceRect</name></member>
      <member refid="class_k_win_1_1_virtual_egl_layer_1abcfe33f55d4cbf509edcb7d846afabf6" prot="private" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_swapchain</name></member>
      <member refid="class_k_win_1_1_output_layer_1abf7d3cc9dff1017d98b72640f3a775f0" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>m_targetRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1ab44b7af337ba615f5e5550586b99ecc9" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>needsRepaint</name></member>
      <member refid="class_k_win_1_1_output_layer_1accd1ac89381d7761a47ba22f94200000" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>notifyNoScanoutCandidate</name></member>
      <member refid="class_k_win_1_1_output_layer_1abcbc86757c8850d18529bddc3d537160" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>offloadTransform</name></member>
      <member refid="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>OutputLayer</name></member>
      <member refid="class_k_win_1_1_output_layer_1ac9ce2d0a04165b7d23f4229c0ed8e0e0" prot="public" virt="virtual"><scope>KWin::VirtualEglLayer</scope><name>recommendedSizes</name></member>
      <member refid="class_k_win_1_1_output_layer_1a213d86c0f4be0c717d5e734d43224d01" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>repaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a7e9983dfc6583b829e85961112a76646" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>resetRepaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a75cc900617e49a9125da7bf26f3ab986" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>scale</name></member>
      <member refid="class_k_win_1_1_virtual_egl_layer_1af0c6b5b194ff17c518620cdf978c6982" prot="public" virt="virtual"><scope>KWin::VirtualEglLayer</scope><name>scanoutDevice</name></member>
      <member refid="class_k_win_1_1_output_layer_1a44ada592a0855658e6e5fa96b5b67c04" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>setEnabled</name></member>
      <member refid="class_k_win_1_1_output_layer_1af15fe575d7268641fccc72b1f91b96aa" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>setHotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1a4dfcbf3650f97a4f072008773c981a03" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>setScale</name></member>
      <member refid="class_k_win_1_1_output_layer_1a4836d5c759356c56eb085f9d51f6b9df" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>setSourceRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1a85709e6e7f9019c3a16a362d041a8569" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>setTargetRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1a2ae106b6b52ad73ff92ae9f0aa667461" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>sourceRect</name></member>
      <member refid="class_k_win_1_1_virtual_egl_layer_1a4a0cd005c19ea6a8935dbe704a6b7375" prot="public" virt="virtual"><scope>KWin::VirtualEglLayer</scope><name>supportedDrmFormats</name></member>
      <member refid="class_k_win_1_1_output_layer_1a55b2e80edaf7ad94832884608aca8042" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>targetRect</name></member>
      <member refid="class_k_win_1_1_virtual_egl_layer_1a6e82e63a7c1e89a317454d3eaf7d9b72" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>texture</name></member>
      <member refid="class_k_win_1_1_virtual_egl_layer_1af3d7a52655e8cb35ad093265c20f7ae6" prot="public" virt="non-virtual"><scope>KWin::VirtualEglLayer</scope><name>VirtualEglLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
