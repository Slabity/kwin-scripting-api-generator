<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_k_win_1_1xy" kind="struct" language="C++" prot="public">
    <compoundname>KWin::xy</compoundname>
    <includes refid="colorspace_8h" local="no">colorspace.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_k_win_1_1xy_1a040dea9d11bb134b383dca002dcb1bb9" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::xy::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>KWin::xy::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="39" column="12" bodyfile="kwin/src/core/colorspace.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_k_win_1_1xy_1ab56b8b5d0fb176c365a47028f573b0f5" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::xy::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>KWin::xy::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="40" column="12" bodyfile="kwin/src/core/colorspace.h" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_k_win_1_1xy_1ac83c17d77dfb9516f20f82601c1aa5ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref></type>
        <definition>XYZ KWin::xy::toXYZ</definition>
        <argsstring>() const</argsstring>
        <name>toXYZ</name>
        <qualifiedname>KWin::xy::toXYZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="42" column="9" bodyfile="kwin/src/core/colorspace.cpp" bodystart="29" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1xy_1a3be0453e253d597b194fbdfaf1e55e59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVector2D</type>
        <definition>QVector2D KWin::xy::asVector</definition>
        <argsstring>() const</argsstring>
        <name>asVector</name>
        <qualifiedname>KWin::xy::asVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="43" column="15" bodyfile="kwin/src/core/colorspace.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1xy_1a5d74b2968489b9102e6dbff998f561df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::xy::operator==</definition>
        <argsstring>(const xy &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>KWin::xy::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="44" column="10" bodyfile="kwin/src/core/colorspace.cpp" bodystart="46" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>, with Y unspecified </para>
    </detaileddescription>
    <location file="kwin/src/core/colorspace.h" line="37" column="1" bodyfile="kwin/src/core/colorspace.h" bodystart="38" bodyend="45"/>
    <listofallmembers>
      <member refid="struct_k_win_1_1xy_1a3be0453e253d597b194fbdfaf1e55e59" prot="public" virt="non-virtual"><scope>KWin::xy</scope><name>asVector</name></member>
      <member refid="struct_k_win_1_1xy_1a5d74b2968489b9102e6dbff998f561df" prot="public" virt="non-virtual"><scope>KWin::xy</scope><name>operator==</name></member>
      <member refid="struct_k_win_1_1xy_1ac83c17d77dfb9516f20f82601c1aa5ae" prot="public" virt="non-virtual"><scope>KWin::xy</scope><name>toXYZ</name></member>
      <member refid="struct_k_win_1_1xy_1a040dea9d11bb134b383dca002dcb1bb9" prot="public" virt="non-virtual"><scope>KWin::xy</scope><name>x</name></member>
      <member refid="struct_k_win_1_1xy_1ab56b8b5d0fb176c365a47028f573b0f5" prot="public" virt="non-virtual"><scope>KWin::xy</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
