<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="shmclientbuffer__p_8h" kind="file" language="C++">
    <compoundname>shmclientbuffer_p.h</compoundname>
    <includes refid="graphicsbuffer_8h" local="yes">core/graphicsbuffer.h</includes>
    <includes refid="shmclientbuffer_8h" local="yes">wayland/shmclientbuffer.h</includes>
    <includes refid="filedescriptor_8h" local="yes">utils/filedescriptor.h</includes>
    <includes refid="memorymap_8h" local="yes">utils/memorymap.h</includes>
    <includes local="yes">qwayland-server-wayland.h</includes>
    <includedby refid="display_8cpp" local="yes">kwin/src/wayland/display.cpp</includedby>
    <includedby refid="shmclientbuffer_8cpp" local="yes">kwin/src/wayland/shmclientbuffer.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>utils/memorymap.h</label>
        <link refid="memorymap_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>wayland/shmclientbuffer.h</label>
        <link refid="shmclientbuffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/shmclientbuffer_p.h</label>
        <link refid="shmclientbuffer__p_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
      <node id="6">
        <label>QSize</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="11">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="10">
        <label>sys/mman.h</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/wayland/display.cpp</label>
        <link refid="display_8cpp"/>
      </node>
      <node id="3">
        <label>kwin/src/wayland/shmclientbuffer.cpp</label>
        <link refid="shmclientbuffer_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/wayland/shmclientbuffer_p.h</label>
        <link refid="shmclientbuffer__p_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_shm_client_buffer_integration_private" prot="public">KWin::ShmClientBufferIntegrationPrivate</innerclass>
    <innerclass refid="class_k_win_1_1_shm_pool" prot="public">KWin::ShmPool</innerclass>
    <innerclass refid="struct_k_win_1_1_shm_access" prot="public">KWin::ShmAccess</innerclass>
    <innerclass refid="class_k_win_1_1_shm_client_buffer" prot="public">KWin::ShmClientBuffer</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphicsbuffer_8h" kindref="compound">core/graphicsbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shmclientbuffer_8h" kindref="compound">wayland/shmclientbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filedescriptor_8h" kindref="compound">utils/filedescriptor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memorymap_8h" kindref="compound">utils/memorymap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-server-wayland.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_k_win_1_1_shm_client_buffer_integration_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_shm_client_buffer_integration_private_1a1bcd526e4bb8c14c2f3afbdab1950913" kindref="member">ShmClientBufferIntegrationPrivate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::wl_shm</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shm_client_buffer_integration_private_1a1bcd526e4bb8c14c2f3afbdab1950913" kindref="member">ShmClientBufferIntegrationPrivate</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*display,<sp/><ref refid="class_k_win_1_1_shm_client_buffer_integration" kindref="compound">ShmClientBufferIntegration</ref><sp/>*<ref refid="class_k_win_1_1_shm_client_buffer_integration_private_1a7e8f9f4f56043e90f41edece4da661cf" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_k_win_1_1_shm_client_buffer_integration_private_1a7e8f9f4f56043e90f41edece4da661cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shm_client_buffer_integration" kindref="compound">ShmClientBufferIntegration</ref><sp/>*<ref refid="class_k_win_1_1_shm_client_buffer_integration_private_1a7e8f9f4f56043e90f41edece4da661cf" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_client_buffer_integration_private_1a99c4380be0e36de424825169fe5edd60" kindref="member">shm_bind_resource</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_client_buffer_integration_private_1afe1688ab35112ca2d1a6e940e5a486a6" kindref="member">shm_create_pool</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>int32_t<sp/>fd,<sp/>int32_t<sp/>size)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_k_win_1_1_shm_pool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_shm_pool_1acce2fcbe2beb03a676dde7f3287fff97" kindref="member">ShmPool</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWaylandServer::wl_shm_pool</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shm_pool_1acce2fcbe2beb03a676dde7f3287fff97" kindref="member">ShmPool</ref>(<ref refid="class_k_win_1_1_shm_client_buffer_integration" kindref="compound">ShmClientBufferIntegration</ref><sp/>*<ref refid="class_k_win_1_1_shm_pool_1a00ccafdcaf05337142576e832cf516b9" kindref="member">integration</ref>,<sp/>wl_client<sp/>*client,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>uint32_t<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>,<sp/><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref><sp/>&amp;&amp;<ref refid="class_k_win_1_1_shm_pool_1a767ddb34486520cd08b5926f1ecf38b4" kindref="member">fd</ref>,<sp/>std::shared_ptr&lt;MemoryMap&gt;<sp/><ref refid="class_k_win_1_1_shm_pool_1abb2e9f8ac9407e44214f4c211cb8124d" kindref="member">mapping</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_pool_1a15c6df994ef0db4a7aa5dad79eb609a4" kindref="member">ref</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_pool_1a381e977a8f10fa6483ee4458159793a4" kindref="member">unref</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_k_win_1_1_shm_pool_1a00ccafdcaf05337142576e832cf516b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shm_client_buffer_integration" kindref="compound">ShmClientBufferIntegration</ref><sp/>*<ref refid="class_k_win_1_1_shm_pool_1a00ccafdcaf05337142576e832cf516b9" kindref="member">integration</ref>;</highlight></codeline>
<codeline lineno="40" refid="class_k_win_1_1_shm_pool_1abb2e9f8ac9407e44214f4c211cb8124d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;MemoryMap&gt;<sp/><ref refid="class_k_win_1_1_shm_pool_1abb2e9f8ac9407e44214f4c211cb8124d" kindref="member">mapping</ref>;</highlight></codeline>
<codeline lineno="41" refid="class_k_win_1_1_shm_pool_1a767ddb34486520cd08b5926f1ecf38b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref><sp/><ref refid="class_k_win_1_1_shm_pool_1a767ddb34486520cd08b5926f1ecf38b4" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="42" refid="class_k_win_1_1_shm_pool_1aca2331cb7f3f1d2ba47d0edf9109e561" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_pool_1aca2331cb7f3f1d2ba47d0edf9109e561" kindref="member">refCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="43" refid="class_k_win_1_1_shm_pool_1a1165629251fdd631c288341cc8c9cb27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_pool_1a1165629251fdd631c288341cc8c9cb27" kindref="member">sigbusImpossible</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_pool_1a0cc2c2121791847c9801dddf8f7d2580" kindref="member">shm_pool_destroy_resource</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_pool_1ac2a45ab119f23829f0b9fc7f859841ad" kindref="member">shm_pool_create_buffer</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>int32_t<sp/>offset,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height,<sp/>int32_t<sp/>stride,<sp/>uint32_t<sp/><ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_pool_1ae2184e19c227f79e54367c2ae9997c1d" kindref="member">shm_pool_destroy</ref>(Resource<sp/>*resource)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_pool_1a4aba1c605a86faefad0d8a40a729be36" kindref="member">shm_pool_resize</ref>(Resource<sp/>*resource,<sp/>int32_t<sp/>size)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_k_win_1_1_shm_access" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_shm_access" kindref="compound">ShmAccess</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="struct_k_win_1_1_shm_access_1a2432665c2a82c8b631d2826af31c0ee5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;MemoryMap&gt;<sp/><ref refid="struct_k_win_1_1_shm_access_1a2432665c2a82c8b631d2826af31c0ee5" kindref="member">mapping</ref>;</highlight></codeline>
<codeline lineno="55" refid="struct_k_win_1_1_shm_access_1a7cff54d113180a9224204c10278e6ec9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_shm_access_1a7cff54d113180a9224204c10278e6ec9" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56" refid="struct_k_win_1_1_shm_access_1acb127ec746cd5db8db1c959ba0d84510" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;ShmAccess<sp/>*&gt;<sp/><ref refid="struct_k_win_1_1_shm_access_1acb127ec746cd5db8db1c959ba0d84510" kindref="member">next</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_k_win_1_1_shm_client_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KWIN_EXPORT<sp/><ref refid="class_k_win_1_1_shm_client_buffer_1a34ff0f689e3a4afcd444bab8e86cfb44" kindref="member">ShmClientBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_graphics_buffer_1af0d40610e9115f323dcfa0a2d1f67697" kindref="member">GraphicsBuffer</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shm_client_buffer_1a34ff0f689e3a4afcd444bab8e86cfb44" kindref="member">ShmClientBuffer</ref>(<ref refid="class_k_win_1_1_shm_pool" kindref="compound">ShmPool</ref><sp/>*pool,<sp/><ref refid="struct_k_win_1_1_shm_attributes" kindref="compound">ShmAttributes</ref><sp/>attributes,<sp/>wl_client<sp/>*client,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shm_client_buffer_1a34ff0f689e3a4afcd444bab8e86cfb44" kindref="member">~ShmClientBuffer</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_graphics_buffer_1_1_map" kindref="compound">Map</ref><sp/><ref refid="class_k_win_1_1_shm_client_buffer_1a706d0cad9e7266765d494751804f541c" kindref="member">map</ref>(MapFlags<sp/>flags)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_client_buffer_1a8b26c2bc0ce83be21dbe4efadf9844f2" kindref="member">unmap</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/><ref refid="class_k_win_1_1_shm_client_buffer_1ad558f66ba21118d75bdacc476ef62f40" kindref="member">size</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_client_buffer_1ac5508bf87f99094b6c3abb4d1b1adeeb" kindref="member">hasAlphaChannel</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_shm_attributes" kindref="compound">ShmAttributes</ref><sp/>*<ref refid="class_k_win_1_1_shm_client_buffer_1adbf3435ac6039d8afc308d0cad46c9d9" kindref="member">shmAttributes</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shm_client_buffer_1a34ff0f689e3a4afcd444bab8e86cfb44" kindref="member">ShmClientBuffer</ref><sp/>*<ref refid="class_k_win_1_1_shm_client_buffer_1a9989acfda9c64db3e152b34a261caa28" kindref="member">get</ref>(wl_resource<sp/>*resource);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buffer_destroy_resource(wl_resource<sp/>*resource);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buffer_destroy(wl_client<sp/>*client,<sp/>wl_resource<sp/>*resource);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_buffer_interface<sp/>implementation;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*m_resource<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shm_pool" kindref="compound">ShmPool</ref><sp/>*m_shmPool;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_shm_attributes" kindref="compound">ShmAttributes</ref><sp/>m_shmAttributes;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;ShmAccess&gt;<sp/>m_shmAccess;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/shmclientbuffer_p.h"/>
  </compounddef>
</doxygen>
