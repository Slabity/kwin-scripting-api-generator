<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_wrapper" kind="class" language="C++" prot="public">
    <compoundname>KWinWrapper</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_wrapper_1af1721f862739bd883967550c83d4e89d" prot="private" static="no" mutable="no">
        <type><ref refid="structwl__socket" kindref="compound">wl_socket</ref> *</type>
        <definition>wl_socket* KWinWrapper::m_socket</definition>
        <argsstring></argsstring>
        <name>m_socket</name>
        <qualifiedname>KWinWrapper::m_socket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="58" column="15" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_wrapper_1a08ca0f52a3461d577b508208a9ccace9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWinWrapper::m_crashCount</definition>
        <argsstring></argsstring>
        <name>m_crashCount</name>
        <qualifiedname>KWinWrapper::m_crashCount</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="60" column="9" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_wrapper_1ad097ccbf07a7dd17c0106791b814c852" prot="private" static="no" mutable="no">
        <type>QProcess *</type>
        <definition>QProcess* KWinWrapper::m_kwinProcess</definition>
        <argsstring></argsstring>
        <name>m_kwinProcess</name>
        <qualifiedname>KWinWrapper::m_kwinProcess</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="61" column="14" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_wrapper_1a67508b0145d2ee6e80f3349dbae1c045" prot="private" static="no" mutable="no">
        <type>const std::chrono::microseconds</type>
        <definition>const std::chrono::microseconds KWinWrapper::m_watchdogInterval</definition>
        <argsstring></argsstring>
        <name>m_watchdogInterval</name>
        <qualifiedname>KWinWrapper::m_watchdogInterval</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="63" column="37" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_wrapper_1ab73409f24a46049e286a0f488b8c11a5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWinWrapper::m_watchdogIntervalOk</definition>
        <argsstring></argsstring>
        <name>m_watchdogIntervalOk</name>
        <qualifiedname>KWinWrapper::m_watchdogIntervalOk</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="64" column="10" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_wrapper_1af1320549d817749a084c41215c1f784d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWinWrapper::KWinWrapper</definition>
        <argsstring>(QObject *parent)</argsstring>
        <name>KWinWrapper</name>
        <qualifiedname>KWinWrapper::KWinWrapper</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="50" column="5" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="72" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_wrapper_1a001781d420e88ae2ac881765dd73f54b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWinWrapper::~KWinWrapper</definition>
        <argsstring>()</argsstring>
        <name>~KWinWrapper</name>
        <qualifiedname>KWinWrapper::~KWinWrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="51" column="5" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_wrapper_1ab93e345585c6283633eea6e1b20500d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWinWrapper::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <qualifiedname>KWinWrapper::run</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="53" column="10" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="106" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_wrapper_1a3a94096900cd319779eba393bee87170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWinWrapper::restart</definition>
        <argsstring>()</argsstring>
        <name>restart</name>
        <qualifiedname>KWinWrapper::restart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="54" column="10" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_wrapper_1aba93dc8660ef53c089263ee48d4eec7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWinWrapper::terminate</definition>
        <argsstring>(std::chrono::milliseconds timeout)</argsstring>
        <name>terminate</name>
        <qualifiedname>KWinWrapper::terminate</qualifiedname>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="55" column="10" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="173" bodyend="184"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWinWrapper</label>
        <link refid="class_k_win_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWinWrapper</label>
        <link refid="class_k_win_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" line="46" column="1" bodyfile="kwin/src/helpers/wayland_wrapper/kwin_wrapper.cpp" bodystart="47" bodyend="70"/>
    <listofallmembers>
      <member refid="class_k_win_wrapper_1af1320549d817749a084c41215c1f784d" prot="public" virt="non-virtual"><scope>KWinWrapper</scope><name>KWinWrapper</name></member>
      <member refid="class_k_win_wrapper_1a08ca0f52a3461d577b508208a9ccace9" prot="private" virt="non-virtual"><scope>KWinWrapper</scope><name>m_crashCount</name></member>
      <member refid="class_k_win_wrapper_1ad097ccbf07a7dd17c0106791b814c852" prot="private" virt="non-virtual"><scope>KWinWrapper</scope><name>m_kwinProcess</name></member>
      <member refid="class_k_win_wrapper_1af1721f862739bd883967550c83d4e89d" prot="private" virt="non-virtual"><scope>KWinWrapper</scope><name>m_socket</name></member>
      <member refid="class_k_win_wrapper_1a67508b0145d2ee6e80f3349dbae1c045" prot="private" virt="non-virtual"><scope>KWinWrapper</scope><name>m_watchdogInterval</name></member>
      <member refid="class_k_win_wrapper_1ab73409f24a46049e286a0f488b8c11a5" prot="private" virt="non-virtual"><scope>KWinWrapper</scope><name>m_watchdogIntervalOk</name></member>
      <member refid="class_k_win_wrapper_1a3a94096900cd319779eba393bee87170" prot="public" virt="non-virtual"><scope>KWinWrapper</scope><name>restart</name></member>
      <member refid="class_k_win_wrapper_1ab93e345585c6283633eea6e1b20500d5" prot="public" virt="non-virtual"><scope>KWinWrapper</scope><name>run</name></member>
      <member refid="class_k_win_wrapper_1aba93dc8660ef53c089263ee48d4eec7c" prot="public" virt="non-virtual"><scope>KWinWrapper</scope><name>terminate</name></member>
      <member refid="class_k_win_wrapper_1a001781d420e88ae2ac881765dd73f54b" prot="public" virt="non-virtual"><scope>KWinWrapper</scope><name>~KWinWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
