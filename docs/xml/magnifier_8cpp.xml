<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="magnifier_8cpp" kind="file" language="C++">
    <compoundname>magnifier.cpp</compoundname>
    <includes refid="magnifier_8h" local="yes">magnifier.h</includes>
    <includes local="yes">magnifierconfig.h</includes>
    <includes local="no">QAction</includes>
    <includes local="no">KStandardActions</includes>
    <includes refid="renderviewport_8h" local="yes">core/renderviewport.h</includes>
    <includes refid="effecthandler_8h" local="yes">effect/effecthandler.h</includes>
    <includes refid="eglcontext_8h" local="yes">opengl/eglcontext.h</includes>
    <includes refid="glutils_8h" local="yes">opengl/glutils.h</includes>
    <includes local="no">KGlobalAccel</includes>
    <includes local="yes">moc_magnifier.cpp</includes>
    <incdepgraph>
      <node id="23">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>core/renderviewport.h</label>
        <link refid="renderviewport_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>effect/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>effect/effecthandler.h</label>
        <link refid="effecthandler_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>effect/effectwindow.h</label>
        <link refid="effectwindow_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>opengl/eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>opengl/glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>opengl/glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>opengl/glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>opengl/glutils.h</label>
        <link refid="glutils_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/plugins/magnifier/magnifier.cpp</label>
        <link refid="magnifier_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>magnifier.h</label>
        <link refid="magnifier_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>KGlobalAccel</label>
      </node>
      <node id="13">
        <label>KPluginFactory</label>
      </node>
      <node id="14">
        <label>KSharedConfig</label>
      </node>
      <node id="17">
        <label>KStandardActions</label>
      </node>
      <node id="16">
        <label>QAction</label>
      </node>
      <node id="26">
        <label>QByteArray</label>
      </node>
      <node id="54">
        <label>QColor</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="29">
        <label>QDebug</label>
      </node>
      <node id="36">
        <label>QEasingCurve</label>
      </node>
      <node id="46">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="58">
        <label>QFlags</label>
      </node>
      <node id="40">
        <label>QHash</label>
      </node>
      <node id="37">
        <label>QIcon</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="27">
        <label>QList</label>
      </node>
      <node id="41">
        <label>QLoggingCategory</label>
      </node>
      <node id="55">
        <label>QMatrix3x3</label>
      </node>
      <node id="25">
        <label>QMatrix4x4</label>
      </node>
      <node id="21">
        <label>QObject</label>
      </node>
      <node id="38">
        <label>QPair</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="30">
        <label>QRect</label>
      </node>
      <node id="32">
        <label>QRectF</label>
      </node>
      <node id="12">
        <label>QRegion</label>
      </node>
      <node id="39">
        <label>QSet</label>
      </node>
      <node id="28">
        <label>QSize</label>
      </node>
      <node id="42">
        <label>QStack</label>
      </node>
      <node id="49">
        <label>QString</label>
      </node>
      <node id="31">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="56">
        <label>QVector3D</label>
      </node>
      <node id="35">
        <label>QWindow</label>
      </node>
      <node id="5">
        <label>config-kwin.h</label>
      </node>
      <node id="50">
        <label>epoxy/egl.h</label>
      </node>
      <node id="47">
        <label>epoxy/gl.h</label>
      </node>
      <node id="43">
        <label>functional</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="15">
        <label>magnifierconfig.h</label>
      </node>
      <node id="59">
        <label>map</label>
      </node>
      <node id="60">
        <label>memory</label>
      </node>
      <node id="65">
        <label>moc_magnifier.cpp</label>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="62">
        <label>ranges</label>
      </node>
      <node id="63">
        <label>span</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2007<sp/>Lubos<sp/>Lunak<sp/>&lt;l.lunak@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2007<sp/>Christian<sp/>Nitschkowski<sp/>&lt;christian.nitschkowski@kdemail.net&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2011<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="magnifier_8h" kindref="compound">magnifier.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KConfigSkeleton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;magnifierconfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QAction&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KStandardActions&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderviewport_8h" kindref="compound">core/renderviewport.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effecthandler_8h" kindref="compound">effect/effecthandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eglcontext_8h" kindref="compound">opengl/eglcontext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glutils_8h" kindref="compound">opengl/glutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KGlobalAccel&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_k_win_1_1_magnifier_effect_1a0c8e47a07e69d3ef57713f6b9188d554" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_magnifier_effect_1a0c8e47a07e69d3ef57713f6b9188d554" kindref="member">MagnifierEffect::MagnifierEffect</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_zoom(1)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_targetZoom(1)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_lastPresentTime(std::chrono::milliseconds::zero())</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_texture(nullptr)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_fbo(nullptr)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>MagnifierConfig::instance(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;config());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>QAction<sp/>*a;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>KStandardActions::zoomIn(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;MagnifierEffect::zoomIn,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Plus)<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Equal));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Plus)<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Equal));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>KStandardActions::zoomOut(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;MagnifierEffect::zoomOut,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Minus));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Minus));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>KStandardActions::actualSize(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;MagnifierEffect::toggle,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_0));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_0));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1ace7df1c309d2c4a64e324d6a52c680ca" kindref="member">EffectsHandler::mouseChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;MagnifierEffect::slotMouseChanged);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1af265803a52b130d505ab9f8f66a30eb0" kindref="member">EffectsHandler::windowAdded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;MagnifierEffect::slotWindowAdded);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>windows<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;stackingOrder();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*window<sp/>:<sp/>windows)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slotWindowAdded(window);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_magnifier_effect_1a0d8f43191c8edbe7a38882a4d63e6270" kindref="member">reconfigure</ref>(<ref refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" kindref="member">ReconfigureAll</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_k_win_1_1_magnifier_effect_1af52b0ef0e45779440ca5065bddd6e466" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_magnifier_effect_1af52b0ef0e45779440ca5065bddd6e466" kindref="member">MagnifierEffect::~MagnifierEffect</ref>()</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>zoom<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>MagnifierConfig::setInitialZoom(m_targetZoom);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>MagnifierConfig::self()-&gt;save();</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_k_win_1_1_magnifier_effect_1ac151fc1fbe1e5fea5c78e77f7d027be8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_magnifier_effect_1ac151fc1fbe1e5fea5c78e77f7d027be8" kindref="member">MagnifierEffect::supported</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;openglContext()<sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;openglContext()-&gt;supportsBlits();</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_k_win_1_1_magnifier_effect_1a0d8f43191c8edbe7a38882a4d63e6270" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_magnifier_effect_1a0d8f43191c8edbe7a38882a4d63e6270" kindref="member">MagnifierEffect::reconfigure</ref>(ReconfigureFlags)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>MagnifierConfig::self()-&gt;read();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/>=<sp/>MagnifierConfig::width();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>height<sp/>=<sp/>MagnifierConfig::height();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>m_magnifierSize<sp/>=<sp/>QSize(width,<sp/>height);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>saved<sp/>zoom<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>m_targetZoom<sp/>=<sp/>MagnifierConfig::initialZoom();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_targetZoom<sp/>!=<sp/>m_zoom)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggle();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_k_win_1_1_magnifier_effect_1a5108c180a2b6a90916445e5083605150" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_magnifier_effect_1a5108c180a2b6a90916445e5083605150" kindref="member">MagnifierEffect::prePaintScreen</ref>(<ref refid="class_k_win_1_1_screen_pre_paint_data" kindref="compound">ScreenPrePaintData</ref><sp/>&amp;data,<sp/>std::chrono::milliseconds<sp/>presentTime)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>m_lastPresentTime.count()<sp/>?<sp/>(presentTime<sp/>-<sp/>m_lastPresentTime).count()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>!=<sp/>m_targetZoom)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>time<sp/>/<sp/><ref refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" kindref="member">animationTime</ref>(500ms);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_targetZoom<sp/>&gt;<sp/>m_zoom)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zoom<sp/>=<sp/>std::min(m_zoom<sp/>*<sp/>std::max(1<sp/>+<sp/>diff,<sp/>1.2),<sp/>m_targetZoom);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zoom<sp/>=<sp/>std::max(m_zoom<sp/>*<sp/>std::min(1<sp/>-<sp/>diff,<sp/>0.8),<sp/>m_targetZoom);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zoom<sp/>ended<sp/>-<sp/>delete<sp/>FBO<sp/>and<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fbo.reset();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture.reset();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>!=<sp/>m_targetZoom)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastPresentTime<sp/>=<sp/>presentTime;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastPresentTime<sp/>=<sp/>std::chrono::milliseconds::zero();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;prePaintScreen(data,<sp/>presentTime);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>!=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="group__kwineffects_1ga3ff0cb052f03ff7f243927e8082a33fd" kindref="member">paint</ref><sp/>+=<sp/>magnifierArea().adjusted(-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/>-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_k_win_1_1_magnifier_effect_1ac6a4b12d7aa9f92d2944763e6d916948" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_magnifier_effect_1ac6a4b12d7aa9f92d2944763e6d916948" kindref="member">MagnifierEffect::paintScreen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;renderTarget,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref><sp/>&amp;viewport,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*screen)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;paintScreen(renderTarget,<sp/>viewport,<sp/>mask,<sp/>region,<sp/>screen);<sp/></highlight><highlight class="comment">//<sp/>paint<sp/>normal<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>!=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>right<sp/>area<sp/>from<sp/>the<sp/>current<sp/>rendered<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>area<sp/>=<sp/>magnifierArea();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>cursor<sp/>=<sp/><ref refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" kindref="member">cursorPos</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>viewport.<ref refid="class_k_win_1_1_render_viewport_1aa06db1277771d5021b3e7be43de747f3" kindref="member">scale</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>srcArea(cursor.x()<sp/>-<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)area.width()<sp/>/<sp/>(m_zoom<sp/>*<sp/>2),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor.y()<sp/>-<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)area.height()<sp/>/<sp/>(m_zoom<sp/>*<sp/>2),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)area.width()<sp/>/<sp/>m_zoom,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)area.height()<sp/>/<sp/>m_zoom);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;isOpenGLCompositing())<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fbo-&gt;blitFromRenderTarget(renderTarget,<sp/>viewport,<sp/>srcArea.toRect(),<sp/>QRect(QPoint(),<sp/>m_fbo-&gt;size()));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>paint<sp/>magnifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1aedd0dd423df032415b439a08c6f70fed" kindref="member">pushShader</ref>(<ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184a85736ea5bc8da56c443818dfff6ef91f" kindref="member">ShaderTrait::MapTexture</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>mvp<sp/>=<sp/>viewport.<ref refid="class_k_win_1_1_render_viewport_1a57942b073324499fae7848baf801d9a5" kindref="member">projectionMatrix</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvp.translate(area.x()<sp/>*<sp/>scale,<sp/>area.y()<sp/>*<sp/>scale);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;setUniform(<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a45f966892aa9712b434b27ea5513b63a" kindref="member">GLShader::Mat4Uniform::ModelViewProjectionMatrix</ref>,<sp/>mvp);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture-&gt;render(area.size()<sp/>*<sp/>scale);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1a51d84e1d8c0d651b4968afdb3fba96c6" kindref="member">popShader</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer" kindref="compound">GLVertexBuffer</ref><sp/>*vbo<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_vertex_buffer_1a4f61e01fc150ca4d947bbf78ba2a9ab8" kindref="member">GLVertexBuffer::streamingBuffer</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbo-&gt;<ref refid="class_k_win_1_1_g_l_vertex_buffer_1a2e51e925e06dac9fc80941f0febda075" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>areaF<sp/>=<sp/><ref refid="namespace_k_win_1ad2cb4485a63133f92ea417a626f28b6e" kindref="member">scaledRect</ref>(area,<sp/>scale);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>frame<sp/>=<sp/><ref refid="namespace_k_win_1ad2cb4485a63133f92ea417a626f28b6e" kindref="member">scaledRect</ref>(area.adjusted(-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/>-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>),<sp/>scale);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;QVector2D&gt;<sp/>verts;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.reserve(4<sp/>*<sp/>6<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.right(),<sp/>frame.top()));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.left(),<sp/>frame.top()));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.left(),<sp/>areaF.top()));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.left(),<sp/>areaF.top()));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.right(),<sp/>areaF.top()));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.right(),<sp/>frame.top()));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(areaF.left(),<sp/>frame.top()));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.left(),<sp/>frame.top()));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.left(),<sp/>frame.bottom()));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.left(),<sp/>frame.bottom()));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(areaF.left(),<sp/>frame.bottom()));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(areaF.left(),<sp/>frame.top()));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.right(),<sp/>frame.top()));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(areaF.right(),<sp/>frame.top()));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(areaF.right(),<sp/>frame.bottom()));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(areaF.right(),<sp/>frame.bottom()));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.right(),<sp/>frame.bottom()));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.right(),<sp/>frame.top()));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.right(),<sp/>areaF.bottom()));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.left(),<sp/>areaF.bottom()));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.left(),<sp/>frame.bottom()));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.left(),<sp/>frame.bottom()));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.right(),<sp/>frame.bottom()));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.push_back(QVector2D(frame.right(),<sp/>areaF.bottom()));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbo-&gt;<ref refid="class_k_win_1_1_g_l_vertex_buffer_1ab720ea8aa5676f8dc8bfb3788e8ed1a0" kindref="member">setVertices</ref>(verts);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shader_binder" kindref="compound">ShaderBinder</ref><sp/>binder(<ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184a7974630d5c51a3472fbe51739f285185" kindref="member">ShaderTrait::UniformColor</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binder.<ref refid="class_k_win_1_1_shader_binder_1affc54487256b4a0ab0fe1289170df1f8" kindref="member">shader</ref>()-&gt;<ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a45f966892aa9712b434b27ea5513b63a" kindref="member">GLShader::Mat4Uniform::ModelViewProjectionMatrix</ref>,<sp/>viewport.<ref refid="class_k_win_1_1_render_viewport_1a57942b073324499fae7848baf801d9a5" kindref="member">projectionMatrix</ref>());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binder.<ref refid="class_k_win_1_1_shader_binder_1affc54487256b4a0ab0fe1289170df1f8" kindref="member">shader</ref>()-&gt;<ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a5cd975ed881a6c02777c28ff85e3bf9bacb5feb1b7314637725a2e73bdc9f7295" kindref="member">GLShader::ColorUniform::Color</ref>,<sp/>QColor(0,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbo-&gt;<ref refid="class_k_win_1_1_g_l_vertex_buffer_1a89f55da383c6fd166cca16c4d5e2b428" kindref="member">render</ref>(GL_TRIANGLES);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_k_win_1_1_magnifier_effect_1a72e81fe3004ccbac58646d39b9e3ad31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_magnifier_effect_1a72e81fe3004ccbac58646d39b9e3ad31" kindref="member">MagnifierEffect::postPaintScreen</ref>()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>!=<sp/>m_targetZoom)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect<sp/>framedarea<sp/>=<sp/>magnifierArea().adjusted(-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/>-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;addRepaint(framedarea);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;postPaintScreen();</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">QRect<sp/>MagnifierEffect::magnifierArea(QPointF<sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="198"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRect(pos.x()<sp/>-<sp/>m_magnifierSize.width()<sp/>/<sp/>2,<sp/>pos.y()<sp/>-<sp/>m_magnifierSize.height()<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_magnifierSize.width(),<sp/>m_magnifierSize.height());</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MagnifierEffect::zoomIn()</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>m_targetZoom<sp/>*=<sp/>1.2;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1aa8a3368f17c08de910a182b1666bf610" kindref="member">isOpenGLCompositing</ref>()<sp/>&amp;&amp;<sp/>!m_texture)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">makeOpenGLContextCurrent</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a22b5bb33ada7c4b53f73c57f5405289f" kindref="member">GLTexture::allocate</ref>(GL_RGBA16F,<sp/>m_magnifierSize);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_texture)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture-&gt;setContentTransform(OutputTransform());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fbo<sp/>=<sp/>std::make_unique&lt;GLFramebuffer&gt;(m_texture.get());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a424c34eb4c6c98d766f16159488465a2" kindref="member">addRepaint</ref>(magnifierArea().adjusted(-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/>-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>));</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MagnifierEffect::zoomOut()</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>m_targetZoom<sp/>/=<sp/>1.2;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_targetZoom<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_targetZoom<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>==<sp/>m_targetZoom)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">makeOpenGLContextCurrent</ref>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fbo.reset();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture.reset();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a424c34eb4c6c98d766f16159488465a2" kindref="member">addRepaint</ref>(magnifierArea().adjusted(-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/>-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>));</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MagnifierEffect::toggle()</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_targetZoom<sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_targetZoom<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1aa8a3368f17c08de910a182b1666bf610" kindref="member">isOpenGLCompositing</ref>()<sp/>&amp;&amp;<sp/>!m_texture)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">makeOpenGLContextCurrent</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a22b5bb33ada7c4b53f73c57f5405289f" kindref="member">GLTexture::allocate</ref>(GL_RGBA16F,<sp/>m_magnifierSize);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_texture)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_texture-&gt;setContentTransform(OutputTransform());</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fbo<sp/>=<sp/>std::make_unique&lt;GLFramebuffer&gt;(m_texture.get());</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_targetZoom<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a424c34eb4c6c98d766f16159488465a2" kindref="member">addRepaint</ref>(magnifierArea().adjusted(-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/>-<ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>,<sp/><ref refid="namespace_k_win_1aa0568a0fd9474c8cf7a12ba63722240a" kindref="member">FRAME_WIDTH</ref>));</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MagnifierEffect::slotMouseChanged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;old,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::MouseButtons,<sp/>Qt::MouseButtons,<sp/>Qt::KeyboardModifiers,<sp/>Qt::KeyboardModifiers)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>old<sp/>&amp;&amp;<sp/>m_zoom<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>full<sp/>repaint<sp/>as<sp/>we<sp/>might<sp/>lose<sp/>some<sp/>change<sp/>events<sp/>on<sp/>fast<sp/>mouse<sp/>movements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>Bug<sp/>187658</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" kindref="member">addRepaintFull</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MagnifierEffect::slotWindowAdded(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(w,<sp/>&amp;<ref refid="class_k_win_1_1_effect_window_1a14d82213bbcf4280fc5a1061858370ba" kindref="member">EffectWindow::windowDamaged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;MagnifierEffect::slotWindowDamaged);</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MagnifierEffect::slotWindowDamaged()</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_magnifier_effect_1a03ef7e8ec474936ff0a77a25c6ab0337" kindref="member">isActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a424c34eb4c6c98d766f16159488465a2" kindref="member">addRepaint</ref>(magnifierArea());</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_k_win_1_1_magnifier_effect_1a03ef7e8ec474936ff0a77a25c6ab0337" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_magnifier_effect_1a03ef7e8ec474936ff0a77a25c6ab0337" kindref="member">MagnifierEffect::isActive</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="276"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_zoom<sp/>!=<sp/>1.0<sp/>||<sp/>m_zoom<sp/>!=<sp/>m_targetZoom;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_k_win_1_1_magnifier_effect_1a6c3356d5fe88fe89d000ae51ed4d44c2" refkind="member"><highlight class="normal">QSize<sp/><ref refid="class_k_win_1_1_magnifier_effect_1a5588c41429578b477636d9bce1ae6b6e" kindref="member">MagnifierEffect::magnifierSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="281"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_magnifierSize;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_k_win_1_1_magnifier_effect_1ac2933b6129fcd90ceed1531de07fb4b8" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_magnifier_effect_1a19437f1d748339a33f3b23e9a1a9ded4" kindref="member">MagnifierEffect::targetZoom</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="286"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_targetZoom;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_magnifier.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/plugins/magnifier/magnifier.cpp"/>
  </compounddef>
</doxygen>
