<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_effect_window_visible_ref" kind="class" language="C++" prot="public">
    <compoundname>KWin::EffectWindowVisibleRef</compoundname>
    <includes refid="effectwindow_8h" local="no">effectwindow.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_effect_window_visible_ref_1a12012fff67470011a53d509ee4069e0a" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
        <definition>EffectWindow* KWin::EffectWindowVisibleRef::m_window</definition>
        <argsstring></argsstring>
        <name>m_window</name>
        <qualifiedname>KWin::EffectWindowVisibleRef::m_window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectwindow.h" line="957" column="18" bodyfile="kwin/src/effect/effectwindow.h" bodystart="957" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_effect_window_visible_ref_1a9d1bf4e685fdd11897c854a5a254e7fd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::EffectWindowVisibleRef::m_reason</definition>
        <argsstring></argsstring>
        <name>m_reason</name>
        <qualifiedname>KWin::EffectWindowVisibleRef::m_reason</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectwindow.h" line="958" column="9" bodyfile="kwin/src/effect/effectwindow.h" bodystart="958" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_effect_window_visible_ref_1a148bbce4ab7fbbee098e043c646455c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::EffectWindowVisibleRef::EffectWindowVisibleRef</definition>
        <argsstring>()</argsstring>
        <name>EffectWindowVisibleRef</name>
        <qualifiedname>KWin::EffectWindowVisibleRef::EffectWindowVisibleRef</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectwindow.h" line="904" column="5" bodyfile="kwin/src/effect/effectwindow.h" bodystart="904" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effect_window_visible_ref_1affd739ea8893c1ecf2ec145ec2bb4bb9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::EffectWindowVisibleRef::EffectWindowVisibleRef</definition>
        <argsstring>(EffectWindow *window, int reason)</argsstring>
        <name>EffectWindowVisibleRef</name>
        <qualifiedname>KWin::EffectWindowVisibleRef::EffectWindowVisibleRef</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectwindow.h" line="910" column="14" bodyfile="kwin/src/effect/effectwindow.h" bodystart="910" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effect_window_visible_ref_1a4069d058ae58ee2e4bda162d6625b49e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::EffectWindowVisibleRef::EffectWindowVisibleRef</definition>
        <argsstring>(const EffectWindowVisibleRef &amp;other)</argsstring>
        <name>EffectWindowVisibleRef</name>
        <qualifiedname>KWin::EffectWindowVisibleRef::EffectWindowVisibleRef</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_effect_window_visible_ref" kindref="compound">EffectWindowVisibleRef</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectwindow.h" line="917" column="5" bodyfile="kwin/src/effect/effectwindow.h" bodystart="917" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effect_window_visible_ref_1a8c81d5ae47678b29bffa033c7b174187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::EffectWindowVisibleRef::~EffectWindowVisibleRef</definition>
        <argsstring>()</argsstring>
        <name>~EffectWindowVisibleRef</name>
        <qualifiedname>KWin::EffectWindowVisibleRef::~EffectWindowVisibleRef</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectwindow.h" line="926" column="5" bodyfile="kwin/src/effect/effectwindow.h" bodystart="926" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effect_window_visible_ref_1a8bff45bab387ab70a565eaf07856df1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::EffectWindowVisibleRef::reason</definition>
        <argsstring>() const</argsstring>
        <name>reason</name>
        <qualifiedname>KWin::EffectWindowVisibleRef::reason</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectwindow.h" line="933" column="9" bodyfile="kwin/src/effect/effectwindow.h" bodystart="933" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effect_window_visible_ref_1a8a5fd7aa40f4ec1b666a12f10a847423" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_effect_window_visible_ref" kindref="compound">EffectWindowVisibleRef</ref> &amp;</type>
        <definition>EffectWindowVisibleRef &amp; KWin::EffectWindowVisibleRef::operator=</definition>
        <argsstring>(const EffectWindowVisibleRef &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>KWin::EffectWindowVisibleRef::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_effect_window_visible_ref" kindref="compound">EffectWindowVisibleRef</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectwindow.h" line="938" column="28" bodyfile="kwin/src/effect/effectwindow.h" bodystart="938" bodyend="949"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effect_window_visible_ref_1afda53eb80d3aaf65837ec7b7958b8e31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::EffectWindowVisibleRef::isNull</definition>
        <argsstring>() const</argsstring>
        <name>isNull</name>
        <qualifiedname>KWin::EffectWindowVisibleRef::isNull</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectwindow.h" line="951" column="10" bodyfile="kwin/src/effect/effectwindow.h" bodystart="951" bodyend="954"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_effect_window_visible_ref" kindref="compound">EffectWindowVisibleRef</ref> provides a convenient way to force the visible status of a window until an effect is finished animating it. </para>
    </detaileddescription>
    <location file="kwin/src/effect/effectwindow.h" line="901" column="1" bodyfile="kwin/src/effect/effectwindow.h" bodystart="902" bodyend="959"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_effect_window_visible_ref_1a148bbce4ab7fbbee098e043c646455c6" prot="public" virt="non-virtual"><scope>KWin::EffectWindowVisibleRef</scope><name>EffectWindowVisibleRef</name></member>
      <member refid="class_k_win_1_1_effect_window_visible_ref_1affd739ea8893c1ecf2ec145ec2bb4bb9" prot="public" virt="non-virtual"><scope>KWin::EffectWindowVisibleRef</scope><name>EffectWindowVisibleRef</name></member>
      <member refid="class_k_win_1_1_effect_window_visible_ref_1a4069d058ae58ee2e4bda162d6625b49e" prot="public" virt="non-virtual"><scope>KWin::EffectWindowVisibleRef</scope><name>EffectWindowVisibleRef</name></member>
      <member refid="class_k_win_1_1_effect_window_visible_ref_1afda53eb80d3aaf65837ec7b7958b8e31" prot="public" virt="non-virtual"><scope>KWin::EffectWindowVisibleRef</scope><name>isNull</name></member>
      <member refid="class_k_win_1_1_effect_window_visible_ref_1a9d1bf4e685fdd11897c854a5a254e7fd" prot="private" virt="non-virtual"><scope>KWin::EffectWindowVisibleRef</scope><name>m_reason</name></member>
      <member refid="class_k_win_1_1_effect_window_visible_ref_1a12012fff67470011a53d509ee4069e0a" prot="private" virt="non-virtual"><scope>KWin::EffectWindowVisibleRef</scope><name>m_window</name></member>
      <member refid="class_k_win_1_1_effect_window_visible_ref_1a8a5fd7aa40f4ec1b666a12f10a847423" prot="public" virt="non-virtual"><scope>KWin::EffectWindowVisibleRef</scope><name>operator=</name></member>
      <member refid="class_k_win_1_1_effect_window_visible_ref_1a8bff45bab387ab70a565eaf07856df1a" prot="public" virt="non-virtual"><scope>KWin::EffectWindowVisibleRef</scope><name>reason</name></member>
      <member refid="class_k_win_1_1_effect_window_visible_ref_1a8c81d5ae47678b29bffa033c7b174187" prot="public" virt="non-virtual"><scope>KWin::EffectWindowVisibleRef</scope><name>~EffectWindowVisibleRef</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
