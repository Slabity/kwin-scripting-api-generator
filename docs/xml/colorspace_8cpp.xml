<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="colorspace_8cpp" kind="file" language="C++">
    <compoundname>colorspace.cpp</compoundname>
    <includes refid="colorspace_8h" local="yes">colorspace.h</includes>
    <includes refid="colorpipeline_8h" local="yes">colorpipeline.h</includes>
    <includes local="no">QtAssert</includes>
    <incdepgraph>
      <node id="8">
        <label>colorlut3d.h</label>
        <link refid="colorlut3d_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>colorpipeline.h</label>
        <link refid="colorpipeline_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/core/colorspace.cpp</label>
        <link refid="colorspace_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>colortransformation.h</label>
        <link refid="colortransformation_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>QMatrix4x4</label>
      </node>
      <node id="9">
        <label>QVector</label>
      </node>
      <node id="5">
        <label>QVector2D</label>
      </node>
      <node id="15">
        <label>QtAssert</label>
      </node>
      <node id="6">
        <label>kwin_export.h</label>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
      <node id="3">
        <label>optional</label>
      </node>
      <node id="12">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>tuple</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="colorspace_8cpp_1a52a86118f3e9c2dfcd42e364151e6248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QDebug</type>
        <definition>QDebug operator&lt;&lt;</definition>
        <argsstring>(QDebug debug, const KWin::TransferFunction &amp;tf)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>QDebug</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_transfer_function" kindref="compound">KWin::TransferFunction</ref> &amp;</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.cpp" line="822" column="1" bodyfile="kwin/src/core/colorspace.cpp" bodystart="822" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="colorspace_8cpp_1a5532d1efb88d069c50129e4e591b81d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QDebug</type>
        <definition>QDebug operator&lt;&lt;</definition>
        <argsstring>(QDebug debug, const KWin::XYZ &amp;xyz)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>QDebug</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>const <ref refid="struct_k_win_1_1_x_y_z" kindref="compound">KWin::XYZ</ref> &amp;</type>
          <declname>xyz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.cpp" line="829" column="1" bodyfile="kwin/src/core/colorspace.cpp" bodystart="829" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="colorspace_8cpp_1a986866e69725ee7d6a10be66791807f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QDebug</type>
        <definition>QDebug operator&lt;&lt;</definition>
        <argsstring>(QDebug debug, const KWin::xyY &amp;xyY)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>QDebug</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>const <ref refid="struct_k_win_1_1xy_y" kindref="compound">KWin::xyY</ref> &amp;</type>
          <declname>xyY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.cpp" line="836" column="1" bodyfile="kwin/src/core/colorspace.cpp" bodystart="836" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="colorspace_8cpp_1a69cf1dcf3f8da031285265c26757da40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QDebug</type>
        <definition>QDebug operator&lt;&lt;</definition>
        <argsstring>(QDebug debug, const KWin::xy &amp;xy)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>QDebug</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>const <ref refid="struct_k_win_1_1xy" kindref="compound">KWin::xy</ref> &amp;</type>
          <declname>xy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.cpp" line="843" column="1" bodyfile="kwin/src/core/colorspace.cpp" bodystart="843" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="colorspace_8cpp_1a681a3a4c265ad073e71e5daf9ad52829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QDebug</type>
        <definition>QDebug operator&lt;&lt;</definition>
        <argsstring>(QDebug debug, const KWin::Colorimetry &amp;color)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>QDebug</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_colorimetry" kindref="compound">KWin::Colorimetry</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.cpp" line="850" column="1" bodyfile="kwin/src/core/colorspace.cpp" bodystart="850" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="colorspace_8cpp_1a340bbb47e220019ba4c3892c933fd484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QDebug</type>
        <definition>QDebug operator&lt;&lt;</definition>
        <argsstring>(QDebug debug, const KWin::ColorDescription &amp;color)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>QDebug</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">KWin::ColorDescription</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.cpp" line="857" column="1" bodyfile="kwin/src/core/colorspace.cpp" bodystart="857" bodyend="862"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colorspace_8h" kindref="compound">colorspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colorpipeline_8h" kindref="compound">colorpipeline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtAssert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>matrixFromColumns(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;first,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;second,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;third)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>ret;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(0,<sp/>0)<sp/>=<sp/>first.x();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(1,<sp/>0)<sp/>=<sp/>first.y();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(2,<sp/>0)<sp/>=<sp/>first.z();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(0,<sp/>1)<sp/>=<sp/>second.x();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(1,<sp/>1)<sp/>=<sp/>second.y();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(2,<sp/>1)<sp/>=<sp/>second.z();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(0,<sp/>2)<sp/>=<sp/>third.x();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(1,<sp/>2)<sp/>=<sp/>third.y();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(2,<sp/>2)<sp/>=<sp/>third.z();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="struct_k_win_1_1xy_1ac83c17d77dfb9516f20f82601c1aa5ae" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="struct_k_win_1_1xy_1ac83c17d77dfb9516f20f82601c1aa5ae" kindref="member">xy::toXYZ</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="30"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1xy_1ab56b8b5d0fb176c365a47028f573b0f5" kindref="member">y</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.X<sp/>=<sp/><ref refid="struct_k_win_1_1xy_1a040dea9d11bb134b383dca002dcb1bb9" kindref="member">x</ref><sp/>/<sp/><ref refid="struct_k_win_1_1xy_1ab56b8b5d0fb176c365a47028f573b0f5" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Y<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Z<sp/>=<sp/>(1<sp/>-<sp/><ref refid="struct_k_win_1_1xy_1a040dea9d11bb134b383dca002dcb1bb9" kindref="member">x</ref><sp/>-<sp/><ref refid="struct_k_win_1_1xy_1ab56b8b5d0fb176c365a47028f573b0f5" kindref="member">y</ref>)<sp/>/<sp/><ref refid="struct_k_win_1_1xy_1ab56b8b5d0fb176c365a47028f573b0f5" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="struct_k_win_1_1xy_1a3be0453e253d597b194fbdfaf1e55e59" refkind="member"><highlight class="normal">QVector2D<sp/><ref refid="struct_k_win_1_1xy_1a3be0453e253d597b194fbdfaf1e55e59" kindref="member">xy::asVector</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="42"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVector2D(<ref refid="struct_k_win_1_1xy_1a040dea9d11bb134b383dca002dcb1bb9" kindref="member">x</ref>,<sp/><ref refid="struct_k_win_1_1xy_1ab56b8b5d0fb176c365a47028f573b0f5" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="struct_k_win_1_1xy_1a5d74b2968489b9102e6dbff998f561df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy_1a5d74b2968489b9102e6dbff998f561df" kindref="member">xy::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="47"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qFuzzyCompare(<ref refid="struct_k_win_1_1xy_1a040dea9d11bb134b383dca002dcb1bb9" kindref="member">x</ref>,<sp/>other.<ref refid="struct_k_win_1_1xy_1a040dea9d11bb134b383dca002dcb1bb9" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>qFuzzyCompare(<ref refid="struct_k_win_1_1xy_1ab56b8b5d0fb176c365a47028f573b0f5" kindref="member">y</ref>,<sp/>other.<ref refid="struct_k_win_1_1xy_1ab56b8b5d0fb176c365a47028f573b0f5" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">xyY::toXYZ</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.X<sp/>=<sp/><ref refid="struct_k_win_1_1xy_y_1a00bb34c2efe6fe8de9ada3597d028f6b" kindref="member">Y</ref><sp/>*<sp/><ref refid="struct_k_win_1_1xy_y_1a11c9514947a30621dd27a40ed017f6eb" kindref="member">x</ref><sp/>/<sp/><ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Y<sp/>=<sp/><ref refid="struct_k_win_1_1xy_y_1a00bb34c2efe6fe8de9ada3597d028f6b" kindref="member">Y</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Z<sp/>=<sp/><ref refid="struct_k_win_1_1xy_y_1a00bb34c2efe6fe8de9ada3597d028f6b" kindref="member">Y</ref><sp/>*<sp/>(1<sp/>-<sp/><ref refid="struct_k_win_1_1xy_y_1a11c9514947a30621dd27a40ed017f6eb" kindref="member">x</ref><sp/>-<sp/><ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref>)<sp/>/<sp/><ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="struct_k_win_1_1xy_y_1a9e65a211b74f8f0fdf348264bcb93083" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy_y_1a9e65a211b74f8f0fdf348264bcb93083" kindref="member">xyY::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="65"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qFuzzyCompare(<ref refid="struct_k_win_1_1xy_y_1a11c9514947a30621dd27a40ed017f6eb" kindref="member">x</ref>,<sp/>other.<ref refid="struct_k_win_1_1xy_y_1a11c9514947a30621dd27a40ed017f6eb" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>qFuzzyCompare(<ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref>,<sp/>other.<ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>qFuzzyCompare(<ref refid="struct_k_win_1_1xy_y_1a00bb34c2efe6fe8de9ada3597d028f6b" kindref="member">Y</ref>,<sp/>other.<ref refid="struct_k_win_1_1xy_y_1a00bb34c2efe6fe8de9ada3597d028f6b" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="struct_k_win_1_1_x_y_z_1a6f6f55a638f620caf33d292e5be201fd" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/><ref refid="struct_k_win_1_1_x_y_z_1a6f6f55a638f620caf33d292e5be201fd" kindref="member">XYZ::toxyY</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref><sp/>+<sp/><ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref><sp/>+<sp/><ref refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qFuzzyIsNull(sum))<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>nonsense,<sp/>but<sp/>at<sp/>least<sp/>won&apos;t<sp/>crash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Y<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref><sp/>/<sp/>sum,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref><sp/>/<sp/>sum,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Y<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="struct_k_win_1_1_x_y_z_1a431f73a64eb85847a6e697acf7f2a35e" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="struct_k_win_1_1_x_y_z_1a431f73a64eb85847a6e697acf7f2a35e" kindref="member">XYZ::toxy</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="90"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref><sp/>+<sp/><ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref><sp/>+<sp/><ref refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qFuzzyIsNull(sum))<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>nonsense,<sp/>but<sp/>at<sp/>least<sp/>won&apos;t<sp/>crash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.x<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref><sp/>/<sp/>sum,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.y<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref><sp/>/<sp/>sum,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="struct_k_win_1_1_x_y_z_1aae6fc222397c7f714966ef9ac2e8fa14" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="struct_k_win_1_1_x_y_z_1aae6fc222397c7f714966ef9ac2e8fa14" kindref="member">XYZ::operator*</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="106"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.X<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref><sp/>*<sp/>factor,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Y<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref><sp/>*<sp/>factor,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Z<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" kindref="member">Z</ref><sp/>*<sp/>factor,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="struct_k_win_1_1_x_y_z_1a355b8fa7bc53def211f97aaff26f5d61" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="struct_k_win_1_1_x_y_z_1a355b8fa7bc53def211f97aaff26f5d61" kindref="member">XYZ::operator/</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>divisor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.X<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref><sp/>/<sp/>divisor,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Y<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref><sp/>/<sp/>divisor,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Z<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" kindref="member">Z</ref><sp/>/<sp/>divisor,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="struct_k_win_1_1_x_y_z_1a3ffb64ac574f447be09edaabd728f18a" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="struct_k_win_1_1_x_y_z_1a3ffb64ac574f447be09edaabd728f18a" kindref="member">XYZ::operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="124"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.X<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref><sp/>+<sp/>other.<ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref>,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Y<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref><sp/>+<sp/>other.<ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Z<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" kindref="member">Z</ref><sp/>+<sp/>other.<ref refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" kindref="member">Z</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="struct_k_win_1_1_x_y_z_1a29fb60bd3bc8ee4b53057f811c07ca25" refkind="member"><highlight class="normal">QVector3D<sp/><ref refid="struct_k_win_1_1_x_y_z_1a29fb60bd3bc8ee4b53057f811c07ca25" kindref="member">XYZ::asVector</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="133"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVector3D(<ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref>,<sp/><ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref>,<sp/><ref refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="struct_k_win_1_1_x_y_z_1ae91c883816b868d587e5c5fbff8ed9e4" refkind="member"><highlight class="normal"><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="struct_k_win_1_1_x_y_z_1ae91c883816b868d587e5c5fbff8ed9e4" kindref="member">XYZ::fromVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;vector)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.X<sp/>=<sp/>vector.x(),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Y<sp/>=<sp/>vector.y(),</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Z<sp/>=<sp/>vector.z(),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="struct_k_win_1_1_x_y_z_1a1c3a90c96fe1b9e0fb14a4aee77f7646" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z_1a1c3a90c96fe1b9e0fb14a4aee77f7646" kindref="member">XYZ::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="147"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qFuzzyCompare(<ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref>,<sp/>other.<ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>qFuzzyCompare(<ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref>,<sp/>other.<ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>qFuzzyCompare(<ref refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" kindref="member">Z</ref>,<sp/>other.<ref refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="class_k_win_1_1_colorimetry_1a7c4edbbb8804bfbdab7670a55691a6b9" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_colorimetry_1a7c4edbbb8804bfbdab7670a55691a6b9" kindref="member">Colorimetry::chromaticAdaptationMatrix</ref>(<ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/>sourceWhitepoint,<sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/>destinationWhitepoint)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>bradford<sp/>=<sp/>[]()<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>ret;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(0,<sp/>0)<sp/>=<sp/>0.8951;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(0,<sp/>1)<sp/>=<sp/>0.2664;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(0,<sp/>2)<sp/>=<sp/>-0.1614;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(1,<sp/>0)<sp/>=<sp/>-0.7502;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(1,<sp/>1)<sp/>=<sp/>1.7135;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(1,<sp/>2)<sp/>=<sp/>0.0367;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(2,<sp/>0)<sp/>=<sp/>0.0389;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(2,<sp/>1)<sp/>=<sp/>-0.0685;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(2,<sp/>2)<sp/>=<sp/>1.0296;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>inverseBradford<sp/>=<sp/>[]()<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>ret;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(0,<sp/>0)<sp/>=<sp/>0.9869929;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(0,<sp/>1)<sp/>=<sp/>-0.1470543;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(0,<sp/>2)<sp/>=<sp/>0.1599627;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(1,<sp/>0)<sp/>=<sp/>0.4323053;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(1,<sp/>1)<sp/>=<sp/>0.5183603;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(1,<sp/>2)<sp/>=<sp/>0.0492912;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(2,<sp/>0)<sp/>=<sp/>-0.0085287;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(2,<sp/>1)<sp/>=<sp/>0.0400428;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret(2,<sp/>2)<sp/>=<sp/>0.9684867;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceWhitepoint<sp/>==<sp/>destinationWhitepoint)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QMatrix4x4{};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>factors<sp/>=<sp/>(bradford<sp/>*<sp/>destinationWhitepoint.<ref refid="struct_k_win_1_1_x_y_z_1a29fb60bd3bc8ee4b53057f811c07ca25" kindref="member">asVector</ref>())<sp/>/<sp/>(bradford<sp/>*<sp/>sourceWhitepoint.<ref refid="struct_k_win_1_1_x_y_z_1a29fb60bd3bc8ee4b53057f811c07ca25" kindref="member">asVector</ref>());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>adaptation{};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>adaptation(0,<sp/>0)<sp/>=<sp/>factors.x();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>adaptation(1,<sp/>1)<sp/>=<sp/>factors.y();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>adaptation(2,<sp/>2)<sp/>=<sp/>factors.z();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inverseBradford<sp/>*<sp/>adaptation<sp/>*<sp/>bradford;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_k_win_1_1_colorimetry_1a4274b830c99c619ad0d12750d9f95f4d" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_colorimetry_1a4274b830c99c619ad0d12750d9f95f4d" kindref="member">Colorimetry::calculateToXYZMatrix</ref>(<ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>,<sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>,<sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>,<sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>r<sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.asVector();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>g<sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.asVector();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>b<sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.asVector();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>component_scale<sp/>=<sp/>(matrixFromColumns(r,<sp/>g,<sp/>b)).inverted()<sp/>*<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.asVector();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matrixFromColumns(r<sp/>*<sp/>component_scale.x(),<sp/>g<sp/>*<sp/>component_scale.y(),<sp/>b<sp/>*<sp/>component_scale.z());</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_k_win_1_1_colorimetry_1a298126a235c07aa8ca700b197dcaf135" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a298126a235c07aa8ca700b197dcaf135" kindref="member">Colorimetry::interpolateGamutTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref><sp/>&amp;one,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="202"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_red<sp/>*<sp/>(1<sp/>-<sp/>factor)<sp/>+<sp/>one.<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>()<sp/>*<sp/>factor,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_green<sp/>*<sp/>(1<sp/>-<sp/>factor)<sp/>+<sp/>one.<ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>()<sp/>*<sp/>factor,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_blue<sp/>*<sp/>(1<sp/>-<sp/>factor)<sp/>+<sp/>one.<ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>()<sp/>*<sp/>factor,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_white,<sp/></highlight><highlight class="comment">//<sp/>whitepoint<sp/>should<sp/>stay<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>triangleArea(QVector2D<sp/>p1,<sp/>QVector2D<sp/>p2,<sp/>QVector2D<sp/>p3)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::abs(0.5<sp/>*<sp/>(p1.x()<sp/>*<sp/>(p2.y()<sp/>-<sp/>p3.y())<sp/>+<sp/>p2.x()<sp/>*<sp/>(p3.y()<sp/>-<sp/>p1.y())<sp/>+<sp/>p3.x()<sp/>*<sp/>(p1.y()<sp/>-<sp/>p2.y())));</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="class_k_win_1_1_colorimetry_1aedd6e2f525b22ee6f27bd56936674b93" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1aedd6e2f525b22ee6f27bd56936674b93" kindref="member">Colorimetry::isValid</ref>(<ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>,<sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>,<sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>,<sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>more<sp/>of<sp/>a<sp/>heuristic<sp/>than<sp/>a<sp/>hard<sp/>rule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>if<sp/>the<sp/>gamut<sp/>is<sp/>too<sp/>small,<sp/>it&apos;s<sp/>not<sp/>really<sp/>usable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamutArea<sp/>=<sp/>triangleArea(<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.asVector(),<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.asVector(),<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.asVector());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamutArea<sp/>&lt;<sp/>0.02)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>white<sp/>point<sp/>is<sp/>inside<sp/>the<sp/>gamut<sp/>triangle,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>three<sp/>triangles<sp/>made<sp/>up<sp/>between<sp/>the<sp/>primaries<sp/>and<sp/>the<sp/>whitepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>have<sp/>the<sp/>same<sp/>area<sp/>as<sp/>the<sp/>gamut<sp/>triangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>area1<sp/>=<sp/>triangleArea(<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.asVector(),<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.asVector(),<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.asVector());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>area2<sp/>=<sp/>triangleArea(<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.asVector(),<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.asVector(),<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.asVector());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>area3<sp/>=<sp/>triangleArea(<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.asVector(),<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.asVector(),<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.asVector());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(area1<sp/>+<sp/>area2<sp/>+<sp/>area3<sp/>-<sp/>gamutArea)<sp/>&gt;<sp/>0.001)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>would<sp/>cause<sp/>terrible<sp/>glitches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="class_k_win_1_1_colorimetry_1a7aeb805267db1f037832c3d342db7703" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1a7aeb805267db1f037832c3d342db7703" kindref="member">Colorimetry::isReal</ref>(<ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>,<sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>,<sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>,<sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_colorimetry_1aedd6e2f525b22ee6f27bd56936674b93" kindref="member">isValid</ref>(<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>,<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>,<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>,<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>))<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>outside<sp/>of<sp/>XYZ<sp/>definitely<sp/>can&apos;t<sp/>be<sp/>shown<sp/>on<sp/>a<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>maybe<sp/>calculate<sp/>if<sp/>all<sp/>values<sp/>are<sp/>within<sp/>the<sp/>human-visible<sp/>gamut<sp/>too?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.x<sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.x<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.y<sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.y<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.x<sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.x<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.y<sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.y<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.x<sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.x<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.y<sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.y<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.x<sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.x<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.y<sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.y<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry::Colorimetry</ref>(<ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>,<sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>,<sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>,<sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_red(<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_green(<ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_blue(<ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_white(<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_toXYZ(<ref refid="class_k_win_1_1_colorimetry_1a4274b830c99c619ad0d12750d9f95f4d" kindref="member">calculateToXYZMatrix</ref>(<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>,<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>,<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>,<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_fromXYZ(m_toXYZ.inverted())</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="class_k_win_1_1_colorimetry_1a32daad37a7aa589ef1774dfdf4df4d19" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry::Colorimetry</ref>(<ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>,<sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>,<sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>,<sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref>(<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.<ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>(),<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.<ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>(),<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.<ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>(),<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.<ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>())</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="class_k_win_1_1_colorimetry_1a325fe2f07c7c2aa80d740e3ce2790ea9" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry::Colorimetry</ref>(<ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>,<sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>,<sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>,<sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_white(<ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>(<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.x,<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.y,<sp/>1.0).<ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>())</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>brightness<sp/>=<sp/>(matrixFromColumns(</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>(<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.x,<sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.y,<sp/>1.0).<ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">toXYZ</ref>().<ref refid="struct_k_win_1_1_x_y_z_1a29fb60bd3bc8ee4b53057f811c07ca25" kindref="member">asVector</ref>(),</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>(<ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.x,<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.y,<sp/>1.0).<ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">toXYZ</ref>().<ref refid="struct_k_win_1_1_x_y_z_1a29fb60bd3bc8ee4b53057f811c07ca25" kindref="member">asVector</ref>(),</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>(<ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.x,<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.y,<sp/>1.0).<ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">toXYZ</ref>().<ref refid="struct_k_win_1_1_x_y_z_1a29fb60bd3bc8ee4b53057f811c07ca25" kindref="member">asVector</ref>()))</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.inverted()</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>(<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.x,<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>.y,<sp/>1.0).<ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">toXYZ</ref>().<ref refid="struct_k_win_1_1_x_y_z_1a29fb60bd3bc8ee4b53057f811c07ca25" kindref="member">asVector</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>m_red<sp/>=<sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>(<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.x,<sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>.y,<sp/>brightness.x()).<ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">toXYZ</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>m_green<sp/>=<sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>(<ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.x,<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>.y,<sp/>brightness.y()).<ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">toXYZ</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>m_blue<sp/>=<sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref>(<ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.x,<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>.y,<sp/>brightness.z()).<ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">toXYZ</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>m_toXYZ<sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry_1a4274b830c99c619ad0d12750d9f95f4d" kindref="member">calculateToXYZMatrix</ref>(m_red,<sp/>m_green,<sp/>m_blue,<sp/>m_white);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fromXYZ<sp/>=<sp/>m_toXYZ.inverted();</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;<ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">Colorimetry::toXYZ</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="289"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_toXYZ;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="class_k_win_1_1_colorimetry_1affb8d026ca85e445a84b8fd366c79881" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;<ref refid="class_k_win_1_1_colorimetry_1affb8d026ca85e445a84b8fd366c79881" kindref="member">Colorimetry::fromXYZ</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="294"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_fromXYZ;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converts<sp/>from<sp/>XYZ<sp/>to<sp/>LMS<sp/>suitable<sp/>for<sp/>ICtCp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>s_xyzToDolbyLMS<sp/>=<sp/>[]()<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>ret;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(0,<sp/>0)<sp/>=<sp/>0.3593;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(0,<sp/>1)<sp/>=<sp/>0.6976;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(0,<sp/>2)<sp/>=<sp/>-0.0359;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(1,<sp/>0)<sp/>=<sp/>-0.1921;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(1,<sp/>1)<sp/>=<sp/>1.1005;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(1,<sp/>2)<sp/>=<sp/>0.0754;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(2,<sp/>0)<sp/>=<sp/>0.0071;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(2,<sp/>1)<sp/>=<sp/>0.0748;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>ret(2,<sp/>2)<sp/>=<sp/>0.8433;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>s_inverseDolbyLMS<sp/>=<sp/>s_xyzToDolbyLMS.inverted();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="class_k_win_1_1_colorimetry_1a3d5266239c4f0e12609f7b811c582012" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_colorimetry_1a3d5266239c4f0e12609f7b811c582012" kindref="member">Colorimetry::toLMS</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="315"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_xyzToDolbyLMS<sp/>*<sp/>m_toXYZ;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="class_k_win_1_1_colorimetry_1a33150c30052465982b9c71b15fd4005a" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_colorimetry_1a33150c30052465982b9c71b15fd4005a" kindref="member">Colorimetry::fromLMS</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="320"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_fromXYZ<sp/>*<sp/>s_inverseDolbyLMS;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="class_k_win_1_1_colorimetry_1ae2fa3435b0c26cbe448523c393c78777" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1ae2fa3435b0c26cbe448523c393c78777" kindref="member">Colorimetry::adaptedTo</ref>(<ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/>newWhitepoint)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="325"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mat<sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry_1a7c4edbbb8804bfbdab7670a55691a6b9" kindref="member">chromaticAdaptationMatrix</ref>(this-&gt;<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>(),<sp/>newWhitepoint.<ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">toXYZ</ref>());</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_x_y_z_1ae91c883816b868d587e5c5fbff8ed9e4" kindref="member">XYZ::fromVector</ref>(mat<sp/>*<sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>().asVector()),</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_x_y_z_1ae91c883816b868d587e5c5fbff8ed9e4" kindref="member">XYZ::fromVector</ref>(mat<sp/>*<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>().asVector()),</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_x_y_z_1ae91c883816b868d587e5c5fbff8ed9e4" kindref="member">XYZ::fromVector</ref>(mat<sp/>*<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>().asVector()),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newWhitepoint.<ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">toXYZ</ref>(),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="class_k_win_1_1_colorimetry_1ac05a68a80fdc3601c76df8f59983cff8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1ac05a68a80fdc3601c76df8f59983cff8" kindref="member">Colorimetry::withWhitepoint</ref>(<ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/>newWhitePoint)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="336"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>newWhitePoint.<ref refid="struct_k_win_1_1xy_y_1a00bb34c2efe6fe8de9ada3597d028f6b" kindref="member">Y</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_red,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_green,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_blue,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newWhitePoint.<ref refid="struct_k_win_1_1xy_y_1ac17db8548777ab3470578978c5c7ac6d" kindref="member">toXYZ</ref>(),</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="class_k_win_1_1_colorimetry_1a59590157301f0f2015d9f9bd43158247" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_colorimetry_1a59590157301f0f2015d9f9bd43158247" kindref="member">Colorimetry::relativeColorimetricTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="347"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>other.<ref refid="class_k_win_1_1_colorimetry_1affb8d026ca85e445a84b8fd366c79881" kindref="member">fromXYZ</ref>()<sp/>*<sp/><ref refid="class_k_win_1_1_colorimetry_1a7c4edbbb8804bfbdab7670a55691a6b9" kindref="member">chromaticAdaptationMatrix</ref>(<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>(),<sp/>other.<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>())<sp/>*<sp/><ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="class_k_win_1_1_colorimetry_1a89170dd840c5a230d2e3246fb7083978" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_colorimetry_1a89170dd840c5a230d2e3246fb7083978" kindref="member">Colorimetry::absoluteColorimetricTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="352"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>other.<ref refid="class_k_win_1_1_colorimetry_1affb8d026ca85e445a84b8fd366c79881" kindref="member">fromXYZ</ref>()<sp/>*<sp/><ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>();</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="class_k_win_1_1_colorimetry_1af2c0aea21bb0bf6f5bf44dfba469cc04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1af2c0aea21bb0bf6f5bf44dfba469cc04" kindref="member">Colorimetry::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1a29a24408ac5a3a3143199e1ba9d2a134" kindref="member">Colorimetry</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="357"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>()<sp/>==<sp/>other.<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>()<sp/>==<sp/>other.<ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>()<sp/>==<sp/>other.<ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>()<sp/>==<sp/>other.<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/>&amp;<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">Colorimetry::red</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="362"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_red;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/>&amp;<ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">Colorimetry::green</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="367"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_green;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/>&amp;<ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">Colorimetry::blue</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="372"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_blue;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref><sp/>&amp;<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">Colorimetry::white</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="377"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_white;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref><sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.64,<sp/>0.33},</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>xy{0.30,<sp/>0.60},</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.15,<sp/>0.06},</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.3127,<sp/>0.3290},</highlight></codeline>
<codeline lineno="386"><highlight class="normal">};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a107ea1b4b8720b9efbdef94965e7c901" kindref="member">Colorimetry::PAL_M</ref><sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.67,<sp/>0.33},</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.21,<sp/>0.71},</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.14,<sp/>0.08},</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.310,<sp/>0.316},</highlight></codeline>
<codeline lineno="392"><highlight class="normal">};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1abd66983a5bf71b208d3fd7a94c0b4cbf" kindref="member">Colorimetry::PAL</ref><sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.640,<sp/>0.330},</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.290,<sp/>0.600},</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.150,<sp/>0.060},</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.3127,<sp/>0.3290},</highlight></codeline>
<codeline lineno="398"><highlight class="normal">};</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a5e7d0e0128191d53fa854adaf2e068be" kindref="member">Colorimetry::NTSC</ref><sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.630,<sp/>0.340},</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.310,<sp/>0.595},</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.155,<sp/>0.070},</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.3127,<sp/>0.3290},</highlight></codeline>
<codeline lineno="404"><highlight class="normal">};</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1afb37815863eb9774638f9775f6012651" kindref="member">Colorimetry::GenericFilm</ref><sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.243,<sp/>0.692},</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.145,<sp/>0.049},</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.681,<sp/>0.319},</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.310,<sp/>0.316},</highlight></codeline>
<codeline lineno="410"><highlight class="normal">};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a99c05e3a03117057e2bb1019b9861acb" kindref="member">Colorimetry::BT2020</ref><sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.708,<sp/>0.292},</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.170,<sp/>0.797},</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.131,<sp/>0.046},</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.3127,<sp/>0.3290},</highlight></codeline>
<codeline lineno="416"><highlight class="normal">};</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a10c7c05ec536476298f155d3fe24dedf" kindref="member">Colorimetry::CIEXYZ</ref><sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{1.0,<sp/>0.0,<sp/>0.0},</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{0.0,<sp/>1.0,<sp/>0.0},</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref>{0.0,<sp/>0.0,<sp/>1.0},</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{1.0<sp/>/<sp/>3.0,<sp/>1.0<sp/>/<sp/>3.0}.<ref refid="struct_k_win_1_1xy_1ac83c17d77dfb9516f20f82601c1aa5ae" kindref="member">toXYZ</ref>(),</highlight></codeline>
<codeline lineno="422"><highlight class="normal">};</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a1a6699bb221b2b22e87a47caea964b5d" kindref="member">Colorimetry::DCIP3</ref><sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.680,<sp/>0.320},</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.265,<sp/>0.690},</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.150,<sp/>0.060},</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.314,<sp/>0.351},</highlight></codeline>
<codeline lineno="428"><highlight class="normal">};</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a7770cc9b47fb1f2f81c975355653a598" kindref="member">Colorimetry::DisplayP3</ref><sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.680,<sp/>0.320},</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.265,<sp/>0.690},</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.150,<sp/>0.060},</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.3127,<sp/>0.3290},</highlight></codeline>
<codeline lineno="434"><highlight class="normal">};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/><ref refid="class_k_win_1_1_colorimetry_1a0e1202453526d579d3d2d89fc3c12cdd" kindref="member">Colorimetry::AdobeRGB</ref><sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.6400,<sp/>0.3300},</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.2100,<sp/>0.7100},</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.1500,<sp/>0.0600},</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref>{0.3127,<sp/>0.3290},</highlight></codeline>
<codeline lineno="440"><highlight class="normal">};</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref><sp/>=<sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref>(<ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref>,<sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription::ColorDescription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/>&amp;<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>,<sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref><sp/>tf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>,<sp/>std::optional&lt;double&gt;<sp/><ref refid="class_k_win_1_1_color_description_1a4cecebafce982393cba7ff65dae1b804" kindref="member">maxAverageLuminance</ref>,<sp/>std::optional&lt;double&gt;<sp/><ref refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" kindref="member">maxHdrLuminance</ref>,<sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref><sp/><ref refid="class_k_win_1_1_color_description_1ae9358d8ecc35ad20ade15618eadb64de" kindref="member">yuvCoefficients</ref>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref>(<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>,<sp/>tf,<sp/><ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>,<sp/><ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>,<sp/><ref refid="class_k_win_1_1_color_description_1a4cecebafce982393cba7ff65dae1b804" kindref="member">maxAverageLuminance</ref>,<sp/><ref refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" kindref="member">maxHdrLuminance</ref>,<sp/>std::nullopt,<sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref>::<ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9a0b69475c5783f10c0be13d36825fc3b9" kindref="member">BT709</ref>,<sp/><ref refid="class_k_win_1_1_color_description_1ae9358d8ecc35ad20ade15618eadb64de" kindref="member">yuvCoefficients</ref>)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="class_k_win_1_1_color_description_1a30ce1cf7484205f2293fa67ad03bbc45" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription::ColorDescription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/>&amp;<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>,<sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref><sp/>tf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>,<sp/>std::optional&lt;double&gt;<sp/><ref refid="class_k_win_1_1_color_description_1a4cecebafce982393cba7ff65dae1b804" kindref="member">maxAverageLuminance</ref>,<sp/>std::optional&lt;double&gt;<sp/><ref refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" kindref="member">maxHdrLuminance</ref>,<sp/>std::optional&lt;Colorimetry&gt;<sp/><ref refid="class_k_win_1_1_color_description_1a573a56f3b15f6a6b2cc943cca9274ccd" kindref="member">masteringColorimetry</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/>&amp;<ref refid="class_k_win_1_1_color_description_1a9fdb814649b9a34ddd2feca0d77348ef" kindref="member">sdrColorimetry</ref>,<sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref><sp/><ref refid="class_k_win_1_1_color_description_1ae9358d8ecc35ad20ade15618eadb64de" kindref="member">yuvCoefficients</ref>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_containerColorimetry(<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_masteringColorimetry(<ref refid="class_k_win_1_1_color_description_1a573a56f3b15f6a6b2cc943cca9274ccd" kindref="member">masteringColorimetry</ref>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_transferFunction(tf)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_sdrColorimetry(<ref refid="class_k_win_1_1_color_description_1a9fdb814649b9a34ddd2feca0d77348ef" kindref="member">sdrColorimetry</ref>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_referenceLuminance(<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_minLuminance(<ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_maxAverageLuminance(<ref refid="class_k_win_1_1_color_description_1a4cecebafce982393cba7ff65dae1b804" kindref="member">maxAverageLuminance</ref>)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_maxHdrLuminance(<ref refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" kindref="member">maxHdrLuminance</ref>)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_yuvCoefficients(<ref refid="class_k_win_1_1_color_description_1ae9358d8ecc35ad20ade15618eadb64de" kindref="member">yuvCoefficients</ref>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="class_k_win_1_1_color_description_1a402ad96bbb790b5d4979f2bc9d8be85a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription::ColorDescription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/>&amp;<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>,<sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref><sp/>tf,<sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref><sp/><ref refid="class_k_win_1_1_color_description_1ae9358d8ecc35ad20ade15618eadb64de" kindref="member">yuvCoefficients</ref>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref>(<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>,<sp/>tf,<sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref>::defaultReferenceLuminanceFor(tf.<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>),<sp/>tf.<ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>,<sp/>tf.maxLuminance,<sp/>tf.maxLuminance,<sp/><ref refid="class_k_win_1_1_color_description_1ae9358d8ecc35ad20ade15618eadb64de" kindref="member">yuvCoefficients</ref>)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/>&amp;<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">ColorDescription::containerColorimetry</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="468"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_containerColorimetry;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="class_k_win_1_1_color_description_1a573a56f3b15f6a6b2cc943cca9274ccd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;Colorimetry&gt;<sp/>&amp;<ref refid="class_k_win_1_1_color_description_1a573a56f3b15f6a6b2cc943cca9274ccd" kindref="member">ColorDescription::masteringColorimetry</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="473"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_masteringColorimetry;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="class_k_win_1_1_color_description_1a9fdb814649b9a34ddd2feca0d77348ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/>&amp;<ref refid="class_k_win_1_1_color_description_1a9fdb814649b9a34ddd2feca0d77348ef" kindref="member">ColorDescription::sdrColorimetry</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="478"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_sdrColorimetry;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref><sp/><ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">ColorDescription::transferFunction</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="483"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_transferFunction;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">ColorDescription::referenceLuminance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="488"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_referenceLuminance;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">ColorDescription::minLuminance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="493"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minLuminance;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="class_k_win_1_1_color_description_1a4cecebafce982393cba7ff65dae1b804" refkind="member"><highlight class="normal">std::optional&lt;double&gt;<sp/><ref refid="class_k_win_1_1_color_description_1a4cecebafce982393cba7ff65dae1b804" kindref="member">ColorDescription::maxAverageLuminance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="498"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maxAverageLuminance;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" refkind="member"><highlight class="normal">std::optional&lt;double&gt;<sp/><ref refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" kindref="member">ColorDescription::maxHdrLuminance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="503"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maxHdrLuminance;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="class_k_win_1_1_color_description_1ae9358d8ecc35ad20ade15618eadb64de" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref><sp/><ref refid="class_k_win_1_1_color_description_1ae9358d8ecc35ad20ade15618eadb64de" kindref="member">ColorDescription::yuvCoefficients</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="508"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_yuvCoefficients;</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>calculateYuvToRgbMatrix(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kg,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kb,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>limitedRange)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>conversion(</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>0,<sp/>2<sp/>-<sp/>2<sp/>*<sp/>kr,<sp/>0.0,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>-kb<sp/>/<sp/>kg<sp/>*<sp/>(2<sp/>-<sp/>2<sp/>*<sp/>kb),<sp/>-kr<sp/>/<sp/>kg<sp/>*<sp/>(2<sp/>-<sp/>2<sp/>*<sp/>kr),<sp/>0.0,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>2<sp/>-<sp/>2<sp/>*<sp/>kb,<sp/>0,<sp/>0.0,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limitedRange)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>limitedToFullRangeYCbCr;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>limitedToFullRangeYCbCr.scale(255.0<sp/>/<sp/>219.0,<sp/>255.0<sp/>/<sp/>224.0,<sp/>255.0<sp/>/<sp/>224.0);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>limitedToFullRangeYCbCr.translate(-16.0<sp/>/<sp/>255.0,<sp/>-0.5,<sp/>-0.5);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conversion<sp/>*<sp/>limitedToFullRangeYCbCr;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conversion;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>s_limitedRangeBT601<sp/>=<sp/>calculateYuvToRgbMatrix(0.299,<sp/>0.587,<sp/>0.114,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>s_limitedRangeBT709<sp/>=<sp/>calculateYuvToRgbMatrix(0.2126,<sp/>0.7152,<sp/>0.0722,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>s_limitedRangeBT2020<sp/>=<sp/>calculateYuvToRgbMatrix(0.2627,<sp/>0.6780,<sp/>0.0593,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="class_k_win_1_1_color_description_1a78a578fd10414df649abfa18af4090ee" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_color_description_1a78a578fd10414df649abfa18af4090ee" kindref="member">ColorDescription::yuvMatrix</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="534"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m_yuvCoefficients)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9ac9c5c65fb4af9cf90eb99b3b84424189" kindref="member">YUVMatrixCoefficients::Identity</ref>:</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QMatrix4x4();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9a8b844879ae7dc4d0447f1986a7432db9" kindref="member">YUVMatrixCoefficients::BT601</ref>:</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_limitedRangeBT601;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9a0b69475c5783f10c0be13d36825fc3b9" kindref="member">YUVMatrixCoefficients::BT709</ref>:</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_limitedRangeBT709;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9acede9bc5f1db241392356796faabf6e6" kindref="member">YUVMatrixCoefficients::BT2020</ref>:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_limitedRangeBT2020;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="class_k_win_1_1_color_description_1a6dc069adbe6c3958bf5d9759de70ae55" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_color_description_1a6dc069adbe6c3958bf5d9759de70ae55" kindref="member">ColorDescription::toOther</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref><sp/>&amp;other,<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9" kindref="member">RenderingIntent</ref><sp/>intent)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="549"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>luminanceBefore;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>luminanceAfter;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intent<sp/>==<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9a09ab3095e9b2d0a7773cc3d2f0f879cd" kindref="member">RenderingIntent::Perceptual</ref><sp/>||<sp/>intent<sp/>==<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9a6ad9b8ddb1f094ecc6b4307086fc0e80" kindref="member">RenderingIntent::RelativeColorimetricWithBPC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>black<sp/>point<sp/>compensation:<sp/>black<sp/>and<sp/>reference<sp/>white<sp/>from<sp/>the<sp/>source<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>both<sp/>be<sp/>mapped<sp/>to<sp/>black<sp/>and<sp/>reference<sp/>white<sp/>in<sp/>the<sp/>destination<sp/>color<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>effectiveMin<sp/>=<sp/>std::max(<ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>(),<sp/>m_transferFunction.minLuminance);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>otherEffectiveMin<sp/>=<sp/>std::max(other.<ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>(),<sp/>other.m_transferFunction.<ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>color<sp/>conversions,<sp/>map<sp/>[src<sp/>min,<sp/>src<sp/>ref]<sp/>to<sp/>[0,<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luminanceBefore.scale(1.0<sp/>/<sp/>(<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>()<sp/>-<sp/><ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>()));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luminanceBefore.translate(-effectiveMin,<sp/>-effectiveMin,<sp/>-effectiveMin);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>afterwards,<sp/>map<sp/>[0,<sp/>1]<sp/>again<sp/>to<sp/>[dst<sp/>min,<sp/>dst<sp/>ref]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luminanceAfter.translate(otherEffectiveMin,<sp/>otherEffectiveMin,<sp/>otherEffectiveMin);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luminanceAfter.scale(other.<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>()<sp/>-<sp/>other.<ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>());</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>only<sp/>the<sp/>reference<sp/>luminance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luminanceBefore.scale(other.<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>()<sp/>/<sp/><ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>());</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(intent)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9a09ab3095e9b2d0a7773cc3d2f0f879cd" kindref="member">RenderingIntent::Perceptual</ref>:<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">Colorimetry</ref><sp/>&amp;srcContainer<sp/>=<sp/><ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref><sp/>?<sp/>other.<ref refid="class_k_win_1_1_color_description_1a9fdb814649b9a34ddd2feca0d77348ef" kindref="member">sdrColorimetry</ref>()<sp/>:<sp/><ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>luminanceAfter<sp/>*<sp/>other.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1affb8d026ca85e445a84b8fd366c79881" kindref="member">fromXYZ</ref>()<sp/>*<sp/><ref refid="class_k_win_1_1_colorimetry_1a7c4edbbb8804bfbdab7670a55691a6b9" kindref="member">Colorimetry::chromaticAdaptationMatrix</ref>(srcContainer.<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>(),<sp/>other.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>())<sp/>*<sp/>srcContainer.<ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>()<sp/>*<sp/>luminanceBefore;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9a9ed6621e7967fa194f71cdb7f7d48ca0" kindref="member">RenderingIntent::RelativeColorimetric</ref>:<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>luminanceAfter<sp/>*<sp/>other.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1affb8d026ca85e445a84b8fd366c79881" kindref="member">fromXYZ</ref>()<sp/>*<sp/><ref refid="class_k_win_1_1_colorimetry_1a7c4edbbb8804bfbdab7670a55691a6b9" kindref="member">Colorimetry::chromaticAdaptationMatrix</ref>(<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().white(),<sp/>other.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>())<sp/>*<sp/><ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>()<sp/>*<sp/>luminanceBefore;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9a6ad9b8ddb1f094ecc6b4307086fc0e80" kindref="member">RenderingIntent::RelativeColorimetricWithBPC</ref>:<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>luminanceAfter<sp/>*<sp/>other.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1affb8d026ca85e445a84b8fd366c79881" kindref="member">fromXYZ</ref>()<sp/>*<sp/><ref refid="class_k_win_1_1_colorimetry_1a7c4edbbb8804bfbdab7670a55691a6b9" kindref="member">Colorimetry::chromaticAdaptationMatrix</ref>(<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().white(),<sp/>other.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>())<sp/>*<sp/><ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>()<sp/>*<sp/>luminanceBefore;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9af225099195868c86e68340788085dd9a" kindref="member">RenderingIntent::AbsoluteColorimetric</ref>:<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>luminanceAfter<sp/>*<sp/>other.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1affb8d026ca85e445a84b8fd366c79881" kindref="member">fromXYZ</ref>()<sp/>*<sp/><ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>().<ref refid="class_k_win_1_1_colorimetry_1aaede1d30151de5781d5854246895b7b2" kindref="member">toXYZ</ref>()<sp/>*<sp/>luminanceBefore;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="class_k_win_1_1_color_description_1a36d46d9ae7a317676f52cacbc0412914" refkind="member"><highlight class="normal">QVector3D<sp/><ref refid="class_k_win_1_1_color_description_1a36d46d9ae7a317676f52cacbc0412914" kindref="member">ColorDescription::mapTo</ref>(QVector3D<sp/>rgb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref><sp/>&amp;dst,<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9" kindref="member">RenderingIntent</ref><sp/>intent)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="588"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>rgb<sp/>=<sp/>m_transferFunction.encodedToNits(rgb);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>rgb<sp/>=<sp/><ref refid="class_k_win_1_1_color_description_1a6dc069adbe6c3958bf5d9759de70ae55" kindref="member">toOther</ref>(dst,<sp/>intent)<sp/>*<sp/>rgb;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" kindref="member">nitsToEncoded</ref>(rgb);</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="class_k_win_1_1_color_description_1a79cccf87692be638eff62ca463629115" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref><sp/><ref refid="class_k_win_1_1_color_description_1a79cccf87692be638eff62ca463629115" kindref="member">ColorDescription::withTransferFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref><sp/>&amp;func)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="595"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref>(m_containerColorimetry,<sp/>func,<sp/>m_referenceLuminance,<sp/>m_minLuminance,<sp/>m_maxAverageLuminance,<sp/>m_maxHdrLuminance,<sp/>m_masteringColorimetry,<sp/>m_sdrColorimetry);</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599" refid="class_k_win_1_1_color_description_1a27a399b8bd1563d9111bf743ffbfe025" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref><sp/><ref refid="class_k_win_1_1_color_description_1a27a399b8bd1563d9111bf743ffbfe025" kindref="member">ColorDescription::withWhitepoint</ref>(<ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref><sp/>newWhitePoint)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="600"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_containerColorimetry.withWhitepoint(newWhitePoint),</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transferFunction,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_referenceLuminance,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_minLuminance,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxAverageLuminance,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxHdrLuminance,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_masteringColorimetry<sp/>?<sp/>std::optional(m_masteringColorimetry-&gt;withWhitepoint(newWhitePoint))<sp/>:<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sdrColorimetry,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="class_k_win_1_1_color_description_1a35068973653bce76469836f1b1a7702b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref><sp/><ref refid="class_k_win_1_1_color_description_1a35068973653bce76469836f1b1a7702b" kindref="member">ColorDescription::dimmed</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightnessFactor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="614"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_containerColorimetry,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transferFunction,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_referenceLuminance<sp/>*<sp/>brightnessFactor,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_minLuminance<sp/>*<sp/>brightnessFactor,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxAverageLuminance.transform([&amp;](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>*<sp/>brightnessFactor;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxHdrLuminance.transform([&amp;](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>value<sp/>*<sp/>brightnessFactor;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_masteringColorimetry,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sdrColorimetry,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="class_k_win_1_1_color_description_1aa3c18d418099e86722b4ccf4deae45f1" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref><sp/><ref refid="class_k_win_1_1_color_description_1aa3c18d418099e86722b4ccf4deae45f1" kindref="member">ColorDescription::withReference</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="632"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_containerColorimetry,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transferFunction,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_minLuminance,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxAverageLuminance,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxHdrLuminance,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_masteringColorimetry,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sdrColorimetry,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="class_k_win_1_1_color_description_1a0d391002e4c471211a6c8f78e454cdc5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref><sp/><ref refid="class_k_win_1_1_color_description_1a0d391002e4c471211a6c8f78e454cdc5" kindref="member">ColorDescription::withYuvCoefficients</ref>(<ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9" kindref="member">YUVMatrixCoefficients</ref><sp/>coefficient)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="646"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description_1ae0ff9bd45d0ef516ecf7ab2a2bd65e14" kindref="member">ColorDescription</ref>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_containerColorimetry,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transferFunction,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_referenceLuminance,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_minLuminance,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxAverageLuminance,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_maxHdrLuminance,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_masteringColorimetry,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sdrColorimetry,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefficient,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="class_k_win_1_1_transfer_function_1a0e7d3963e02c925e06a9d6b9a6721ac3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a0e7d3963e02c925e06a9d6b9a6721ac3" kindref="member">TransferFunction::defaultMinLuminanceFor</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13" kindref="member">Type</ref><sp/><ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a91a1b61696108537c8ddb4f9e1099e7a" kindref="member">Type::sRGB</ref>:</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">Type::gamma22</ref>:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ac4d9acf6c01c7c6872491ce9d8370410" kindref="member">Type::linear</ref>:</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.2;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">Type::PerceptualQuantizer</ref>:</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.005;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="class_k_win_1_1_transfer_function_1a358b2bc9003a550d55b1eb2cc93ca80e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a358b2bc9003a550d55b1eb2cc93ca80e" kindref="member">TransferFunction::defaultMaxLuminanceFor</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13" kindref="member">Type</ref><sp/><ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a91a1b61696108537c8ddb4f9e1099e7a" kindref="member">Type::sRGB</ref>:</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">Type::gamma22</ref>:</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ac4d9acf6c01c7c6872491ce9d8370410" kindref="member">Type::linear</ref>:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>80;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">Type::PerceptualQuantizer</ref>:</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10&apos;000;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="class_k_win_1_1_transfer_function_1a71f83dbad7283245c4a949f62c51d6ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a71f83dbad7283245c4a949f62c51d6ef" kindref="member">TransferFunction::defaultReferenceLuminanceFor</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13" kindref="member">Type</ref><sp/><ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">Type::PerceptualQuantizer</ref>:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>203;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ac4d9acf6c01c7c6872491ce9d8370410" kindref="member">Type::linear</ref>:</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a91a1b61696108537c8ddb4f9e1099e7a" kindref="member">Type::sRGB</ref>:</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">Type::gamma22</ref>:</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>80;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="class_k_win_1_1_transfer_function_1a90efd0baa4d4e9452ef495b621ad69fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a90efd0baa4d4e9452ef495b621ad69fc" kindref="member">TransferFunction::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a3265ff3f2adec01557a76a0696644925" kindref="member">TransferFunction</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="700"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>for<sp/>a<sp/>greater<sp/>error<sp/>with<sp/>large<sp/>max.<sp/>luminance,<sp/>as<sp/>floating<sp/>point<sp/>errors<sp/>get<sp/>larger<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>effect<sp/>of<sp/>errors<sp/>is<sp/>smaller<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref><sp/>==<sp/>other.<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>std::abs(other.<ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref><sp/>-<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>)<sp/>&lt;<sp/><ref refid="class_k_win_1_1_color_pipeline_1a4c736fae0c1a4bf9e204b0a44efbd396" kindref="member">ColorPipeline::s_maxResolution</ref></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>std::abs(other.<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref><sp/>-<sp/><ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref>)<sp/>&lt;<sp/><ref refid="class_k_win_1_1_color_pipeline_1a4c736fae0c1a4bf9e204b0a44efbd396" kindref="member">ColorPipeline::s_maxResolution</ref><sp/>*<sp/><ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref>;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="class_k_win_1_1_transfer_function_1a3265ff3f2adec01557a76a0696644925" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_transfer_function_1a3265ff3f2adec01557a76a0696644925" kindref="member">TransferFunction::TransferFunction</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13" kindref="member">Type</ref><sp/>tf)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_transfer_function_1a3265ff3f2adec01557a76a0696644925" kindref="member">TransferFunction</ref>(tf,<sp/><ref refid="class_k_win_1_1_transfer_function_1a0e7d3963e02c925e06a9d6b9a6721ac3" kindref="member">defaultMinLuminanceFor</ref>(tf),<sp/><ref refid="class_k_win_1_1_transfer_function_1a358b2bc9003a550d55b1eb2cc93ca80e" kindref="member">defaultMaxLuminanceFor</ref>(tf))</highlight></codeline>
<codeline lineno="710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="class_k_win_1_1_transfer_function_1a4fb9b0660ddfae0cff63024033a0f284" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_transfer_function_1a3265ff3f2adec01557a76a0696644925" kindref="member">TransferFunction::TransferFunction</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13" kindref="member">Type</ref><sp/>tf,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref>)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>(tf)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>(<ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref>(<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref>)</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="class_k_win_1_1_transfer_function_1a227563617a0e7ecd4b33fb4f67d7f8fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a227563617a0e7ecd4b33fb4f67d7f8fd" kindref="member">TransferFunction::encodedToNits</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>encoded)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="721"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a91a1b61696108537c8ddb4f9e1099e7a" kindref="member">TransferFunction::sRGB</ref>:<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encoded<sp/>&lt;<sp/>0.04045)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::max(encoded<sp/>/<sp/>12.92,<sp/>0.0)<sp/>*<sp/>(<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref><sp/>-<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>)<sp/>+<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::clamp(std::pow((encoded<sp/>+<sp/>0.055)<sp/>/<sp/>1.055,<sp/>12.0<sp/>/<sp/>5.0),<sp/>0.0,<sp/>1.0)<sp/>*<sp/>(<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref><sp/>-<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>)<sp/>+<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>:</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(encoded,<sp/>2.2)<sp/>*<sp/>(<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref><sp/>-<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>)<sp/>+<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ac4d9acf6c01c7c6872491ce9d8370410" kindref="member">TransferFunction::linear</ref>:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encoded<sp/>*<sp/>(<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref><sp/>-<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>)<sp/>+<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref>:<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/>0.8359375;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2<sp/>=<sp/>18.8515625;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3<sp/>=<sp/>18.6875;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1_inv<sp/>=<sp/>1.0<sp/>/<sp/>0.1593017578125;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2_inv<sp/>=<sp/>1.0<sp/>/<sp/>78.84375;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>powed<sp/>=<sp/>std::pow(encoded,<sp/>m2_inv);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>std::max(powed<sp/>-<sp/>c1,<sp/>0.0);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>den<sp/>=<sp/>c2<sp/>-<sp/>c3<sp/>*<sp/>powed;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(num<sp/>/<sp/>den,<sp/>m1_inv)<sp/>*<sp/>(<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref><sp/>-<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>)<sp/>+<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749" refid="class_k_win_1_1_transfer_function_1a537a4c596f670347bbb8cf37311e2693" refkind="member"><highlight class="normal">QVector3D<sp/><ref refid="class_k_win_1_1_transfer_function_1a227563617a0e7ecd4b33fb4f67d7f8fd" kindref="member">TransferFunction::encodedToNits</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;encoded)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="750"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVector3D(<ref refid="class_k_win_1_1_transfer_function_1a227563617a0e7ecd4b33fb4f67d7f8fd" kindref="member">encodedToNits</ref>(encoded.x()),<sp/><ref refid="class_k_win_1_1_transfer_function_1a227563617a0e7ecd4b33fb4f67d7f8fd" kindref="member">encodedToNits</ref>(encoded.y()),<sp/><ref refid="class_k_win_1_1_transfer_function_1a227563617a0e7ecd4b33fb4f67d7f8fd" kindref="member">encodedToNits</ref>(encoded.z()));</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="class_k_win_1_1_transfer_function_1abf0e9c4d33e3fb3fb04c8ecdbf10932d" refkind="member"><highlight class="normal">QVector4D<sp/><ref refid="class_k_win_1_1_transfer_function_1a227563617a0e7ecd4b33fb4f67d7f8fd" kindref="member">TransferFunction::encodedToNits</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector4D<sp/>&amp;encoded)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="755"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVector4D(<ref refid="class_k_win_1_1_transfer_function_1a227563617a0e7ecd4b33fb4f67d7f8fd" kindref="member">encodedToNits</ref>(encoded.x()),<sp/><ref refid="class_k_win_1_1_transfer_function_1a227563617a0e7ecd4b33fb4f67d7f8fd" kindref="member">encodedToNits</ref>(encoded.y()),<sp/><ref refid="class_k_win_1_1_transfer_function_1a227563617a0e7ecd4b33fb4f67d7f8fd" kindref="member">encodedToNits</ref>(encoded.z()),<sp/>encoded.w());</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759" refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" kindref="member">TransferFunction::nitsToEncoded</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nits)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="760"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normalized<sp/>=<sp/>(nits<sp/>-<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>)<sp/>/<sp/>(<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref><sp/>-<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a91a1b61696108537c8ddb4f9e1099e7a" kindref="member">TransferFunction::sRGB</ref>:<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(normalized<sp/>&lt;<sp/>0.0031308)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::max(normalized<sp/>/<sp/>12.92,<sp/>0.0);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::clamp(std::pow(normalized,<sp/>5.0<sp/>/<sp/>12.0)<sp/>*<sp/>1.055<sp/>-<sp/>0.055,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>:</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(std::clamp(normalized,<sp/>0.0,<sp/>1.0),<sp/>1.0<sp/>/<sp/>2.2);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ac4d9acf6c01c7c6872491ce9d8370410" kindref="member">TransferFunction::linear</ref>:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalized;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref>:<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/>0.8359375;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2<sp/>=<sp/>18.8515625;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c3<sp/>=<sp/>18.6875;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1<sp/>=<sp/>0.1593017578125;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m2<sp/>=<sp/>78.84375;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>powed<sp/>=<sp/>std::pow(std::clamp(normalized,<sp/>0.0,<sp/>1.0),<sp/>m1);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>c1<sp/>+<sp/>c2<sp/>*<sp/>powed;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denum<sp/>=<sp/>1<sp/>+<sp/>c3<sp/>*<sp/>powed;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(num<sp/>/<sp/>denum,<sp/>m2);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="class_k_win_1_1_transfer_function_1acc2b561a305124c3a28204bba7526b2d" refkind="member"><highlight class="normal">QVector3D<sp/><ref refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" kindref="member">TransferFunction::nitsToEncoded</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;nits)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="790"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVector3D(<ref refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" kindref="member">nitsToEncoded</ref>(nits.x()),<sp/><ref refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" kindref="member">nitsToEncoded</ref>(nits.y()),<sp/><ref refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" kindref="member">nitsToEncoded</ref>(nits.z()));</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794" refid="class_k_win_1_1_transfer_function_1ad558ad602e329033f76a37c61b0c81e8" refkind="member"><highlight class="normal">QVector4D<sp/><ref refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" kindref="member">TransferFunction::nitsToEncoded</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector4D<sp/>&amp;nits)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="795"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVector4D(<ref refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" kindref="member">nitsToEncoded</ref>(nits.x()),<sp/><ref refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" kindref="member">nitsToEncoded</ref>(nits.y()),<sp/><ref refid="class_k_win_1_1_transfer_function_1aa75fbf3835336cb5c96cc14fd93541a1" kindref="member">nitsToEncoded</ref>(nits.z()),<sp/>nits.w());</highlight></codeline>
<codeline lineno="797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799" refid="class_k_win_1_1_transfer_function_1a3cfce26fec22987b5a1fdcae16a3f0c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a3cfce26fec22987b5a1fdcae16a3f0c4" kindref="member">TransferFunction::isRelative</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="800"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>:</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a91a1b61696108537c8ddb4f9e1099e7a" kindref="member">TransferFunction::sRGB</ref>:</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ac4d9acf6c01c7c6872491ce9d8370410" kindref="member">TransferFunction::linear</ref>:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref>:</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="class_k_win_1_1_transfer_function_1a41039d73206ccd206674ac688184e9bd" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_transfer_function_1a3265ff3f2adec01557a76a0696644925" kindref="member">TransferFunction</ref><sp/><ref refid="class_k_win_1_1_transfer_function_1a41039d73206ccd206674ac688184e9bd" kindref="member">TransferFunction::relativeScaledTo</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>referenceLuminance)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="813"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_transfer_function_1a3cfce26fec22987b5a1fdcae16a3f0c4" kindref="member">isRelative</ref>())<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1a3265ff3f2adec01557a76a0696644925" kindref="member">TransferFunction</ref>(<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref>,<sp/><ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref><sp/>*<sp/>referenceLuminance<sp/>/<sp/><ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref>,<sp/>referenceLuminance);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="colorspace_8cpp_1a52a86118f3e9c2dfcd42e364151e6248" refkind="member"><highlight class="normal">QDebug<sp/><ref refid="colorspace_8cpp_1a52a86118f3e9c2dfcd42e364151e6248" kindref="member">operator&lt;&lt;</ref>(QDebug<sp/>debug,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function" kindref="compound">KWin::TransferFunction</ref><sp/>&amp;tf)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>QDebugStateSaver<sp/>state(debug);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>debug.nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TransferFunction(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tf.<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tf.<ref refid="class_k_win_1_1_transfer_function_1a6c10d6aabeab96c089d86b24f1507a62" kindref="member">minLuminance</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tf.<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>debug;</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829" refid="colorspace_8cpp_1a5532d1efb88d069c50129e4e591b81d1" refkind="member"><highlight class="normal">QDebug<sp/><ref refid="colorspace_8cpp_1a52a86118f3e9c2dfcd42e364151e6248" kindref="member">operator&lt;&lt;</ref>(QDebug<sp/>debug,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">KWin::XYZ</ref><sp/>&amp;xyz)</highlight></codeline>
<codeline lineno="830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>QDebugStateSaver<sp/>state(debug);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>debug.nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;XYZ(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xyz.<ref refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" kindref="member">X</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xyz.<ref refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" kindref="member">Y</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xyz.<ref refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" kindref="member">Z</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>debug;</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="colorspace_8cpp_1a986866e69725ee7d6a10be66791807f1" refkind="member"><highlight class="normal">QDebug<sp/><ref refid="colorspace_8cpp_1a52a86118f3e9c2dfcd42e364151e6248" kindref="member">operator&lt;&lt;</ref>(QDebug<sp/>debug,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy_y" kindref="compound">KWin::xyY</ref><sp/>&amp;xyY)</highlight></codeline>
<codeline lineno="837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>QDebugStateSaver<sp/>state(debug);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>debug.nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;xyY(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xyY.<ref refid="struct_k_win_1_1xy_y_1a11c9514947a30621dd27a40ed017f6eb" kindref="member">x</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xyY.<ref refid="struct_k_win_1_1xy_y_1aa16680ebde07a4fec0e8f8b8d8b27777" kindref="member">y</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xyY.<ref refid="struct_k_win_1_1xy_y_1a00bb34c2efe6fe8de9ada3597d028f6b" kindref="member">Y</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>debug;</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843" refid="colorspace_8cpp_1a69cf1dcf3f8da031285265c26757da40" refkind="member"><highlight class="normal">QDebug<sp/><ref refid="colorspace_8cpp_1a52a86118f3e9c2dfcd42e364151e6248" kindref="member">operator&lt;&lt;</ref>(QDebug<sp/>debug,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1xy" kindref="compound">KWin::xy</ref><sp/>&amp;xy)</highlight></codeline>
<codeline lineno="844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>QDebugStateSaver<sp/>state(debug);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>debug.nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;xy(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xy.<ref refid="struct_k_win_1_1xy_1a040dea9d11bb134b383dca002dcb1bb9" kindref="member">x</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xy.<ref refid="struct_k_win_1_1xy_1ab56b8b5d0fb176c365a47028f573b0f5" kindref="member">y</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>debug;</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="colorspace_8cpp_1a681a3a4c265ad073e71e5daf9ad52829" refkind="member"><highlight class="normal">QDebug<sp/><ref refid="colorspace_8cpp_1a52a86118f3e9c2dfcd42e364151e6248" kindref="member">operator&lt;&lt;</ref>(QDebug<sp/>debug,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_colorimetry" kindref="compound">KWin::Colorimetry</ref><sp/>&amp;color)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>QDebugStateSaver<sp/>state(debug);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>debug.nospace()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Colorimetry(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>color.<ref refid="class_k_win_1_1_colorimetry_1a71c35133530f4d6b452d96ee754448bc" kindref="member">red</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>color.<ref refid="class_k_win_1_1_colorimetry_1a8f01dabd52fc482e59321308969b7944" kindref="member">green</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>color.<ref refid="class_k_win_1_1_colorimetry_1acc678bc504ec9346cbf932a5366789f6" kindref="member">blue</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>color.<ref refid="class_k_win_1_1_colorimetry_1a6a394e7b0050f8858444b1e136c2be73" kindref="member">white</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>debug;</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857" refid="colorspace_8cpp_1a340bbb47e220019ba4c3892c933fd484" refkind="member"><highlight class="normal">QDebug<sp/><ref refid="colorspace_8cpp_1a52a86118f3e9c2dfcd42e364151e6248" kindref="member">operator&lt;&lt;</ref>(QDebug<sp/>debug,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">KWin::ColorDescription</ref><sp/>&amp;color)</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>QDebugStateSaver<sp/>state(debug);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>debug<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ColorDescription(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>color.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>color.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>ref&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>color.<ref refid="class_k_win_1_1_color_description_1a11f13e7bfe0ad1c4f715d001880d3334" kindref="member">referenceLuminance</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>min&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>color.<ref refid="class_k_win_1_1_color_description_1a2e4431da47115bb8d79cbaca87e40997" kindref="member">minLuminance</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>max.<sp/>avg&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>color.<ref refid="class_k_win_1_1_color_description_1a4cecebafce982393cba7ff65dae1b804" kindref="member">maxAverageLuminance</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>max&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>color.<ref refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" kindref="member">maxHdrLuminance</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>debug;</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/core/colorspace.cpp"/>
  </compounddef>
</doxygen>
