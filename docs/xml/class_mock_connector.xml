<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_mock_connector" kind="class" language="C++" prot="public">
    <compoundname>MockConnector</compoundname>
    <basecompoundref refid="class_mock_object" prot="public" virt="non-virtual">MockObject</basecompoundref>
    <includes refid="mock__drm_8h" local="no">mock_drm.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mock_connector_1adeac016077f6cc685f339bbb734d8aa0" prot="public" static="no" mutable="no">
        <type>drmModeConnection</type>
        <definition>drmModeConnection MockConnector::connection</definition>
        <argsstring></argsstring>
        <name>connection</name>
        <qualifiedname>MockConnector::connection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="76" column="23" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_connector_1a4ebe6e0fb800b73874fa449fffda836b" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t MockConnector::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>MockConnector::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="77" column="14" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_connector_1a0088945a0aef1f6184dcc51b3d590f4f" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_mock_encoder" kindref="compound">MockEncoder</ref> &gt;</type>
        <definition>std::shared_ptr&lt;MockEncoder&gt; MockConnector::encoder</definition>
        <argsstring></argsstring>
        <name>encoder</name>
        <qualifiedname>MockConnector::encoder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="78" column="21" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_connector_1a6ec0196bce507c391fd434a9250a8f2e" prot="public" static="no" mutable="no">
        <type>QList&lt; drmModeModeInfo &gt;</type>
        <definition>QList&lt;drmModeModeInfo&gt; MockConnector::modes</definition>
        <argsstring></argsstring>
        <name>modes</name>
        <qualifiedname>MockConnector::modes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="79" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="79" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mock_connector_1a548e11eeecbb46956d284ab0399207a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockConnector::MockConnector</definition>
        <argsstring>(MockGpu *gpu, bool nonDesktop=false)</argsstring>
        <name>MockConnector</name>
        <qualifiedname>MockConnector::MockConnector</qualifiedname>
        <param>
          <type><ref refid="class_mock_gpu" kindref="compound">MockGpu</ref> *</type>
          <declname>gpu</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nonDesktop</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="69" column="5" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="167" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_connector_1ac5867b1c7836bf962b3093b22e7e03a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockConnector::MockConnector</definition>
        <argsstring>(const MockConnector &amp;obj)=default</argsstring>
        <name>MockConnector</name>
        <qualifiedname>MockConnector::MockConnector</qualifiedname>
        <param>
          <type>const <ref refid="class_mock_connector" kindref="compound">MockConnector</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="70" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_connector_1a316894bc89a9786699174a1b42272fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockConnector::~MockConnector</definition>
        <argsstring>()=default</argsstring>
        <name>~MockConnector</name>
        <qualifiedname>MockConnector::~MockConnector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="71" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_connector_1a7ad921223c796e2a3576041d1efa379a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MockConnector::addMode</definition>
        <argsstring>(uint32_t width, uint32_t height, float refreshRate, bool preferred=false)</argsstring>
        <name>addMode</name>
        <qualifiedname>MockConnector::addMode</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>float</type>
          <declname>refreshRate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>preferred</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="73" column="10" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="186" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_connector_1a38abe162bd98b91774d127537cc7fceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MockConnector::setVrrCapable</definition>
        <argsstring>(bool cap)</argsstring>
        <name>setVrrCapable</name>
        <qualifiedname>MockConnector::setVrrCapable</qualifiedname>
        <param>
          <type>bool</type>
          <declname>cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="74" column="10" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="215" bodyend="221"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>MockConnector</label>
        <link refid="class_mock_connector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>MockConnector</label>
        <link refid="class_mock_connector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MockGpu</label>
        <link refid="class_mock_gpu"/>
      </node>
      <node id="2">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
        <childnode refid="3" relation="usage">
          <edgelabel>gpu</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/drm/mock_drm.h" line="67" column="1" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="67" bodyend="80"/>
    <listofallmembers>
      <member refid="class_mock_connector_1a7ad921223c796e2a3576041d1efa379a" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>addMode</name></member>
      <member refid="class_mock_connector_1adeac016077f6cc685f339bbb734d8aa0" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>connection</name></member>
      <member refid="class_mock_connector_1a0088945a0aef1f6184dcc51b3d590f4f" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>encoder</name></member>
      <member refid="class_mock_object_1a76f1c2955f448959528ffc1c4872c36a" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>getProp</name></member>
      <member refid="class_mock_object_1a9529304fa4cb728bfb7a57c1327ab6cc" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>getPropId</name></member>
      <member refid="class_mock_object_1aee2a37c6a86ae20ee579900b72e04bfe" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>gpu</name></member>
      <member refid="class_mock_object_1a9578562398c7e2f643300da2bf8f745f" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>id</name></member>
      <member refid="class_mock_connector_1a548e11eeecbb46956d284ab0399207a3" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>MockConnector</name></member>
      <member refid="class_mock_connector_1ac5867b1c7836bf962b3093b22e7e03a8" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>MockConnector</name></member>
      <member refid="class_mock_object_1aa99edcf828702ea4827416c5df93e448" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>MockObject</name></member>
      <member refid="class_mock_connector_1a6ec0196bce507c391fd434a9250a8f2e" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>modes</name></member>
      <member refid="class_mock_object_1a90cdcc4aa90c655ff7f76fa82e39401e" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>props</name></member>
      <member refid="class_mock_object_1ac1fb4229dc515cc08cef807dce970962" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>setProp</name></member>
      <member refid="class_mock_connector_1a38abe162bd98b91774d127537cc7fceb" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>setVrrCapable</name></member>
      <member refid="class_mock_connector_1a4ebe6e0fb800b73874fa449fffda836b" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>type</name></member>
      <member refid="class_mock_connector_1a316894bc89a9786699174a1b42272fd4" prot="public" virt="non-virtual"><scope>MockConnector</scope><name>~MockConnector</name></member>
      <member refid="class_mock_object_1aa32f10d16e17321d7e37fe2fe442e7d3" prot="public" virt="virtual"><scope>MockConnector</scope><name>~MockObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
