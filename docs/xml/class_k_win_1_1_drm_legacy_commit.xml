<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_drm_legacy_commit" kind="class" language="C++" prot="public">
    <compoundname>KWin::DrmLegacyCommit</compoundname>
    <basecompoundref refid="class_k_win_1_1_drm_commit" prot="public" virt="non-virtual">KWin::DrmCommit</basecompoundref>
    <includes refid="drm__commit_8h" local="no">drm_commit.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_drm_legacy_commit_1a7bbf09ad10f7db988476f65593e5a8ea" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref> *const</type>
        <definition>DrmPipeline* const KWin::DrmLegacyCommit::m_pipeline</definition>
        <argsstring></argsstring>
        <name>m_pipeline</name>
        <qualifiedname>KWin::DrmLegacyCommit::m_pipeline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_commit.h" line="118" column="23" bodyfile="kwin/src/backends/drm/drm_commit.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_legacy_commit_1ad0a96c1a0b26907087cfea3e2ffe3cfe" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_drm_crtc" kindref="compound">DrmCrtc</ref> *const</type>
        <definition>DrmCrtc* const KWin::DrmLegacyCommit::m_crtc</definition>
        <argsstring></argsstring>
        <name>m_crtc</name>
        <qualifiedname>KWin::DrmLegacyCommit::m_crtc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_commit.h" line="119" column="19" bodyfile="kwin/src/backends/drm/drm_commit.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_legacy_commit_1a580aea430225db6dda2ab722d216b4c6" prot="private" static="no" mutable="no">
        <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_framebuffer" kindref="compound">DrmFramebuffer</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;DrmFramebuffer&gt; KWin::DrmLegacyCommit::m_buffer</definition>
        <argsstring></argsstring>
        <name>m_buffer</name>
        <qualifiedname>KWin::DrmLegacyCommit::m_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_commit.h" line="120" column="27" bodyfile="kwin/src/backends/drm/drm_commit.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_legacy_commit_1a8e0ccbd8a7a6e0c879a8398923dad794" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> &gt;</type>
        <definition>std::shared_ptr&lt;OutputFrame&gt; KWin::DrmLegacyCommit::m_frame</definition>
        <argsstring></argsstring>
        <name>m_frame</name>
        <qualifiedname>KWin::DrmLegacyCommit::m_frame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_commit.h" line="121" column="21" bodyfile="kwin/src/backends/drm/drm_commit.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_legacy_commit_1ac0316603497c364f719cce6069647e1a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref></type>
        <definition>PresentationMode KWin::DrmLegacyCommit::m_mode</definition>
        <argsstring></argsstring>
        <name>m_mode</name>
        <qualifiedname>KWin::DrmLegacyCommit::m_mode</qualifiedname>
        <initializer>= <ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a98b06ef30caa386be0f897d0e5c5a135" kindref="member">PresentationMode::VSync</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_commit.h" line="122" column="22" bodyfile="kwin/src/backends/drm/drm_commit.h" bodystart="122" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_drm_legacy_commit_1aa60752b71059a8ea6e4a7be75f0cfb7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DrmLegacyCommit::DrmLegacyCommit</definition>
        <argsstring>(DrmPipeline *pipeline, const std::shared_ptr&lt; DrmFramebuffer &gt; &amp;buffer, const std::shared_ptr&lt; OutputFrame &gt; &amp;frame)</argsstring>
        <name>DrmLegacyCommit</name>
        <qualifiedname>KWin::DrmLegacyCommit::DrmLegacyCommit</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref> *</type>
          <declname>pipeline</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_framebuffer" kindref="compound">DrmFramebuffer</ref> &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_commit.h" line="111" column="5" bodyfile="kwin/src/backends/drm/drm_commit.cpp" bodystart="272" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_legacy_commit_1afdd4bf1aa6d5747e58f5bb846c759b05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmLegacyCommit::doModeset</definition>
        <argsstring>(DrmConnector *connector, DrmConnectorMode *mode)</argsstring>
        <name>doModeset</name>
        <qualifiedname>KWin::DrmLegacyCommit::doModeset</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_drm_connector" kindref="compound">DrmConnector</ref> *</type>
          <declname>connector</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_drm_connector_mode" kindref="compound">DrmConnectorMode</ref> *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_commit.h" line="113" column="10" bodyfile="kwin/src/backends/drm/drm_commit.cpp" bodystart="281" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_legacy_commit_1adb66e55ad9b5f409009442d5766244ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmLegacyCommit::doPageflip</definition>
        <argsstring>(PresentationMode mode)</argsstring>
        <name>doPageflip</name>
        <qualifiedname>KWin::DrmLegacyCommit::doPageflip</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_commit.h" line="114" column="10" bodyfile="kwin/src/backends/drm/drm_commit.cpp" bodystart="292" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_legacy_commit_1a41794d7a8b581f72ffa615018ca6336c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::DrmLegacyCommit::pageFlipped</definition>
        <argsstring>(std::chrono::nanoseconds timestamp) override</argsstring>
        <name>pageFlipped</name>
        <qualifiedname>KWin::DrmLegacyCommit::pageFlipped</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_commit_1aeb86f0c56eef345e7ade669591d637a4">pageFlipped</reimplements>
        <param>
          <type>std::chrono::nanoseconds</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_commit.h" line="115" column="10" bodyfile="kwin/src/backends/drm/drm_commit.cpp" bodystart="302" bodyend="314"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::DrmCommit</label>
        <link refid="class_k_win_1_1_drm_commit"/>
      </node>
      <node id="1">
        <label>KWin::DrmLegacyCommit</label>
        <link refid="class_k_win_1_1_drm_legacy_commit"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::DrmCommit</label>
        <link refid="class_k_win_1_1_drm_commit"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_gpu</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KWin::DrmGpu</label>
        <link refid="class_k_win_1_1_drm_gpu"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::DrmLegacyCommit</label>
        <link refid="class_k_win_1_1_drm_legacy_commit"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/drm/drm_commit.h" line="108" column="1" bodyfile="kwin/src/backends/drm/drm_commit.h" bodystart="109" bodyend="123"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_drm_legacy_commit_1afdd4bf1aa6d5747e58f5bb846c759b05" prot="public" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>doModeset</name></member>
      <member refid="class_k_win_1_1_drm_legacy_commit_1adb66e55ad9b5f409009442d5766244ac" prot="public" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>doPageflip</name></member>
      <member refid="class_k_win_1_1_drm_commit_1af8e7719bbb7f0dc2a5ee577a6416857b" prot="protected" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>DrmCommit</name></member>
      <member refid="class_k_win_1_1_drm_legacy_commit_1aa60752b71059a8ea6e4a7be75f0cfb7b" prot="public" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>DrmLegacyCommit</name></member>
      <member refid="class_k_win_1_1_drm_commit_1af8a218c85630a9fd793248fea96d568b" prot="public" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>gpu</name></member>
      <member refid="class_k_win_1_1_drm_legacy_commit_1a580aea430225db6dda2ab722d216b4c6" prot="private" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>m_buffer</name></member>
      <member refid="class_k_win_1_1_drm_legacy_commit_1ad0a96c1a0b26907087cfea3e2ffe3cfe" prot="private" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>m_crtc</name></member>
      <member refid="class_k_win_1_1_drm_commit_1a525e2a227233ff07fe626188e76d4f01" prot="protected" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>m_defunct</name></member>
      <member refid="class_k_win_1_1_drm_legacy_commit_1a8e0ccbd8a7a6e0c879a8398923dad794" prot="private" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>m_frame</name></member>
      <member refid="class_k_win_1_1_drm_commit_1a60efe7a7a9ba3f563ff10f3b0494637f" prot="protected" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>m_gpu</name></member>
      <member refid="class_k_win_1_1_drm_legacy_commit_1ac0316603497c364f719cce6069647e1a" prot="private" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>m_mode</name></member>
      <member refid="class_k_win_1_1_drm_legacy_commit_1a7bbf09ad10f7db988476f65593e5a8ea" prot="private" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>m_pipeline</name></member>
      <member refid="class_k_win_1_1_drm_legacy_commit_1a41794d7a8b581f72ffa615018ca6336c" prot="public" virt="virtual"><scope>KWin::DrmLegacyCommit</scope><name>pageFlipped</name></member>
      <member refid="class_k_win_1_1_drm_commit_1a7585238c00e7c147fcbe1a5ef74d6d0a" prot="public" virt="non-virtual"><scope>KWin::DrmLegacyCommit</scope><name>setDefunct</name></member>
      <member refid="class_k_win_1_1_drm_commit_1a11debcbdb0965d730ed80519160d0773" prot="public" virt="virtual"><scope>KWin::DrmLegacyCommit</scope><name>~DrmCommit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
