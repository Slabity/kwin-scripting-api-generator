<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_window_screen_cast_source" kind="class" language="C++" prot="public">
    <compoundname>KWin::WindowScreenCastSource</compoundname>
    <basecompoundref refid="class_k_win_1_1_screen_cast_source" prot="public" virt="non-virtual">KWin::ScreenCastSource</basecompoundref>
    <includes refid="windowscreencastsource_8h" local="no">windowscreencastsource.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_window_screen_cast_source_1a86fb018670540ab9797f59c394a09942" prot="private" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> &gt;</type>
        <definition>QPointer&lt;Window&gt; KWin::WindowScreenCastSource::m_window</definition>
        <argsstring></argsstring>
        <name>m_window</name>
        <qualifiedname>KWin::WindowScreenCastSource::m_window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="46" column="14" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_window_screen_cast_source_1aba0146461fdda88a51e0a3d1b4768039" prot="private" static="no" mutable="no">
        <type>QTimer</type>
        <definition>QTimer KWin::WindowScreenCastSource::m_timer</definition>
        <argsstring></argsstring>
        <name>m_timer</name>
        <qualifiedname>KWin::WindowScreenCastSource::m_timer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="47" column="12" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_window_screen_cast_source_1a4a1a521cdfad7e8d3e2cd3124f717b95" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::WindowScreenCastSource::m_active</definition>
        <argsstring></argsstring>
        <name>m_active</name>
        <qualifiedname>KWin::WindowScreenCastSource::m_active</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="48" column="10" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.h" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1ab8989b2d94f4bad2377df2146a173cb3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::WindowScreenCastSource::WindowScreenCastSource</definition>
        <argsstring>(Window *window, QObject *parent=nullptr)</argsstring>
        <name>WindowScreenCastSource</name>
        <qualifiedname>KWin::WindowScreenCastSource::WindowScreenCastSource</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="23" column="14" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="27" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1aa2e2f80f25cabb999b19e33cd17c5b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::WindowScreenCastSource::~WindowScreenCastSource</definition>
        <argsstring>() override</argsstring>
        <name>~WindowScreenCastSource</name>
        <qualifiedname>KWin::WindowScreenCastSource::~WindowScreenCastSource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="24" column="5" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1a7d0c86d3ff4c902345f4fdc7c8fb3706" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>quint32</type>
        <definition>quint32 KWin::WindowScreenCastSource::drmFormat</definition>
        <argsstring>() const override</argsstring>
        <name>drmFormat</name>
        <qualifiedname>KWin::WindowScreenCastSource::drmFormat</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1a4bd7da03d7f79c860e750331a13043d5">drmFormat</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="26" column="13" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1abbed6970ddf7a1cf2356f3e136f5e0b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSize</type>
        <definition>QSize KWin::WindowScreenCastSource::textureSize</definition>
        <argsstring>() const override</argsstring>
        <name>textureSize</name>
        <qualifiedname>KWin::WindowScreenCastSource::textureSize</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1a00506590dd66318f56a95fcdb78afc92">textureSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="27" column="11" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1a53760311f3356c1955a0edcd6f43c1e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>qreal</type>
        <definition>qreal KWin::WindowScreenCastSource::devicePixelRatio</definition>
        <argsstring>() const override</argsstring>
        <name>devicePixelRatio</name>
        <qualifiedname>KWin::WindowScreenCastSource::devicePixelRatio</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1a29fa5efbc02330c8963336a6f5055fb2">devicePixelRatio</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="28" column="11" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1a51d9c50b80c56b98b0e1a648fe464a24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint</type>
        <definition>uint KWin::WindowScreenCastSource::refreshRate</definition>
        <argsstring>() const override</argsstring>
        <name>refreshRate</name>
        <qualifiedname>KWin::WindowScreenCastSource::refreshRate</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1a40b0b5e9cf19cece49b2244cf48ebaec">refreshRate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="29" column="10" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1aaf71d5a05c60d2cec39b650665ec46d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::WindowScreenCastSource::render</definition>
        <argsstring>(GLFramebuffer *target) override</argsstring>
        <name>render</name>
        <qualifiedname>KWin::WindowScreenCastSource::render</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1a202abfaf50c525aad37385774929e290">render</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="31" column="10" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="73" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1a13473caeaeee286525aa8582d13e96c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::WindowScreenCastSource::render</definition>
        <argsstring>(QImage *target) override</argsstring>
        <name>render</name>
        <qualifiedname>KWin::WindowScreenCastSource::render</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1a89c429ed58340166161661c363cd9037">render</reimplements>
        <param>
          <type>QImage *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="32" column="10" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="60" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1a5b6ef549553a6a08dab4b5309bf03c09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds KWin::WindowScreenCastSource::clock</definition>
        <argsstring>() const override</argsstring>
        <name>clock</name>
        <qualifiedname>KWin::WindowScreenCastSource::clock</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1afee3e29eae3341ce19ae90632390bd83">clock</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="33" column="30" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1a7665acd6bf4b0577287f62348d4c9579" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::WindowScreenCastSource::resume</definition>
        <argsstring>() override</argsstring>
        <name>resume</name>
        <qualifiedname>KWin::WindowScreenCastSource::resume</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1aaa45df2379526fde4a9f83f74ec1f5e8">resume</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="35" column="10" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="114" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1a13db42165f57d1d41d8fec23f5e548a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::WindowScreenCastSource::pause</definition>
        <argsstring>() override</argsstring>
        <name>pause</name>
        <qualifiedname>KWin::WindowScreenCastSource::pause</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1a90dca872fa39221898c6412035916354">pause</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="36" column="10" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="100" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1aaf792c182f0880fe53fffc92474ec285" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::WindowScreenCastSource::includesCursor</definition>
        <argsstring>(Cursor *cursor) const override</argsstring>
        <name>includesCursor</name>
        <qualifiedname>KWin::WindowScreenCastSource::includesCursor</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1a15050cfc40a73453ebc835ba3510f5f8">includesCursor</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_cursor" kindref="compound">Cursor</ref> *</type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="38" column="10" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="127" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1a750aff7d8c4f771704e8d0e5bfb3189f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QPointF</type>
        <definition>QPointF KWin::WindowScreenCastSource::mapFromGlobal</definition>
        <argsstring>(const QPointF &amp;point) const override</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::WindowScreenCastSource::mapFromGlobal</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1ab8184b1757e827ba757cf81948a14600">mapFromGlobal</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="40" column="13" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1a00dee2b86dd3febbd5fd0c81927c37c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::WindowScreenCastSource::mapFromGlobal</definition>
        <argsstring>(const QRectF &amp;rect) const override</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::WindowScreenCastSource::mapFromGlobal</qualifiedname>
        <reimplements refid="class_k_win_1_1_screen_cast_source_1a88658385a395ea0ff532782092457ad6">mapFromGlobal</reimplements>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="41" column="12" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_window_screen_cast_source_1a2f048547a92dd776a042b5bca968f43d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WindowScreenCastSource::report</definition>
        <argsstring>()</argsstring>
        <name>report</name>
        <qualifiedname>KWin::WindowScreenCastSource::report</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="44" column="10" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::ScreenCastSource</label>
        <link refid="class_k_win_1_1_screen_cast_source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::WindowScreenCastSource</label>
        <link refid="class_k_win_1_1_window_screen_cast_source"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::ScreenCastSource</label>
        <link refid="class_k_win_1_1_screen_cast_source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::WindowScreenCastSource</label>
        <link refid="class_k_win_1_1_window_screen_cast_source"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/screencast/windowscreencastsource.h" line="18" column="1" bodyfile="kwin/src/plugins/screencast/windowscreencastsource.h" bodystart="19" bodyend="49"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a5b6ef549553a6a08dab4b5309bf03c09" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>clock</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1ae91ee4eb8ad477ac2e0772da3fb2024c" prot="public" virt="non-virtual"><scope>KWin::WindowScreenCastSource</scope><name>closed</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a53760311f3356c1955a0edcd6f43c1e2" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>devicePixelRatio</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a7d0c86d3ff4c902345f4fdc7c8fb3706" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>drmFormat</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a9443c863764d2c30b342ed33b77bb4b2" prot="public" virt="non-virtual"><scope>KWin::WindowScreenCastSource</scope><name>frame</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1aaf792c182f0880fe53fffc92474ec285" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>includesCursor</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a4a1a521cdfad7e8d3e2cd3124f717b95" prot="private" virt="non-virtual"><scope>KWin::WindowScreenCastSource</scope><name>m_active</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1aba0146461fdda88a51e0a3d1b4768039" prot="private" virt="non-virtual"><scope>KWin::WindowScreenCastSource</scope><name>m_timer</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a86fb018670540ab9797f59c394a09942" prot="private" virt="non-virtual"><scope>KWin::WindowScreenCastSource</scope><name>m_window</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a750aff7d8c4f771704e8d0e5bfb3189f" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a00dee2b86dd3febbd5fd0c81927c37c6" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a13db42165f57d1d41d8fec23f5e548a7" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>pause</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a51d9c50b80c56b98b0e1a648fe464a24" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>refreshRate</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1aaf71d5a05c60d2cec39b650665ec46d4" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>render</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a13473caeaeee286525aa8582d13e96c5" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>render</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a2f048547a92dd776a042b5bca968f43d" prot="private" virt="non-virtual"><scope>KWin::WindowScreenCastSource</scope><name>report</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1a7665acd6bf4b0577287f62348d4c9579" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>resume</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a4378aea966d5f53a2ac02905cf1486ce" prot="public" virt="non-virtual"><scope>KWin::WindowScreenCastSource</scope><name>ScreenCastSource</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1abbed6970ddf7a1cf2356f3e136f5e0b6" prot="public" virt="virtual"><scope>KWin::WindowScreenCastSource</scope><name>textureSize</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1ab8989b2d94f4bad2377df2146a173cb3" prot="public" virt="non-virtual"><scope>KWin::WindowScreenCastSource</scope><name>WindowScreenCastSource</name></member>
      <member refid="class_k_win_1_1_window_screen_cast_source_1aa2e2f80f25cabb999b19e33cd17c5b11" prot="public" virt="non-virtual"><scope>KWin::WindowScreenCastSource</scope><name>~WindowScreenCastSource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
