<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_sub_surface_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::SubSurfaceInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="subcompositor_8h" local="no">subcompositor.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_sub_surface_interface_1ac69a41a5757cc4fe3633111e54de0943" prot="public" static="no" strong="yes">
        <type></type>
        <name>Mode</name>
        <qualifiedname>KWin::SubSurfaceInterface::Mode</qualifiedname>
        <enumvalue id="class_k_win_1_1_sub_surface_interface_1ac69a41a5757cc4fe3633111e54de0943afda39cc5b167799979a72d7ebb73171e" prot="public">
          <name>Synchronized</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_sub_surface_interface_1ac69a41a5757cc4fe3633111e54de0943a0f62015cd7dce76105bc96dc4c8dc37c" prot="public">
          <name>Desynchronized</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This enum type is used to specify the commit behavior for a subsurface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="71" column="5" bodyfile="kwin/src/wayland/subcompositor.h" bodystart="71" bodyend="74"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_sub_surface_interface_1a8f6c718b10aa6865aa07c0c8c4a55873" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_sub_surface_interface_private" kindref="compound">SubSurfaceInterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;SubSurfaceInterfacePrivate&gt; KWin::SubSurfaceInterface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::SubSurfaceInterface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="126" column="21" bodyfile="kwin/src/wayland/subcompositor.h" bodystart="126" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_sub_surface_interface_1a190f6b81c407c3225216fc0b52b733e7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SurfaceInterfacePrivate</definition>
        <argsstring></argsstring>
        <name>SurfaceInterfacePrivate</name>
        <qualifiedname>KWin::SubSurfaceInterface::SurfaceInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface_private" kindref="compound">SurfaceInterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="127" column="18" bodyfile="kwin/src/wayland/subcompositor.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_sub_surface_interface_1ac962975db95f10b40be2a6b0af7bef10" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SubSurfaceInterfacePrivate</definition>
        <argsstring></argsstring>
        <name>SubSurfaceInterfacePrivate</name>
        <qualifiedname>KWin::SubSurfaceInterface::SubSurfaceInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_sub_surface_interface_private" kindref="compound">SubSurfaceInterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="128" column="18" bodyfile="kwin/src/wayland/subcompositor.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_sub_surface_interface_1a4721b0c14a0e812cc201834d3a16cd59" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SubCompositorInterfacePrivate</definition>
        <argsstring></argsstring>
        <name>SubCompositorInterfacePrivate</name>
        <qualifiedname>KWin::SubSurfaceInterface::SubCompositorInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_sub_compositor_interface_private" kindref="compound">SubCompositorInterfacePrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="129" column="18" bodyfile="kwin/src/wayland/subcompositor.h" bodystart="129" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1a92a41a1d47e011d2c8a3c39df3f72e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SubSurfaceInterface::~SubSurfaceInterface</definition>
        <argsstring>() override</argsstring>
        <name>~SubSurfaceInterface</name>
        <qualifiedname>KWin::SubSurfaceInterface::~SubSurfaceInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="59" column="5" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="189" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1a89fa5bfb83370e1b02c88d70391baa1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPoint</type>
        <definition>QPoint KWin::SubSurfaceInterface::position</definition>
        <argsstring>() const</argsstring>
        <name>position</name>
        <qualifiedname>KWin::SubSurfaceInterface::position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the position of the sub-surface relative to the upper-left corner of its parent. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="66" column="12" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1a9bbe6f1780310e25b2bb66a718f2e2bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_sub_surface_interface_1ac69a41a5757cc4fe3633111e54de0943" kindref="member">Mode</ref></type>
        <definition>SubSurfaceInterface::Mode KWin::SubSurfaceInterface::mode</definition>
        <argsstring>() const</argsstring>
        <name>mode</name>
        <qualifiedname>KWin::SubSurfaceInterface::mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current commit mode.</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_sub_surface_interface_1a11e83083fd5abee82cbaa52e6c9d7bc0" kindref="member">isSynchronized</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="81" column="10" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1a11e83083fd5abee82cbaa52e6c9d7bc0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::SubSurfaceInterface::isSynchronized</definition>
        <argsstring>() const</argsstring>
        <name>isSynchronized</name>
        <qualifiedname>KWin::SubSurfaceInterface::isSynchronized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if the sub-surface is in synchronized mode; otherwise returns <computeroutput>false</computeroutput>.</para>
<para>This method checks whether this sub-surface or any of its ancestors is in the synchronized mode. Note that this function is not equivalent to calling <ref refid="class_k_win_1_1_sub_surface_interface_1a9bbe6f1780310e25b2bb66a718f2e2bb" kindref="member">mode()</ref> and checking whether the return value is <ref refid="class_k_win_1_1_sub_surface_interface_1ac69a41a5757cc4fe3633111e54de0943afda39cc5b167799979a72d7ebb73171e" kindref="member">Mode::Synchronized</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_sub_surface_interface_1a9bbe6f1780310e25b2bb66a718f2e2bb" kindref="member">mode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="92" column="10" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="228" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1a835e595db96452e83d9bcc23b3e48d68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
        <definition>SurfaceInterface * KWin::SubSurfaceInterface::surface</definition>
        <argsstring>() const</argsstring>
        <name>surface</name>
        <qualifiedname>KWin::SubSurfaceInterface::surface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> for this <ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref>. This function never returns a <computeroutput>null</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="98" column="22" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1a53dea67dad7c6216621028e81082be6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
        <definition>SurfaceInterface * KWin::SubSurfaceInterface::parentSurface</definition>
        <argsstring>() const</argsstring>
        <name>parentSurface</name>
        <qualifiedname>KWin::SubSurfaceInterface::parentSurface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the parent surface for this <ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref>. This function may return <computeroutput>null</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="103" column="22" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1af71fe28a901624f2d6f1857db53030e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
        <definition>SurfaceInterface * KWin::SubSurfaceInterface::mainSurface</definition>
        <argsstring>() const</argsstring>
        <name>mainSurface</name>
        <qualifiedname>KWin::SubSurfaceInterface::mainSurface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the main surface for the sub-surface tree, that is the first surface without a parent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="108" column="22" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="245" bodyend="255"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1a14f53deb89af9613325c7acf60891d7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref> *</type>
        <definition>SurfaceRole * KWin::SubSurfaceInterface::role</definition>
        <argsstring>()</argsstring>
        <name>role</name>
        <qualifiedname>KWin::SubSurfaceInterface::role</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="61" column="24" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="202" bodyend="206"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_sub_surface_interface_1aba13b910f01e983d0ae76e55b7eb5a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SubSurfaceInterface::positionChanged</definition>
        <argsstring>(const QPoint &amp;position)</argsstring>
        <name>positionChanged</name>
        <qualifiedname>KWin::SubSurfaceInterface::positionChanged</qualifiedname>
        <param>
          <type>const QPoint &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the position of the sub-surface has changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="114" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_sub_surface_interface_1ad6995e06a5af294696ef05f074b3083a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SubSurfaceInterface::modeChanged</definition>
        <argsstring>(KWin::SubSurfaceInterface::Mode mode)</argsstring>
        <name>modeChanged</name>
        <qualifiedname>KWin::SubSurfaceInterface::modeChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_sub_surface_interface_1ac69a41a5757cc4fe3633111e54de0943" kindref="member">KWin::SubSurfaceInterface::Mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the commit mode of the sub-surface has changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="118" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1ac0b9c0eb9a6e12e4b474ef1db9d6b607" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::SubSurfaceInterface::SubSurfaceInterface</definition>
        <argsstring>(SurfaceInterface *surface, SurfaceInterface *parent, wl_resource *resource)</argsstring>
        <name>SubSurfaceInterface</name>
        <qualifiedname>KWin::SubSurfaceInterface::SubSurfaceInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>wl_resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="121" column="5" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="176" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1a55ec43de2e1845ddf133ef5647b0ff79" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SubSurfaceInterface::parentDesynchronized</definition>
        <argsstring>()</argsstring>
        <name>parentDesynchronized</name>
        <qualifiedname>KWin::SubSurfaceInterface::parentDesynchronized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="123" column="10" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="257" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_sub_surface_interface_1a96eaef3235eef4b7fb7ec43411a0a4ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::SubSurfaceInterface::parentApplyState</definition>
        <argsstring>(quint32 serial)</argsstring>
        <name>parentApplyState</name>
        <qualifiedname>KWin::SubSurfaceInterface::parentApplyState</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/subcompositor.h" line="124" column="10" bodyfile="kwin/src/wayland/subcompositor.cpp" bodystart="280" bodyend="290"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_sub_surface_interface" kindref="compound">SubSurfaceInterface</ref> corresponds to the <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref> interface <computeroutput>wl_subsurface</computeroutput>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::SubSurfaceInterface</label>
        <link refid="class_k_win_1_1_sub_surface_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::SubSurfaceInterface</label>
        <link refid="class_k_win_1_1_sub_surface_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/subcompositor.h" line="54" column="1" bodyfile="kwin/src/wayland/subcompositor.h" bodystart="55" bodyend="130"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_sub_surface_interface_1a8f6c718b10aa6865aa07c0c8c4a55873" prot="private" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a11e83083fd5abee82cbaa52e6c9d7bc0" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>isSynchronized</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1af71fe28a901624f2d6f1857db53030e8" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>mainSurface</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1ac69a41a5757cc4fe3633111e54de0943" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>Mode</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a9bbe6f1780310e25b2bb66a718f2e2bb" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>mode</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1ad6995e06a5af294696ef05f074b3083a" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>modeChanged</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a96eaef3235eef4b7fb7ec43411a0a4ed" prot="private" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>parentApplyState</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a55ec43de2e1845ddf133ef5647b0ff79" prot="private" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>parentDesynchronized</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a53dea67dad7c6216621028e81082be6c" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>parentSurface</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a89fa5bfb83370e1b02c88d70391baa1b" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>position</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1aba13b910f01e983d0ae76e55b7eb5a53" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>positionChanged</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a14f53deb89af9613325c7acf60891d7b" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>role</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a4721b0c14a0e812cc201834d3a16cd59" prot="private" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>SubCompositorInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1ac0b9c0eb9a6e12e4b474ef1db9d6b607" prot="private" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>SubSurfaceInterface</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1ac962975db95f10b40be2a6b0af7bef10" prot="private" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>SubSurfaceInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a835e595db96452e83d9bcc23b3e48d68" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>surface</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a190f6b81c407c3225216fc0b52b733e7" prot="private" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>SurfaceInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_sub_surface_interface_1a92a41a1d47e011d2c8a3c39df3f72e28" prot="public" virt="non-virtual"><scope>KWin::SubSurfaceInterface</scope><name>~SubSurfaceInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
