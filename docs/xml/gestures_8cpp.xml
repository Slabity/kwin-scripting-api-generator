<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="gestures_8cpp" kind="file" language="C++">
    <compoundname>gestures.cpp</compoundname>
    <includes refid="gestures_8h" local="yes">gestures.h</includes>
    <includes local="no">QDebug</includes>
    <includes local="no">QRect</includes>
    <includes local="no">cmath</includes>
    <includes local="no">functional</includes>
    <includes local="yes">moc_gestures.cpp</includes>
    <incdepgraph>
      <node id="3">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/gestures.cpp</label>
        <link refid="gestures_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gestures.h</label>
        <link refid="gestures_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>QCoreApplication</label>
      </node>
      <node id="15">
        <label>QDebug</label>
      </node>
      <node id="6">
        <label>QImage</label>
      </node>
      <node id="11">
        <label>QList</label>
      </node>
      <node id="12">
        <label>QMap</label>
      </node>
      <node id="13">
        <label>QObject</label>
      </node>
      <node id="7">
        <label>QPoint</label>
      </node>
      <node id="14">
        <label>QPointF</label>
      </node>
      <node id="16">
        <label>QRect</label>
      </node>
      <node id="8">
        <label>QVariant</label>
      </node>
      <node id="9">
        <label>QVector2D</label>
      </node>
      <node id="17">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="18">
        <label>functional</label>
      </node>
      <node id="10">
        <label>kwin_export.h</label>
      </node>
      <node id="19">
        <label>moc_gestures.cpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2017<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gestures_8h" kindref="compound">gestures.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QRect&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_k_win_1_1_gesture_1a8e44866da8cd62f2b5097e9c84544887" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_gesture_1a8e44866da8cd62f2b5097e9c84544887" kindref="member">Gesture::Gesture</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="class_k_win_1_1_gesture_1a9a209432637e884ec4d1320bc3cf9f66" kindref="member">Gesture::~Gesture</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_k_win_1_1_swipe_gesture_1a95b954429b67fcf3465389dc08bb085e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_swipe_gesture_1a95b954429b67fcf3465389dc08bb085e" kindref="member">SwipeGesture::SwipeGesture</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_gesture_1a8e44866da8cd62f2b5097e9c84544887" kindref="member">Gesture</ref>(parent)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="class_k_win_1_1_swipe_gesture_1a6aaca0433f22d7254c84ba2291cd567f" kindref="member">SwipeGesture::~SwipeGesture</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_k_win_1_1_swipe_gesture_1adbe8d9f15f0c7ec1c771434fd113874d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1adbe8d9f15f0c7ec1c771434fd113874d" kindref="member">SwipeGesture::setStartGeometry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;geometry)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a43a7049208b64d08bd90aaddd66697e2" kindref="member">setMinimumX</ref>(geometry.x());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_swipe_gesture_1aaa5006ab13bd8f8207670a42a82e5169" kindref="member">setMinimumY</ref>(geometry.y());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a9c5dfc2d6aaf2bf98321977bb0517cdd" kindref="member">setMaximumX</ref>(geometry.x()<sp/>+<sp/>geometry.width());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a0a99f4c568a58ac6b9a18c6af36a7d5a" kindref="member">setMaximumY</ref>(geometry.y()<sp/>+<sp/>geometry.height());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_maximumX<sp/>&gt;=<sp/>m_minimumX);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_maximumY<sp/>&gt;=<sp/>m_minimumY);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_k_win_1_1_swipe_gesture_1a17b3d210a22364f80d65f4742380838a" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_swipe_gesture_1a17b3d210a22364f80d65f4742380838a" kindref="member">SwipeGesture::deltaToProgress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="45"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_minimumDeltaRelevant<sp/>||<sp/>m_minimumDelta.isNull())<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m_direction)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a258f49887ef8d14ac268c92b02503aaa" kindref="member">SwipeDirection::Up</ref>:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a08a38277b0309070706f6652eeae9a53" kindref="member">SwipeDirection::Down</ref>:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::min(std::abs(delta.y())<sp/>/<sp/>std::abs(m_minimumDelta.y()),<sp/>1.0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a945d5e233cf7d6240f6b783b36a374ff" kindref="member">SwipeDirection::Left</ref>:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a92b09c7c48c520c3c55e497875da437c" kindref="member">SwipeDirection::Right</ref>:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::min(std::abs(delta.x())<sp/>/<sp/>std::abs(m_minimumDelta.x()),<sp/>1.0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_k_win_1_1_swipe_gesture_1ab3f3d690006ce0feb76bc273c25385ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1ab3f3d690006ce0feb76bc273c25385ec" kindref="member">SwipeGesture::minimumDeltaReached</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="63"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a17b3d210a22364f80d65f4742380838a" kindref="member">deltaToProgress</ref>(delta)<sp/>&gt;=<sp/>1.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_k_win_1_1_pinch_gesture_1ab97a25319e82160fbb43eff8afc5fdde" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pinch_gesture_1ab97a25319e82160fbb43eff8afc5fdde" kindref="member">PinchGesture::PinchGesture</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_gesture_1a8e44866da8cd62f2b5097e9c84544887" kindref="member">Gesture</ref>(parent)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="class_k_win_1_1_pinch_gesture_1a39f1655cc4801a8cc53b0b383e8ef33c" kindref="member">PinchGesture::~PinchGesture</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_k_win_1_1_pinch_gesture_1ad3a69d4a3409f770935323baaf52a7c1" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_pinch_gesture_1ad3a69d4a3409f770935323baaf52a7c1" kindref="member">PinchGesture::scaleDeltaToProgress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>&amp;scaleDelta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="75"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::clamp(std::abs(scaleDelta<sp/>-<sp/>1)<sp/>/<sp/><ref refid="class_k_win_1_1_pinch_gesture_1a8b441ba59626101d657aaebc7546d7f8" kindref="member">minimumScaleDelta</ref>(),<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_k_win_1_1_pinch_gesture_1a446c8fb6cfa79d966e30a3c1249abe37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pinch_gesture_1a446c8fb6cfa79d966e30a3c1249abe37" kindref="member">PinchGesture::minimumScaleDeltaReached</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>&amp;scaleDelta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="80"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pinch_gesture_1ad3a69d4a3409f770935323baaf52a7c1" kindref="member">scaleDeltaToProgress</ref>(scaleDelta)<sp/>&gt;=<sp/>1.0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_k_win_1_1_gesture_recognizer_1a9171cea986ae3dedf728728ac0b33a3d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_gesture_recognizer_1a9171cea986ae3dedf728728ac0b33a3d" kindref="member">GestureRecognizer::GestureRecognizer</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="class_k_win_1_1_gesture_recognizer_1a8919f55d1c98aef7fe38ef19a5efc559" kindref="member">GestureRecognizer::~GestureRecognizer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1a8d777169188f8ee7935dc2c36154361b" kindref="member">GestureRecognizer::registerSwipeGesture</ref>(<ref refid="class_k_win_1_1_swipe_gesture" kindref="compound">KWin::SwipeGesture</ref><sp/>*gesture)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!m_swipeGestures.contains(gesture));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref><sp/>=<sp/>connect(gesture,<sp/>&amp;QObject::destroyed,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_k_win_1_1_gesture_recognizer_1a7783ca68e31c2f7848b81a63ab595128" kindref="member">GestureRecognizer::unregisterSwipeGesture</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>gesture));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>m_destroyConnections.insert(gesture,<sp/><ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>m_swipeGestures<sp/>&lt;&lt;<sp/>gesture;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_k_win_1_1_gesture_recognizer_1a7783ca68e31c2f7848b81a63ab595128" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1a7783ca68e31c2f7848b81a63ab595128" kindref="member">GestureRecognizer::unregisterSwipeGesture</ref>(<ref refid="class_k_win_1_1_swipe_gesture" kindref="compound">KWin::SwipeGesture</ref><sp/>*gesture)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_destroyConnections.find(gesture);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_destroyConnections.end())<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(it.value());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_destroyConnections.erase(it);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>m_swipeGestures.removeAll(gesture);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_activeSwipeGestures.removeOne(gesture))<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>gesture-&gt;<ref refid="class_k_win_1_1_gesture_1a9c2e456f5fada41197cd0ae3918a35ad" kindref="member">cancelled</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_k_win_1_1_gesture_recognizer_1abc49c6bc54a209fa0150c8693a3bc5d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1abc49c6bc54a209fa0150c8693a3bc5d7" kindref="member">GestureRecognizer::registerPinchGesture</ref>(<ref refid="class_k_win_1_1_pinch_gesture" kindref="compound">KWin::PinchGesture</ref><sp/>*gesture)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!m_pinchGestures.contains(gesture));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref><sp/>=<sp/>connect(gesture,<sp/>&amp;QObject::destroyed,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::bind(&amp;<ref refid="class_k_win_1_1_gesture_recognizer_1add16741c555f410adc1986bed3f5131e" kindref="member">GestureRecognizer::unregisterPinchGesture</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>gesture));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>m_destroyConnections.insert(gesture,<sp/><ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pinchGestures<sp/>&lt;&lt;<sp/>gesture;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_k_win_1_1_gesture_recognizer_1add16741c555f410adc1986bed3f5131e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1add16741c555f410adc1986bed3f5131e" kindref="member">GestureRecognizer::unregisterPinchGesture</ref>(<ref refid="class_k_win_1_1_pinch_gesture" kindref="compound">KWin::PinchGesture</ref><sp/>*gesture)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_destroyConnections.find(gesture);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_destroyConnections.end())<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(it.value());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_destroyConnections.erase(it);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pinchGestures.removeAll(gesture);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_activePinchGestures.removeOne(gesture))<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>gesture-&gt;<ref refid="class_k_win_1_1_gesture_1a9c2e456f5fada41197cd0ae3918a35ad" kindref="member">cancelled</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">GestureRecognizer::startSwipeGesture</ref>(uint<sp/>fingerCount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;startPos,<sp/>StartPositionBehavior<sp/>startPosBehavior)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentFingerCount<sp/>=<sp/>fingerCount;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_activeSwipeGestures.isEmpty()<sp/>||<sp/>!m_activePinchGestures.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SwipeGesture<sp/>*gesture<sp/>:<sp/>std::as_const(m_swipeGestures))<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;minimumFingerCountIsRelevant())<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;minimumFingerCount()<sp/>&gt;<sp/>fingerCount)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;maximumFingerCountIsRelevant())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;maximumFingerCount()<sp/>&lt;<sp/>fingerCount)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startPosBehavior<sp/>==<sp/>StartPositionBehavior::Relevant)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;minimumXIsRelevant())<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;minimumX()<sp/>&gt;<sp/>startPos.x())<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;maximumXIsRelevant())<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;maximumX()<sp/>&lt;<sp/>startPos.x())<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;minimumYIsRelevant())<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;minimumY()<sp/>&gt;<sp/>startPos.y())<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;maximumYIsRelevant())<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;maximumY()<sp/>&lt;<sp/>startPos.y())<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>add<sp/>gestures<sp/>who&apos;s<sp/>direction<sp/>aligns<sp/>with<sp/>current<sp/>swipe<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(gesture-&gt;direction())<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a258f49887ef8d14ac268c92b02503aaa" kindref="member">SwipeDirection::Up</ref>:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a08a38277b0309070706f6652eeae9a53" kindref="member">SwipeDirection::Down</ref>:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_currentSwipeAxis<sp/>==<sp/>Axis::Horizontal)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a945d5e233cf7d6240f6b783b36a374ff" kindref="member">SwipeDirection::Left</ref>:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a92b09c7c48c520c3c55e497875da437c" kindref="member">SwipeDirection::Right</ref>:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_currentSwipeAxis<sp/>==<sp/>Axis::Vertical)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a4bbb8f967da6d1a610596d7257179c2b" kindref="member">SwipeDirection::Invalid</ref>:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_activeSwipeGestures<sp/>&lt;&lt;<sp/>gesture;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>gesture-&gt;started();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="class_k_win_1_1_gesture_recognizer_1a39aacf2c7d3d096208aa6bd3012ae3ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1a39aacf2c7d3d096208aa6bd3012ae3ff" kindref="member">GestureRecognizer::updateSwipeGesture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentDelta<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/>direction;<sp/></highlight><highlight class="comment">//<sp/>Overall<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>Axis<sp/>swipeAxis;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pick<sp/>an<sp/>axis<sp/>for<sp/>gestures<sp/>so<sp/>horizontal<sp/>ones<sp/>don&apos;t<sp/>change<sp/>to<sp/>vertical<sp/>ones<sp/>without<sp/>lifting<sp/>fingers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_currentSwipeAxis<sp/>==<sp/>Axis::None)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(m_currentDelta.x())<sp/>&gt;=<sp/>std::abs(m_currentDelta.y()))<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swipeAxis<sp/>=<sp/>Axis::Horizontal;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/>m_currentDelta.x()<sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a945d5e233cf7d6240f6b783b36a374ff" kindref="member">SwipeDirection::Left</ref><sp/>:<sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a92b09c7c48c520c3c55e497875da437c" kindref="member">SwipeDirection::Right</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swipeAxis<sp/>=<sp/>Axis::Vertical;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/>m_currentDelta.y()<sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a258f49887ef8d14ac268c92b02503aaa" kindref="member">SwipeDirection::Up</ref><sp/>:<sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a08a38277b0309070706f6652eeae9a53" kindref="member">SwipeDirection::Down</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(m_currentDelta.x())<sp/>&gt;=<sp/>5<sp/>||<sp/>std::abs(m_currentDelta.y())<sp/>&gt;=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>lock<sp/>in<sp/>a<sp/>direction<sp/>if<sp/>the<sp/>delta<sp/>is<sp/>big<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>prevent<sp/>accidentally<sp/>choosing<sp/>the<sp/>wrong<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_currentSwipeAxis<sp/>=<sp/>swipeAxis;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swipeAxis<sp/>=<sp/>m_currentSwipeAxis;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>current<sp/>swipe<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(swipeAxis)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Axis::Vertical:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/>m_currentDelta.y()<sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a258f49887ef8d14ac268c92b02503aaa" kindref="member">SwipeDirection::Up</ref><sp/>:<sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a08a38277b0309070706f6652eeae9a53" kindref="member">SwipeDirection::Down</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Axis::Horizontal:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/>m_currentDelta.x()<sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a945d5e233cf7d6240f6b783b36a374ff" kindref="member">SwipeDirection::Left</ref><sp/>:<sp/><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03a92b09c7c48c520c3c55e497875da437c" kindref="member">SwipeDirection::Right</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eliminate<sp/>wrong<sp/>gestures<sp/>(takes<sp/>two<sp/>iterations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_activeSwipeGestures.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(m_currentFingerCount);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_activeSwipeGestures.begin();<sp/>it<sp/>!=<sp/>m_activeSwipeGestures.end();)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*it);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;direction()<sp/>!=<sp/>direction)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>gesture<sp/>was<sp/>started<sp/>from<sp/>a<sp/>touchscreen<sp/>border<sp/>never<sp/>cancel<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g-&gt;minimumXIsRelevant()<sp/>||<sp/>!g-&gt;maximumXIsRelevant()<sp/>||<sp/>!g-&gt;minimumYIsRelevant()<sp/>||<sp/>!g-&gt;maximumYIsRelevant())<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;cancelled();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>m_activeSwipeGestures.erase(it);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>progress<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref><sp/>*g<sp/>:<sp/>std::as_const(m_activeSwipeGestures))<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;progress(g-&gt;deltaToProgress(m_currentDelta));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;deltaProgress(m_currentDelta);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GestureRecognizer::cancelActiveGestures()</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>:<sp/>std::as_const(m_activeSwipeGestures))<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;cancelled();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>:<sp/>std::as_const(m_activePinchGestures))<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;cancelled();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>m_activeSwipeGestures.clear();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>m_activePinchGestures.clear();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentScale<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentDelta<sp/>=<sp/>QPointF(0,<sp/>0);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentSwipeAxis<sp/>=<sp/>Axis::None;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="class_k_win_1_1_gesture_recognizer_1ac06d90018011773dec8d56f9a8d4d4d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1ac06d90018011773dec8d56f9a8d4d4d4" kindref="member">GestureRecognizer::cancelSwipeGesture</ref>()</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>cancelActiveGestures();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentFingerCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentDelta<sp/>=<sp/>QPointF(0,<sp/>0);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentSwipeAxis<sp/>=<sp/>Axis::None;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="class_k_win_1_1_gesture_recognizer_1a112d2f0856f5019301f9a2681e199b67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1a112d2f0856f5019301f9a2681e199b67" kindref="member">GestureRecognizer::endSwipeGesture</ref>()</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>delta<sp/>=<sp/>m_currentDelta;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>:<sp/>std::as_const(m_activeSwipeGestures))<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(g)-&gt;minimumDeltaReached(delta))<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;triggered();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;cancelled();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>m_activeSwipeGestures.clear();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentFingerCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentDelta<sp/>=<sp/>QPointF(0,<sp/>0);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentSwipeAxis<sp/>=<sp/>Axis::None;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="class_k_win_1_1_gesture_recognizer_1a03b981bc00b890a6a63e5c5560f3a81e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1a03b981bc00b890a6a63e5c5560f3a81e" kindref="member">GestureRecognizer::startPinchGesture</ref>(uint<sp/>fingerCount)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentFingerCount<sp/>=<sp/>fingerCount;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_activeSwipeGestures.isEmpty()<sp/>||<sp/>!m_activePinchGestures.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_pinch_gesture" kindref="compound">PinchGesture</ref><sp/>*gesture<sp/>:<sp/>std::as_const(m_pinchGestures))<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;minimumFingerCountIsRelevant())<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;minimumFingerCount()<sp/>&gt;<sp/>fingerCount)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;maximumFingerCountIsRelevant())<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gesture-&gt;maximumFingerCount()<sp/>&lt;<sp/>fingerCount)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>doesn&apos;t<sp/>matter<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_activePinchGestures<sp/>&lt;&lt;<sp/>gesture;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>gesture-&gt;started();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="class_k_win_1_1_gesture_recognizer_1ab109c012b4b1d55361d776f02457e130" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1ab109c012b4b1d55361d776f02457e130" kindref="member">GestureRecognizer::updatePinchGesture</ref>(qreal<sp/>scale,<sp/>qreal<sp/>angleDelta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;posDelta)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentScale<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>direction<sp/>of<sp/>the<sp/>swipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05" kindref="member">PinchDirection</ref><sp/>direction;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/><ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05a9553d04b13de5c10f37bac13c96eea23" kindref="member">PinchDirection::Contracting</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/><ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05a1c9861d5cf1799b46578652b62ce1d49" kindref="member">PinchDirection::Expanding</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eliminate<sp/>wrong<sp/>gestures<sp/>(takes<sp/>two<sp/>iterations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_activePinchGestures.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1a03b981bc00b890a6a63e5c5560f3a81e" kindref="member">startPinchGesture</ref>(m_currentFingerCount);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_activePinchGestures.begin();<sp/>it<sp/>!=<sp/>m_activePinchGestures.end();)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_pinch_gesture" kindref="compound">PinchGesture</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*it);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;direction()<sp/>!=<sp/>direction)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;cancelled();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>m_activePinchGestures.erase(it);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_pinch_gesture" kindref="compound">PinchGesture</ref><sp/>*g<sp/>:<sp/>std::as_const(m_activePinchGestures))<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;progress(g-&gt;scaleDeltaToProgress(scale));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="class_k_win_1_1_gesture_recognizer_1a7e62df97dc8c4c9621149a3625cb7c4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1a7e62df97dc8c4c9621149a3625cb7c4d" kindref="member">GestureRecognizer::cancelPinchGesture</ref>()</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>cancelActiveGestures();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentScale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentFingerCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentSwipeAxis<sp/>=<sp/>Axis::None;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="class_k_win_1_1_gesture_recognizer_1ad16f090a1a4afe9bd44aca98e3d839dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1ad16f090a1a4afe9bd44aca98e3d839dd" kindref="member">GestureRecognizer::endPinchGesture</ref>()<sp/></highlight><highlight class="comment">//<sp/>because<sp/>fingers<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>:<sp/>std::as_const(m_activePinchGestures))<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;minimumScaleDeltaReached(m_currentScale))<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;triggered();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>g-&gt;cancelled();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>m_activeSwipeGestures.clear();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>m_activePinchGestures.clear();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentScale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentFingerCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentSwipeAxis<sp/>=<sp/>Axis::None;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="class_k_win_1_1_swipe_gesture_1a22f158cf56322541e491750ee6f952dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a22f158cf56322541e491750ee6f952dc" kindref="member">SwipeGesture::maximumFingerCountIsRelevant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="392"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maximumFingerCountRelevant;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="class_k_win_1_1_swipe_gesture_1a603127fe61e01e49987cf6d339751203" refkind="member"><highlight class="normal">uint<sp/><ref refid="class_k_win_1_1_swipe_gesture_1a603127fe61e01e49987cf6d339751203" kindref="member">SwipeGesture::minimumFingerCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="397"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumFingerCount;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="class_k_win_1_1_swipe_gesture_1aa4582655a570eea6f04002a954ab1277" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1aa4582655a570eea6f04002a954ab1277" kindref="member">SwipeGesture::setMinimumFingerCount</ref>(uint<sp/>count)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumFingerCount<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumFingerCountRelevant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="class_k_win_1_1_swipe_gesture_1ae85ef68d8e7e8e8374b3d450d6fa44a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1ae85ef68d8e7e8e8374b3d450d6fa44a1" kindref="member">SwipeGesture::minimumFingerCountIsRelevant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="408"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumFingerCountRelevant;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="class_k_win_1_1_swipe_gesture_1ac519e70422085a3f0104dbcb117f0161" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1ac519e70422085a3f0104dbcb117f0161" kindref="member">SwipeGesture::setMaximumFingerCount</ref>(uint<sp/>count)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maximumFingerCount<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maximumFingerCountRelevant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="class_k_win_1_1_swipe_gesture_1a7720ab93da717b4ce3c229eb52ee0b33" refkind="member"><highlight class="normal">uint<sp/><ref refid="class_k_win_1_1_swipe_gesture_1a7720ab93da717b4ce3c229eb52ee0b33" kindref="member">SwipeGesture::maximumFingerCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="419"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maximumFingerCount;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="class_k_win_1_1_swipe_gesture_1a0fda85157c9ee55031d82510bb46df9e" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a0fda85157c9ee55031d82510bb46df9e" kindref="member">SwipeGesture::direction</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="424"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_direction;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="class_k_win_1_1_swipe_gesture_1a09ec29a92b104228ff8dae1f6201a7a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a09ec29a92b104228ff8dae1f6201a7a1" kindref="member">SwipeGesture::setDirection</ref>(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a0fda85157c9ee55031d82510bb46df9e" kindref="member">direction</ref>)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>m_direction<sp/>=<sp/><ref refid="class_k_win_1_1_swipe_gesture_1a0fda85157c9ee55031d82510bb46df9e" kindref="member">direction</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="class_k_win_1_1_swipe_gesture_1a43a7049208b64d08bd90aaddd66697e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a43a7049208b64d08bd90aaddd66697e2" kindref="member">SwipeGesture::setMinimumX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumX<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumXRelevant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="class_k_win_1_1_swipe_gesture_1abf722c9faade6251a48058ecb4f3d86f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1abf722c9faade6251a48058ecb4f3d86f" kindref="member">SwipeGesture::minimumX</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="440"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumX;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="class_k_win_1_1_swipe_gesture_1aefd3324c2933ff206e02cf2dbcebb8da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1aefd3324c2933ff206e02cf2dbcebb8da" kindref="member">SwipeGesture::minimumXIsRelevant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="445"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumXRelevant;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="class_k_win_1_1_swipe_gesture_1aaa5006ab13bd8f8207670a42a82e5169" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1aaa5006ab13bd8f8207670a42a82e5169" kindref="member">SwipeGesture::setMinimumY</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumY<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumYRelevant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="class_k_win_1_1_swipe_gesture_1af1591b2c543f66ab2485c77142cfd92d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1af1591b2c543f66ab2485c77142cfd92d" kindref="member">SwipeGesture::minimumY</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="456"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumY;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="class_k_win_1_1_swipe_gesture_1acbb79f017e658d4089a00cbac6da526b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1acbb79f017e658d4089a00cbac6da526b" kindref="member">SwipeGesture::minimumYIsRelevant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="461"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumYRelevant;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_k_win_1_1_swipe_gesture_1a9c5dfc2d6aaf2bf98321977bb0517cdd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a9c5dfc2d6aaf2bf98321977bb0517cdd" kindref="member">SwipeGesture::setMaximumX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maximumX<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maximumXRelevant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="class_k_win_1_1_swipe_gesture_1afef92ea92ce063f6138837a118c46938" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1afef92ea92ce063f6138837a118c46938" kindref="member">SwipeGesture::maximumX</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="472"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maximumX;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="class_k_win_1_1_swipe_gesture_1a6e65bf8199f611c8df369d185e89fb83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a6e65bf8199f611c8df369d185e89fb83" kindref="member">SwipeGesture::maximumXIsRelevant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="477"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maximumXRelevant;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="class_k_win_1_1_swipe_gesture_1a0a99f4c568a58ac6b9a18c6af36a7d5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a0a99f4c568a58ac6b9a18c6af36a7d5a" kindref="member">SwipeGesture::setMaximumY</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maximumY<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maximumYRelevant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="class_k_win_1_1_swipe_gesture_1aa831ef494b8b293d8212699080e812a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1aa831ef494b8b293d8212699080e812a0" kindref="member">SwipeGesture::maximumY</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="488"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maximumY;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="class_k_win_1_1_swipe_gesture_1a513df822e45b056326fde8e3fcf8a743" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a513df822e45b056326fde8e3fcf8a743" kindref="member">SwipeGesture::maximumYIsRelevant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="493"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maximumYRelevant;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="class_k_win_1_1_swipe_gesture_1a62c1e5b0949cc25b0908f452d4213340" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_swipe_gesture_1a62c1e5b0949cc25b0908f452d4213340" kindref="member">SwipeGesture::minimumDelta</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="498"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumDelta;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="class_k_win_1_1_swipe_gesture_1aab736ee68f233d62dd293aa99f7e1110" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1aab736ee68f233d62dd293aa99f7e1110" kindref="member">SwipeGesture::setMinimumDelta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumDelta<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumDeltaRelevant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="class_k_win_1_1_swipe_gesture_1a30ea6b02991477ee2d45bb2a29be7855" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_swipe_gesture_1a30ea6b02991477ee2d45bb2a29be7855" kindref="member">SwipeGesture::isMinimumDeltaRelevant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="509"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumDeltaRelevant;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="class_k_win_1_1_pinch_gesture_1aecf679203a5aad9a85c5d88131298ca9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pinch_gesture_1aecf679203a5aad9a85c5d88131298ca9" kindref="member">PinchGesture::minimumFingerCountIsRelevant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="514"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumFingerCountRelevant;</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="class_k_win_1_1_pinch_gesture_1ad904d3cfde080f188850126b0f9a9798" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pinch_gesture_1ad904d3cfde080f188850126b0f9a9798" kindref="member">PinchGesture::setMinimumFingerCount</ref>(uint<sp/>count)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumFingerCount<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumFingerCountRelevant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="class_k_win_1_1_pinch_gesture_1aea1263b4d8b035552ac5a39d71b0a467" refkind="member"><highlight class="normal">uint<sp/><ref refid="class_k_win_1_1_pinch_gesture_1aea1263b4d8b035552ac5a39d71b0a467" kindref="member">PinchGesture::minimumFingerCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="525"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumFingerCount;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="class_k_win_1_1_pinch_gesture_1abeccd6728514e4a32b1f3fc4d138d949" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pinch_gesture_1abeccd6728514e4a32b1f3fc4d138d949" kindref="member">PinchGesture::maximumFingerCountIsRelevant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="530"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maximumFingerCountRelevant;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="class_k_win_1_1_pinch_gesture_1a02b2908d110b48969bf605743927b040" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pinch_gesture_1a02b2908d110b48969bf605743927b040" kindref="member">PinchGesture::setMaximumFingerCount</ref>(uint<sp/>count)</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maximumFingerCount<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>m_maximumFingerCountRelevant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="class_k_win_1_1_pinch_gesture_1a0b78f79c6a3175f923b7248f5eea59df" refkind="member"><highlight class="normal">uint<sp/><ref refid="class_k_win_1_1_pinch_gesture_1a0b78f79c6a3175f923b7248f5eea59df" kindref="member">PinchGesture::maximumFingerCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="541"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_maximumFingerCount;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="class_k_win_1_1_pinch_gesture_1ac07086ee31c73a4c80755e1d05d35b22" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05" kindref="member">PinchDirection</ref><sp/><ref refid="class_k_win_1_1_pinch_gesture_1ac07086ee31c73a4c80755e1d05d35b22" kindref="member">PinchGesture::direction</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="546"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_direction;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="class_k_win_1_1_pinch_gesture_1ae9cf6dfd85ef92d98b17e06cad916f2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pinch_gesture_1ae9cf6dfd85ef92d98b17e06cad916f2d" kindref="member">PinchGesture::setDirection</ref>(<ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05" kindref="member">PinchDirection</ref><sp/><ref refid="class_k_win_1_1_pinch_gesture_1ac07086ee31c73a4c80755e1d05d35b22" kindref="member">direction</ref>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>m_direction<sp/>=<sp/><ref refid="class_k_win_1_1_pinch_gesture_1ac07086ee31c73a4c80755e1d05d35b22" kindref="member">direction</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="class_k_win_1_1_pinch_gesture_1a8b441ba59626101d657aaebc7546d7f8" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_pinch_gesture_1a8b441ba59626101d657aaebc7546d7f8" kindref="member">PinchGesture::minimumScaleDelta</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="556"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumScaleDelta;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="class_k_win_1_1_pinch_gesture_1aa91438c21fb01b9379957e46e656f831" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pinch_gesture_1aa91438c21fb01b9379957e46e656f831" kindref="member">PinchGesture::setMinimumScaleDelta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>&amp;scaleDelta)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumScaleDelta<sp/>=<sp/>scaleDelta;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>m_minimumScaleDeltaRelevant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="class_k_win_1_1_pinch_gesture_1a03344d2b0b0bd12c5252bd164436c7cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pinch_gesture_1a03344d2b0b0bd12c5252bd164436c7cd" kindref="member">PinchGesture::isMinimumScaleDeltaRelevant</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="567"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_minimumScaleDeltaRelevant;</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">GestureRecognizer::startSwipeGesture</ref>(uint<sp/>fingerCount)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(fingerCount,<sp/>QPointF(),<sp/>StartPositionBehavior::Irrelevant);</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576" refid="class_k_win_1_1_gesture_recognizer_1a146a354801e1476196e66203e4374528" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">GestureRecognizer::startSwipeGesture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;startPos)</highlight></codeline>
<codeline lineno="577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_gesture_recognizer_1ac7595bba0cf50802eed24ffb646ccfa0" kindref="member">startSwipeGesture</ref>(1,<sp/>startPos,<sp/>StartPositionBehavior::Relevant);</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_gestures.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/gestures.cpp"/>
  </compounddef>
</doxygen>
