<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="fakeoutput_8h" kind="file" language="C++">
    <compoundname>fakeoutput.h</compoundname>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includedby refid="test__wayland__output_8cpp" local="yes">kwin/autotests/wayland/client/test_wayland_output.cpp</includedby>
    <includedby refid="test__wayland__surface_8cpp" local="yes">kwin/autotests/wayland/client/test_wayland_surface.cpp</includedby>
    <includedby refid="test__xdg__output_8cpp" local="yes">kwin/autotests/wayland/client/test_xdg_output.cpp</includedby>
    <includedby refid="test__xdg__shell_8cpp" local="yes">kwin/autotests/wayland/client/test_xdg_shell.cpp</includedby>
    <includedby refid="test__inputmethod__interface_8cpp" local="yes">kwin/autotests/wayland/server/test_inputmethod_interface.cpp</includedby>
    <includedby refid="fakeoutput_8cpp" local="yes">kwin/tests/fakeoutput.cpp</includedby>
    <includedby refid="renderingservertest_8cpp" local="yes">kwin/tests/renderingservertest.cpp</includedby>
    <includedby refid="waylandservertest_8cpp" local="yes">kwin/tests/waylandservertest.cpp</includedby>
    <incdepgraph>
      <node id="14">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/tests/fakeoutput.h</label>
        <link refid="fakeoutput_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>QByteArray</label>
      </node>
      <node id="7">
        <label>QCoreApplication</label>
      </node>
      <node id="20">
        <label>QDebug</label>
      </node>
      <node id="8">
        <label>QImage</label>
      </node>
      <node id="18">
        <label>QList</label>
      </node>
      <node id="16">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="9">
        <label>QPoint</label>
      </node>
      <node id="21">
        <label>QRect</label>
      </node>
      <node id="19">
        <label>QSize</label>
      </node>
      <node id="22">
        <label>QUuid</label>
      </node>
      <node id="10">
        <label>QVariant</label>
      </node>
      <node id="11">
        <label>QVector2D</label>
      </node>
      <node id="6">
        <label>config-kwin.h</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="15">
        <label>optional</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/autotests/wayland/client/test_wayland_output.cpp</label>
        <link refid="test__wayland__output_8cpp"/>
      </node>
      <node id="3">
        <label>kwin/autotests/wayland/client/test_wayland_surface.cpp</label>
        <link refid="test__wayland__surface_8cpp"/>
      </node>
      <node id="4">
        <label>kwin/autotests/wayland/client/test_xdg_output.cpp</label>
        <link refid="test__xdg__output_8cpp"/>
      </node>
      <node id="5">
        <label>kwin/autotests/wayland/client/test_xdg_shell.cpp</label>
        <link refid="test__xdg__shell_8cpp"/>
      </node>
      <node id="6">
        <label>kwin/autotests/wayland/server/test_inputmethod_interface.cpp</label>
        <link refid="test__inputmethod__interface_8cpp"/>
      </node>
      <node id="7">
        <label>kwin/tests/fakeoutput.cpp</label>
        <link refid="fakeoutput_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/tests/fakeoutput.h</label>
        <link refid="fakeoutput_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>kwin/tests/renderingservertest.cpp</label>
        <link refid="renderingservertest_8cpp"/>
      </node>
      <node id="9">
        <label>kwin/tests/waylandservertest.cpp</label>
        <link refid="waylandservertest_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_fake_output" prot="public">FakeOutput</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2022<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_fake_output" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_fake_output_1a12d70a7d47745e3df96ed0ce740410ac" kindref="member">FakeOutput</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output" kindref="compound">KWin::Output</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fake_output_1a12d70a7d47745e3df96ed0ce740410ac" kindref="member">FakeOutput</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop" kindref="compound">KWin::RenderLoop</ref><sp/>*<ref refid="class_fake_output_1a0d040a2c7667ea8e6fb6577854da4334" kindref="member">renderLoop</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1ab6a82f1b78c627d812a83c1252d92a0d" kindref="member">setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_output_1ad56a9a779a9bbe7149428a1aa42abeee" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a5cd444c1837befacc5e16135ee5b952d" kindref="member">setManufacturer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_output_1a18af9cd1a90948e0375eac86b7665368" kindref="member">manufacturer</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1ad4488f4d157f2e3bcc34ed27f692198e" kindref="member">setModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_output_1a41f6de69b05a8be304049fdee6917eb9" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a0091186a88db3035208a9557861dfa6d" kindref="member">setMode</ref>(QSize<sp/>size,<sp/>uint32_t<sp/><ref refid="class_k_win_1_1_output_1a3e1d2698295c7897ca32593d1022449d" kindref="member">refreshRate</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a65aeaf74fc589b6b273cf21580292d42" kindref="member">setSubPixel</ref>(<ref refid="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925" kindref="member">SubPixel</ref><sp/><ref refid="class_k_win_1_1_output_1a80f4870d37e9b765e2c56091d1844ee1" kindref="member">subPixel</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a42a35ca4d2cf07ec37c5b4d6fc761054" kindref="member">setDpmsSupported</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supported);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a4595c11f7858772aebd387f992d5414d" kindref="member">setPhysicalSize</ref>(QSize<sp/>size);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a4336bd346b9d433661c435ebf7b42fe3" kindref="member">setTransform</ref>(<ref refid="class_k_win_1_1_output_transform" kindref="compound">KWin::OutputTransform</ref><sp/><ref refid="class_k_win_1_1_output_1a66b40f1d46629cf20190d6f23224966f" kindref="member">transform</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1af3ed3f92b38918a26383c5132b039fc4" kindref="member">moveTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;pos);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1aeb8490fd57ab0d556bcd63be17458611" kindref="member">setScale</ref>(qreal<sp/><ref refid="class_k_win_1_1_output_1a26b1c3dcc612487192f4f23d11bc72b0" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="kwin/tests/fakeoutput.h"/>
  </compounddef>
</doxygen>
