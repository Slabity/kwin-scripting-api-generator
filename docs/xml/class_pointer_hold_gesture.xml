<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_pointer_hold_gesture" kind="class" language="C++" prot="public">
    <compoundname>PointerHoldGesture</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">QtWayland::zwp_pointer_gesture_hold_v1</basecompoundref>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_pointer_hold_gesture_1a6697c2ec2bcf4f89fe95978f0a44ae03" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PointerHoldGesture::zwp_pointer_gesture_hold_v1_begin</definition>
        <argsstring>(uint32_t serial, uint32_t time, wl_surface *surface, uint32_t fingers) override</argsstring>
        <name>zwp_pointer_gesture_hold_v1_begin</name>
        <qualifiedname>PointerHoldGesture::zwp_pointer_gesture_hold_v1_begin</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type>wl_surface *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fingers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="1066" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1066" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="class_pointer_hold_gesture_1a3d2c8873b1d58033c688bae406b61af4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PointerHoldGesture::zwp_pointer_gesture_hold_v1_end</definition>
        <argsstring>(uint32_t serial, uint32_t time, int32_t cancelled) override</argsstring>
        <name>zwp_pointer_gesture_hold_v1_end</name>
        <qualifiedname>PointerHoldGesture::zwp_pointer_gesture_hold_v1_end</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>cancelled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="1071" column="10" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1071" bodyend="1074"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_pointer_hold_gesture_1ad6cb6a6f58a8b9d7439c58105e89b93f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PointerHoldGesture::started</definition>
        <argsstring>(quint32 serial, quint32 time, void *surface, quint32 fingers)</argsstring>
        <name>started</name>
        <qualifiedname>PointerHoldGesture::started</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>time</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>fingers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="1076" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_pointer_hold_gesture_1a14e067a2ec2c3f38d3fff522f63aae41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PointerHoldGesture::ended</definition>
        <argsstring>(quint32 serial, quint32 time)</argsstring>
        <name>ended</name>
        <qualifiedname>PointerHoldGesture::ended</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="1077" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_pointer_hold_gesture_1aa70906a9fe77208c58e0d4b2bc0a87f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PointerHoldGesture::cancelled</definition>
        <argsstring>(quint32 serial, quint32 time)</argsstring>
        <name>cancelled</name>
        <qualifiedname>PointerHoldGesture::cancelled</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="1078" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>PointerHoldGesture</label>
        <link refid="class_pointer_hold_gesture"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="3">
        <label>QtWayland::zwp_pointer_gesture_hold_v1</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>PointerHoldGesture</label>
        <link refid="class_pointer_hold_gesture"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="3">
        <label>QtWayland::zwp_pointer_gesture_hold_v1</label>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/wayland/client/test_wayland_seat.cpp" line="1062" column="1" bodyfile="kwin/autotests/wayland/client/test_wayland_seat.cpp" bodystart="1063" bodyend="1079"/>
    <listofallmembers>
      <member refid="class_pointer_hold_gesture_1aa70906a9fe77208c58e0d4b2bc0a87f0" prot="public" virt="non-virtual"><scope>PointerHoldGesture</scope><name>cancelled</name></member>
      <member refid="class_pointer_hold_gesture_1a14e067a2ec2c3f38d3fff522f63aae41" prot="public" virt="non-virtual"><scope>PointerHoldGesture</scope><name>ended</name></member>
      <member refid="class_pointer_hold_gesture_1ad6cb6a6f58a8b9d7439c58105e89b93f" prot="public" virt="non-virtual"><scope>PointerHoldGesture</scope><name>started</name></member>
      <member refid="class_pointer_hold_gesture_1a6697c2ec2bcf4f89fe95978f0a44ae03" prot="private" virt="non-virtual"><scope>PointerHoldGesture</scope><name>zwp_pointer_gesture_hold_v1_begin</name></member>
      <member refid="class_pointer_hold_gesture_1a3d2c8873b1d58033c688bae406b61af4" prot="private" virt="non-virtual"><scope>PointerHoldGesture</scope><name>zwp_pointer_gesture_hold_v1_end</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
