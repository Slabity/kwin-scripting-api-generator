<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wayland__backend_8h" kind="file" language="C++">
    <compoundname>wayland_backend.h</compoundname>
    <includes local="yes">config-kwin.h</includes>
    <includes refid="inputbackend_8h" local="yes">core/inputbackend.h</includes>
    <includes refid="inputdevice_8h" local="yes">core/inputdevice.h</includes>
    <includes refid="outputbackend_8h" local="yes">core/outputbackend.h</includes>
    <includes refid="globals_8h" local="yes">effect/globals.h</includes>
    <includes refid="filedescriptor_8h" local="yes">utils/filedescriptor.h</includes>
    <includes local="no">QHash</includes>
    <includes local="no">QImage</includes>
    <includes local="no">QObject</includes>
    <includes local="no">QPoint</includes>
    <includes local="no">QSize</includes>
    <includedby refid="wayland__backend_8cpp" local="yes">kwin/src/backends/wayland/wayland_backend.cpp</includedby>
    <includedby refid="wayland__egl__backend_8cpp" local="yes">kwin/src/backends/wayland/wayland_egl_backend.cpp</includedby>
    <includedby refid="wayland__output_8cpp" local="yes">kwin/src/backends/wayland/wayland_output.cpp</includedby>
    <includedby refid="wayland__qpainter__backend_8cpp" local="yes">kwin/src/backends/wayland/wayland_qpainter_backend.cpp</includedby>
    <includedby refid="main__wayland_8cpp" local="yes">kwin/src/main_wayland.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/backends/wayland/wayland_backend.h</label>
        <link refid="wayland__backend_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/inputbackend.h</label>
        <link refid="inputbackend_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>KSharedConfig</label>
      </node>
      <node id="9">
        <label>QCoreApplication</label>
      </node>
      <node id="19">
        <label>QHash</label>
      </node>
      <node id="10">
        <label>QImage</label>
      </node>
      <node id="6">
        <label>QObject</label>
      </node>
      <node id="11">
        <label>QPoint</label>
      </node>
      <node id="20">
        <label>QSize</label>
      </node>
      <node id="12">
        <label>QVariant</label>
      </node>
      <node id="13">
        <label>QVector2D</label>
      </node>
      <node id="2">
        <label>config-kwin.h</label>
      </node>
      <node id="15">
        <label>epoxy/egl.h</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
      <node id="17">
        <label>optional</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/backends/wayland/wayland_backend.cpp</label>
        <link refid="wayland__backend_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/backends/wayland/wayland_backend.h</label>
        <link refid="wayland__backend_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>kwin/src/backends/wayland/wayland_egl_backend.cpp</label>
        <link refid="wayland__egl__backend_8cpp"/>
      </node>
      <node id="4">
        <label>kwin/src/backends/wayland/wayland_output.cpp</label>
        <link refid="wayland__output_8cpp"/>
      </node>
      <node id="5">
        <label>kwin/src/backends/wayland/wayland_qpainter_backend.cpp</label>
        <link refid="wayland__qpainter__backend_8cpp"/>
      </node>
      <node id="6">
        <label>kwin/src/main_wayland.cpp</label>
        <link refid="main__wayland_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_wayland_1_1_wayland_input_device" prot="public">KWin::Wayland::WaylandInputDevice</innerclass>
    <innerclass refid="class_k_win_1_1_wayland_1_1_wayland_input_backend" prot="public">KWin::Wayland::WaylandInputBackend</innerclass>
    <innerclass refid="class_k_win_1_1_wayland_1_1_wayland_seat" prot="public">KWin::Wayland::WaylandSeat</innerclass>
    <innerclass refid="class_k_win_1_1_wayland_1_1_wayland_buffer" prot="public">KWin::Wayland::WaylandBuffer</innerclass>
    <innerclass refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options" prot="public">KWin::Wayland::WaylandBackendOptions</innerclass>
    <innerclass refid="class_k_win_1_1_wayland_1_1_wayland_backend" prot="public">KWin::Wayland::WaylandBackend</innerclass>
    <innernamespace refid="namespace_k_wayland">KWayland</innernamespace>
    <innernamespace refid="namespace_k_wayland_1_1_client">KWayland::Client</innernamespace>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespace_k_win_1_1_wayland">KWin::Wayland</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2019<sp/>Roman<sp/>Gilg<sp/>&lt;subdiff@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2013<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config-kwin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputbackend_8h" kindref="compound">core/inputbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputdevice_8h" kindref="compound">core/inputdevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputbackend_8h" kindref="compound">core/outputbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">effect/globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filedescriptor_8h" kindref="compound">utils/filedescriptor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QHash&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QImage&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPoint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSize&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_buffer;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_display;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespace_k_wayland" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_wayland" kindref="compound">KWayland</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32" refid="namespace_k_wayland_1_1_client" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_wayland_1_1_client" kindref="compound">Client</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Keyboard;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Pointer;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PointerSwipeGesture;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PointerPinchGesture;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RelativePointer;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Seat;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Surface;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Touch;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GraphicsBuffer;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DrmDevice;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Wayland</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WaylandBackend;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WaylandSeat;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WaylandOutput;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WaylandEglBackend;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WaylandDisplay;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_k_win_1_1_wayland_1_1_wayland_input_device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ae43ccd4a46e2a922aee1e73912f30acf" kindref="member">WaylandInputDevice</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_1aa28bcff91a76e7c2b405dc6cc895cde6" kindref="member">InputDevice</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ae43ccd4a46e2a922aee1e73912f30acf" kindref="member">WaylandInputDevice</ref>(KWayland::Client::Touch<sp/>*touch,<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref><sp/>*seat);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ae43ccd4a46e2a922aee1e73912f30acf" kindref="member">WaylandInputDevice</ref>(KWayland::Client::Keyboard<sp/>*keyboard,<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref><sp/>*seat);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ae43ccd4a46e2a922aee1e73912f30acf" kindref="member">WaylandInputDevice</ref>(KWayland::Client::RelativePointer<sp/>*relativePointer,<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref><sp/>*seat);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ae43ccd4a46e2a922aee1e73912f30acf" kindref="member">WaylandInputDevice</ref>(KWayland::Client::Pointer<sp/>*pointer,<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref><sp/>*seat);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1acce92ff81537d4b68f23d808ecc2fbd9" kindref="member">~WaylandInputDevice</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1aeeb87ba27f7499d864a102e7f9cf46f7" kindref="member">name</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1ab230b251fa86f749b83c60a619901a8b" kindref="member">isEnabled</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a2d099135e4373f2837e5623367d93597" kindref="member">setEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a600127120cf6c54c11f40c5082724110" kindref="member">isKeyboard</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a0692402f6f95b26d45e4889da99c1733" kindref="member">isPointer</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a3995d993a66143a3fca27e2c053928b6" kindref="member">isTouchpad</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a9d2a35d1b9a15f8e1ee643ec20e2a246" kindref="member">isTouch</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a04c54eb5211d9ec4951cb286e8b85a90" kindref="member">isTabletTool</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a85e7a2c756b9aedc10b02edef323b579" kindref="member">isTabletPad</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a77f53f4034747df59590dc1615c84a69" kindref="member">isTabletModeSwitch</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1af868f02670ebde22f77eae49804e8069" kindref="member">isLidSwitch</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Pointer<sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device_1a7234140cd0fd48df1d9105cfa53cbda6" kindref="member">nativePointer</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m_seat;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Keyboard&gt;<sp/>m_keyboard;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Touch&gt;<sp/>m_touch;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::RelativePointer&gt;<sp/>m_relativePointer;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Pointer&gt;<sp/>m_pointer;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::PointerPinchGesture&gt;<sp/>m_pinchGesture;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::PointerSwipeGesture&gt;<sp/>m_swipeGesture;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>QSet&lt;quint32&gt;<sp/>m_pressedKeys;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_k_win_1_1_wayland_1_1_wayland_input_backend" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_backend_1ab0d2ff608436bbdad9d53ea8a03be585" kindref="member">WaylandInputBackend</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_backend_1a932271e56f9031f098be87ef527523d6" kindref="member">InputBackend</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_backend_1ab0d2ff608436bbdad9d53ea8a03be585" kindref="member">WaylandInputBackend</ref>(<ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*backend,<sp/>QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_backend_1a3f6ec87ac3f939e4ab9bc328d3a4e0cb" kindref="member">initialize</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*m_backend;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_k_win_1_1_wayland_1_1_wayland_seat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1acd3470631de5ee72041d8d0711d63588" kindref="member">WaylandSeat</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1acd3470631de5ee72041d8d0711d63588" kindref="member">WaylandSeat</ref>(KWayland::Client::Seat<sp/>*nativeSeat,<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1ae95363da89dd9b677a9a24e6d704280d" kindref="member">backend</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1aec9f97ac1cebbb4725d0f4ad863526ac" kindref="member">~WaylandSeat</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_k_win_1_1_wayland_1_1_wayland_seat_1ae95363da89dd9b677a9a24e6d704280d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1ae95363da89dd9b677a9a24e6d704280d" kindref="member">backend</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_k_win_1_1_wayland_1_1_wayland_seat_1a287e2a1f0a58bf8d92ef18abdcd64faf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device" kindref="compound">WaylandInputDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1a287e2a1f0a58bf8d92ef18abdcd64faf" kindref="member">pointerDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="125"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pointerDevice.get();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128" refid="class_k_win_1_1_wayland_1_1_wayland_seat_1af7931f943dcbb8ad484c6ebb830d3a80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device" kindref="compound">WaylandInputDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1af7931f943dcbb8ad484c6ebb830d3a80" kindref="member">relativePointerDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="129"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_relativePointerDevice.get();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132" refid="class_k_win_1_1_wayland_1_1_wayland_seat_1a6089376873ebc9b92cd2218ff0699d05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device" kindref="compound">WaylandInputDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1a6089376873ebc9b92cd2218ff0699d05" kindref="member">keyboardDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="133"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_keyboardDevice.get();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136" refid="class_k_win_1_1_wayland_1_1_wayland_seat_1ab2689d9beb40928b82183d3031b38f25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device" kindref="compound">WaylandInputDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1ab2689d9beb40928b82183d3031b38f25" kindref="member">touchDevice</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_touchDevice.get();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1a70e7103df9afb6f57682a361002a1b3f" kindref="member">createRelativePointer</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1a8d1d85ba943315437773b0848cfccfaf" kindref="member">destroyRelativePointer</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="145" refid="class_k_win_1_1_wayland_1_1_wayland_seat_1ae69ac94b31884e0eff07492e58c49274" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1ae69ac94b31884e0eff07492e58c49274" kindref="member">deviceAdded</ref>(<ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device" kindref="compound">WaylandInputDevice</ref><sp/>*device);</highlight></codeline>
<codeline lineno="146" refid="class_k_win_1_1_wayland_1_1_wayland_seat_1a6a79a52bade3bc1aa1d21e3b1853616b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat_1a6a79a52bade3bc1aa1d21e3b1853616b" kindref="member">deviceRemoved</ref>(<ref refid="class_k_win_1_1_wayland_1_1_wayland_input_device" kindref="compound">WaylandInputDevice</ref><sp/>*device);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createPointerDevice();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyPointerDevice();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createKeyboardDevice();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyKeyboardDevice();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createTouchDevice();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyTouchDevice();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Seat<sp/>*m_seat;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*m_backend;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;WaylandInputDevice&gt;<sp/>m_pointerDevice;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;WaylandInputDevice&gt;<sp/>m_relativePointerDevice;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;WaylandInputDevice&gt;<sp/>m_keyboardDevice;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;WaylandInputDevice&gt;<sp/>m_touchDevice;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="class_k_win_1_1_wayland_1_1_wayland_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_buffer_1a84044fc1adfd2b720746a747175e8ebc" kindref="member">WaylandBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_buffer_1a84044fc1adfd2b720746a747175e8ebc" kindref="member">WaylandBuffer</ref>(wl_buffer<sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_buffer_1a87eba9468140f3fcce80981d6112195e" kindref="member">handle</ref>,<sp/><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*graphicsBuffer);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_buffer_1ae597eeca4d72a6618f18915fa43df110" kindref="member">~WaylandBuffer</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_buffer<sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_buffer_1a87eba9468140f3fcce80981d6112195e" kindref="member">handle</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_buffer_1a521ef4e1e29d090aabb6e0200d54ad2b" kindref="member">lock</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_buffer_1ab8331c0cf3490ff371dda97a3ab0ed8c" kindref="member">unlock</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="179" refid="class_k_win_1_1_wayland_1_1_wayland_buffer_1ab993c7d79645b497e43f85095dd34137" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_buffer_1ab993c7d79645b497e43f85095dd34137" kindref="member">defunct</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*m_graphicsBuffer;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_buffer<sp/>*m_handle;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_locked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options" kindref="compound">WaylandBackendOptions</ref></highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189" refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options_1aa8979540cf7eb51df630e927f761dcc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options_1aa8979540cf7eb51df630e927f761dcc8" kindref="member">socketName</ref>;</highlight></codeline>
<codeline lineno="190" refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options_1a9892be29a28a07e9bbb87510402f9c9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options_1a9892be29a28a07e9bbb87510402f9c9f" kindref="member">outputCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="191" refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options_1af09c59e52b5f56916599140bb61ad1dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options_1af09c59e52b5f56916599140bb61ad1dc" kindref="member">outputScale</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="192" refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options_1af1ec6dc825eb2d7cb55424345309a8ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/><ref refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options_1af1ec6dc825eb2d7cb55424345309a8ae" kindref="member">outputSize</ref><sp/>=<sp/>QSize(1024,<sp/>768);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_k_win_1_1_wayland_1_1_wayland_backend" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KWIN_EXPORT<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a9e606a1e44ed57433e766441716aa59b" kindref="member">WaylandBackend</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_backend_1a3059152d8eda13eaedd7eecad43e2470" kindref="member">OutputBackend</ref></highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a9e606a1e44ed57433e766441716aa59b" kindref="member">WaylandBackend</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options" kindref="compound">WaylandBackendOptions</ref><sp/>&amp;<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>,<sp/>QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a9e606a1e44ed57433e766441716aa59b" kindref="member">~WaylandBackend</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1afb220be111798a941e34f1edf62d638c" kindref="member">initialize</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;InputBackend&gt;<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1ae42f167dda4d156ce9471f57fee6df34" kindref="member">createInputBackend</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;OpenGLBackend&gt;<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a80241e87de209b2bdc2431e4621e411a" kindref="member">createOpenGLBackend</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;QPainterBackend&gt;<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a7de5fdf50c919c082d91bb060c3a605d" kindref="member">createQPainterBackend</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a4d5629ba1cb355c342ccc4ffd3e59c22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_display" kindref="compound">WaylandDisplay</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a4d5629ba1cb355c342ccc4ffd3e59c22" kindref="member">display</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="215"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_display.get();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218" refid="class_k_win_1_1_wayland_1_1_wayland_backend_1af598c680e37addecbf70f245c8fc1970" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_seat" kindref="compound">WaylandSeat</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1af598c680e37addecbf70f245c8fc1970" kindref="member">seat</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_seat.get();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supportsPointerLock();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>togglePointerLock();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;CompositingType&gt;<sp/>supportedCompositors()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output" kindref="compound">WaylandOutput</ref><sp/>*findOutput(KWayland::Client::Surface<sp/>*nativeSurface)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_outputs" kindref="compound">Outputs</ref><sp/>outputs()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230" refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a87d6c520d7c7e5264dcf4e333b84b716" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;WaylandOutput<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a87d6c520d7c7e5264dcf4e333b84b716" kindref="member">waylandOutputs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="231"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_outputs;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*createVirtualOutput(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;description,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeVirtualOutput(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_buffer<sp/>*importBuffer(<ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref><sp/>*graphicsBuffer);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref><sp/>*drmDevice()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a142c92662147d3a18beb2423a98b180e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1a142c92662147d3a18beb2423a98b180e" kindref="member">setEglBackend</ref>(<ref refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend" kindref="compound">WaylandEglBackend</ref><sp/>*eglBackend)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eglBackend<sp/>=<sp/>eglBackend;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setEglDisplay(std::unique_ptr&lt;EglDisplay&gt;<sp/>&amp;&amp;display);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref><sp/>*sceneEglDisplayObject()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="250" refid="class_k_win_1_1_wayland_1_1_wayland_backend_1aa373f32d8247201e7a1fb1e8197de4f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend_1aa373f32d8247201e7a1fb1e8197de4f6" kindref="member">pointerLockChanged</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>locked);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createOutputs();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyOutputs();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output" kindref="compound">WaylandOutput</ref><sp/>*createOutput(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/>qreal<sp/>scale);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_wayland_1_1_wayland_backend_options" kindref="compound">WaylandBackendOptions</ref><sp/>m_options;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;WaylandDisplay&gt;<sp/>m_display;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;WaylandSeat&gt;<sp/>m_seat;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend" kindref="compound">WaylandEglBackend</ref><sp/>*m_eglBackend<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;WaylandOutput<sp/>*&gt;<sp/>m_outputs;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_pointerLockRequested<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;DrmDevice&gt;<sp/>m_drmDevice;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;EglDisplay&gt;<sp/>m_eglDisplay;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;GraphicsBuffer<sp/>*,<sp/>std::unique_ptr&lt;WaylandBuffer&gt;&gt;<sp/>m_buffers;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Wayland</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/wayland/wayland_backend.h"/>
  </compounddef>
</doxygen>
