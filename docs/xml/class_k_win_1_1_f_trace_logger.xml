<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_f_trace_logger" kind="class" language="C++" prot="public">
    <compoundname>KWin::FTraceLogger</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="ftrace_8h" local="no">ftrace.h</includes>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_f_trace_logger_1a30a96dd096ed67d50cc26bba07082057" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool KWin::FTraceLogger::isEnabled</definition>
        <argsstring></argsstring>
        <name>isEnabled</name>
        <qualifiedname>KWin::FTraceLogger::isEnabled</qualifiedname>
        <read>isEnabled</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="34" column="5" bodyfile="kwin/src/ftrace.h" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_f_trace_logger_1ad7b9816d459feada67e74019a59088b6" prot="private" static="no" mutable="no">
        <type>QFile</type>
        <definition>QFile KWin::FTraceLogger::m_file</definition>
        <argsstring></argsstring>
        <name>m_file</name>
        <qualifiedname>KWin::FTraceLogger::m_file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="67" column="11" bodyfile="kwin/src/ftrace.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_f_trace_logger_1a9c590c96c7cdecab574162263126c8ee" prot="private" static="no" mutable="no">
        <type>QMutex</type>
        <definition>QMutex KWin::FTraceLogger::m_mutex</definition>
        <argsstring></argsstring>
        <name>m_mutex</name>
        <qualifiedname>KWin::FTraceLogger::m_mutex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="68" column="12" bodyfile="kwin/src/ftrace.h" bodystart="68" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_f_trace_logger_1a27a6556499f8de5a5221e015f7e5340a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::FTraceLogger::Q_CLASSINFO</definition>
        <argsstring>(&quot;D-Bus Interface&quot;, &quot;org.kde.kwin.FTrace&quot;)</argsstring>
        <name>Q_CLASSINFO</name>
        <qualifiedname>KWin::FTraceLogger::Q_CLASSINFO</qualifiedname>
        <param>
          <type>&quot;D-Bus Interface&quot;</type>
        </param>
        <param>
          <type>&quot;org.kde.kwin.FTrace&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="33" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_f_trace_logger_1a8982e14bd7f899b7170e5d4f5cf7602c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::FTraceLogger::open</definition>
        <argsstring>()</argsstring>
        <name>open</name>
        <qualifiedname>KWin::FTraceLogger::open</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="66" column="10" bodyfile="kwin/src/ftrace.cpp" bodystart="55" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_f_trace_logger_1ac773dc67e512f6c86dc3898e10aa6011" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::FTraceLogger::isEnabled</definition>
        <argsstring>() const</argsstring>
        <name>isEnabled</name>
        <qualifiedname>KWin::FTraceLogger::isEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enabled through DBus and logging has started </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="40" column="10" bodyfile="kwin/src/ftrace.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_f_trace_logger_1a2896ffeab4d927de41d10c0dde1170a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void KWin::FTraceLogger::trace</definition>
        <argsstring>(Args... args)</argsstring>
        <name>trace</name>
        <qualifiedname>KWin::FTraceLogger::trace</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Main log function Takes any number of arguments that can be written into QTextStream </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="47" column="10" bodyfile="kwin/src/ftrace.h" bodystart="47" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_f_trace_logger_1a9bc3b184bc01161a641374cbb00f5f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::FTraceLogger::enabledChanged</definition>
        <argsstring>()</argsstring>
        <name>enabledChanged</name>
        <qualifiedname>KWin::FTraceLogger::enabledChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="59" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_f_trace_logger_1a9f348f9289d22a5fad460be326440c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_SCRIPTABLE void</type>
        <definition>void KWin::FTraceLogger::setEnabled</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setEnabled</name>
        <qualifiedname>KWin::FTraceLogger::setEnabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="62" column="23" bodyfile="kwin/src/ftrace.cpp" bodystart="40" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_k_win_1_1_f_trace_logger_1a4e9db19473ccf0958773f239459b29ce" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::FTraceLogger::filePath</definition>
        <argsstring>()</argsstring>
        <name>filePath</name>
        <qualifiedname>KWin::FTraceLogger::filePath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/ftrace.h" line="65" column="20" bodyfile="kwin/src/ftrace.cpp" bodystart="69" bodyend="114"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_k_win_1_1_f_trace_logger" kindref="compound">FTraceLogger</ref> is a singleton utility for writing log messages using ftrace</para>
<para>Usage: Either: Set the KWIN_PERF_FTRACE environment variable before starting the application Calling on DBus /FTrace org.kde.kwin.FTrace.setEnabled true After having created the ftrace mount </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::FTraceLogger</label>
        <link refid="class_k_win_1_1_f_trace_logger"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::FTraceLogger</label>
        <link refid="class_k_win_1_1_f_trace_logger"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/ftrace.h" line="30" column="1" bodyfile="kwin/src/ftrace.h" bodystart="31" bodyend="70"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_f_trace_logger_1a9bc3b184bc01161a641374cbb00f5f5a" prot="public" virt="non-virtual"><scope>KWin::FTraceLogger</scope><name>enabledChanged</name></member>
      <member refid="class_k_win_1_1_f_trace_logger_1a4e9db19473ccf0958773f239459b29ce" prot="private" virt="non-virtual"><scope>KWin::FTraceLogger</scope><name>filePath</name></member>
      <member refid="class_k_win_1_1_f_trace_logger_1a30a96dd096ed67d50cc26bba07082057" prot="public" virt="non-virtual"><scope>KWin::FTraceLogger</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_f_trace_logger_1ac773dc67e512f6c86dc3898e10aa6011" prot="public" virt="non-virtual"><scope>KWin::FTraceLogger</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_f_trace_logger_1ad7b9816d459feada67e74019a59088b6" prot="private" virt="non-virtual"><scope>KWin::FTraceLogger</scope><name>m_file</name></member>
      <member refid="class_k_win_1_1_f_trace_logger_1a9c590c96c7cdecab574162263126c8ee" prot="private" virt="non-virtual"><scope>KWin::FTraceLogger</scope><name>m_mutex</name></member>
      <member refid="class_k_win_1_1_f_trace_logger_1a8982e14bd7f899b7170e5d4f5cf7602c" prot="private" virt="non-virtual"><scope>KWin::FTraceLogger</scope><name>open</name></member>
      <member refid="class_k_win_1_1_f_trace_logger_1a27a6556499f8de5a5221e015f7e5340a" prot="private" virt="non-virtual"><scope>KWin::FTraceLogger</scope><name>Q_CLASSINFO</name></member>
      <member refid="class_k_win_1_1_f_trace_logger_1a9f348f9289d22a5fad460be326440c31" prot="public" virt="non-virtual"><scope>KWin::FTraceLogger</scope><name>setEnabled</name></member>
      <member refid="class_k_win_1_1_f_trace_logger_1a2896ffeab4d927de41d10c0dde1170a8" prot="public" virt="non-virtual"><scope>KWin::FTraceLogger</scope><name>trace</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
