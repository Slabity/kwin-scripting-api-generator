<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_mock_object" kind="class" language="C++" prot="public">
    <compoundname>MockObject</compoundname>
    <derivedcompoundref refid="class_mock_connector" prot="public" virt="non-virtual">MockConnector</derivedcompoundref>
    <derivedcompoundref refid="class_mock_crtc" prot="public" virt="non-virtual">MockCrtc</derivedcompoundref>
    <derivedcompoundref refid="class_mock_encoder" prot="public" virt="non-virtual">MockEncoder</derivedcompoundref>
    <derivedcompoundref refid="class_mock_plane" prot="public" virt="non-virtual">MockPlane</derivedcompoundref>
    <includes refid="mock__drm_8h" local="no">mock_drm.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_mock_object_1a9578562398c7e2f643300da2bf8f745f" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t MockObject::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <qualifiedname>MockObject::id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="62" column="14" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_object_1a90cdcc4aa90c655ff7f76fa82e39401e" prot="public" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_mock_property" kindref="compound">MockProperty</ref> &gt;</type>
        <definition>QList&lt;MockProperty&gt; MockObject::props</definition>
        <argsstring></argsstring>
        <name>props</name>
        <qualifiedname>MockObject::props</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="63" column="11" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_object_1aee2a37c6a86ae20ee579900b72e04bfe" prot="public" static="no" mutable="no">
        <type><ref refid="class_mock_gpu" kindref="compound">MockGpu</ref> *</type>
        <definition>MockGpu* MockObject::gpu</definition>
        <argsstring></argsstring>
        <name>gpu</name>
        <qualifiedname>MockObject::gpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="64" column="13" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mock_object_1aa99edcf828702ea4827416c5df93e448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MockObject::MockObject</definition>
        <argsstring>(MockGpu *gpu)</argsstring>
        <name>MockObject</name>
        <qualifiedname>MockObject::MockObject</qualifiedname>
        <param>
          <type><ref refid="class_mock_gpu" kindref="compound">MockGpu</ref> *</type>
          <declname>gpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="54" column="5" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_object_1aa32f10d16e17321d7e37fe2fe442e7d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>MockObject::~MockObject</definition>
        <argsstring>()</argsstring>
        <name>~MockObject</name>
        <qualifiedname>MockObject::~MockObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="55" column="13" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_object_1a76f1c2955f448959528ffc1c4872c36a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t MockObject::getProp</definition>
        <argsstring>(const QString &amp;propName) const</argsstring>
        <name>getProp</name>
        <qualifiedname>MockObject::getProp</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="57" column="14" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="105" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_object_1ac1fb4229dc515cc08cef807dce970962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MockObject::setProp</definition>
        <argsstring>(const QString &amp;propName, uint64_t value)</argsstring>
        <name>setProp</name>
        <qualifiedname>MockObject::setProp</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>propName</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="58" column="10" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="115" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_object_1a9529304fa4cb728bfb7a57c1327ab6cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MockObject::getPropId</definition>
        <argsstring>(const QString &amp;propName) const</argsstring>
        <name>getPropId</name>
        <qualifiedname>MockObject::getPropId</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/drm/mock_drm.h" line="60" column="14" bodyfile="kwin/autotests/drm/mock_drm.cpp" bodystart="126" bodyend="134"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>MockConnector</label>
        <link refid="class_mock_connector"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MockCrtc</label>
        <link refid="class_mock_crtc"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>MockEncoder</label>
        <link refid="class_mock_encoder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
      </node>
      <node id="5">
        <label>MockPlane</label>
        <link refid="class_mock_plane"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>MockGpu</label>
        <link refid="class_mock_gpu"/>
      </node>
      <node id="1">
        <label>MockObject</label>
        <link refid="class_mock_object"/>
        <childnode refid="2" relation="usage">
          <edgelabel>gpu</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/drm/mock_drm.h" line="52" column="1" bodyfile="kwin/autotests/drm/mock_drm.h" bodystart="52" bodyend="65"/>
    <listofallmembers>
      <member refid="class_mock_object_1a76f1c2955f448959528ffc1c4872c36a" prot="public" virt="non-virtual"><scope>MockObject</scope><name>getProp</name></member>
      <member refid="class_mock_object_1a9529304fa4cb728bfb7a57c1327ab6cc" prot="public" virt="non-virtual"><scope>MockObject</scope><name>getPropId</name></member>
      <member refid="class_mock_object_1aee2a37c6a86ae20ee579900b72e04bfe" prot="public" virt="non-virtual"><scope>MockObject</scope><name>gpu</name></member>
      <member refid="class_mock_object_1a9578562398c7e2f643300da2bf8f745f" prot="public" virt="non-virtual"><scope>MockObject</scope><name>id</name></member>
      <member refid="class_mock_object_1aa99edcf828702ea4827416c5df93e448" prot="public" virt="non-virtual"><scope>MockObject</scope><name>MockObject</name></member>
      <member refid="class_mock_object_1a90cdcc4aa90c655ff7f76fa82e39401e" prot="public" virt="non-virtual"><scope>MockObject</scope><name>props</name></member>
      <member refid="class_mock_object_1ac1fb4229dc515cc08cef807dce970962" prot="public" virt="non-virtual"><scope>MockObject</scope><name>setProp</name></member>
      <member refid="class_mock_object_1aa32f10d16e17321d7e37fe2fe442e7d3" prot="public" virt="virtual"><scope>MockObject</scope><name>~MockObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
