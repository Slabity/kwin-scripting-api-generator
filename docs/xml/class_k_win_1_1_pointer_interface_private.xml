<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_pointer_interface_private" kind="class" language="C++" prot="public">
    <compoundname>KWin::PointerInterfacePrivate</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QtWaylandServer::wl_pointer</basecompoundref>
    <includes refid="pointer__p_8h" local="no">pointer_p.h</includes>
    <innerclass refid="struct_k_win_1_1_pointer_interface_private_1_1_axis_accumulator" prot="private">KWin::PointerInterfacePrivate::AxisAccumulator</innerclass>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1ae4333b1eb4df2fb44dde6cdb621ff6d9" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref> *</type>
        <definition>PointerInterface* KWin::PointerInterfacePrivate::q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <qualifiedname>KWin::PointerInterfacePrivate::q</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="64" column="22" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1a69fc6208b1011150b4dbee3237f229c6" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref> *</type>
        <definition>SeatInterface* KWin::PointerInterfacePrivate::seat</definition>
        <argsstring></argsstring>
        <name>seat</name>
        <qualifiedname>KWin::PointerInterfacePrivate::seat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="65" column="19" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> *</type>
        <definition>SurfaceInterface* KWin::PointerInterfacePrivate::focusedSurface</definition>
        <argsstring></argsstring>
        <name>focusedSurface</name>
        <qualifiedname>KWin::PointerInterfacePrivate::focusedSurface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="66" column="22" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1a840bc0509f1d2c25c73667886559e40b" prot="public" static="no" mutable="no">
        <type>quint32</type>
        <definition>quint32 KWin::PointerInterfacePrivate::focusedSerial</definition>
        <argsstring></argsstring>
        <name>focusedSerial</name>
        <qualifiedname>KWin::PointerInterfacePrivate::focusedSerial</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="67" column="13" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1ab719f4d379e49b34155d054b1a2c6007" prot="public" static="no" mutable="no">
        <type>QMetaObject::Connection</type>
        <definition>QMetaObject::Connection KWin::PointerInterfacePrivate::destroyConnection</definition>
        <argsstring></argsstring>
        <name>destroyConnection</name>
        <qualifiedname>KWin::PointerInterfacePrivate::destroyConnection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="68" column="29" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1a43a3e2ccf9fbd983316ace93522566ea" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_pointer_surface_cursor" kindref="compound">PointerSurfaceCursor</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PointerSurfaceCursor&gt; KWin::PointerInterfacePrivate::cursor</definition>
        <argsstring></argsstring>
        <name>cursor</name>
        <qualifiedname>KWin::PointerInterfacePrivate::cursor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="69" column="21" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1a271022e8dd50ec1532232cd7a758d14a" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_relative_pointer_v1_interface" kindref="compound">RelativePointerV1Interface</ref> &gt;</type>
        <definition>std::unique_ptr&lt;RelativePointerV1Interface&gt; KWin::PointerInterfacePrivate::relativePointersV1</definition>
        <argsstring></argsstring>
        <name>relativePointersV1</name>
        <qualifiedname>KWin::PointerInterfacePrivate::relativePointersV1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="70" column="21" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1a1c0e41e3b6bc5ad998a4448f799bd8ce" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface" kindref="compound">PointerSwipeGestureV1Interface</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PointerSwipeGestureV1Interface&gt; KWin::PointerInterfacePrivate::swipeGesturesV1</definition>
        <argsstring></argsstring>
        <name>swipeGesturesV1</name>
        <qualifiedname>KWin::PointerInterfacePrivate::swipeGesturesV1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="71" column="21" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1a53e679ddc9f5562c36b3cd342cc9f15b" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface" kindref="compound">PointerPinchGestureV1Interface</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PointerPinchGestureV1Interface&gt; KWin::PointerInterfacePrivate::pinchGesturesV1</definition>
        <argsstring></argsstring>
        <name>pinchGesturesV1</name>
        <qualifiedname>KWin::PointerInterfacePrivate::pinchGesturesV1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="72" column="21" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1a12ee3f18f0e4df9fea02c549680b53cc" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface" kindref="compound">PointerHoldGestureV1Interface</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PointerHoldGestureV1Interface&gt; KWin::PointerInterfacePrivate::holdGesturesV1</definition>
        <argsstring></argsstring>
        <name>holdGesturesV1</name>
        <qualifiedname>KWin::PointerInterfacePrivate::holdGesturesV1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="73" column="21" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1abe641d023141432f2f22e205242e9aa1" prot="public" static="no" mutable="no">
        <type>QPointF</type>
        <definition>QPointF KWin::PointerInterfacePrivate::lastPosition</definition>
        <argsstring></argsstring>
        <name>lastPosition</name>
        <qualifiedname>KWin::PointerInterfacePrivate::lastPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="74" column="13" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_pointer_interface_private_1a96cb5548cc3b642d76e7b5ee59cab6ff" prot="public" static="no" mutable="no">
        <type>AxisAccumulator</type>
        <definition>AxisAccumulator KWin::PointerInterfacePrivate::axisAccumulator</definition>
        <argsstring></argsstring>
        <name>axisAccumulator</name>
        <qualifiedname>KWin::PointerInterfacePrivate::axisAccumulator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="75" column="21" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="75" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_private_1acd1dec82f581dd8d9ccc055ae380548f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_pointer_interface_private" kindref="compound">PointerInterfacePrivate</ref> *</type>
        <definition>PointerInterfacePrivate * KWin::PointerInterfacePrivate::get</definition>
        <argsstring>(PointerInterface *pointer)</argsstring>
        <name>get</name>
        <qualifiedname>KWin::PointerInterfacePrivate::get</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="57" column="36" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_private_1ac7cb2bfce1918b14a51487d0171114b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PointerInterfacePrivate::PointerInterfacePrivate</definition>
        <argsstring>(PointerInterface *q, SeatInterface *seat)</argsstring>
        <name>PointerInterfacePrivate</name>
        <qualifiedname>KWin::PointerInterfacePrivate::PointerInterfacePrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref> *</type>
          <declname>seat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="59" column="5" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_private_1ac934561075c7f882dc75c37330f64b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PointerInterfacePrivate::~PointerInterfacePrivate</definition>
        <argsstring>() override</argsstring>
        <name>~PointerInterfacePrivate</name>
        <qualifiedname>KWin::PointerInterfacePrivate::~PointerInterfacePrivate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="60" column="5" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_private_1a7a3b19c8964089efd8034631523527a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; Resource * &gt;</type>
        <definition>QList&lt; PointerInterfacePrivate::Resource * &gt; KWin::PointerInterfacePrivate::pointersForClient</definition>
        <argsstring>(ClientConnection *client) const</argsstring>
        <name>pointersForClient</name>
        <qualifiedname>KWin::PointerInterfacePrivate::pointersForClient</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="62" column="11" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_private_1a3614042b58d2b2627584fb6f557281ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterfacePrivate::sendLeave</definition>
        <argsstring>(quint32 serial)</argsstring>
        <name>sendLeave</name>
        <qualifiedname>KWin::PointerInterfacePrivate::sendLeave</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="77" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="113" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_private_1abee19e8ea348900c81f533b4c0776c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterfacePrivate::sendEnter</definition>
        <argsstring>(const QPointF &amp;parentSurfacePosition, quint32 serial)</argsstring>
        <name>sendEnter</name>
        <qualifiedname>KWin::PointerInterfacePrivate::sendEnter</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>parentSurfacePosition</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="78" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_private_1a902ad6e60febf232f814f0401950e801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterfacePrivate::sendFrame</definition>
        <argsstring>()</argsstring>
        <name>sendFrame</name>
        <qualifiedname>KWin::PointerInterfacePrivate::sendFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="79" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="129" bodyend="137"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_private_1a70df43984f555cb8acd70ac73cac85d4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterfacePrivate::pointer_set_cursor</definition>
        <argsstring>(Resource *resource, uint32_t serial, ::wl_resource *surface_resource, int32_t hotspot_x, int32_t hotspot_y) override</argsstring>
        <name>pointer_set_cursor</name>
        <qualifiedname>KWin::PointerInterfacePrivate::pointer_set_cursor</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>::wl_resource *</type>
          <declname>surface_resource</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>hotspot_x</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>hotspot_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="82" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="53" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_private_1ab5429e871f49879ef8bf2f458ab4a2a6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterfacePrivate::pointer_release</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>pointer_release</name>
        <qualifiedname>KWin::PointerInterfacePrivate::pointer_release</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="83" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_pointer_interface_private_1a813fa0ad93c2f8550c31a4577eebac8f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PointerInterfacePrivate::pointer_bind_resource</definition>
        <argsstring>(Resource *resource) override</argsstring>
        <name>pointer_bind_resource</name>
        <qualifiedname>KWin::PointerInterfacePrivate::pointer_bind_resource</qualifiedname>
        <param>
          <type>Resource *</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/pointer_p.h" line="84" column="10" bodyfile="kwin/src/wayland/pointer.cpp" bodystart="100" bodyend="111"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::PointerInterfacePrivate</label>
        <link refid="class_k_win_1_1_pointer_interface_private"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QtWaylandServer::wl_pointer</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>KWin::PointerInterface</label>
        <link refid="class_k_win_1_1_pointer_interface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::PointerInterfacePrivate</label>
        <link refid="class_k_win_1_1_pointer_interface_private"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>q</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>seat</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>focusedSurface</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>axisAccumulator</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>KWin::PointerInterfacePrivate::AxisAccumulator</label>
      </node>
      <node id="5">
        <label>KWin::SeatInterface</label>
        <link refid="class_k_win_1_1_seat_interface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>KWin::SurfaceInterface</label>
        <link refid="class_k_win_1_1_surface_interface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="2">
        <label>QtWaylandServer::wl_pointer</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/pointer_p.h" line="26" column="1" bodyfile="kwin/src/wayland/pointer_p.h" bodystart="27" bodyend="85"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_pointer_interface_private_1a96cb5548cc3b642d76e7b5ee59cab6ff" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>axisAccumulator</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a43a3e2ccf9fbd983316ace93522566ea" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>cursor</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1ab719f4d379e49b34155d054b1a2c6007" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>destroyConnection</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a840bc0509f1d2c25c73667886559e40b" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>focusedSerial</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>focusedSurface</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1acd1dec82f581dd8d9ccc055ae380548f" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>get</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a12ee3f18f0e4df9fea02c549680b53cc" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>holdGesturesV1</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1abe641d023141432f2f22e205242e9aa1" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>lastPosition</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a53e679ddc9f5562c36b3cd342cc9f15b" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>pinchGesturesV1</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a813fa0ad93c2f8550c31a4577eebac8f" prot="protected" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>pointer_bind_resource</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1ab5429e871f49879ef8bf2f458ab4a2a6" prot="protected" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>pointer_release</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a70df43984f555cb8acd70ac73cac85d4" prot="protected" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>pointer_set_cursor</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1ac7cb2bfce1918b14a51487d0171114b6" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>PointerInterfacePrivate</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a7a3b19c8964089efd8034631523527a1" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>pointersForClient</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1ae4333b1eb4df2fb44dde6cdb621ff6d9" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>q</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a271022e8dd50ec1532232cd7a758d14a" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>relativePointersV1</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a69fc6208b1011150b4dbee3237f229c6" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>seat</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1abee19e8ea348900c81f533b4c0776c6e" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>sendEnter</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a902ad6e60febf232f814f0401950e801" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>sendFrame</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a3614042b58d2b2627584fb6f557281ed" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>sendLeave</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1a1c0e41e3b6bc5ad998a4448f799bd8ce" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>swipeGesturesV1</name></member>
      <member refid="class_k_win_1_1_pointer_interface_private_1ac934561075c7f882dc75c37330f64b87" prot="public" virt="non-virtual"><scope>KWin::PointerInterfacePrivate</scope><name>~PointerInterfacePrivate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
