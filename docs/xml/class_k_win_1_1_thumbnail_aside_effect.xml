<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_thumbnail_aside_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::ThumbnailAsideEffect</compoundname>
    <basecompoundref refid="class_k_win_1_1_effect" prot="public" virt="non-virtual">KWin::Effect</basecompoundref>
    <includes refid="thumbnailaside_8h" local="no">thumbnailaside.h</includes>
    <innerclass refid="struct_k_win_1_1_thumbnail_aside_effect_1_1_data" prot="private">KWin::ThumbnailAsideEffect::Data</innerclass>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_thumbnail_aside_effect_1a3fe5ed04eb8df72f47e7cd7b0fbbbe3a" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ThumbnailAsideEffect::maxWidth</definition>
        <argsstring></argsstring>
        <name>maxWidth</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::maxWidth</qualifiedname>
        <read>configuredMaxWidth</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="30" column="5" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_thumbnail_aside_effect_1a13e93847df7ec127e1d61c6550e5fb6a" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ThumbnailAsideEffect::spacing</definition>
        <argsstring></argsstring>
        <name>spacing</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::spacing</qualifiedname>
        <read>configuredSpacing</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="31" column="5" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_thumbnail_aside_effect_1a05fbfeb4e134365cd1e72fa24ac969fe" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::ThumbnailAsideEffect::opacity</definition>
        <argsstring></argsstring>
        <name>opacity</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::opacity</qualifiedname>
        <read>configuredOpacity</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="32" column="5" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_thumbnail_aside_effect_1a43a8243b4c937594f61d0ef0a537cb15" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ThumbnailAsideEffect::screen</definition>
        <argsstring></argsstring>
        <name>screen</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::screen</qualifiedname>
        <read>configuredScreen</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="33" column="5" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_thumbnail_aside_effect_1a0334bbd65ba2608ac0f6204993248a58" prot="private" static="no" mutable="no">
        <type>QHash&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *, Data &gt;</type>
        <definition>QHash&lt;EffectWindow *, Data&gt; KWin::ThumbnailAsideEffect::windows</definition>
        <argsstring></argsstring>
        <name>windows</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::windows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="77" column="11" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_thumbnail_aside_effect_1aa2006a0616682e1882ff20f2af92d2f9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::ThumbnailAsideEffect::maxwidth</definition>
        <argsstring></argsstring>
        <name>maxwidth</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::maxwidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="78" column="9" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_thumbnail_aside_effect_1a105e6e1fc74070184c063f6fcbc1cf8b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::ThumbnailAsideEffect::opacity</definition>
        <argsstring></argsstring>
        <name>opacity</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::opacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="80" column="12" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_thumbnail_aside_effect_1ae141f5b84c42d9e40de0d892a73af2c5" prot="private" static="no" mutable="no">
        <type>QRegion</type>
        <definition>QRegion KWin::ThumbnailAsideEffect::painted</definition>
        <argsstring></argsstring>
        <name>painted</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::painted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="82" column="13" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="82" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1a49f9ad2ea57c2887f3b91b04f416f289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ThumbnailAsideEffect::ThumbnailAsideEffect</definition>
        <argsstring>()</argsstring>
        <name>ThumbnailAsideEffect</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::ThumbnailAsideEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="35" column="5" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="26" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1ad359338aebb33426593bd5dba5c5b797" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::reconfigure</definition>
        <argsstring>(ReconfigureFlags) override</argsstring>
        <name>reconfigure</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::reconfigure</qualifiedname>
        <reimplements refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d">reconfigure</reimplements>
        <param>
          <type>ReconfigureFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when configuration changes (either the effect&apos;s or <ref refid="namespace_k_win" kindref="compound">KWin</ref>&apos;s global).</para>
<para>In OpenGL based compositing, the frameworks ensures that the context is current when the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> is reconfigured. If this method is called from within the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> it is required to ensure that the context is current if the implementation does OpenGL calls. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="36" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="48" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1a093629e8749bd25c6bafd019ba84aed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::paintScreen</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, int mask, const QRegion &amp;region, Output *screen) override</argsstring>
        <name>paintScreen</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::paintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga44ee94161446ce6fb2502376af6515a8">paintScreen</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>screen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In this method you can: <itemizedlist>
<listitem><para>paint something on top of the windows (by painting after calling effects-&gt;<ref refid="class_k_win_1_1_thumbnail_aside_effect_1a093629e8749bd25c6bafd019ba84aed5" kindref="member">paintScreen()</ref>) </para>
</listitem>
<listitem><para>paint multiple desktops and/or multiple copies of the same desktop by calling effects-&gt;<ref refid="class_k_win_1_1_thumbnail_aside_effect_1a093629e8749bd25c6bafd019ba84aed5" kindref="member">paintScreen()</ref> multiple times</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="37" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="58" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1ae5dda2adba4cfd8d3543c5dbacb0c6c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::paintWindow</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, EffectWindow *w, int mask, QRegion region, WindowPaintData &amp;data) override</argsstring>
        <name>paintWindow</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::paintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga0f0292db2bf016a0843ef7cc06219378">paintWindow</reimplements>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>QRegion</type>
          <declname>region</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the main method for painting windows. In this method you can: <itemizedlist>
<listitem><para>do various transformations </para>
</listitem>
<listitem><para>change opacity of the window </para>
</listitem>
<listitem><para>change brightness and/or saturation, if it&apos;s supported</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="38" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1a116199cba07dab001308b50100edd085" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::ThumbnailAsideEffect::configuredMaxWidth</definition>
        <argsstring>() const</argsstring>
        <name>configuredMaxWidth</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::configuredMaxWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="41" column="9" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1a186177a193e692e8b37d5eedf4b91a33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::ThumbnailAsideEffect::configuredSpacing</definition>
        <argsstring>() const</argsstring>
        <name>configuredSpacing</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::configuredSpacing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="45" column="9" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1a905f0bdf76d0a6df8d4d7e18fea3cd62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::ThumbnailAsideEffect::configuredOpacity</definition>
        <argsstring>() const</argsstring>
        <name>configuredOpacity</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::configuredOpacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="49" column="11" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1af92f36e6b03e3ab56feb22b34f93909d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::ThumbnailAsideEffect::configuredScreen</definition>
        <argsstring>() const</argsstring>
        <name>configuredScreen</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::configuredScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="53" column="9" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1a1952a974fe4a7a94798fc7a6a9e9f721" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::ThumbnailAsideEffect::isActive</definition>
        <argsstring>() const override</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::isActive</qualifiedname>
        <reimplements refid="group__kwineffects_1ga596b6c0ed146b97b293f5db5f27fc40f">isActive</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrite this method to indicate whether your effect will be doing something in the next frame to be rendered. If the method returns <computeroutput>false</computeroutput> the effect will be excluded from the chained methods in the next rendered frame.</para>
<para>This method is called always directly before the paint loop begins. So it is totally fine to e.g. react on a window event, issue a repaint to trigger an animation and change a flag to indicate that this method returns <computeroutput>true</computeroutput>.</para>
<para>As the method is called each frame, you should not perform complex calculations. Best use just a boolean flag.</para>
<para>The default implementation of this method returns <computeroutput>true</computeroutput>. <simplesect kind="since"><para>4.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="57" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="201" bodyend="204"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_thumbnail_aside_effect_1a493978eca0d8a74590c648dbbcf0c1a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::toggleCurrentThumbnail</definition>
        <argsstring>()</argsstring>
        <name>toggleCurrentThumbnail</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::toggleCurrentThumbnail</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="60" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="114" bodyend="125"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_thumbnail_aside_effect_1ab81f3298c40d74f1a179dbd3570b98a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::slotWindowAdded</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowAdded</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::slotWindowAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="61" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_thumbnail_aside_effect_1a760408d5ff3d812534f89c1d5a7256ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::slotWindowClosed</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowClosed</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::slotWindowClosed</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="62" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_thumbnail_aside_effect_1aae812fd036cba2477be15e02bcd12b36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::slotWindowFrameGeometryChanged</definition>
        <argsstring>(KWin::EffectWindow *w, const QRectF &amp;old)</argsstring>
        <name>slotWindowFrameGeometryChanged</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::slotWindowFrameGeometryChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>old</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="63" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="89" bodyend="101"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_thumbnail_aside_effect_1a54b36e71268e2a20a7c1e28c41225a02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::slotWindowDamaged</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowDamaged</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::slotWindowDamaged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="64" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_thumbnail_aside_effect_1a2c33f96dff54fdf132c60b5dfab6b335" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::repaintAll</definition>
        <argsstring>()</argsstring>
        <name>repaintAll</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::repaintAll</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="65" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="194" bodyend="199"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1ab401ebff32dbd9058f0011733d5a74c0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::addThumbnail</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>addThumbnail</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::addThumbnail</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="68" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="127" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1abe254b9f266cb0eadf28dde94039e256" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::removeThumbnail</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>removeThumbnail</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::removeThumbnail</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="69" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="137" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_thumbnail_aside_effect_1abc00fc4e2d512fd0a0059c9aca7fa9b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ThumbnailAsideEffect::arrange</definition>
        <argsstring>()</argsstring>
        <name>arrange</name>
        <qualifiedname>KWin::ThumbnailAsideEffect::arrange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="70" column="10" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.cpp" bodystart="156" bodyend="192"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::ThumbnailAsideEffect</label>
        <link refid="class_k_win_1_1_thumbnail_aside_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::ThumbnailAsideEffect</label>
        <link refid="class_k_win_1_1_thumbnail_aside_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/thumbnailaside/thumbnailaside.h" line="26" column="1" bodyfile="kwin/src/plugins/thumbnailaside/thumbnailaside.h" bodystart="28" bodyend="83"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1ab401ebff32dbd9058f0011733d5a74c0" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>addThumbnail</name></member>
      <member refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga3a167fe6d9c46376ed46db13caf2d135" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga0ba05f1463195d0f92ea1dd3396a5d16" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>animationTime</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1abc00fc4e2d512fd0a0059c9aca7fa9b2" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>arrange</name></member>
      <member refid="group__kwineffects_1ga7cf8035c970fcde177e3038d79015289" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>blocksDirectScanout</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea67d120ab5ce1dc424476e63c132af6c1" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>Blur</name></member>
      <member refid="group__kwineffects_1gab8a94f591b743b59b7285911e641e7d5" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>borderActivated</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a116199cba07dab001308b50100edd085" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>configuredMaxWidth</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a905f0bdf76d0a6df8d4d7e18fea3cd62" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>configuredOpacity</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1af92f36e6b03e3ab56feb22b34f93909d" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>configuredScreen</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a186177a193e692e8b37d5eedf4b91a33" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>configuredSpacing</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aead805f717a48c23959a1e9ecd7722d15d" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>Contrast</name></member>
      <member refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>cursorPos</name></member>
      <member refid="group__kwineffects_1ga0c159e00c3a51ca733bea49cf8d52691" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>debug</name></member>
      <member refid="group__kwineffects_1ga254b1a3e8bb8b9b671e9b000ca027b7c" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>drawWindow</name></member>
      <member refid="group__kwineffects_1ga7bd8262f4cb2c5c3090c748eb388ad7e" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>Effect</name></member>
      <member refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>Feature</name></member>
      <member refid="group__kwineffects_1gab5e0581ae4b2dffe8014ff5cf6c21158" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>grabbedKeyboardEvent</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>HighlightWindows</name></member>
      <member refid="group__kwineffects_1ga7b0ecb57667179e95c188f0ee7416d00" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>interpolate</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a1952a974fe4a7a94798fc7a6a9e9f721" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a3fe5ed04eb8df72f47e7cd7b0fbbbe3a" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>maxWidth</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1aa2006a0616682e1882ff20f2af92d2f9" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>maxwidth</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea170229312ed2ec0e446ee89ba7f6b6ca" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>Nothing</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a05fbfeb4e134365cd1e72fa24ac969fe" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>opacity</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a105e6e1fc74070184c063f6fcbc1cf8b" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>opacity</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dab0de2932c45bde6df3de10d00dbd6fcd" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>PAINT_SCREEN_BACKGROUND_FIRST</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da43acbfc913cae9eb3c363aeb0524f18f" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>PAINT_SCREEN_REGION</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>PAINT_SCREEN_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da124dd798e5f793087e81da77e11a9b1e" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>PAINT_SCREEN_WITH_TRANSFORMED_WINDOWS</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac606d3dcf2dd150234f71c4c39083c7d" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>PAINT_WINDOW_OPAQUE</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da684bb6c6c278b900b6d0c889e79233b8" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>PAINT_WINDOW_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac7237bf4bb4d6ea6d6fb1215db19b45e" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>PAINT_WINDOW_TRANSLUCENT</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1ae141f5b84c42d9e40de0d892a73af2c5" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>painted</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a093629e8749bd25c6bafd019ba84aed5" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>paintScreen</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1ae5dda2adba4cfd8d3543c5dbacb0c6c8" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>paintWindow</name></member>
      <member refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>perform</name></member>
      <member refid="group__kwineffects_1ga10021cf9704c00d60beae284d53846e2" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>postPaintScreen</name></member>
      <member refid="group__kwineffects_1ga9b7cf82c6f74331cffabb06c63ef914c" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>postPaintWindow</name></member>
      <member refid="group__kwineffects_1ga2edc1b757e36bb6bcbbacde454dfc05c" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>prePaintScreen</name></member>
      <member refid="group__kwineffects_1ga2832c7831c0f49f9f5cf0267ffc53672" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>prePaintWindow</name></member>
      <member refid="group__kwineffects_1ga30fc2cbbdd90f95568a9e350f34bf2b7" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>provides</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1ad359338aebb33426593bd5dba5c5b797" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>reconfigure</name></member>
      <member refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>ReconfigureAll</name></member>
      <member refid="group__kwineffects_1ga4aebd7d0f695e37678debaa118fa92dc" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>ReconfigureFlag</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1abe254b9f266cb0eadf28dde94039e256" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>removeThumbnail</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a2c33f96dff54fdf132c60b5dfab6b335" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>repaintAll</name></member>
      <member refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>requestedEffectChainPosition</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a43a8243b4c937594f61d0ef0a537cb15" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>screen</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea592ea0de7a4d658a1ef9bbb48b18e15a" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>ScreenInversion</name></member>
      <member refid="group__kwineffects_1ga1efc42cd9be15e8200c6e55f6bf47cb8" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>setPositionTransformations</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1ab81f3298c40d74f1a179dbd3570b98a3" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>slotWindowAdded</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a760408d5ff3d812534f89c1d5a7256ad" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>slotWindowClosed</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a54b36e71268e2a20a7c1e28c41225a02" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>slotWindowDamaged</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1aae812fd036cba2477be15e02bcd12b36" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>slotWindowFrameGeometryChanged</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a13e93847df7ec127e1d61c6550e5fb6a" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>spacing</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea19036d413806c53978a3234e7eb197c4" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>SystemBell</name></member>
      <member refid="group__kwineffects_1ga2d22a8f0b8a4d81615dff67dc1ef970f" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>tabletPadButtonEvent</name></member>
      <member refid="group__kwineffects_1gaa084e5a45597f5775213715eb5506f63" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>tabletPadRingEvent</name></member>
      <member refid="group__kwineffects_1ga4998fb0983bd97163935cad2c4dedd76" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>tabletPadStripEvent</name></member>
      <member refid="group__kwineffects_1ga1d4ae01f5935ea887a12018d59191cbf" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>tabletToolAxis</name></member>
      <member refid="group__kwineffects_1ga7a984d7d83dfa97962b8404301c6aba9" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>tabletToolButtonEvent</name></member>
      <member refid="group__kwineffects_1ga4ed77506be381680bf664dbc8c20e036" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>tabletToolProximity</name></member>
      <member refid="group__kwineffects_1gaf16e9ca42cceb738fb859d1a1a462548" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>tabletToolTip</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a49f9ad2ea57c2887f3b91b04f416f289" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>ThumbnailAsideEffect</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a493978eca0d8a74590c648dbbcf0c1a9" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>toggleCurrentThumbnail</name></member>
      <member refid="group__kwineffects_1gaa31554949bc00085e6380b50be16138e" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>touchCancel</name></member>
      <member refid="group__kwineffects_1ga315fd305e7570f41e7bce7db6812381f" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>touchDown</name></member>
      <member refid="group__kwineffects_1ga54d00a9e05b5d4597db40c2f5b1d36de" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>touchMotion</name></member>
      <member refid="group__kwineffects_1gaf3871967d6199eb7c87621bc75b925bb" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>touchUp</name></member>
      <member refid="group__kwineffects_1ga7b142933c38cb9b4a433b768b266e7cb" prot="public" virt="virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>windowInputMouseEvent</name></member>
      <member refid="class_k_win_1_1_thumbnail_aside_effect_1a0334bbd65ba2608ac0f6204993248a58" prot="private" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>windows</name></member>
      <member refid="group__kwineffects_1ga50174eb0169aebceb78ebd5aff71c481" prot="public" virt="non-virtual"><scope>KWin::ThumbnailAsideEffect</scope><name>~Effect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
