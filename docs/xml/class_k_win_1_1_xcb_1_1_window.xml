<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_xcb_1_1_window" kind="class" language="C++" prot="public">
    <compoundname>KWin::Xcb::Window</compoundname>
    <includes refid="xcbutils_8h" local="no">xcbutils.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_xcb_1_1_window_1aa8e6c08376faf7a1371333a43d0da89b" prot="private" static="no" mutable="no">
        <type>xcb_window_t</type>
        <definition>xcb_window_t KWin::Xcb::Window::m_window</definition>
        <argsstring></argsstring>
        <name>m_window</name>
        <qualifiedname>KWin::Xcb::Window::m_window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1695" column="18" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1695" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_xcb_1_1_window_1a0830abdb389fd5bc87abf469aa0ab8ec" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Xcb::Window::m_destroy</definition>
        <argsstring></argsstring>
        <name>m_destroy</name>
        <qualifiedname>KWin::Xcb::Window::m_destroy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1696" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_xcb_1_1_window_1ad050e38cb56e67714ea8966206d739bd" prot="private" static="no" mutable="no">
        <type>QRect</type>
        <definition>QRect KWin::Xcb::Window::m_geometry</definition>
        <argsstring></argsstring>
        <name>m_geometry</name>
        <qualifiedname>KWin::Xcb::Window::m_geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1697" column="11" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1697" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a7ca1819894c4243a7856dc7d33e4e18d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::Window::Window</definition>
        <argsstring>(xcb_window_t window=XCB_WINDOW_NONE, bool destroy=true)</argsstring>
        <name>Window</name>
        <qualifiedname>KWin::Xcb::Window::Window</qualifiedname>
        <param>
          <type>xcb_window_t</type>
          <declname>window</declname>
          <defval>XCB_WINDOW_NONE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>destroy</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Takes over responsibility of <computeroutput>window</computeroutput>. If <computeroutput>window</computeroutput> is not provided an invalid <ref refid="class_k_win_1_1_xcb_1_1_window" kindref="compound">Window</ref> is created. Use <ref refid="class_k_win_1_1_xcb_1_1_window_1af552b25e8623ce41bdb8bc3401a2cf03" kindref="member">create</ref> to set an xcb_window_t later on.</para>
<para>If <computeroutput>destroy</computeroutput> is <computeroutput>true</computeroutput> the window will be destroyed together with this object, if <computeroutput>false</computeroutput> the window will be kept around. This is useful if you are not interested in the RAII capabilities but still want to use a window like an object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to manage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destroy</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the window should be destroyed together with the object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_xcb_1_1_window_1ae8cff9dca8338d9119dff4e8e7c9415f" kindref="member">reset</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1569" column="5" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1700" bodyend="1704"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1adbf5c8acd33225bdc70cce5925d32ed8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::Window::Window</definition>
        <argsstring>(const QRect &amp;geometry, uint32_t mask=0, const uint32_t *values=nullptr, xcb_window_t parent=rootWindow())</argsstring>
        <name>Window</name>
        <qualifiedname>KWin::Xcb::Window::Window</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>values</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>xcb_window_t</type>
          <declname>parent</declname>
          <defval><ref refid="namespace_k_win_1a1c718478bc9788d32a9614c371aa754b" kindref="member">rootWindow</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an xcb_window_t and manages it. It&apos;s a convenient method to create a window with depth, class and visual being copied from parent and border being <computeroutput>0</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry for the window to be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The mask for the values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>The values to be passed to xcb_create_window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent window </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1578" column="5" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1706" bodyend="1710"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ab0d751eb7511d613622c30754705bc54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::Window::Window</definition>
        <argsstring>(const QRect &amp;geometry, uint16_t windowClass, uint32_t mask=0, const uint32_t *values=nullptr, xcb_window_t parent=rootWindow())</argsstring>
        <name>Window</name>
        <qualifiedname>KWin::Xcb::Window::Window</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>windowClass</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>values</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>xcb_window_t</type>
          <declname>parent</declname>
          <defval><ref refid="namespace_k_win_1a1c718478bc9788d32a9614c371aa754b" kindref="member">rootWindow</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an xcb_window_t and manages it. It&apos;s a convenient method to create a window with depth and visual being copied from parent and border being <computeroutput>0</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry for the window to be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>windowClass</parametername>
</parameternamelist>
<parameterdescription>
<para>The window class </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The mask for the values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>The values to be passed to xcb_create_window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent window </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1588" column="5" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1712" bodyend="1716"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1aa470e4fcb3fba2577eeadcbf5e15cdd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::Window::Window</definition>
        <argsstring>(const Window &amp;other)=delete</argsstring>
        <name>Window</name>
        <qualifiedname>KWin::Xcb::Window::Window</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_xcb_1_1_window" kindref="compound">Window</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1589" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ad5b94caf4d317a59d0944b3b1741e9a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::Window::~Window</definition>
        <argsstring>()</argsstring>
        <name>~Window</name>
        <qualifiedname>KWin::Xcb::Window::~Window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1590" column="5" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1718" bodyend="1721"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1af552b25e8623ce41bdb8bc3401a2cf03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::create</definition>
        <argsstring>(const QRect &amp;geometry, uint32_t mask=0, const uint32_t *values=nullptr, xcb_window_t parent=rootWindow())</argsstring>
        <name>create</name>
        <qualifiedname>KWin::Xcb::Window::create</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>values</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>xcb_window_t</type>
          <declname>parent</declname>
          <defval><ref refid="namespace_k_win_1a1c718478bc9788d32a9614c371aa754b" kindref="member">rootWindow</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new window for which the responsibility is taken over. If a window had been managed before it is freed.</para>
<para>Depth, class and visual are being copied from parent and border is <computeroutput>0</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry for the window to be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The mask for the values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>The values to be passed to xcb_create_window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent window </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1602" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1748" bodyend="1751"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ad14ccd8f6958319180aaeb29f950c9b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::create</definition>
        <argsstring>(const QRect &amp;geometry, uint16_t windowClass, uint32_t mask=0, const uint32_t *values=nullptr, xcb_window_t parent=rootWindow())</argsstring>
        <name>create</name>
        <qualifiedname>KWin::Xcb::Window::create</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>windowClass</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>values</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>xcb_window_t</type>
          <declname>parent</declname>
          <defval><ref refid="namespace_k_win_1a1c718478bc9788d32a9614c371aa754b" kindref="member">rootWindow</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new window for which the responsibility is taken over. If a window had been managed before it is freed.</para>
<para>Depth and visual are being copied from parent and border is <computeroutput>0</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry for the window to be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>windowClass</parametername>
</parameternamelist>
<parameterdescription>
<para>The window class </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The mask for the values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>The values to be passed to xcb_create_window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent window </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1614" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1742" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ae8cff9dca8338d9119dff4e8e7c9415f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::reset</definition>
        <argsstring>(xcb_window_t window=XCB_WINDOW_NONE, bool destroy=true, const QRect &amp;geometry=QRect())</argsstring>
        <name>reset</name>
        <qualifiedname>KWin::Xcb::Window::reset</qualifiedname>
        <param>
          <type>xcb_window_t</type>
          <declname>window</declname>
          <defval>XCB_WINDOW_NONE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>destroy</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>geometry</declname>
          <defval>QRect()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frees the existing window and starts to manage the new <computeroutput>window</computeroutput>. If <computeroutput>destroy</computeroutput> is <computeroutput>true</computeroutput> the new managed window will be destroyed together with this object or when reset is called again. If <computeroutput>destroy</computeroutput> is <computeroutput>false</computeroutput> the window will not be destroyed. It is then the responsibility of the caller to destroy the window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1621" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1766" bodyend="1772"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1acec713caff7f3656c6aa94297a0a956e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Xcb::Window::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <qualifiedname>KWin::Xcb::Window::isValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if a window is managed, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1625" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1732" bodyend="1735"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1aec34944368b2d07fffed0eb936479f9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::Xcb::Window::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <qualifiedname>KWin::Xcb::Window::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1626" column="9" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1626" bodyend="1629"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a5b9d8da1c0a87bedfef3273d8aa1d534" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::Xcb::Window::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <qualifiedname>KWin::Xcb::Window::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1630" column="9" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1630" bodyend="1633"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a5526b3e4df3312872f6add697d3cf79e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::Xcb::Window::width</definition>
        <argsstring>() const</argsstring>
        <name>width</name>
        <qualifiedname>KWin::Xcb::Window::width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1634" column="9" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1634" bodyend="1637"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a8fdd1aac2966f455301aaf16459b392d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::Xcb::Window::height</definition>
        <argsstring>() const</argsstring>
        <name>height</name>
        <qualifiedname>KWin::Xcb::Window::height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1638" column="9" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1638" bodyend="1641"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a0af965b922b564fd3a21e0d85e2a45b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPoint</type>
        <definition>QPoint KWin::Xcb::Window::position</definition>
        <argsstring>() const</argsstring>
        <name>position</name>
        <qualifiedname>KWin::Xcb::Window::position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1642" column="12" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1642" bodyend="1645"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ad944dc249a706c737da99f48aad1ee68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize KWin::Xcb::Window::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>KWin::Xcb::Window::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1646" column="11" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1646" bodyend="1649"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a7abcc7563d7a1193195e20b830df86cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::Xcb::Window::geometry</definition>
        <argsstring>() const</argsstring>
        <name>geometry</name>
        <qualifiedname>KWin::Xcb::Window::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1650" column="11" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1650" bodyend="1653"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a853bcf29f7b015f75d616791c1e7124c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::setGeometry</definition>
        <argsstring>(const QRect &amp;geometry)</argsstring>
        <name>setGeometry</name>
        <qualifiedname>KWin::Xcb::Window::setGeometry</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configures the window with a new geometry. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The new window geometry to be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1658" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1774" bodyend="1777"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1acdd3f344eb295d6d5261a5055bac6c97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::setGeometry</definition>
        <argsstring>(int x, int y, int width, int height)</argsstring>
        <name>setGeometry</name>
        <qualifiedname>KWin::Xcb::Window::setGeometry</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1659" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1779" bodyend="1788"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ab849565c84e8e5c649c706121261a1ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::move</definition>
        <argsstring>(const QPoint &amp;pos)</argsstring>
        <name>move</name>
        <qualifiedname>KWin::Xcb::Window::move</qualifiedname>
        <param>
          <type>const QPoint &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1660" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1790" bodyend="1793"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a03ab8c90cf99a8e6cf4e4fe9876bf4da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::move</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>move</name>
        <qualifiedname>KWin::Xcb::Window::move</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1661" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1795" bodyend="1804"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a5f4d325be0e43d86d78cd4864c94255f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::resize</definition>
        <argsstring>(const QSize &amp;size)</argsstring>
        <name>resize</name>
        <qualifiedname>KWin::Xcb::Window::resize</qualifiedname>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1662" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1806" bodyend="1809"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ab198870f471e98d17900e374a7cb5153" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::resize</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>resize</name>
        <qualifiedname>KWin::Xcb::Window::resize</qualifiedname>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1663" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1811" bodyend="1820"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a5ddca3001d1086e6548a93783f58e836" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::raise</definition>
        <argsstring>()</argsstring>
        <name>raise</name>
        <qualifiedname>KWin::Xcb::Window::raise</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1664" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1822" bodyend="1826"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a775ad72f77e321ab81d683f03c9ed82a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::lower</definition>
        <argsstring>()</argsstring>
        <name>lower</name>
        <qualifiedname>KWin::Xcb::Window::lower</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1665" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1828" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a80cb4879bce5273d1994b4ebbd6c4fcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::map</definition>
        <argsstring>()</argsstring>
        <name>map</name>
        <qualifiedname>KWin::Xcb::Window::map</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1666" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1833" bodyend="1839"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a86e4cda4a254f41e5b40d907ce789aef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::unmap</definition>
        <argsstring>()</argsstring>
        <name>unmap</name>
        <qualifiedname>KWin::Xcb::Window::unmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1667" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1841" bodyend="1847"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ade47ab3f686c841c9761a84c66f9d40f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::reparent</definition>
        <argsstring>(xcb_window_t parent, int x=0, int y=0)</argsstring>
        <name>reparent</name>
        <qualifiedname>KWin::Xcb::Window::reparent</qualifiedname>
        <param>
          <type>xcb_window_t</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1668" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1849" bodyend="1855"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ab4f062d439120d94db0f085ccab9abad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::changeProperty</definition>
        <argsstring>(xcb_atom_t property, xcb_atom_t type, uint8_t format, uint32_t length, const void *data, uint8_t mode=XCB_PROP_MODE_REPLACE)</argsstring>
        <name>changeProperty</name>
        <qualifiedname>KWin::Xcb::Window::changeProperty</qualifiedname>
        <param>
          <type>xcb_atom_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>xcb_atom_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>format</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
          <defval>XCB_PROP_MODE_REPLACE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1669" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1857" bodyend="1863"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a2bd89c7d8702418945cd7e86aa21ddce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::deleteProperty</definition>
        <argsstring>(xcb_atom_t property)</argsstring>
        <name>deleteProperty</name>
        <qualifiedname>KWin::Xcb::Window::deleteProperty</qualifiedname>
        <param>
          <type>xcb_atom_t</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1671" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1865" bodyend="1871"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1acde5cbe03b108920f6c5cb3bb0197c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::setBorderWidth</definition>
        <argsstring>(int32_t width)</argsstring>
        <name>setBorderWidth</name>
        <qualifiedname>KWin::Xcb::Window::setBorderWidth</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1672" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1873" bodyend="1880"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a236e6b31e4bd495cbfb31c372e4a0875" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::grabButton</definition>
        <argsstring>(uint8_t pointerMode, uint8_t keyboardmode, uint16_t modifiers=XCB_MOD_MASK_ANY, uint8_t button=XCB_BUTTON_INDEX_ANY, uint16_t eventMask=XCB_EVENT_MASK_BUTTON_PRESS, xcb_window_t confineTo=XCB_WINDOW_NONE, xcb_cursor_t cursor=XCB_CURSOR_NONE, bool ownerEvents=false)</argsstring>
        <name>grabButton</name>
        <qualifiedname>KWin::Xcb::Window::grabButton</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pointerMode</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>keyboardmode</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>modifiers</declname>
          <defval>XCB_MOD_MASK_ANY</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>button</declname>
          <defval>XCB_BUTTON_INDEX_ANY</defval>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>eventMask</declname>
          <defval>XCB_EVENT_MASK_BUTTON_PRESS</defval>
        </param>
        <param>
          <type>xcb_window_t</type>
          <declname>confineTo</declname>
          <defval>XCB_WINDOW_NONE</defval>
        </param>
        <param>
          <type>xcb_cursor_t</type>
          <declname>cursor</declname>
          <defval>XCB_CURSOR_NONE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ownerEvents</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1673" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1882" bodyend="1891"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a174af8d816e34700f9167d29d3cd8499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::ungrabButton</definition>
        <argsstring>(uint16_t modifiers=XCB_MOD_MASK_ANY, uint8_t button=XCB_BUTTON_INDEX_ANY)</argsstring>
        <name>ungrabButton</name>
        <qualifiedname>KWin::Xcb::Window::ungrabButton</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>modifiers</declname>
          <defval>XCB_MOD_MASK_ANY</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>button</declname>
          <defval>XCB_BUTTON_INDEX_ANY</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1680" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1893" bodyend="1899"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ae5efde5b550abe327b60c0049593c919" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>KWin::Xcb::Window::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears the window area. Same as xcb_clear_area with x, y, width, height being <computeroutput>0</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1684" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1901" bodyend="1907"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a409d776c673c211ecec0d62d5f3c8639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::setBackgroundPixmap</definition>
        <argsstring>(xcb_pixmap_t pixmap)</argsstring>
        <name>setBackgroundPixmap</name>
        <qualifiedname>KWin::Xcb::Window::setBackgroundPixmap</qualifiedname>
        <param>
          <type>xcb_pixmap_t</type>
          <declname>pixmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1685" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1909" bodyend="1916"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a90a098c5d7770ad874c27762465ed74d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::defineCursor</definition>
        <argsstring>(xcb_cursor_t cursor)</argsstring>
        <name>defineCursor</name>
        <qualifiedname>KWin::Xcb::Window::defineCursor</qualifiedname>
        <param>
          <type>xcb_cursor_t</type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1686" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1918" bodyend="1921"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a378f9035a77f5198d71b8c0705d5d06b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::focus</definition>
        <argsstring>(uint8_t revertTo=XCB_INPUT_FOCUS_POINTER_ROOT, xcb_timestamp_t time=XCB_TIME_CURRENT_TIME)</argsstring>
        <name>focus</name>
        <qualifiedname>KWin::Xcb::Window::focus</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>revertTo</declname>
          <defval>XCB_INPUT_FOCUS_POINTER_ROOT</defval>
        </param>
        <param>
          <type>xcb_timestamp_t</type>
          <declname>time</declname>
          <defval>XCB_TIME_CURRENT_TIME</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1687" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1923" bodyend="1926"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a1b64c7bb4def7c186e81c8dd7948bede" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::selectInput</definition>
        <argsstring>(uint32_t events)</argsstring>
        <name>selectInput</name>
        <qualifiedname>KWin::Xcb::Window::selectInput</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1688" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1928" bodyend="1931"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1a7d8781615a173104c2ca4d48e4193639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::kill</definition>
        <argsstring>()</argsstring>
        <name>kill</name>
        <qualifiedname>KWin::Xcb::Window::kill</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1689" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1933" bodyend="1936"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1ae31438a76b9f0a560d114780b81de750" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::Window::operator xcb_window_t</definition>
        <argsstring>() const</argsstring>
        <name>operator xcb_window_t</name>
        <qualifiedname>KWin::Xcb::Window::operator xcb_window_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1690" column="5" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1737" bodyend="1740"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1aa31c8f71c57244f902ef564fd862262c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>xcb_window_t</type>
        <definition>xcb_window_t KWin::Xcb::Window::doCreate</definition>
        <argsstring>(const QRect &amp;geometry, uint16_t windowClass, uint32_t mask=0, const uint32_t *values=nullptr, xcb_window_t parent=rootWindow())</argsstring>
        <name>doCreate</name>
        <qualifiedname>KWin::Xcb::Window::doCreate</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>windowClass</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>values</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>xcb_window_t</type>
          <declname>parent</declname>
          <defval><ref refid="namespace_k_win_1a1c718478bc9788d32a9614c371aa754b" kindref="member">rootWindow</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1693" column="18" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1753" bodyend="1764"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_window_1aeadb51b4296d739753e557a5f32fb0e0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Xcb::Window::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <qualifiedname>KWin::Xcb::Window::destroy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1694" column="10" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1723" bodyend="1730"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is an RAII wrapper for an xcb_window_t. An xcb_window_t hold by an instance of this class will be freed when the instance gets destroyed.</para>
<para>Furthermore the class provides wrappers around some xcb methods operating on an xcb_window_t.</para>
<para>For the cases that one is more interested in wrapping the xcb methods the constructor which takes an existing window and the <ref refid="class_k_win_1_1_xcb_1_1_window_1ae8cff9dca8338d9119dff4e8e7c9415f" kindref="member">reset</ref> method allow to disable the RAII functionality. </para>
    </detaileddescription>
    <location file="kwin/src/utils/xcbutils.h" line="1554" column="1" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1555" bodyend="1698"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ab4f062d439120d94db0f085ccab9abad" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>changeProperty</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ae5efde5b550abe327b60c0049593c919" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>clear</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1af552b25e8623ce41bdb8bc3401a2cf03" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>create</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ad14ccd8f6958319180aaeb29f950c9b9" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>create</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a90a098c5d7770ad874c27762465ed74d" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>defineCursor</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a2bd89c7d8702418945cd7e86aa21ddce" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>deleteProperty</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1aeadb51b4296d739753e557a5f32fb0e0" prot="private" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>destroy</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1aa31c8f71c57244f902ef564fd862262c" prot="private" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>doCreate</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a378f9035a77f5198d71b8c0705d5d06b" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>focus</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a7abcc7563d7a1193195e20b830df86cf" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>geometry</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a236e6b31e4bd495cbfb31c372e4a0875" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>grabButton</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a8fdd1aac2966f455301aaf16459b392d" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>height</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1acec713caff7f3656c6aa94297a0a956e" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>isValid</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a7d8781615a173104c2ca4d48e4193639" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>kill</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a775ad72f77e321ab81d683f03c9ed82a" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>lower</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a0830abdb389fd5bc87abf469aa0ab8ec" prot="private" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>m_destroy</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ad050e38cb56e67714ea8966206d739bd" prot="private" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>m_geometry</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1aa8e6c08376faf7a1371333a43d0da89b" prot="private" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>m_window</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a80cb4879bce5273d1994b4ebbd6c4fcb" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>map</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ab849565c84e8e5c649c706121261a1ca" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>move</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a03ab8c90cf99a8e6cf4e4fe9876bf4da" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>move</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ae31438a76b9f0a560d114780b81de750" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>operator xcb_window_t</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a0af965b922b564fd3a21e0d85e2a45b3" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>position</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a5ddca3001d1086e6548a93783f58e836" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>raise</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ade47ab3f686c841c9761a84c66f9d40f" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>reparent</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ae8cff9dca8338d9119dff4e8e7c9415f" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>reset</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a5f4d325be0e43d86d78cd4864c94255f" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>resize</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ab198870f471e98d17900e374a7cb5153" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>resize</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a1b64c7bb4def7c186e81c8dd7948bede" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>selectInput</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a409d776c673c211ecec0d62d5f3c8639" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>setBackgroundPixmap</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1acde5cbe03b108920f6c5cb3bb0197c5a" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>setBorderWidth</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a853bcf29f7b015f75d616791c1e7124c" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>setGeometry</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1acdd3f344eb295d6d5261a5055bac6c97" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>setGeometry</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ad944dc249a706c737da99f48aad1ee68" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>size</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a174af8d816e34700f9167d29d3cd8499" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>ungrabButton</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a86e4cda4a254f41e5b40d907ce789aef" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>unmap</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a5526b3e4df3312872f6add697d3cf79e" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>width</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a7ca1819894c4243a7856dc7d33e4e18d" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>Window</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1adbf5c8acd33225bdc70cce5925d32ed8" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>Window</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ab0d751eb7511d613622c30754705bc54" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>Window</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1aa470e4fcb3fba2577eeadcbf5e15cdd3" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>Window</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1aec34944368b2d07fffed0eb936479f9e" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>x</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1a5b9d8da1c0a87bedfef3273d8aa1d534" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>y</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_window_1ad5b94caf4d317a59d0944b3b1741e9a3" prot="public" virt="non-virtual"><scope>KWin::Xcb::Window</scope><name>~Window</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
