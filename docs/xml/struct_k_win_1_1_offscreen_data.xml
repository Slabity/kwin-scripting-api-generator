<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_k_win_1_1_offscreen_data" kind="struct" language="C++" prot="public">
    <compoundname>KWin::OffscreenData</compoundname>
    <derivedcompoundref refid="class_k_win_1_1_cross_fade_window_data" prot="public" virt="non-virtual">KWin::CrossFadeWindowData</derivedcompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_k_win_1_1_offscreen_data_1afe9299bb6d78876d79c03469931317f6" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> &gt;</type>
        <definition>std::unique_ptr&lt;GLTexture&gt; KWin::OffscreenData::m_texture</definition>
        <argsstring></argsstring>
        <name>m_texture</name>
        <qualifiedname>KWin::OffscreenData::m_texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="34" column="21" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_k_win_1_1_offscreen_data_1ad319d1999e7582dd2a182bf1a8b629ed" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref> &gt;</type>
        <definition>std::unique_ptr&lt;GLFramebuffer&gt; KWin::OffscreenData::m_fbo</definition>
        <argsstring></argsstring>
        <name>m_fbo</name>
        <qualifiedname>KWin::OffscreenData::m_fbo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="35" column="21" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_k_win_1_1_offscreen_data_1ac01f0a9190225262b80b48de638681c9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::OffscreenData::m_isDirty</definition>
        <argsstring></argsstring>
        <name>m_isDirty</name>
        <qualifiedname>KWin::OffscreenData::m_isDirty</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="36" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_k_win_1_1_offscreen_data_1a6006be4af1966b8e459eed97f13b0909" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref> *</type>
        <definition>GLShader* KWin::OffscreenData::m_shader</definition>
        <argsstring></argsstring>
        <name>m_shader</name>
        <qualifiedname>KWin::OffscreenData::m_shader</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="37" column="14" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_k_win_1_1_offscreen_data_1af213ea007d89f803cee90430cb792fc2" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_render_geometry_1a7bc1c02ecb839871aadec8895abda2e4" kindref="member">RenderGeometry::VertexSnappingMode</ref></type>
        <definition>RenderGeometry::VertexSnappingMode KWin::OffscreenData::m_vertexSnappingMode</definition>
        <argsstring></argsstring>
        <name>m_vertexSnappingMode</name>
        <qualifiedname>KWin::OffscreenData::m_vertexSnappingMode</qualifiedname>
        <initializer>= <ref refid="class_k_win_1_1_render_geometry_1a7bc1c02ecb839871aadec8895abda2e4ab7f41fc1412ad2ee75e9b2635d3b9d5c" kindref="member">RenderGeometry::VertexSnappingMode::Round</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="38" column="40" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_k_win_1_1_offscreen_data_1a85d97e4b369bcb2d21d3125ae99031c4" prot="public" static="no" mutable="no">
        <type>QMetaObject::Connection</type>
        <definition>QMetaObject::Connection KWin::OffscreenData::m_windowDamagedConnection</definition>
        <argsstring></argsstring>
        <name>m_windowDamagedConnection</name>
        <qualifiedname>KWin::OffscreenData::m_windowDamagedConnection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="39" column="29" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_k_win_1_1_offscreen_data_1ae7cff6df25cae028c44b6fd75bb13115" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_item_effect" kindref="compound">ItemEffect</ref></type>
        <definition>ItemEffect KWin::OffscreenData::m_windowEffect</definition>
        <argsstring></argsstring>
        <name>m_windowEffect</name>
        <qualifiedname>KWin::OffscreenData::m_windowEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="40" column="16" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_k_win_1_1_offscreen_data_1a1ce1420eb876cb7053e9a6b85f44c75e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>KWin::OffscreenData::~OffscreenData</definition>
        <argsstring>()</argsstring>
        <name>~OffscreenData</name>
        <qualifiedname>KWin::OffscreenData::~OffscreenData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="24" column="13" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_offscreen_data_1abccab9f4db6f516f0ea02adf688da9c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenData::setDirty</definition>
        <argsstring>()</argsstring>
        <name>setDirty</name>
        <qualifiedname>KWin::OffscreenData::setDirty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="25" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_offscreen_data_1a2e7fc003ca42238ee783915350b81f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenData::setShader</definition>
        <argsstring>(GLShader *newShader)</argsstring>
        <name>setShader</name>
        <qualifiedname>KWin::OffscreenData::setShader</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref> *</type>
          <declname>newShader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="26" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_offscreen_data_1a1cd63ba227aabe8998c77a68e12068a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenData::setVertexSnappingMode</definition>
        <argsstring>(RenderGeometry::VertexSnappingMode mode)</argsstring>
        <name>setVertexSnappingMode</name>
        <qualifiedname>KWin::OffscreenData::setVertexSnappingMode</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_geometry_1a7bc1c02ecb839871aadec8895abda2e4" kindref="member">RenderGeometry::VertexSnappingMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="27" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_offscreen_data_1ae8d8c6463b818cef59ad5753e2dc1c79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenData::paint</definition>
        <argsstring>(const RenderTarget &amp;renderTarget, const RenderViewport &amp;viewport, EffectWindow *window, const QRegion &amp;region, const WindowPaintData &amp;data, const WindowQuadList &amp;quads)</argsstring>
        <name>paint</name>
        <qualifiedname>KWin::OffscreenData::paint</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>renderTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref> &amp;</type>
          <declname>quads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="29" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="164" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_offscreen_data_1ad6cb59925f21ddacfdccdd83fec1797e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OffscreenData::maybeRender</definition>
        <argsstring>(EffectWindow *window)</argsstring>
        <name>maybeRender</name>
        <qualifiedname>KWin::OffscreenData::maybeRender</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/offscreeneffect.cpp" line="32" column="10" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="109" bodyend="142"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::CrossFadeWindowData</label>
        <link refid="class_k_win_1_1_cross_fade_window_data"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::OffscreenData</label>
        <link refid="struct_k_win_1_1_offscreen_data"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::GLShader</label>
        <link refid="class_k_win_1_1_g_l_shader"/>
      </node>
      <node id="3">
        <label>KWin::ItemEffect</label>
        <link refid="class_k_win_1_1_item_effect"/>
      </node>
      <node id="1">
        <label>KWin::OffscreenData</label>
        <link refid="struct_k_win_1_1_offscreen_data"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_shader</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_windowEffect</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/src/effect/offscreeneffect.cpp" line="21" column="1" bodyfile="kwin/src/effect/offscreeneffect.cpp" bodystart="22" bodyend="41"/>
    <listofallmembers>
      <member refid="struct_k_win_1_1_offscreen_data_1ad319d1999e7582dd2a182bf1a8b629ed" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>m_fbo</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1ac01f0a9190225262b80b48de638681c9" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>m_isDirty</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1a6006be4af1966b8e459eed97f13b0909" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>m_shader</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1afe9299bb6d78876d79c03469931317f6" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>m_texture</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1af213ea007d89f803cee90430cb792fc2" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>m_vertexSnappingMode</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1a85d97e4b369bcb2d21d3125ae99031c4" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>m_windowDamagedConnection</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1ae7cff6df25cae028c44b6fd75bb13115" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>m_windowEffect</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1ad6cb59925f21ddacfdccdd83fec1797e" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>maybeRender</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1ae8d8c6463b818cef59ad5753e2dc1c79" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>paint</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1abccab9f4db6f516f0ea02adf688da9c1" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>setDirty</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1a2e7fc003ca42238ee783915350b81f58" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>setShader</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1a1cd63ba227aabe8998c77a68e12068a3" prot="public" virt="non-virtual"><scope>KWin::OffscreenData</scope><name>setVertexSnappingMode</name></member>
      <member refid="struct_k_win_1_1_offscreen_data_1a1ce1420eb876cb7053e9a6b85f44c75e" prot="public" virt="virtual"><scope>KWin::OffscreenData</scope><name>~OffscreenData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
