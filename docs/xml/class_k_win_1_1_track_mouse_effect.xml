<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_track_mouse_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::TrackMouseEffect</compoundname>
    <basecompoundref refid="class_k_win_1_1_effect" prot="public" virt="non-virtual">KWin::Effect</basecompoundref>
    <includes refid="trackmouse_8h" local="no">trackmouse.h</includes>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_k_win_1_1_track_mouse_effect_1a1245fde8325168e872ca3693c0e84929" prot="private" static="no" strong="yes">
        <type></type>
        <name>State</name>
        <qualifiedname>KWin::TrackMouseEffect::State</qualifiedname>
        <enumvalue id="class_k_win_1_1_track_mouse_effect_1a1245fde8325168e872ca3693c0e84929af191dd2f69e7a8c8f89ba9b29ac69058" prot="private">
          <name>ActivatedByModifiers</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_track_mouse_effect_1a1245fde8325168e872ca3693c0e84929a748a872c0ac6e9f4841382caccb823c5" prot="private">
          <name>ActivatedByShortcut</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_track_mouse_effect_1a1245fde8325168e872ca3693c0e84929a3cab03c00dbd11bc3569afa0748013f0" prot="private">
          <name>Inactive</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="60" column="5" bodyfile="kwin/src/plugins/trackmouse/trackmouse.h" bodystart="60" bodyend="64"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_track_mouse_effect_1af6b06b719db4e882cb2e0a58c0350630" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Qt::KeyboardModifiers</type>
        <definition>Qt::KeyboardModifiers KWin::TrackMouseEffect::modifiers</definition>
        <argsstring></argsstring>
        <name>modifiers</name>
        <qualifiedname>KWin::TrackMouseEffect::modifiers</qualifiedname>
        <read>modifiers</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="39" column="5" bodyfile="kwin/src/plugins/trackmouse/trackmouse.h" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_track_mouse_effect_1a3f16fb731971c5656f68f1072328ad01" prot="private" static="no" mutable="no">
        <type>State</type>
        <definition>State KWin::TrackMouseEffect::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <qualifiedname>KWin::TrackMouseEffect::m_state</qualifiedname>
        <initializer>= State::Inactive</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="68" column="11" bodyfile="kwin/src/plugins/trackmouse/trackmouse.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_track_mouse_effect_1aa0cdef7e21cd806ef6253ee948183af6" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float KWin::TrackMouseEffect::m_angle</definition>
        <argsstring></argsstring>
        <name>m_angle</name>
        <qualifiedname>KWin::TrackMouseEffect::m_angle</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="69" column="11" bodyfile="kwin/src/plugins/trackmouse/trackmouse.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_track_mouse_effect_1ab6292160418a7aeb846d5a07a759177c" prot="private" static="no" mutable="no">
        <type>Qt::KeyboardModifiers</type>
        <definition>Qt::KeyboardModifiers KWin::TrackMouseEffect::m_modifiers</definition>
        <argsstring></argsstring>
        <name>m_modifiers</name>
        <qualifiedname>KWin::TrackMouseEffect::m_modifiers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="70" column="27" bodyfile="kwin/src/plugins/trackmouse/trackmouse.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_track_mouse_effect_1ab8576527faf6c06340d7907c572f8291" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_rotating_arcs_item" kindref="compound">RotatingArcsItem</ref> &gt;</type>
        <definition>std::unique_ptr&lt;RotatingArcsItem&gt; KWin::TrackMouseEffect::m_rotatingArcsItem</definition>
        <argsstring></argsstring>
        <name>m_rotatingArcsItem</name>
        <qualifiedname>KWin::TrackMouseEffect::m_rotatingArcsItem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="71" column="21" bodyfile="kwin/src/plugins/trackmouse/trackmouse.h" bodystart="71" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_track_mouse_effect_1a21666e18075891e5b1cc65c0149fb0ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::TrackMouseEffect::TrackMouseEffect</definition>
        <argsstring>()</argsstring>
        <name>TrackMouseEffect</name>
        <qualifiedname>KWin::TrackMouseEffect::TrackMouseEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="41" column="5" bodyfile="kwin/src/plugins/trackmouse/trackmouse.cpp" bodystart="65" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_track_mouse_effect_1a7238703143fd36961eb71e78c356db63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::TrackMouseEffect::~TrackMouseEffect</definition>
        <argsstring>() override</argsstring>
        <name>~TrackMouseEffect</name>
        <qualifiedname>KWin::TrackMouseEffect::~TrackMouseEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="42" column="5" bodyfile="kwin/src/plugins/trackmouse/trackmouse.cpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_track_mouse_effect_1a05cbedc41a29202b9323a45b1e46cd27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::TrackMouseEffect::prePaintScreen</definition>
        <argsstring>(ScreenPrePaintData &amp;data, std::chrono::milliseconds presentTime) override</argsstring>
        <name>prePaintScreen</name>
        <qualifiedname>KWin::TrackMouseEffect::prePaintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga2edc1b757e36bb6bcbbacde454dfc05c">prePaintScreen</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_screen_pre_paint_data" kindref="compound">ScreenPrePaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>presentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called before starting to paint the screen. In this method you can: <itemizedlist>
<listitem><para>set whether the windows or the entire screen will be transformed </para>
</listitem>
<listitem><para>change the region of the screen that will be painted </para>
</listitem>
<listitem><para>do various housekeeping tasks such as initing your effect&apos;s variables for the upcoming paint pass or updating animation&apos;s progress</para>
</listitem>
</itemizedlist>
<emphasis>presentTime</emphasis> specifies the expected monotonic time when the rendered frame will be displayed on the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="44" column="10" bodyfile="kwin/src/plugins/trackmouse/trackmouse.cpp" bodystart="108" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_track_mouse_effect_1a4ae0d7ef4cd70b72eb44e92f5c82a2c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::TrackMouseEffect::reconfigure</definition>
        <argsstring>(ReconfigureFlags) override</argsstring>
        <name>reconfigure</name>
        <qualifiedname>KWin::TrackMouseEffect::reconfigure</qualifiedname>
        <reimplements refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d">reconfigure</reimplements>
        <param>
          <type>ReconfigureFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when configuration changes (either the effect&apos;s or <ref refid="namespace_k_win" kindref="compound">KWin</ref>&apos;s global).</para>
<para>In OpenGL based compositing, the frameworks ensures that the context is current when the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> is reconfigured. If this method is called from within the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> it is required to ensure that the context is current if the implementation does OpenGL calls. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="45" column="10" bodyfile="kwin/src/plugins/trackmouse/trackmouse.cpp" bodystart="83" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_track_mouse_effect_1af785e4a26facaec5ae56e241e78a3341" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::TrackMouseEffect::isActive</definition>
        <argsstring>() const override</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::TrackMouseEffect::isActive</qualifiedname>
        <reimplements refid="group__kwineffects_1ga596b6c0ed146b97b293f5db5f27fc40f">isActive</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrite this method to indicate whether your effect will be doing something in the next frame to be rendered. If the method returns <computeroutput>false</computeroutput> the effect will be excluded from the chained methods in the next rendered frame.</para>
<para>This method is called always directly before the paint loop begins. So it is totally fine to e.g. react on a window event, issue a repaint to trigger an animation and change a flag to indicate that this method returns <computeroutput>true</computeroutput>.</para>
<para>As the method is called each frame, you should not perform complex calculations. Best use just a boolean flag.</para>
<para>The default implementation of this method returns <computeroutput>true</computeroutput>. <simplesect kind="since"><para>4.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="46" column="10" bodyfile="kwin/src/plugins/trackmouse/trackmouse.cpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_track_mouse_effect_1a0f0e0910c6c47852aefe1e546e42e528" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Qt::KeyboardModifiers</type>
        <definition>Qt::KeyboardModifiers KWin::TrackMouseEffect::modifiers</definition>
        <argsstring>() const</argsstring>
        <name>modifiers</name>
        <qualifiedname>KWin::TrackMouseEffect::modifiers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="49" column="27" bodyfile="kwin/src/plugins/trackmouse/trackmouse.h" bodystart="49" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_track_mouse_effect_1a4e3319d4a5e0757872a4f56ed8d8b3e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TrackMouseEffect::toggle</definition>
        <argsstring>()</argsstring>
        <name>toggle</name>
        <qualifiedname>KWin::TrackMouseEffect::toggle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="54" column="10" bodyfile="kwin/src/plugins/trackmouse/trackmouse.cpp" bodystart="117" bodyend="152"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_track_mouse_effect_1a48373f21e5615b82eee9cae5180fed89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::TrackMouseEffect::slotMouseChanged</definition>
        <argsstring>(const QPointF &amp;pos, const QPointF &amp;old, Qt::MouseButtons buttons, Qt::MouseButtons oldbuttons, Qt::KeyboardModifiers modifiers, Qt::KeyboardModifiers oldmodifiers)</argsstring>
        <name>slotMouseChanged</name>
        <qualifiedname>KWin::TrackMouseEffect::slotMouseChanged</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>old</declname>
        </param>
        <param>
          <type>Qt::MouseButtons</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>Qt::MouseButtons</type>
          <declname>oldbuttons</declname>
        </param>
        <param>
          <type>Qt::KeyboardModifiers</type>
          <declname>modifiers</declname>
        </param>
        <param>
          <type>Qt::KeyboardModifiers</type>
          <declname>oldmodifiers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="55" column="10" bodyfile="kwin/src/plugins/trackmouse/trackmouse.cpp" bodystart="154" bodyend="187"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_track_mouse_effect_1a0319b9f6ef79f4284418180cc1755d75" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::TrackMouseEffect::needMouseEvents</definition>
        <argsstring>() const</argsstring>
        <name>needMouseEvents</name>
        <qualifiedname>KWin::TrackMouseEffect::needMouseEvents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="66" column="10" bodyfile="kwin/src/plugins/trackmouse/trackmouse.cpp" bodystart="194" bodyend="197"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::TrackMouseEffect</label>
        <link refid="class_k_win_1_1_track_mouse_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::TrackMouseEffect</label>
        <link refid="class_k_win_1_1_track_mouse_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/trackmouse/trackmouse.h" line="36" column="1" bodyfile="kwin/src/plugins/trackmouse/trackmouse.h" bodystart="37" bodyend="72"/>
    <listofallmembers>
      <member refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga3a167fe6d9c46376ed46db13caf2d135" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga0ba05f1463195d0f92ea1dd3396a5d16" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga7cf8035c970fcde177e3038d79015289" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>blocksDirectScanout</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea67d120ab5ce1dc424476e63c132af6c1" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>Blur</name></member>
      <member refid="group__kwineffects_1gab8a94f591b743b59b7285911e641e7d5" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>borderActivated</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aead805f717a48c23959a1e9ecd7722d15d" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>Contrast</name></member>
      <member refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>cursorPos</name></member>
      <member refid="group__kwineffects_1ga0c159e00c3a51ca733bea49cf8d52691" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>debug</name></member>
      <member refid="group__kwineffects_1ga254b1a3e8bb8b9b671e9b000ca027b7c" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>drawWindow</name></member>
      <member refid="group__kwineffects_1ga7bd8262f4cb2c5c3090c748eb388ad7e" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>Effect</name></member>
      <member refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>Feature</name></member>
      <member refid="group__kwineffects_1gab5e0581ae4b2dffe8014ff5cf6c21158" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>grabbedKeyboardEvent</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>HighlightWindows</name></member>
      <member refid="group__kwineffects_1ga7b0ecb57667179e95c188f0ee7416d00" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>interpolate</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1af785e4a26facaec5ae56e241e78a3341" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1aa0cdef7e21cd806ef6253ee948183af6" prot="private" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>m_angle</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1ab6292160418a7aeb846d5a07a759177c" prot="private" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>m_modifiers</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1ab8576527faf6c06340d7907c572f8291" prot="private" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>m_rotatingArcsItem</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1a3f16fb731971c5656f68f1072328ad01" prot="private" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>m_state</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1af6b06b719db4e882cb2e0a58c0350630" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>modifiers</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1a0f0e0910c6c47852aefe1e546e42e528" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>modifiers</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1a0319b9f6ef79f4284418180cc1755d75" prot="private" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>needMouseEvents</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea170229312ed2ec0e446ee89ba7f6b6ca" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>Nothing</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dab0de2932c45bde6df3de10d00dbd6fcd" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>PAINT_SCREEN_BACKGROUND_FIRST</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da43acbfc913cae9eb3c363aeb0524f18f" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>PAINT_SCREEN_REGION</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>PAINT_SCREEN_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da124dd798e5f793087e81da77e11a9b1e" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>PAINT_SCREEN_WITH_TRANSFORMED_WINDOWS</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac606d3dcf2dd150234f71c4c39083c7d" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>PAINT_WINDOW_OPAQUE</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da684bb6c6c278b900b6d0c889e79233b8" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>PAINT_WINDOW_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac7237bf4bb4d6ea6d6fb1215db19b45e" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>PAINT_WINDOW_TRANSLUCENT</name></member>
      <member refid="group__kwineffects_1ga44ee94161446ce6fb2502376af6515a8" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>paintScreen</name></member>
      <member refid="group__kwineffects_1ga0f0292db2bf016a0843ef7cc06219378" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>paintWindow</name></member>
      <member refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>perform</name></member>
      <member refid="group__kwineffects_1ga10021cf9704c00d60beae284d53846e2" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>postPaintScreen</name></member>
      <member refid="group__kwineffects_1ga9b7cf82c6f74331cffabb06c63ef914c" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>postPaintWindow</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1a05cbedc41a29202b9323a45b1e46cd27" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>prePaintScreen</name></member>
      <member refid="group__kwineffects_1ga2832c7831c0f49f9f5cf0267ffc53672" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>prePaintWindow</name></member>
      <member refid="group__kwineffects_1ga30fc2cbbdd90f95568a9e350f34bf2b7" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>provides</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1a4ae0d7ef4cd70b72eb44e92f5c82a2c5" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>reconfigure</name></member>
      <member refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>ReconfigureAll</name></member>
      <member refid="group__kwineffects_1ga4aebd7d0f695e37678debaa118fa92dc" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>ReconfigureFlag</name></member>
      <member refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>requestedEffectChainPosition</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea592ea0de7a4d658a1ef9bbb48b18e15a" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>ScreenInversion</name></member>
      <member refid="group__kwineffects_1ga1efc42cd9be15e8200c6e55f6bf47cb8" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>setPositionTransformations</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1a48373f21e5615b82eee9cae5180fed89" prot="private" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>slotMouseChanged</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1a1245fde8325168e872ca3693c0e84929" prot="private" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>State</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea19036d413806c53978a3234e7eb197c4" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>SystemBell</name></member>
      <member refid="group__kwineffects_1ga2d22a8f0b8a4d81615dff67dc1ef970f" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>tabletPadButtonEvent</name></member>
      <member refid="group__kwineffects_1gaa084e5a45597f5775213715eb5506f63" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>tabletPadRingEvent</name></member>
      <member refid="group__kwineffects_1ga4998fb0983bd97163935cad2c4dedd76" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>tabletPadStripEvent</name></member>
      <member refid="group__kwineffects_1ga1d4ae01f5935ea887a12018d59191cbf" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>tabletToolAxis</name></member>
      <member refid="group__kwineffects_1ga7a984d7d83dfa97962b8404301c6aba9" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>tabletToolButtonEvent</name></member>
      <member refid="group__kwineffects_1ga4ed77506be381680bf664dbc8c20e036" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>tabletToolProximity</name></member>
      <member refid="group__kwineffects_1gaf16e9ca42cceb738fb859d1a1a462548" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>tabletToolTip</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1a4e3319d4a5e0757872a4f56ed8d8b3e9" prot="private" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>toggle</name></member>
      <member refid="group__kwineffects_1gaa31554949bc00085e6380b50be16138e" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>touchCancel</name></member>
      <member refid="group__kwineffects_1ga315fd305e7570f41e7bce7db6812381f" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>touchDown</name></member>
      <member refid="group__kwineffects_1ga54d00a9e05b5d4597db40c2f5b1d36de" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>touchMotion</name></member>
      <member refid="group__kwineffects_1gaf3871967d6199eb7c87621bc75b925bb" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1a21666e18075891e5b1cc65c0149fb0ae" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>TrackMouseEffect</name></member>
      <member refid="group__kwineffects_1ga7b142933c38cb9b4a433b768b266e7cb" prot="public" virt="virtual"><scope>KWin::TrackMouseEffect</scope><name>windowInputMouseEvent</name></member>
      <member refid="group__kwineffects_1ga50174eb0169aebceb78ebd5aff71c481" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>~Effect</name></member>
      <member refid="class_k_win_1_1_track_mouse_effect_1a7238703143fd36961eb71e78c356db63" prot="public" virt="non-virtual"><scope>KWin::TrackMouseEffect</scope><name>~TrackMouseEffect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
