<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_dpms_manager_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::DpmsManagerInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="dpms_8h" local="no">dpms.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_dpms_manager_interface_1a75e90a8cc33e3ebfb15ef15eddfe4d34" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_dpms_manager_interface_private" kindref="compound">DpmsManagerInterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;DpmsManagerInterfacePrivate&gt; KWin::DpmsManagerInterface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::DpmsManagerInterface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/dpms.h" line="60" column="21" bodyfile="kwin/src/wayland/dpms.h" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_dpms_manager_interface_1ab490e2596104a866ab341d45147ed431" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DpmsManagerInterface::DpmsManagerInterface</definition>
        <argsstring>(Display *display, QObject *parent=nullptr)</argsstring>
        <name>DpmsManagerInterface</name>
        <qualifiedname>KWin::DpmsManagerInterface::DpmsManagerInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/dpms.h" line="56" column="14" bodyfile="kwin/src/wayland/dpms.cpp" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_dpms_manager_interface_1af6af541835a15dbddd8877caf3ea52fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DpmsManagerInterface::~DpmsManagerInterface</definition>
        <argsstring>() override</argsstring>
        <name>~DpmsManagerInterface</name>
        <qualifiedname>KWin::DpmsManagerInterface::~DpmsManagerInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/dpms.h" line="57" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Global for server side <ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> Power Management Signaling interface. </para>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="class_k_win_1_1_dpms_manager_interface" kindref="compound">DpmsManagerInterface</ref> allows a client to query the DPMS state on a given <ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref> and request changes to it. Server-side the interaction happens only via the <ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref>, for clients the Dpms class provides the API. This global implements org_kde_kwin_dpms_manager.</para>
<para>To create a <ref refid="class_k_win_1_1_dpms_manager_interface" kindref="compound">DpmsManagerInterface</ref> use: <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>manager<sp/>=<sp/>display-&gt;createDpmsManager();</highlight></codeline>
<codeline><highlight class="normal">manager-&gt;create();</highlight></codeline>
</programlisting></para>
<para>To interact with Dpms use one needs to mark it as enabled and set the proper mode on the <ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref>. <programlisting><codeline><highlight class="comment">//<sp/>We<sp/>have<sp/>our<sp/>OutputInterface<sp/>called<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">output-&gt;setDpmsSupported(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">output-&gt;setDpmsMode(<ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1a521c36a31c2762741cf0f8890cbe05e3" kindref="member">Output::DpmsMode::On</ref>);</highlight></codeline>
</programlisting></para>
<para>To connect to Dpms change requests use: <programlisting><codeline><highlight class="normal">connect(output,<sp/>&amp;Output::DpmsModeRequested,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[]<sp/>(<ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" kindref="member">Output::DpmsMode</ref><sp/>requestedMode)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/>change<sp/>requested&quot;</highlight><highlight class="normal">;<sp/>});</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_output_interface" kindref="compound">OutputInterface</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::DpmsManagerInterface</label>
        <link refid="class_k_win_1_1_dpms_manager_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::DpmsManagerInterface</label>
        <link refid="class_k_win_1_1_dpms_manager_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/dpms.h" line="51" column="1" bodyfile="kwin/src/wayland/dpms.h" bodystart="52" bodyend="61"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_dpms_manager_interface_1a75e90a8cc33e3ebfb15ef15eddfe4d34" prot="private" virt="non-virtual"><scope>KWin::DpmsManagerInterface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_dpms_manager_interface_1ab490e2596104a866ab341d45147ed431" prot="public" virt="non-virtual"><scope>KWin::DpmsManagerInterface</scope><name>DpmsManagerInterface</name></member>
      <member refid="class_k_win_1_1_dpms_manager_interface_1af6af541835a15dbddd8877caf3ea52fa" prot="public" virt="non-virtual"><scope>KWin::DpmsManagerInterface</scope><name>~DpmsManagerInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
