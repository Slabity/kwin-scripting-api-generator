<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4" kind="struct" language="C++" prot="public">
    <compoundname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</compoundname>
    <includes refid="xcbutils_8h" local="no">xcbutils.h</includes>
    <templateparamlist>
      <param>
        <type>typename Reply</type>
      </param>
      <param>
        <type>typename Cookie</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1ab89daede4f41be9dca50ced97202d8f3" prot="public" static="no">
        <type>Reply</type>
        <definition>typedef Reply KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::reply_type</definition>
        <argsstring></argsstring>
        <name>reply_type</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::reply_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="239" column="19" bodyfile="kwin/src/utils/xcbutils.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1ab4d99acd2df422a79683bbaf47b8088a" prot="public" static="no">
        <type>Cookie</type>
        <definition>typedef Cookie KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::cookie_type</definition>
        <argsstring></argsstring>
        <name>cookie_type</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::cookie_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="240" column="20" bodyfile="kwin/src/utils/xcbutils.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1a042e01097fca3e930b89ac01a6d0de64" prot="public" static="no">
        <type>std::tuple</type>
        <definition>typedef std::tuple KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::argument_types</definition>
        <argsstring></argsstring>
        <name>argument_types</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::argument_types</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="241" column="14" bodyfile="kwin/src/utils/xcbutils.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1a592345fbb2c9b38026758b485d5a1ada" prot="public" static="no">
        <type>Cookie(*</type>
        <definition>typedef Cookie(* KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::request_func) (xcb_connection_t *)</definition>
        <argsstring>)(xcb_connection_t *)</argsstring>
        <name>request_func</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::request_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="242" column="13" bodyfile="kwin/src/utils/xcbutils.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1ae01f997a9b34d470fc53330cc1e2b90c" prot="public" static="no">
        <type>Reply *(*</type>
        <definition>typedef Reply *(* KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::reply_func) (xcb_connection_t *, Cookie, xcb_generic_error_t **)</definition>
        <argsstring>)(xcb_connection_t *, Cookie, xcb_generic_error_t **)</argsstring>
        <name>reply_func</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::reply_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="243" column="13" bodyfile="kwin/src/utils/xcbutils.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_k_win_1_1_xcb_1_1_wrapper_data_1a76adacdf7a92ef164244aa5b8017de38" prot="public" static="no">
        <type>Reply</type>
        <definition>typedef Reply KWin::Xcb::WrapperData&lt; Reply, Cookie, Args &gt;::reply_type</definition>
        <argsstring></argsstring>
        <name>reply_type</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::reply_type</qualifiedname>
        <briefdescription>
<para>The type returned by the xcb reply function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="205" column="19" bodyfile="kwin/src/utils/xcbutils.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_k_win_1_1_xcb_1_1_wrapper_data_1a5cc365395476b56d3251124b48607264" prot="public" static="no">
        <type>Cookie</type>
        <definition>typedef Cookie KWin::Xcb::WrapperData&lt; Reply, Cookie, Args &gt;::cookie_type</definition>
        <argsstring></argsstring>
        <name>cookie_type</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::cookie_type</qualifiedname>
        <briefdescription>
<para>The type returned by the xcb request function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="209" column="20" bodyfile="kwin/src/utils/xcbutils.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_k_win_1_1_xcb_1_1_wrapper_data_1ae17e84df5de545f827ba2a6573cdae66" prot="public" static="no">
        <type>std::tuple&lt; Args... &gt;</type>
        <definition>typedef std::tuple&lt;Args...&gt; KWin::Xcb::WrapperData&lt; Reply, Cookie, Args &gt;::argument_types</definition>
        <argsstring></argsstring>
        <name>argument_types</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::argument_types</qualifiedname>
        <briefdescription>
<para>Variadic arguments combined as a std::tuple. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="214" column="24" bodyfile="kwin/src/utils/xcbutils.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_k_win_1_1_xcb_1_1_wrapper_data_1ac4d3a69005818a9fa24030174446a97e" prot="public" static="no">
        <type>Cookie(*</type>
        <definition>typedef Cookie(* KWin::Xcb::WrapperData&lt; Reply, Cookie, Args &gt;::request_func) (xcb_connection_t *, Args...)</definition>
        <argsstring>)(xcb_connection_t *, Args...)</argsstring>
        <name>request_func</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::request_func</qualifiedname>
        <briefdescription>
<para>The function pointer definition for the xcb request function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="218" column="13" bodyfile="kwin/src/utils/xcbutils.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_k_win_1_1_xcb_1_1_wrapper_data_1a93fcfe893251b376ba275660f10651c8" prot="public" static="no">
        <type>Reply *(*</type>
        <definition>typedef Reply *(* KWin::Xcb::WrapperData&lt; Reply, Cookie, Args &gt;::reply_func) (xcb_connection_t *, Cookie, xcb_generic_error_t **)</definition>
        <argsstring>)(xcb_connection_t *, Cookie, xcb_generic_error_t **)</argsstring>
        <name>reply_func</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::reply_func</qualifiedname>
        <briefdescription>
<para>The function pointer definition for the xcb reply function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="222" column="13" bodyfile="kwin/src/utils/xcbutils.h" bodystart="222" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1a02ba1c4bf5c49fd8dd17340b4c28c3e5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::argumentCount</definition>
        <argsstring></argsstring>
        <name>argumentCount</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::argumentCount</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="244" column="34" bodyfile="kwin/src/utils/xcbutils.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_k_win_1_1_xcb_1_1_wrapper_data_1adbd15d7fccf15bceb04657debcdb0a32" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t KWin::Xcb::WrapperData&lt; Reply, Cookie, Args &gt;::argumentCount</definition>
        <argsstring></argsstring>
        <name>argumentCount</name>
        <qualifiedname>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;::argumentCount</qualifiedname>
        <briefdescription>
<para>Number of variadic arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="227" column="34" bodyfile="kwin/src/utils/xcbutils.h" bodystart="227" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Partial template specialization for <ref refid="struct_k_win_1_1_xcb_1_1_wrapper_data" kindref="compound">WrapperData</ref> with no further arguments. </para>
    </briefdescription>
    <detaileddescription>
<para>This will be used for xcb requests just taking the xcb_connection_t* argument. </para>
    </detaileddescription>
    <location file="kwin/src/utils/xcbutils.h" line="237" column="1" bodyfile="kwin/src/utils/xcbutils.h" bodystart="238" bodyend="245"/>
    <listofallmembers>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1a042e01097fca3e930b89ac01a6d0de64" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>argument_types</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_1ae17e84df5de545f827ba2a6573cdae66" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>argument_types</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1a02ba1c4bf5c49fd8dd17340b4c28c3e5" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>argumentCount</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_1adbd15d7fccf15bceb04657debcdb0a32" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>argumentCount</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1ab4d99acd2df422a79683bbaf47b8088a" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>cookie_type</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_1a5cc365395476b56d3251124b48607264" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>cookie_type</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1ae01f997a9b34d470fc53330cc1e2b90c" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>reply_func</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_1a93fcfe893251b376ba275660f10651c8" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>reply_func</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1ab89daede4f41be9dca50ced97202d8f3" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>reply_type</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_1a76adacdf7a92ef164244aa5b8017de38" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>reply_type</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_3_01_reply_00_01_cookie_01_4_1a592345fbb2c9b38026758b485d5a1ada" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>request_func</name></member>
      <member refid="struct_k_win_1_1_xcb_1_1_wrapper_data_1ac4d3a69005818a9fa24030174446a97e" prot="public" virt="non-virtual"><scope>KWin::Xcb::WrapperData&lt; Reply, Cookie &gt;</scope><name>request_func</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
