<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="globalshortcuts_8cpp" kind="file" language="C++">
    <compoundname>globalshortcuts.cpp</compoundname>
    <includes refid="globalshortcuts_8h" local="yes">globalshortcuts.h</includes>
    <includes local="yes">config-kwin.h</includes>
    <includes refid="globals_8h" local="yes">effect/globals.h</includes>
    <includes refid="gestures_8h" local="yes">gestures.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes local="no">QAction</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">variant</includes>
    <includes local="yes">moc_globalshortcuts.cpp</includes>
    <incdepgraph>
      <node id="3">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>gestures.h</label>
        <link refid="gestures_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/globalshortcuts.cpp</label>
        <link refid="globalshortcuts_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>globalshortcuts.h</label>
        <link refid="globalshortcuts_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>KSharedConfig</label>
      </node>
      <node id="20">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="31">
        <label>QAction</label>
      </node>
      <node id="21">
        <label>QApplication</label>
      </node>
      <node id="25">
        <label>QByteArray</label>
      </node>
      <node id="5">
        <label>QCoreApplication</label>
      </node>
      <node id="6">
        <label>QImage</label>
      </node>
      <node id="11">
        <label>QKeySequence</label>
      </node>
      <node id="14">
        <label>QList</label>
      </node>
      <node id="27">
        <label>QLoggingCategory</label>
      </node>
      <node id="15">
        <label>QMap</label>
      </node>
      <node id="28">
        <label>QMatrix4x4</label>
      </node>
      <node id="16">
        <label>QObject</label>
      </node>
      <node id="7">
        <label>QPoint</label>
      </node>
      <node id="17">
        <label>QPointF</label>
      </node>
      <node id="22">
        <label>QProcessEnvironment</label>
      </node>
      <node id="29">
        <label>QRect</label>
      </node>
      <node id="26">
        <label>QString</label>
      </node>
      <node id="8">
        <label>QVariant</label>
      </node>
      <node id="9">
        <label>QVector2D</label>
      </node>
      <node id="30">
        <label>climits</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="10">
        <label>kwin_export.h</label>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
      <node id="34">
        <label>moc_globalshortcuts.cpp</label>
      </node>
      <node id="32">
        <label>signal.h</label>
      </node>
      <node id="33">
        <label>variant</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2013<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globalshortcuts_8h" kindref="compound">globalshortcuts.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config-kwin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kwin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">effect/globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gestures_8h" kindref="compound">gestures.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kglobalaccel_interface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kglobalacceld.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QAction&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31" refid="class_k_win_1_1_global_shortcut_1aac164a81d197a285e233df0478c15728" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_global_shortcut_1aac164a81d197a285e233df0478c15728" kindref="member">GlobalShortcut::GlobalShortcut</ref>(<ref refid="namespace_k_win_1a011701c82e8ff839a436db15db058f8b" kindref="member">Shortcut</ref><sp/>&amp;&amp;sc,<sp/>QAction<sp/>*<ref refid="class_k_win_1_1_global_shortcut_1aa5897ba0322e1210416a0398fd92a94f" kindref="member">action</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_shortcut(sc)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_action(<ref refid="class_k_win_1_1_global_shortcut_1aa5897ba0322e1210416a0398fd92a94f" kindref="member">action</ref>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcut_1aee595686535d687c349da07341bdd9a5" kindref="member">swipeGesture</ref><sp/>=<sp/>std::get_if&lt;RealtimeFeedbackSwipeShortcut&gt;(&amp;sc))<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_swipeGesture<sp/>=<sp/>std::make_unique&lt;SwipeGesture&gt;();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_swipeGesture-&gt;setDirection(<ref refid="class_k_win_1_1_global_shortcut_1aee595686535d687c349da07341bdd9a5" kindref="member">swipeGesture</ref>-&gt;direction);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_swipeGesture-&gt;setMinimumDelta(QPointF(200,<sp/>200));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_swipeGesture-&gt;setMaximumFingerCount(<ref refid="class_k_win_1_1_global_shortcut_1aee595686535d687c349da07341bdd9a5" kindref="member">swipeGesture</ref>-&gt;fingerCount);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_swipeGesture-&gt;setMinimumFingerCount(<ref refid="class_k_win_1_1_global_shortcut_1aee595686535d687c349da07341bdd9a5" kindref="member">swipeGesture</ref>-&gt;fingerCount);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::connect(m_swipeGesture.get(),<sp/>&amp;<ref refid="class_k_win_1_1_gesture_1acc2a90d209e0ac9b131e9a421dc110e3" kindref="member">SwipeGesture::triggered</ref>,<sp/>m_action,<sp/>&amp;QAction::trigger,<sp/>Qt::QueuedConnection);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::connect(m_swipeGesture.get(),<sp/>&amp;<ref refid="class_k_win_1_1_gesture_1a9c2e456f5fada41197cd0ae3918a35ad" kindref="member">SwipeGesture::cancelled</ref>,<sp/>m_action,<sp/>&amp;QAction::trigger,<sp/>Qt::QueuedConnection);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_global_shortcut_1aee595686535d687c349da07341bdd9a5" kindref="member">swipeGesture</ref>-&gt;progressCallback)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::connect(m_swipeGesture.get(),<sp/>&amp;<ref refid="class_k_win_1_1_swipe_gesture_1a5a6bfb66418846357933709cc33127ee" kindref="member">SwipeGesture::progress</ref>,<sp/><ref refid="class_k_win_1_1_global_shortcut_1aee595686535d687c349da07341bdd9a5" kindref="member">swipeGesture</ref>-&gt;progressCallback);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcut_1ad7fccbe04543f169785dbb082ebfd143" kindref="member">pinchGesture</ref><sp/>=<sp/>std::get_if&lt;RealtimeFeedbackPinchShortcut&gt;(&amp;sc))<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pinchGesture<sp/>=<sp/>std::make_unique&lt;PinchGesture&gt;();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pinchGesture-&gt;setDirection(<ref refid="class_k_win_1_1_global_shortcut_1ad7fccbe04543f169785dbb082ebfd143" kindref="member">pinchGesture</ref>-&gt;direction);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pinchGesture-&gt;setMaximumFingerCount(<ref refid="class_k_win_1_1_global_shortcut_1ad7fccbe04543f169785dbb082ebfd143" kindref="member">pinchGesture</ref>-&gt;fingerCount);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pinchGesture-&gt;setMinimumFingerCount(<ref refid="class_k_win_1_1_global_shortcut_1ad7fccbe04543f169785dbb082ebfd143" kindref="member">pinchGesture</ref>-&gt;fingerCount);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::connect(m_pinchGesture.get(),<sp/>&amp;<ref refid="class_k_win_1_1_gesture_1acc2a90d209e0ac9b131e9a421dc110e3" kindref="member">PinchGesture::triggered</ref>,<sp/>m_action,<sp/>&amp;QAction::trigger,<sp/>Qt::QueuedConnection);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::connect(m_pinchGesture.get(),<sp/>&amp;<ref refid="class_k_win_1_1_gesture_1a9c2e456f5fada41197cd0ae3918a35ad" kindref="member">PinchGesture::cancelled</ref>,<sp/>m_action,<sp/>&amp;QAction::trigger,<sp/>Qt::QueuedConnection);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_global_shortcut_1ad7fccbe04543f169785dbb082ebfd143" kindref="member">pinchGesture</ref>-&gt;scaleCallback)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QObject::connect(m_pinchGesture.get(),<sp/>&amp;<ref refid="class_k_win_1_1_pinch_gesture_1aab13f9a931e73c8d14bae2211dd72e99" kindref="member">PinchGesture::progress</ref>,<sp/><ref refid="class_k_win_1_1_global_shortcut_1ad7fccbe04543f169785dbb082ebfd143" kindref="member">pinchGesture</ref>-&gt;scaleCallback);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_k_win_1_1_global_shortcut_1a305e5cd02f75eb78e12ae231b12ee8f0" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_global_shortcut_1a305e5cd02f75eb78e12ae231b12ee8f0" kindref="member">GlobalShortcut::~GlobalShortcut</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_k_win_1_1_global_shortcut_1aa5897ba0322e1210416a0398fd92a94f" refkind="member"><highlight class="normal">QAction<sp/>*<ref refid="class_k_win_1_1_global_shortcut_1aa5897ba0322e1210416a0398fd92a94f" kindref="member">GlobalShortcut::action</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="64"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_action;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_k_win_1_1_global_shortcut_1a571123f6d7ba9dd46ae498372f265660" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcut_1a571123f6d7ba9dd46ae498372f265660" kindref="member">GlobalShortcut::invoke</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::invokeMethod(m_action,<sp/>&amp;QAction::trigger,<sp/>Qt::QueuedConnection);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_k_win_1_1_global_shortcut_1a58ea6d475f7cbf3683b16e9d47d890fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a011701c82e8ff839a436db15db058f8b" kindref="member">Shortcut</ref><sp/>&amp;<ref refid="class_k_win_1_1_global_shortcut_1a58ea6d475f7cbf3683b16e9d47d890fd" kindref="member">GlobalShortcut::shortcut</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_shortcut;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_k_win_1_1_global_shortcut_1aee595686535d687c349da07341bdd9a5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref><sp/>*<ref refid="class_k_win_1_1_global_shortcut_1aee595686535d687c349da07341bdd9a5" kindref="member">GlobalShortcut::swipeGesture</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="79"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_swipeGesture.get();</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_k_win_1_1_global_shortcut_1ad7fccbe04543f169785dbb082ebfd143" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pinch_gesture" kindref="compound">PinchGesture</ref><sp/>*<ref refid="class_k_win_1_1_global_shortcut_1ad7fccbe04543f169785dbb082ebfd143" kindref="member">GlobalShortcut::pinchGesture</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="84"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pinchGesture.get();</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_k_win_1_1_global_shortcuts_manager_1a45e62ec58be9a05477bbd93263f1cb4d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_global_shortcuts_manager_1a45e62ec58be9a05477bbd93263f1cb4d" kindref="member">GlobalShortcutsManager::GlobalShortcutsManager</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_touchpadGestureRecognizer(new<sp/><ref refid="class_k_win_1_1_gesture_recognizer" kindref="compound">GestureRecognizer</ref>(this))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_touchscreenGestureRecognizer(new<sp/><ref refid="class_k_win_1_1_gesture_recognizer" kindref="compound">GestureRecognizer</ref>(this))</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_k_win_1_1_global_shortcuts_manager_1aa8caa1ded9ed4b74a2fef2ac0d50d378" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_global_shortcuts_manager_1aa8caa1ded9ed4b74a2fef2ac0d50d378" kindref="member">GlobalShortcutsManager::~GlobalShortcutsManager</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_k_win_1_1_global_shortcuts_manager_1aca03045576c4e63bfa2a27ea02e7351b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1aca03045576c4e63bfa2a27ea02e7351b" kindref="member">GlobalShortcutsManager::init</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>qputenv(</highlight><highlight class="stringliteral">&quot;KGLOBALACCELD_PLATFORM&quot;</highlight><highlight class="normal">,<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>m_kglobalAccel<sp/>=<sp/>std::make_unique&lt;KGlobalAccelD&gt;();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_kglobalAccel-&gt;init())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Init<sp/>of<sp/>kglobalaccel<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_kglobalAccel.reset();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;KGlobalAcceld<sp/>inited&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GlobalShortcutsManager::objectDeleted(QObject<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_shortcuts.begin();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_shortcuts.end())<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;action()<sp/>==<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>m_shortcuts.erase(it);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GlobalShortcutsManager::add(<ref refid="class_k_win_1_1_global_shortcut" kindref="compound">GlobalShortcut</ref><sp/>sc,<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361" kindref="member">DeviceType</ref><sp/>device)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;recognizer<sp/>=<sp/>device<sp/>==<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a8229bf08d472e129beff22e3984afdbd" kindref="member">DeviceType::Touchpad</ref><sp/>?<sp/>m_touchpadGestureRecognizer<sp/>:<sp/>m_touchscreenGestureRecognizer;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::holds_alternative&lt;RealtimeFeedbackSwipeShortcut&gt;(sc.shortcut()))<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recognizer-&gt;registerSwipeGesture(sc.swipeGesture());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::holds_alternative&lt;RealtimeFeedbackPinchShortcut&gt;(sc.shortcut()))<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recognizer-&gt;registerPinchGesture(sc.pinchGesture());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(sc.action(),<sp/>&amp;QAction::destroyed,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;GlobalShortcutsManager::objectDeleted);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortcuts.push_back(std::move(sc));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_k_win_1_1_global_shortcuts_manager_1a5803f520b4579bdd8416ecb9ad61b86c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1a5803f520b4579bdd8416ecb9ad61b86c" kindref="member">GlobalShortcutsManager::registerPointerShortcut</ref>(QAction<sp/>*action,<sp/>Qt::KeyboardModifiers<sp/>modifiers,<sp/>Qt::MouseButtons<sp/>pointerButtons)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>add(<ref refid="class_k_win_1_1_global_shortcut" kindref="compound">GlobalShortcut</ref>(<ref refid="struct_k_win_1_1_pointer_button_shortcut" kindref="compound">PointerButtonShortcut</ref>{modifiers,<sp/>pointerButtons},<sp/>action));</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_k_win_1_1_global_shortcuts_manager_1ae5d6064880e1e29c5b5e273f774efc34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1ae5d6064880e1e29c5b5e273f774efc34" kindref="member">GlobalShortcutsManager::registerAxisShortcut</ref>(QAction<sp/>*action,<sp/>Qt::KeyboardModifiers<sp/>modifiers,<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0" kindref="member">PointerAxisDirection</ref><sp/>axis)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>add(<ref refid="class_k_win_1_1_global_shortcut" kindref="compound">GlobalShortcut</ref>(<ref refid="struct_k_win_1_1_pointer_axis_shortcut" kindref="compound">PointerAxisShortcut</ref>{modifiers,<sp/>axis},<sp/>action));</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_k_win_1_1_global_shortcuts_manager_1aaa8f0e85a7bac44fce984b39c6b0a14a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1aaa8f0e85a7bac44fce984b39c6b0a14a" kindref="member">GlobalShortcutsManager::registerTouchpadSwipe</ref>(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/>direction,<sp/>uint32_t<sp/>fingerCount,<sp/>QAction<sp/>*action,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>progressCallback)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>add(<ref refid="class_k_win_1_1_global_shortcut" kindref="compound">GlobalShortcut</ref>(<ref refid="struct_k_win_1_1_realtime_feedback_swipe_shortcut" kindref="compound">RealtimeFeedbackSwipeShortcut</ref>{<ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a8229bf08d472e129beff22e3984afdbd" kindref="member">DeviceType::Touchpad</ref>,<sp/>direction,<sp/>progressCallback,<sp/>fingerCount},<sp/>action),<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a8229bf08d472e129beff22e3984afdbd" kindref="member">DeviceType::Touchpad</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="class_k_win_1_1_global_shortcuts_manager_1a1061fd678bf2ebc4bd18a4a339e61fff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1aaa8f0e85a7bac44fce984b39c6b0a14a" kindref="member">GlobalShortcutsManager::registerTouchpadSwipe</ref>(<ref refid="class_k_win_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref><sp/>*swipeGesture)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchpadGestureRecognizer-&gt;registerSwipeGesture(swipeGesture);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_k_win_1_1_global_shortcuts_manager_1a1d38be2d448744f9b6eed0c81a72e649" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1a1d38be2d448744f9b6eed0c81a72e649" kindref="member">GlobalShortcutsManager::registerTouchpadPinch</ref>(<ref refid="namespace_k_win_1a8852f83038eda36bc255d8f5f3baae05" kindref="member">PinchDirection</ref><sp/>direction,<sp/>uint32_t<sp/>fingerCount,<sp/>QAction<sp/>*action,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>progressCallback)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>add(<ref refid="class_k_win_1_1_global_shortcut" kindref="compound">GlobalShortcut</ref>(<ref refid="struct_k_win_1_1_realtime_feedback_pinch_shortcut" kindref="compound">RealtimeFeedbackPinchShortcut</ref>{direction,<sp/>progressCallback,<sp/>fingerCount},<sp/>action),<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a8229bf08d472e129beff22e3984afdbd" kindref="member">DeviceType::Touchpad</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_k_win_1_1_global_shortcuts_manager_1aa13e38903f5a55c8926385872417c947" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1a1d38be2d448744f9b6eed0c81a72e649" kindref="member">GlobalShortcutsManager::registerTouchpadPinch</ref>(<ref refid="class_k_win_1_1_pinch_gesture" kindref="compound">PinchGesture</ref><sp/>*pinchGesture)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchpadGestureRecognizer-&gt;registerPinchGesture(pinchGesture);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_k_win_1_1_global_shortcuts_manager_1ae56f16c7556f74432b39c8740887aee4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1ae56f16c7556f74432b39c8740887aee4" kindref="member">GlobalShortcutsManager::registerTouchscreenSwipe</ref>(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/>direction,<sp/>uint32_t<sp/>fingerCount,<sp/>QAction<sp/>*action,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>progressCallback)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>add(<ref refid="class_k_win_1_1_global_shortcut" kindref="compound">GlobalShortcut</ref>(<ref refid="struct_k_win_1_1_realtime_feedback_swipe_shortcut" kindref="compound">RealtimeFeedbackSwipeShortcut</ref>{<ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a588711541a203a16bbc517f3f73ef7c8" kindref="member">DeviceType::Touchscreen</ref>,<sp/>direction,<sp/>progressCallback,<sp/>fingerCount},<sp/>action),<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a588711541a203a16bbc517f3f73ef7c8" kindref="member">DeviceType::Touchscreen</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="class_k_win_1_1_global_shortcuts_manager_1a50abc314569d33b5e6cb560b7c654c92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1ae56f16c7556f74432b39c8740887aee4" kindref="member">GlobalShortcutsManager::registerTouchscreenSwipe</ref>(<ref refid="class_k_win_1_1_swipe_gesture" kindref="compound">SwipeGesture</ref><sp/>*swipeGesture)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchscreenGestureRecognizer-&gt;registerSwipeGesture(swipeGesture);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_k_win_1_1_global_shortcuts_manager_1aa4ef90ccce2f7f0a02e422302bede6c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1aa4ef90ccce2f7f0a02e422302bede6c9" kindref="member">GlobalShortcutsManager::forceRegisterTouchscreenSwipe</ref>(<ref refid="namespace_k_win_1ab2206ebabcc9101a43b58473495efd03" kindref="member">SwipeDirection</ref><sp/>direction,<sp/>uint32_t<sp/>fingerCount,<sp/>QAction<sp/>*action,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(qreal)&gt;<sp/>progressCallback)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_global_shortcut" kindref="compound">GlobalShortcut</ref><sp/>shortcut{<ref refid="struct_k_win_1_1_realtime_feedback_swipe_shortcut" kindref="compound">RealtimeFeedbackSwipeShortcut</ref>{<ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a588711541a203a16bbc517f3f73ef7c8" kindref="member">DeviceType::Touchscreen</ref>,<sp/>direction,<sp/>progressCallback,<sp/>fingerCount},<sp/>action};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find_if(m_shortcuts.begin(),<sp/>m_shortcuts.end(),<sp/>[&amp;shortcut](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>shortcut.shortcut()<sp/>==<sp/>s.shortcut();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_shortcuts.end())<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_shortcuts.erase(it);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchscreenGestureRecognizer-&gt;registerSwipeGesture(shortcut.swipeGesture());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(shortcut.action(),<sp/>&amp;QAction::destroyed,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;GlobalShortcutsManager::objectDeleted);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortcuts.push_back(std::move(shortcut));</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_k_win_1_1_global_shortcuts_manager_1aa6bea5b7e62b83c894f2bdd3ef3ae61d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1aa6bea5b7e62b83c894f2bdd3ef3ae61d" kindref="member">GlobalShortcutsManager::processKey</ref>(Qt::KeyboardModifiers<sp/>mods,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyQt)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_kglobalAccelInterface)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>check<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](Qt::KeyboardModifiers<sp/>mods,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyQt)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retVal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaObject::invokeMethod(m_kglobalAccelInterface,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;checkKeyPressed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::DirectConnection,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_RETURN_ARG(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>retVal),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(mods)<sp/>|<sp/>keyQt));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check(mods,<sp/>keyQt))<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyQt<sp/>==<sp/>Qt::Key_Backtab)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>KGlobalAccel<sp/>on<sp/>X11<sp/>has<sp/>some<sp/>workaround<sp/>for<sp/>Backtab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>kglobalaccel/src/runtime/plugins/xcb/kglobalccel_x11.cpp<sp/>method<sp/>x11KeyPress</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apparently<sp/>KKeySequenceWidget<sp/>captures<sp/>Shift+Tab<sp/>instead<sp/>of<sp/>Backtab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thus<sp/>if<sp/>the<sp/>key<sp/>is<sp/>backtab<sp/>we<sp/>should<sp/>adjust<sp/>to<sp/>add<sp/>shift<sp/>again<sp/>and<sp/>use<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>addition<sp/>KWin<sp/>registers<sp/>the<sp/>shortcut<sp/>incorrectly<sp/>as<sp/>Alt+Shift+Backtab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>be<sp/>changed<sp/>to<sp/>either<sp/>Alt+Backtab<sp/>or<sp/>Alt+Shift+Tab<sp/>to<sp/>match<sp/>KKeySequenceWidget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trying<sp/>the<sp/>variants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check(mods<sp/>|<sp/>Qt::ShiftModifier,<sp/>keyQt))<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check(mods<sp/>|<sp/>Qt::ShiftModifier,<sp/>Qt::Key_Tab))<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="class_k_win_1_1_global_shortcuts_manager_1a8e8edd37d14e38efc87b4fcfa968a382" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1a8e8edd37d14e38efc87b4fcfa968a382" kindref="member">GlobalShortcutsManager::processKeyRelease</ref>(Qt::KeyboardModifiers<sp/>mods,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyQt)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_kglobalAccelInterface)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaObject::invokeMethod(m_kglobalAccelInterface,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;checkKeyReleased&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::DirectConnection,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(mods)<sp/>|<sp/>keyQt));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ShortcutKind,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="241" refid="namespace_k_win_1ab5d04701b3cf578f01676355f7e4671d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab5d04701b3cf578f01676355f7e4671d" kindref="member">match</ref>(QList&lt;GlobalShortcut&gt;<sp/>&amp;shortcuts,<sp/>Args...<sp/>args)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;sc<sp/>:<sp/>shortcuts)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::holds_alternative&lt;ShortcutKind&gt;(sc.shortcut()))<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;ShortcutKind&gt;(sc.shortcut())<sp/>==<sp/>ShortcutKind{args...})<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc.invoke();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(C++20):<sp/>use<sp/>ranges<sp/>for<sp/>a<sp/>nicer<sp/>way<sp/>of<sp/>filtering<sp/>by<sp/>shortcut<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_k_win_1_1_global_shortcuts_manager_1ac3afb03da16c3da359c9b0c2bf4f77b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1ac3afb03da16c3da359c9b0c2bf4f77b1" kindref="member">GlobalShortcutsManager::processPointerPressed</ref>(Qt::KeyboardModifiers<sp/>mods,<sp/>Qt::MouseButtons<sp/>pointerButtons)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>currently<sp/>only<sp/>used<sp/>to<sp/>better<sp/>support<sp/>modifier<sp/>only<sp/>shortcuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modifier-only<sp/>shortcuts<sp/>are<sp/>not<sp/>triggered<sp/>if<sp/>a<sp/>pointer<sp/>button<sp/>is<sp/>pressed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_kglobalAccelInterface)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaObject::invokeMethod(m_kglobalAccelInterface,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;checkPointerPressed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::DirectConnection,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(Qt::MouseButtons,<sp/>pointerButtons));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab5d04701b3cf578f01676355f7e4671d" kindref="member">match&lt;PointerButtonShortcut&gt;</ref>(m_shortcuts,<sp/>mods,<sp/>pointerButtons);</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="class_k_win_1_1_global_shortcuts_manager_1abf361109d96dd04fa4f0e87206325a8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1abf361109d96dd04fa4f0e87206325a8a" kindref="member">GlobalShortcutsManager::processAxis</ref>(Qt::KeyboardModifiers<sp/>mods,<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0" kindref="member">PointerAxisDirection</ref><sp/>axis)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_GLOBALSHORTCUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>currently<sp/>only<sp/>used<sp/>to<sp/>better<sp/>support<sp/>modifier<sp/>only<sp/>shortcuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modifier-only<sp/>shortcuts<sp/>are<sp/>not<sp/>triggered<sp/>if<sp/>a<sp/>pointer<sp/>axis<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_kglobalAccelInterface)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaObject::invokeMethod(m_kglobalAccelInterface,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;checkAxisTriggered&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::DirectConnection,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>axis));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ab5d04701b3cf578f01676355f7e4671d" kindref="member">match&lt;PointerAxisShortcut&gt;</ref>(m_shortcuts,<sp/>mods,<sp/>axis);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_k_win_1_1_global_shortcuts_manager_1ad6898ab3876ae494f4331923668c11a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1ad6898ab3876ae494f4331923668c11a8" kindref="member">GlobalShortcutsManager::processSwipeStart</ref>(<ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361" kindref="member">DeviceType</ref><sp/>device,<sp/>uint<sp/>fingerCount)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device<sp/>==<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a8229bf08d472e129beff22e3984afdbd" kindref="member">DeviceType::Touchpad</ref>)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchpadGestureRecognizer-&gt;startSwipeGesture(fingerCount);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchscreenGestureRecognizer-&gt;startSwipeGesture(fingerCount);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="class_k_win_1_1_global_shortcuts_manager_1a468b3ce8db10bb1b43cbbb8e1e4ce68f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1a468b3ce8db10bb1b43cbbb8e1e4ce68f" kindref="member">GlobalShortcutsManager::processSwipeUpdate</ref>(<ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361" kindref="member">DeviceType</ref><sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device<sp/>==<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a8229bf08d472e129beff22e3984afdbd" kindref="member">DeviceType::Touchpad</ref>)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchpadGestureRecognizer-&gt;updateSwipeGesture(delta);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchscreenGestureRecognizer-&gt;updateSwipeGesture(delta);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="class_k_win_1_1_global_shortcuts_manager_1a7dea2c49329b455a3bad063afaae9e54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1a7dea2c49329b455a3bad063afaae9e54" kindref="member">GlobalShortcutsManager::processSwipeCancel</ref>(<ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361" kindref="member">DeviceType</ref><sp/>device)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device<sp/>==<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a8229bf08d472e129beff22e3984afdbd" kindref="member">DeviceType::Touchpad</ref>)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchpadGestureRecognizer-&gt;cancelSwipeGesture();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchscreenGestureRecognizer-&gt;cancelSwipeGesture();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="class_k_win_1_1_global_shortcuts_manager_1a20e88eb63efa280055fd0bb52a03847d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1a20e88eb63efa280055fd0bb52a03847d" kindref="member">GlobalShortcutsManager::processSwipeEnd</ref>(<ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361" kindref="member">DeviceType</ref><sp/>device)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device<sp/>==<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a8229bf08d472e129beff22e3984afdbd" kindref="member">DeviceType::Touchpad</ref>)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchpadGestureRecognizer-&gt;endSwipeGesture();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_touchscreenGestureRecognizer-&gt;endSwipeGesture();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>cancel<sp/>on<sp/>Wayland<sp/>Seat<sp/>if<sp/>one<sp/>triggered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="class_k_win_1_1_global_shortcuts_manager_1ac9d26e78fa0edb7d6c4e88cda4ad4ba3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1ac9d26e78fa0edb7d6c4e88cda4ad4ba3" kindref="member">GlobalShortcutsManager::processPinchStart</ref>(uint<sp/>fingerCount)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchpadGestureRecognizer-&gt;startPinchGesture(fingerCount);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="class_k_win_1_1_global_shortcuts_manager_1a288ff55a87f02a05b7115d5cc1c7ef4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1a288ff55a87f02a05b7115d5cc1c7ef4c" kindref="member">GlobalShortcutsManager::processPinchUpdate</ref>(qreal<sp/>scale,<sp/>qreal<sp/>angleDelta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchpadGestureRecognizer-&gt;updatePinchGesture(scale,<sp/>angleDelta,<sp/>delta);</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="class_k_win_1_1_global_shortcuts_manager_1a47cdf8f490ec82374cfd18c3a47a615a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1a47cdf8f490ec82374cfd18c3a47a615a" kindref="member">GlobalShortcutsManager::processPinchCancel</ref>()</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchpadGestureRecognizer-&gt;cancelPinchGesture();</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="class_k_win_1_1_global_shortcuts_manager_1a3bfc59a1daa21eb6ffd28366f86e521d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_global_shortcuts_manager_1a3bfc59a1daa21eb6ffd28366f86e521d" kindref="member">GlobalShortcutsManager::processPinchEnd</ref>()</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchpadGestureRecognizer-&gt;endPinchGesture();</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_globalshortcuts.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/globalshortcuts.cpp"/>
  </compounddef>
</doxygen>
