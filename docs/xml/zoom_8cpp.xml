<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="zoom_8cpp" kind="file" language="C++">
    <compoundname>zoom.cpp</compoundname>
    <includes refid="zoom_8h" local="yes">zoom.h</includes>
    <includes refid="rendertarget_8h" local="yes">core/rendertarget.h</includes>
    <includes refid="renderviewport_8h" local="yes">core/renderviewport.h</includes>
    <includes refid="effecthandler_8h" local="yes">effect/effecthandler.h</includes>
    <includes refid="glutils_8h" local="yes">opengl/glutils.h</includes>
    <includes local="yes">zoomconfig.h</includes>
    <includes local="no">KConfigGroup</includes>
    <includes local="no">KGlobalAccel</includes>
    <includes local="no">KLocalizedString</includes>
    <includes local="no">KStandardActions</includes>
    <includes local="no">QAction</includes>
    <includes local="yes">moc_zoom.cpp</includes>
    <incdepgraph>
      <node id="4">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>core/renderviewport.h</label>
        <link refid="renderviewport_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>effect/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>effect/effecthandler.h</label>
        <link refid="effecthandler_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>effect/effectwindow.h</label>
        <link refid="effectwindow_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>opengl/eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>opengl/glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>opengl/glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>opengl/glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>opengl/glutils.h</label>
        <link refid="glutils_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/plugins/zoom/zoom.cpp</label>
        <link refid="zoom_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zoom.h</label>
        <link refid="zoom_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>KConfigGroup</label>
      </node>
      <node id="67">
        <label>KGlobalAccel</label>
      </node>
      <node id="68">
        <label>KLocalizedString</label>
      </node>
      <node id="16">
        <label>KPluginFactory</label>
      </node>
      <node id="17">
        <label>KSharedConfig</label>
      </node>
      <node id="69">
        <label>KStandardActions</label>
      </node>
      <node id="18">
        <label>QAction</label>
      </node>
      <node id="26">
        <label>QByteArray</label>
      </node>
      <node id="55">
        <label>QColor</label>
      </node>
      <node id="11">
        <label>QCoreApplication</label>
      </node>
      <node id="29">
        <label>QDebug</label>
      </node>
      <node id="37">
        <label>QEasingCurve</label>
      </node>
      <node id="48">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="59">
        <label>QFlags</label>
      </node>
      <node id="41">
        <label>QHash</label>
      </node>
      <node id="38">
        <label>QIcon</label>
      </node>
      <node id="12">
        <label>QImage</label>
      </node>
      <node id="27">
        <label>QList</label>
      </node>
      <node id="42">
        <label>QLoggingCategory</label>
      </node>
      <node id="56">
        <label>QMatrix3x3</label>
      </node>
      <node id="6">
        <label>QMatrix4x4</label>
      </node>
      <node id="24">
        <label>QObject</label>
      </node>
      <node id="39">
        <label>QPair</label>
      </node>
      <node id="13">
        <label>QPoint</label>
      </node>
      <node id="30">
        <label>QRect</label>
      </node>
      <node id="33">
        <label>QRectF</label>
      </node>
      <node id="15">
        <label>QRegion</label>
      </node>
      <node id="40">
        <label>QSet</label>
      </node>
      <node id="28">
        <label>QSize</label>
      </node>
      <node id="43">
        <label>QStack</label>
      </node>
      <node id="51">
        <label>QString</label>
      </node>
      <node id="19">
        <label>QTime</label>
      </node>
      <node id="20">
        <label>QTimeLine</label>
      </node>
      <node id="31">
        <label>QUuid</label>
      </node>
      <node id="14">
        <label>QVariant</label>
      </node>
      <node id="7">
        <label>QVector2D</label>
      </node>
      <node id="57">
        <label>QVector3D</label>
      </node>
      <node id="36">
        <label>QWindow</label>
      </node>
      <node id="3">
        <label>config-kwin.h</label>
      </node>
      <node id="52">
        <label>epoxy/egl.h</label>
      </node>
      <node id="49">
        <label>epoxy/gl.h</label>
      </node>
      <node id="44">
        <label>functional</label>
      </node>
      <node id="8">
        <label>kwin_export.h</label>
      </node>
      <node id="60">
        <label>map</label>
      </node>
      <node id="61">
        <label>memory</label>
      </node>
      <node id="70">
        <label>moc_zoom.cpp</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="63">
        <label>ranges</label>
      </node>
      <node id="64">
        <label>span</label>
      </node>
      <node id="65">
        <label>zoomconfig.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="zoom_8cpp_1aa27c83ba02d790f23ecab6196025c3e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ensureResources</definition>
        <argsstring>()</argsstring>
        <name>ensureResources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/zoom/zoom.cpp" line="31" column="13" bodyfile="kwin/src/plugins/zoom/zoom.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2006<sp/>Lubos<sp/>Lunak<sp/>&lt;l.lunak@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2010<sp/>Sebastian<sp/>Sauer<sp/>&lt;sebsauer@kdab.com&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zoom_8h" kindref="compound">zoom.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rendertarget_8h" kindref="compound">core/rendertarget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderviewport_8h" kindref="compound">core/renderviewport.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="effecthandler_8h" kindref="compound">effect/effecthandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glutils_8h" kindref="compound">opengl/glutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zoomconfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="accessibilityintegration_8h" kindref="compound">accessibilityintegration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KConfigGroup&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KGlobalAccel&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KLocalizedString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KStandardActions&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QAction&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ensureResources()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>initialize<sp/>resources<sp/>manually<sp/>because<sp/>the<sp/>effect<sp/>is<sp/>a<sp/>static<sp/>lib.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_INIT_RESOURCE(zoom);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_k_win_1_1_zoom_effect_1a33fd5a9c5df4ea771a808e98d20a8842" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_zoom_effect_1a33fd5a9c5df4ea771a808e98d20a8842" kindref="member">ZoomEffect::ZoomEffect</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>ensureResources();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ZoomConfig::instance(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;config());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>QAction<sp/>*a<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>KStandardActions::zoomIn(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::zoomIn,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Plus)<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Equal));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Plus)<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Equal));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>KStandardActions::zoomOut(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::zoomOut,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Minus));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_Minus));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>KStandardActions::actualSize(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::actualSize,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_0));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_0));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setObjectName(QStringLiteral(</highlight><highlight class="stringliteral">&quot;MoveZoomLeft&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setText(i18n(</highlight><highlight class="stringliteral">&quot;Move<sp/>Zoomed<sp/>Area<sp/>to<sp/>Left&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(a,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::moveZoomLeft);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setObjectName(QStringLiteral(</highlight><highlight class="stringliteral">&quot;MoveZoomRight&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setText(i18n(</highlight><highlight class="stringliteral">&quot;Move<sp/>Zoomed<sp/>Area<sp/>to<sp/>Right&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(a,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::moveZoomRight);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setObjectName(QStringLiteral(</highlight><highlight class="stringliteral">&quot;MoveZoomUp&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setText(i18n(</highlight><highlight class="stringliteral">&quot;Move<sp/>Zoomed<sp/>Area<sp/>Upwards&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(a,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::moveZoomUp);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setObjectName(QStringLiteral(</highlight><highlight class="stringliteral">&quot;MoveZoomDown&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setText(i18n(</highlight><highlight class="stringliteral">&quot;Move<sp/>Zoomed<sp/>Area<sp/>Downwards&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(a,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::moveZoomDown);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>these<sp/>two<sp/>actions<sp/>don&apos;t<sp/>belong<sp/>into<sp/>the<sp/>effect.<sp/>They<sp/>need<sp/>to<sp/>be<sp/>moved<sp/>into<sp/>KWin<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setObjectName(QStringLiteral(</highlight><highlight class="stringliteral">&quot;MoveMouseToFocus&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setText(i18n(</highlight><highlight class="stringliteral">&quot;Move<sp/>Mouse<sp/>to<sp/>Focus&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_F5));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_F5));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(a,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::moveMouseToFocus);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setObjectName(QStringLiteral(</highlight><highlight class="stringliteral">&quot;MoveMouseToCenter&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setText(i18n(</highlight><highlight class="stringliteral">&quot;Move<sp/>Mouse<sp/>to<sp/>Center&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setDefaultShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_F6));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(a,<sp/>QList&lt;QKeySequence&gt;()<sp/>&lt;&lt;<sp/>(Qt::META<sp/>|<sp/>Qt::Key_F6));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(a,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::moveMouseToCenter);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>m_timeline.setDuration(350);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>m_timeline.setFrameRange(0,<sp/>100);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;m_timeline,<sp/>&amp;QTimeLine::frameChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::timelineFrameChanged);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1af265803a52b130d505ab9f8f66a30eb0" kindref="member">EffectsHandler::windowAdded</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::slotWindowAdded);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1a2aaa46342fafd4d0b09fb7497a0a7401" kindref="member">EffectsHandler::screenRemoved</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::slotScreenRemoved);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Decide<sp/>what<sp/>to<sp/>do<sp/>about<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;waylandDisplay())<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>Wayland,<sp/>the<sp/>accessibility<sp/>integration<sp/>can<sp/>cause<sp/>KWin<sp/>to<sp/>hang</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_accessibilityIntegration<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_accessibility_integration" kindref="compound">ZoomAccessibilityIntegration</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(m_accessibilityIntegration,<sp/>&amp;<ref refid="class_k_win_1_1_zoom_accessibility_integration_1a32b6d6fa085734b26bda085c9fe5b6e4" kindref="member">ZoomAccessibilityIntegration::focusPointChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::moveFocus);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>windows<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;stackingOrder();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w<sp/>:<sp/>windows)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slotWindowAdded(w);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_zoom_effect_1a46275077ebc937fecae4d3d5a62da1b3" kindref="member">reconfigure</ref>(<ref refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" kindref="member">ReconfigureAll</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialZoom<sp/>=<sp/>ZoomConfig::initialZoom();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialZoom<sp/>&gt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zoomTo(initialZoom);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_k_win_1_1_zoom_effect_1a0978451e26dbd5985a08710de5a8a85b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_zoom_effect_1a0978451e26dbd5985a08710de5a8a85b" kindref="member">ZoomEffect::~ZoomEffect</ref>()</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>switch<sp/>off<sp/>and<sp/>free<sp/>resources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>showCursor();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>zoom<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ZoomConfig::setInitialZoom(m_targetZoom);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>ZoomConfig::self()-&gt;save();</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_k_win_1_1_zoom_effect_1acf7e1d8dae05def02f5c22e23fd3cf0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1acf7e1d8dae05def02f5c22e23fd3cf0f" kindref="member">ZoomEffect::isFocusTrackingEnabled</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="139"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_accessibilityIntegration<sp/>&amp;&amp;<sp/>m_accessibilityIntegration-&gt;isFocusTrackingEnabled();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="class_k_win_1_1_zoom_effect_1aedee856dc0432f398136ddd5c9e80975" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1aedee856dc0432f398136ddd5c9e80975" kindref="member">ZoomEffect::isTextCaretTrackingEnabled</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="148"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_accessibilityIntegration<sp/>&amp;&amp;<sp/>m_accessibilityIntegration-&gt;isTextCaretTrackingEnabled();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref><sp/>*ZoomEffect::ensureCursorTexture()</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_cursorTexture<sp/>||<sp/>m_cursorTextureDirty)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursorTexture.reset();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursorTextureDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cursor<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;cursorImage();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cursor.image().isNull())<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursorTexture<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1abfb1321ce70899df263d8c8db90a2d59" kindref="member">GLTexture::upload</ref>(cursor.image());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_cursorTexture)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursorTexture-&gt;setWrapMode(GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cursorTexture.get();</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::markCursorTextureDirty()</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cursorTextureDirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::showCursor()</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_isMouseHidden)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1aa92530fc11fbd4b12f8d3791b1ffb92c" kindref="member">EffectsHandler::cursorShapeChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::markCursorTextureDirty);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>the<sp/>previously<sp/>hidden<sp/>mouse-pointer<sp/>again<sp/>and<sp/>free<sp/>the<sp/>loaded<sp/>texture/picture.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a78167bfe2f963caba0142ac5842618a0" kindref="member">showCursor</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursorTexture.reset();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_isMouseHidden<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::hideCursor()</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_mouseTracking<sp/>==<sp/>MouseTrackingProportional<sp/>&amp;&amp;<sp/>m_mousePointer<sp/>==<sp/>MousePointerKeep)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>replace<sp/>the<sp/>actual<sp/>cursor<sp/>by<sp/>a<sp/>static<sp/>image<sp/>for<sp/>no<sp/>reason.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_isMouseHidden)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>load<sp/>the<sp/>cursor-theme<sp/>into<sp/>a<sp/>OpenGL<sp/>texture<sp/>and<sp/>if<sp/>successful<sp/>then<sp/>hide<sp/>the<sp/>mouse-pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLTexture<sp/>*texture<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1aa8a3368f17c08de910a182b1666bf610" kindref="member">isOpenGLCompositing</ref>())<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture<sp/>=<sp/>ensureCursorTexture();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(texture)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af1683f65536d052a2a3693ce62f4894b" kindref="member">hideCursor</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1aa92530fc11fbd4b12f8d3791b1ffb92c" kindref="member">EffectsHandler::cursorShapeChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::markCursorTextureDirty);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_isMouseHidden<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Qt::KeyboardModifiers<sp/>stringToKeyboardModifiers(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>parts<sp/>=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.split(QLatin1Char(</highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parts.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Qt::KeyboardModifiers();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>Qt::KeyboardModifiers<sp/>modifiers;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;part<sp/>:<sp/>parts)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;Meta&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiers<sp/>|=<sp/>Qt::MetaModifier;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;Ctrl&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiers<sp/>|=<sp/>Qt::ControlModifier;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;Alt&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiers<sp/>|=<sp/>Qt::AltModifier;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;Shift&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiers<sp/>|=<sp/>Qt::ShiftModifier;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>modifiers;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_k_win_1_1_zoom_effect_1a46275077ebc937fecae4d3d5a62da1b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1a46275077ebc937fecae4d3d5a62da1b3" kindref="member">ZoomEffect::reconfigure</ref>(ReconfigureFlags)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>ZoomConfig::self()-&gt;read();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>zoom-in<sp/>and<sp/>zoom-out<sp/>change<sp/>the<sp/>zoom<sp/>by<sp/>the<sp/>defined<sp/>zoom-factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>m_zoomFactor<sp/>=<sp/>std::max(0.1,<sp/>ZoomConfig::zoomFactor());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pixelGridZoom<sp/>=<sp/>ZoomConfig::pixelGridZoom();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Visibility<sp/>of<sp/>the<sp/>mouse-pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mousePointer<sp/>=<sp/>MousePointerType(ZoomConfig::mousePointer());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>moving<sp/>of<sp/>the<sp/>mouse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mouseTracking<sp/>=<sp/>MouseTrackingType(ZoomConfig::mouseTracking());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_accessibilityIntegration)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>tracking<sp/>of<sp/>the<sp/>focused<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_accessibilityIntegration-&gt;setFocusTrackingEnabled(ZoomConfig::enableFocusTracking());</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>tracking<sp/>of<sp/>the<sp/>text<sp/>caret.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_accessibilityIntegration-&gt;setTextCaretTrackingEnabled(ZoomConfig::enableTextCaretTracking());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>time<sp/>in<sp/>milliseconds<sp/>to<sp/>wait<sp/>before<sp/>a<sp/>focus-event<sp/>takes<sp/>away<sp/>a<sp/>mouse-move.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>m_focusDelay<sp/>=<sp/>std::max(uint(0),<sp/>ZoomConfig::focusDelay());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>factor<sp/>the<sp/>zoom-area<sp/>will<sp/>be<sp/>moved<sp/>on<sp/>touching<sp/>an<sp/>edge<sp/>on<sp/>push-mode<sp/>or<sp/>using<sp/>the<sp/>navigation<sp/>KAction&apos;s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>m_moveFactor<sp/>=<sp/>std::max(0.1,<sp/>ZoomConfig::moveFactor());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Qt::KeyboardModifiers<sp/>pointerAxisModifiers<sp/>=<sp/>stringToKeyboardModifiers(ZoomConfig::pointerAxisGestureModifiers());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_axisModifiers<sp/>!=<sp/>pointerAxisModifiers)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zoomInAxisAction.reset();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zoomOutAxisAction.reset();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_axisModifiers<sp/>=<sp/>pointerAxisModifiers;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointerAxisModifiers)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zoomInAxisAction<sp/>=<sp/>std::make_unique&lt;QAction&gt;();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(m_zoomInAxisAction.get(),<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::zoomIn);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;registerAxisShortcut(pointerAxisModifiers,<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0a2f9a4157919ddb043621f6f3990b5056" kindref="member">PointerAxisUp</ref>,<sp/>m_zoomInAxisAction.get());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zoomOutAxisAction<sp/>=<sp/>std::make_unique&lt;QAction&gt;();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(m_zoomOutAxisAction.get(),<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::zoomOut);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;registerAxisShortcut(pointerAxisModifiers,<sp/><ref refid="namespace_k_win_1a0b8440dc0ffe9aa219e0c0e5fa1137a0a9e2afc22dd1bb0575f7b1ba7282f8e52" kindref="member">PointerAxisDown</ref>,<sp/>m_zoomOutAxisAction.get());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="class_k_win_1_1_zoom_effect_1a2e3f1a179e7461e1f32e96ca6310f29e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1a2e3f1a179e7461e1f32e96ca6310f29e" kindref="member">ZoomEffect::prePaintScreen</ref>(<ref refid="class_k_win_1_1_screen_pre_paint_data" kindref="compound">ScreenPrePaintData</ref><sp/>&amp;data,<sp/>std::chrono::milliseconds<sp/>presentTime)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="group__kwineffects_1ga4d5154f78b8ef3ee05dd1544cd13866a" kindref="member">mask</ref><sp/>|=<sp/><ref refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" kindref="member">PAINT_SCREEN_TRANSFORMED</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>!=<sp/>m_targetZoom)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_lastPresentTime.count())<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>(presentTime<sp/>-<sp/>m_lastPresentTime).count();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastPresentTime<sp/>=<sp/>presentTime;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomDist<sp/>=<sp/>std::abs(m_targetZoom<sp/>-<sp/>m_sourceZoom);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_targetZoom<sp/>&gt;<sp/>m_zoom)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zoom<sp/>=<sp/>std::min(m_zoom<sp/>+<sp/>((zoomDist<sp/>*<sp/>time)<sp/>/<sp/><ref refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" kindref="member">animationTime</ref>(std::chrono::milliseconds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(150<sp/>*<sp/>m_zoomFactor)))),<sp/>m_targetZoom);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_zoom<sp/>=<sp/>std::max(m_zoom<sp/>-<sp/>((zoomDist<sp/>*<sp/>time)<sp/>/<sp/><ref refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" kindref="member">animationTime</ref>(std::chrono::milliseconds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(150<sp/>*<sp/>m_zoomFactor)))),<sp/>m_targetZoom);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showCursor();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hideCursor();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;prePaintScreen(data,<sp/>presentTime);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">ZoomEffect::OffscreenData<sp/>*ZoomEffect::ensureOffscreenData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;renderTarget,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref><sp/>&amp;viewport,<sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*screen)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>nativeSize<sp/>=<sp/>renderTarget.<ref refid="class_k_win_1_1_render_target_1a222c96e4f8ced37a35673c60f2ba88bd" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_offscreen_data" kindref="compound">OffscreenData</ref><sp/>&amp;data<sp/>=<sp/>m_offscreenData[screen];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>data.viewport<sp/>=<sp/>viewport.<ref refid="class_k_win_1_1_render_viewport_1acfce0ac88a0af475daceb3a87544d464" kindref="member">renderRect</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>data.color<sp/>=<sp/>renderTarget.<ref refid="class_k_win_1_1_render_target_1abaa872511189a9e21f351c6a423a362d" kindref="member">colorDescription</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLenum<sp/>textureFormat<sp/>=<sp/>renderTarget.<ref refid="class_k_win_1_1_render_target_1abaa872511189a9e21f351c6a423a362d" kindref="member">colorDescription</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref><sp/>?<sp/>GL_RGBA8<sp/>:<sp/>GL_RGBA16F;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.texture<sp/>||<sp/>data.texture-&gt;size()<sp/>!=<sp/>nativeSize<sp/>||<sp/>data.texture-&gt;internalFormat()<sp/>!=<sp/>textureFormat)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.texture<sp/>=<sp/><ref refid="class_k_win_1_1_g_l_texture_1a22b5bb33ada7c4b53f73c57f5405289f" kindref="member">GLTexture::allocate</ref>(textureFormat,<sp/>nativeSize);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.texture)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.texture-&gt;setFilter(GL_LINEAR);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.texture-&gt;setWrapMode(GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.framebuffer<sp/>=<sp/>std::make_unique&lt;GLFramebuffer&gt;(data.texture.get());</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>data.texture-&gt;setContentTransform(renderTarget.<ref refid="class_k_win_1_1_render_target_1ac0f2e6613b95f7d4e2cc29118ae8bb4a" kindref="member">transform</ref>());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;data;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref><sp/>*ZoomEffect::shaderForZoom(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zoom)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zoom<sp/>&lt;<sp/>m_pixelGridZoom)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1a50a3b6c752c3165cb35f42c1810782a6" kindref="member">shader</ref>(<ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184a85736ea5bc8da56c443818dfff6ef91f" kindref="member">ShaderTrait::MapTexture</ref><sp/>|<sp/><ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184aa8f7aca3a49bf1645d089a470202154e" kindref="member">ShaderTrait::TransformColorspace</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pixelGridShader)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pixelGridShader<sp/>=<sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1a3a336f77b008451717f7dbcfd3081ab0" kindref="member">generateShaderFromFile</ref>(<ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184a85736ea5bc8da56c443818dfff6ef91f" kindref="member">ShaderTrait::MapTexture</ref>,<sp/>QString(),<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;:/effects/zoom/shaders/pixelgrid.frag&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pixelGridShader.get();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="class_k_win_1_1_zoom_effect_1a27833b5e244cd4a5c3137a128fed48c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1a27833b5e244cd4a5c3137a128fed48c9" kindref="member">ZoomEffect::paintScreen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>&amp;renderTarget,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref><sp/>&amp;viewport,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRegion<sp/>&amp;region,<sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*screen)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>OffscreenData<sp/>*offscreenData<sp/>=<sp/>ensureOffscreenData(renderTarget,<sp/>viewport,<sp/>screen);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!offscreenData)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>the<sp/>scene<sp/>in<sp/>an<sp/>offscreen<sp/>texture<sp/>and<sp/>then<sp/>upscale<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_target" kindref="compound">RenderTarget</ref><sp/>offscreenRenderTarget(offscreenData-&gt;framebuffer.get(),<sp/>renderTarget.<ref refid="class_k_win_1_1_render_target_1abaa872511189a9e21f351c6a423a362d" kindref="member">colorDescription</ref>());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_viewport" kindref="compound">RenderViewport</ref><sp/>offscreenViewport(viewport.<ref refid="class_k_win_1_1_render_viewport_1acfce0ac88a0af475daceb3a87544d464" kindref="member">renderRect</ref>(),<sp/>viewport.<ref refid="class_k_win_1_1_render_viewport_1aa06db1277771d5021b3e7be43de747f3" kindref="member">scale</ref>(),<sp/>offscreenRenderTarget);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a7eb3049da73a065dcf8ff137fd9b5e3f" kindref="member">GLFramebuffer::pushFramebuffer</ref>(offscreenData-&gt;framebuffer.get());</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;paintScreen(offscreenRenderTarget,<sp/>offscreenViewport,<sp/>mask,<sp/>region,<sp/>screen);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_framebuffer_1a3f7265ef927c8b0ab82728c5118c7bed" kindref="member">GLFramebuffer::popFramebuffer</ref>();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>screenSize<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;virtualScreenSize();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>viewport.<ref refid="class_k_win_1_1_render_viewport_1aa06db1277771d5021b3e7be43de747f3" kindref="member">scale</ref>();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mouse-tracking<sp/>allows<sp/>navigation<sp/>of<sp/>the<sp/>zoom-area<sp/>using<sp/>the<sp/>mouse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>xTranslation<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>yTranslation<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m_mouseTracking)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MouseTrackingProportional:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTranslation<sp/>=<sp/>-int(m_cursorPoint.x()<sp/>*<sp/>(m_zoom<sp/>-<sp/>1.0));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yTranslation<sp/>=<sp/>-int(m_cursorPoint.y()<sp/>*<sp/>(m_zoom<sp/>-<sp/>1.0));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prevPoint<sp/>=<sp/>m_cursorPoint;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MouseTrackingCentered:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prevPoint<sp/>=<sp/>m_cursorPoint;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MouseTrackingDisabled:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTranslation<sp/>=<sp/>std::min(0,<sp/>std::max(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(screenSize.width()<sp/>-<sp/>screenSize.width()<sp/>*<sp/>m_zoom),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(screenSize.width()<sp/>/<sp/>2<sp/>-<sp/>m_prevPoint.x()<sp/>*<sp/>m_zoom)));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yTranslation<sp/>=<sp/>std::min(0,<sp/>std::max(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(screenSize.height()<sp/>-<sp/>screenSize.height()<sp/>*<sp/>m_zoom),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(screenSize.height()<sp/>/<sp/>2<sp/>-<sp/>m_prevPoint.y()<sp/>*<sp/>m_zoom)));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MouseTrackingPush:<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>touching<sp/>an<sp/>edge<sp/>of<sp/>the<sp/>screen<sp/>moves<sp/>the<sp/>zoom-area<sp/>in<sp/>that<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>m_cursorPoint.x()<sp/>*<sp/>m_zoom<sp/>-<sp/>m_prevPoint.x()<sp/>*<sp/>(m_zoom<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>m_cursorPoint.y()<sp/>*<sp/>m_zoom<sp/>-<sp/>m_prevPoint.y()<sp/>*<sp/>(m_zoom<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threshold<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>currScreen<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;screenAt(QPoint(x,<sp/>y))-&gt;geometry();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bounds<sp/>of<sp/>the<sp/>screen<sp/>the<sp/>cursor&apos;s<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screenTop<sp/>=<sp/>currScreen.top();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screenLeft<sp/>=<sp/>currScreen.left();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screenRight<sp/>=<sp/>currScreen.right();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screenBottom<sp/>=<sp/>currScreen.bottom();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screenCenterX<sp/>=<sp/>currScreen.center().x();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screenCenterY<sp/>=<sp/>currScreen.center().y();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>figure<sp/>out<sp/>whether<sp/>we<sp/>have<sp/>adjacent<sp/>displays<sp/>in<sp/>all<sp/>4<sp/>directions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>pan<sp/>within<sp/>the<sp/>screen<sp/>in<sp/>directions<sp/>where<sp/>there<sp/>are<sp/>no<sp/>adjacent<sp/>screens.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adjacentLeft<sp/>=<sp/>screenExistsAt(QPoint(screenLeft<sp/>-<sp/>1,<sp/>screenCenterY));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adjacentRight<sp/>=<sp/>screenExistsAt(QPoint(screenRight<sp/>+<sp/>1,<sp/>screenCenterY));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adjacentTop<sp/>=<sp/>screenExistsAt(QPoint(screenCenterX,<sp/>screenTop<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adjacentBottom<sp/>=<sp/>screenExistsAt(QPoint(screenCenterX,<sp/>screenBottom<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_xMove<sp/>=<sp/>m_yMove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>screenLeft<sp/>+<sp/>threshold<sp/>&amp;&amp;<sp/>!adjacentLeft)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_xMove<sp/>=<sp/>(x<sp/>-<sp/>threshold<sp/>-<sp/>screenLeft)<sp/>/<sp/>m_zoom;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>screenRight<sp/>-<sp/>threshold<sp/>&amp;&amp;<sp/>!adjacentRight)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_xMove<sp/>=<sp/>(x<sp/>+<sp/>threshold<sp/>-<sp/>screenRight)<sp/>/<sp/>m_zoom;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>screenTop<sp/>+<sp/>threshold<sp/>&amp;&amp;<sp/>!adjacentTop)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_yMove<sp/>=<sp/>(y<sp/>-<sp/>threshold<sp/>-<sp/>screenTop)<sp/>/<sp/>m_zoom;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>screenBottom<sp/>-<sp/>threshold<sp/>&amp;&amp;<sp/>!adjacentBottom)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_yMove<sp/>=<sp/>(y<sp/>+<sp/>threshold<sp/>-<sp/>screenBottom)<sp/>/<sp/>m_zoom;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_xMove)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prevPoint.setX(m_prevPoint.x()<sp/>+<sp/>m_xMove);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_yMove)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prevPoint.setY(m_prevPoint.y()<sp/>+<sp/>m_yMove);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTranslation<sp/>=<sp/>-int(m_prevPoint.x()<sp/>*<sp/>(m_zoom<sp/>-<sp/>1.0));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yTranslation<sp/>=<sp/>-int(m_prevPoint.y()<sp/>*<sp/>(m_zoom<sp/>-<sp/>1.0));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>focusPoint<sp/>if<sp/>focus<sp/>tracking<sp/>is<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_zoom_effect_1acf7e1d8dae05def02f5c22e23fd3cf0f" kindref="member">isFocusTrackingEnabled</ref>()<sp/>||<sp/><ref refid="class_k_win_1_1_zoom_effect_1aedee856dc0432f398136ddd5c9e80975" kindref="member">isTextCaretTrackingEnabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>acceptFocus<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_mouseTracking<sp/>!=<sp/>MouseTrackingDisabled<sp/>&amp;&amp;<sp/>m_focusDelay<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>some<sp/>time<sp/>for<sp/>the<sp/>mouse<sp/>before<sp/>doing<sp/>the<sp/>switch.<sp/>This<sp/>serves<sp/>as<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>prevent<sp/>the<sp/>focus<sp/>from<sp/>jumping<sp/>around<sp/>to<sp/>much<sp/>while<sp/>working<sp/>with<sp/>the<sp/>mouse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msecs<sp/>=<sp/>m_lastMouseEvent.msecsTo(m_lastFocusEvent);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptFocus<sp/>=<sp/>msecs<sp/>&gt;<sp/>m_focusDelay;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acceptFocus)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTranslation<sp/>=<sp/>-int(m_focusPoint.x()<sp/>*<sp/>(m_zoom<sp/>-<sp/>1.0));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yTranslation<sp/>=<sp/>-int(m_focusPoint.y()<sp/>*<sp/>(m_zoom<sp/>-<sp/>1.0));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prevPoint<sp/>=<sp/>m_focusPoint;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>transformed<sp/>offscreen<sp/>texture.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>glClearColor(0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_shader" kindref="compound">GLShader</ref><sp/>*shader<sp/>=<sp/>shaderForZoom(m_zoom);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1aedd0dd423df032415b439a08c6f70fed" kindref="member">pushShader</ref>(shader);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[screen,<sp/>offscreen]<sp/>:<sp/>m_offscreenData)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>matrix;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix.translate(xTranslation<sp/>*<sp/>scale,<sp/>yTranslation<sp/>*<sp/>scale);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix.scale(m_zoom,<sp/>m_zoom);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix.translate(offscreen.viewport.x()<sp/>*<sp/>scale,<sp/>offscreen.viewport.y()<sp/>*<sp/>scale);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;<ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a45f966892aa9712b434b27ea5513b63a" kindref="member">GLShader::Mat4Uniform::ModelViewProjectionMatrix</ref>,<sp/>viewport.<ref refid="class_k_win_1_1_render_viewport_1a57942b073324499fae7848baf801d9a5" kindref="member">projectionMatrix</ref>()<sp/>*<sp/>matrix);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;<ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617a5f05f274b3c333df5ba14546a742fc2c" kindref="member">GLShader::IntUniform::TextureWidth</ref>,<sp/>offscreen.texture-&gt;width());</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;<ref refid="class_k_win_1_1_g_l_shader_1af1856d3aa2773faf2a63a23cea07db9a" kindref="member">setUniform</ref>(<ref refid="class_k_win_1_1_g_l_shader_1a722159dac6e0dc4c4dab9a7efaa59617ab5bf654ae145a164cb6adc6195ca1e51" kindref="member">GLShader::IntUniform::TextureHeight</ref>,<sp/>offscreen.texture-&gt;height());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;<ref refid="class_k_win_1_1_g_l_shader_1a2b37e53875c769255092205692d85ea6" kindref="member">setColorspaceUniforms</ref>(offscreen.color,<sp/>renderTarget.<ref refid="class_k_win_1_1_render_target_1abaa872511189a9e21f351c6a423a362d" kindref="member">colorDescription</ref>(),<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9a09ab3095e9b2d0a7773cc3d2f0f879cd" kindref="member">RenderingIntent::Perceptual</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offscreen.texture-&gt;render(offscreen.viewport.size()<sp/>*<sp/>scale);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1a51d84e1d8c0d651b4968afdb3fba96c6" kindref="member">popShader</ref>();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_mousePointer<sp/>!=<sp/>MousePointerHide)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>mouse-texture<sp/>at<sp/>the<sp/>position<sp/>matching<sp/>to<sp/>zoomed-in<sp/>image<sp/>of<sp/>the<sp/>desktop.<sp/>Hiding<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>mouse-cursor<sp/>and<sp/>drawing<sp/>our<sp/>own<sp/>fake<sp/>mouse-cursor<sp/>is<sp/>needed<sp/>to<sp/>be<sp/>able<sp/>to<sp/>scale<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mouse-cursor<sp/>up<sp/>and<sp/>to<sp/>re-position<sp/>those<sp/>mouse-cursor<sp/>to<sp/>match<sp/>to<sp/>the<sp/>chosen<sp/>zoom-level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref><sp/>*cursorTexture<sp/>=<sp/>ensureCursorTexture();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursorTexture)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cursor<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;cursorImage();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSizeF<sp/>cursorSize<sp/>=<sp/>QSizeF(cursor.image().size())<sp/>/<sp/>cursor.image().devicePixelRatio();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_mousePointer<sp/>==<sp/>MousePointerScale)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursorSize<sp/>*=<sp/>m_zoom;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>p<sp/>=<sp/>(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;cursorPos()<sp/>-<sp/>cursor.hotSpot())<sp/>*<sp/>m_zoom<sp/>+<sp/>QPoint(xTranslation,<sp/>yTranslation);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnable(GL_BLEND);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBlendFunc(GL_SRC_ALPHA,<sp/>GL_ONE_MINUS_SRC_ALPHA);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1aedd0dd423df032415b439a08c6f70fed" kindref="member">pushShader</ref>(<ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184a85736ea5bc8da56c443818dfff6ef91f" kindref="member">ShaderTrait::MapTexture</ref><sp/>|<sp/><ref refid="namespace_k_win_1a5ea35b6d898ef92e1904522c66efa184aa8f7aca3a49bf1645d089a470202154e" kindref="member">ShaderTrait::TransformColorspace</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="class_k_win_1_1_g_l_shader_1a2b37e53875c769255092205692d85ea6" kindref="member">setColorspaceUniforms</ref>(<ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>,<sp/>renderTarget.<ref refid="class_k_win_1_1_render_target_1abaa872511189a9e21f351c6a423a362d" kindref="member">colorDescription</ref>(),<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9a09ab3095e9b2d0a7773cc3d2f0f879cd" kindref="member">RenderingIntent::Perceptual</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>mvp<sp/>=<sp/>viewport.<ref refid="class_k_win_1_1_render_viewport_1a57942b073324499fae7848baf801d9a5" kindref="member">projectionMatrix</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvp.translate(p.x()<sp/>*<sp/>scale,<sp/>p.y()<sp/>*<sp/>scale);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;setUniform(<ref refid="class_k_win_1_1_g_l_shader_1a443460f633e0d74e8303f45aefaa3691a45f966892aa9712b434b27ea5513b63a" kindref="member">GLShader::Mat4Uniform::ModelViewProjectionMatrix</ref>,<sp/>mvp);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursorTexture-&gt;<ref refid="class_k_win_1_1_g_l_texture_1ae171f72388c70d1e30af3da712def893" kindref="member">render</ref>(cursorSize<sp/>*<sp/>scale);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_shader_manager_1aaf9c40a0a4f2e72ad6e30fa967dd073c" kindref="member">ShaderManager::instance</ref>()-&gt;<ref refid="class_k_win_1_1_shader_manager_1a51d84e1d8c0d651b4968afdb3fba96c6" kindref="member">popShader</ref>();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDisable(GL_BLEND);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="class_k_win_1_1_zoom_effect_1ac7baeffd5ac3747d482dd011bd3dfc32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1ac7baeffd5ac3747d482dd011bd3dfc32" kindref="member">ZoomEffect::postPaintScreen</ref>()</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>==<sp/>m_targetZoom)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastPresentTime<sp/>=<sp/>std::chrono::milliseconds::zero();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>==<sp/>1.0<sp/>||<sp/>m_zoom<sp/>!=<sp/>m_targetZoom)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>animation<sp/>is<sp/>running<sp/>or<sp/>the<sp/>zoom<sp/>effect<sp/>has<sp/>stopped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;addRepaintFull();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;postPaintScreen();</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::zoomIn()</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>zoomTo(-1.0);</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::zoomTo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sourceZoom<sp/>=<sp/>m_zoom;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setTargetZoom(m_targetZoom<sp/>*<sp/>m_zoomFactor);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setTargetZoom(to);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cursorPoint<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af20aeb5fb6f87bf9bbaa52a97fd80478" kindref="member">cursorPos</ref>().toPoint();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_mouseTracking<sp/>==<sp/>MouseTrackingDisabled)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prevPoint<sp/>=<sp/>m_cursorPoint;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" kindref="member">addRepaintFull</ref>();</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::zoomOut()</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sourceZoom<sp/>=<sp/>m_zoom;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>setTargetZoom(m_targetZoom<sp/>/<sp/>m_zoomFactor);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((m_zoomFactor<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>m_targetZoom<sp/>&lt;<sp/>1.01)<sp/>||<sp/>(m_zoomFactor<sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>m_targetZoom<sp/>&gt;<sp/>0.99))<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setTargetZoom(1);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_mouseTracking<sp/>==<sp/>MouseTrackingDisabled)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prevPoint<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af20aeb5fb6f87bf9bbaa52a97fd80478" kindref="member">cursorPos</ref>().toPoint();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" kindref="member">addRepaintFull</ref>();</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::actualSize()</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sourceZoom<sp/>=<sp/>m_zoom;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>setTargetZoom(1);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" kindref="member">addRepaintFull</ref>();</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::timelineFrameChanged(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>frame<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>screenSize<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1aebb65bfab7dca8095ded3906b1bca282" kindref="member">virtualScreenSize</ref>();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>m_prevPoint.setX(std::max(0,<sp/>std::min(screenSize.width(),<sp/>m_prevPoint.x()<sp/>+<sp/>m_xMove)));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>m_prevPoint.setY(std::max(0,<sp/>std::min(screenSize.height(),<sp/>m_prevPoint.y()<sp/>+<sp/>m_yMove)));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cursorPoint<sp/>=<sp/>m_prevPoint;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" kindref="member">addRepaintFull</ref>();</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::moveZoom(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_timeline.state()<sp/>==<sp/>QTimeLine::Running)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_timeline.stop();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>screenSize<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1aebb65bfab7dca8095ded3906b1bca282" kindref="member">virtualScreenSize</ref>();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_xMove<sp/>=<sp/>-std::max(1.0,<sp/>screenSize.width()<sp/>/<sp/>m_zoom<sp/>/<sp/>m_moveFactor);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_xMove<sp/>=<sp/>std::max(1.0,<sp/>screenSize.width()<sp/>/<sp/>m_zoom<sp/>/<sp/>m_moveFactor);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_xMove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_yMove<sp/>=<sp/>-std::max(1.0,<sp/>screenSize.height()<sp/>/<sp/>m_zoom<sp/>/<sp/>m_moveFactor);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_yMove<sp/>=<sp/>std::max(1.0,<sp/>screenSize.height()<sp/>/<sp/>m_zoom<sp/>/<sp/>m_moveFactor);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_yMove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>m_timeline.start();</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::moveZoomLeft()</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>moveZoom(-1,<sp/>0);</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::moveZoomRight()</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>moveZoom(1,<sp/>0);</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::moveZoomUp()</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>moveZoom(0,<sp/>-1);</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::moveZoomDown()</highlight></codeline>
<codeline lineno="583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>moveZoom(0,<sp/>1);</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::moveMouseToFocus()</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a73aa722f6c5ffec5e50555109dee09ab" kindref="member">activeWindow</ref>();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!window)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>center<sp/>=<sp/>window-&gt;<ref refid="class_k_win_1_1_effect_window_1afb22c0e0ccd57d4ab03cf2c2a21d6196" kindref="member">frameGeometry</ref>().center();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>QCursor::setPos(center.x(),<sp/>center.y());</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::moveMouseToCenter()</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>r<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1aebd988f34fb170c9b1c5a6752ee695c1" kindref="member">activeScreen</ref>()-&gt;<ref refid="class_k_win_1_1_output_1acf46dad2b0990591fdebe45b4877ab16" kindref="member">geometry</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>QCursor::setPos(r.x()<sp/>+<sp/>r.width()<sp/>/<sp/>2,<sp/>r.y()<sp/>+<sp/>r.height()<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::slotMouseChanged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;old)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cursorPoint<sp/>=<sp/>pos.toPoint();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>old)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_lastMouseEvent<sp/>=<sp/>QTime::currentTime();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" kindref="member">addRepaintFull</ref>();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::slotWindowAdded(<ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref><sp/>*w)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(w,<sp/>&amp;<ref refid="class_k_win_1_1_effect_window_1a14d82213bbcf4280fc5a1061858370ba" kindref="member">EffectWindow::windowDamaged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::slotWindowDamaged);</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::slotWindowDamaged()</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>!=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" kindref="member">addRepaintFull</ref>();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::slotScreenRemoved(<ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*screen)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_offscreenData.find(screen);<sp/>it<sp/>!=<sp/>m_offscreenData.end())<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1a5374d885eb19ec21dece4326968da3d4" kindref="member">makeOpenGLContextCurrent</ref>();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_offscreenData.erase(it);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::moveFocus(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;point)</highlight></codeline>
<codeline lineno="636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_zoom<sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>m_focusPoint<sp/>=<sp/>point;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lastFocusEvent<sp/>=<sp/>QTime::currentTime();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;<ref refid="class_k_win_1_1_effects_handler_1af3f4b9a57fd81eabe5c19d6e9e4a76c6" kindref="member">addRepaintFull</ref>();</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="class_k_win_1_1_zoom_effect_1aaa2064a62ae28697504e327cf524097b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1aaa2064a62ae28697504e327cf524097b" kindref="member">ZoomEffect::isActive</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="646"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_zoom<sp/>!=<sp/>1.0<sp/>||<sp/>m_zoom<sp/>!=<sp/>m_targetZoom;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="class_k_win_1_1_zoom_effect_1aa9223deed59ea567bf25298820600f9d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1aa9223deed59ea567bf25298820600f9d" kindref="member">ZoomEffect::requestedEffectChainPosition</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="651"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="class_k_win_1_1_zoom_effect_1af9230dc12e1b5f5b999c513dc084b17d" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_zoom_effect_1af9230dc12e1b5f5b999c513dc084b17d" kindref="member">ZoomEffect::configuredZoomFactor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="656"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_zoomFactor;</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="class_k_win_1_1_zoom_effect_1a7ad536ceecd6a6cd87a6401fb06771c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1a7ad536ceecd6a6cd87a6401fb06771c9" kindref="member">ZoomEffect::configuredMousePointer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="661"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mousePointer;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="class_k_win_1_1_zoom_effect_1a871bfb3b2524b1f814ebb6e576b4117f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1a871bfb3b2524b1f814ebb6e576b4117f" kindref="member">ZoomEffect::configuredMouseTracking</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="666"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mouseTracking;</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="class_k_win_1_1_zoom_effect_1a59e8a59dcfeefc7232301b5de4a696f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_zoom_effect_1a59e8a59dcfeefc7232301b5de4a696f8" kindref="member">ZoomEffect::configuredFocusDelay</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="671"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_focusDelay;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="class_k_win_1_1_zoom_effect_1a2147e58da84aae9a880f5a15dd80a0dc" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_zoom_effect_1a2147e58da84aae9a880f5a15dd80a0dc" kindref="member">ZoomEffect::configuredMoveFactor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="676"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_moveFactor;</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680" refid="class_k_win_1_1_zoom_effect_1a10ca6f3fbe90e2b279e0023d9c78788c" refkind="member"><highlight class="normal">qreal<sp/><ref refid="class_k_win_1_1_zoom_effect_1a5113105e30833ca959334950718b7b34" kindref="member">ZoomEffect::targetZoom</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="681"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_targetZoom;</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ZoomEffect::screenExistsAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="686"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref><sp/>*output<sp/>=<sp/><ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>-&gt;screenAt(point);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output<sp/>&amp;&amp;<sp/>output-&gt;<ref refid="class_k_win_1_1_output_1acf46dad2b0990591fdebe45b4877ab16" kindref="member">geometry</ref>().contains(point);</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomEffect::setTargetZoom(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>std::min(value,<sp/>100.0);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newActive<sp/>=<sp/>value<sp/>!=<sp/>1.0;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>oldActive<sp/>=<sp/>m_targetZoom<sp/>!=<sp/>1.0;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newActive<sp/>&amp;&amp;<sp/>!oldActive)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1ace7df1c309d2c4a64e324d6a52c680ca" kindref="member">EffectsHandler::mouseChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::slotMouseChanged);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newActive<sp/>&amp;&amp;<sp/>oldActive)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(<ref refid="namespace_k_win_1ad780e509c41727e08e1cc641d4cad7b5" kindref="member">effects</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_effects_handler_1ace7df1c309d2c4a64e324d6a52c680ca" kindref="member">EffectsHandler::mouseChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;ZoomEffect::slotMouseChanged);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>m_targetZoom<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_zoom.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/plugins/zoom/zoom.cpp"/>
  </compounddef>
</doxygen>
