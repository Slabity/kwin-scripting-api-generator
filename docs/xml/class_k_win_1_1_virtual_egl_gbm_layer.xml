<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_virtual_egl_gbm_layer" kind="class" language="C++" prot="public">
    <compoundname>KWin::VirtualEglGbmLayer</compoundname>
    <basecompoundref refid="class_k_win_1_1_drm_output_layer" prot="public" virt="non-virtual">KWin::DrmOutputLayer</basecompoundref>
    <includes refid="drm__virtual__egl__layer_8h" local="no">drm_virtual_egl_layer.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_gbm_layer_1ac7e05570ed288eb35271b6be9c0a99e1" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_graphics_buffer_ref" kindref="compound">GraphicsBufferRef</ref></type>
        <definition>GraphicsBufferRef KWin::VirtualEglGbmLayer::m_scanoutBuffer</definition>
        <argsstring></argsstring>
        <name>m_scanoutBuffer</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::m_scanoutBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="51" column="23" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_gbm_layer_1ab9b02a272c2fc84a9a4c3e809e3ec80a" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>ColorDescription KWin::VirtualEglGbmLayer::m_scanoutColor</definition>
        <argsstring></argsstring>
        <name>m_scanoutColor</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::m_scanoutColor</qualifiedname>
        <initializer>= <ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="52" column="22" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_gbm_layer_1a319381f9fca8c2922381e027cf582346" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_damage_journal" kindref="compound">DamageJournal</ref></type>
        <definition>DamageJournal KWin::VirtualEglGbmLayer::m_damageJournal</definition>
        <argsstring></argsstring>
        <name>m_damageJournal</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::m_damageJournal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="53" column="19" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_gbm_layer_1a9af080c8c2182ceaa7dd2bddf178f507" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_damage_journal" kindref="compound">DamageJournal</ref></type>
        <definition>DamageJournal KWin::VirtualEglGbmLayer::m_oldDamageJournal</definition>
        <argsstring></argsstring>
        <name>m_oldDamageJournal</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::m_oldDamageJournal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="54" column="19" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_gbm_layer_1a729dcf23065f0341aac2613eda5f9b9b" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_egl_swapchain" kindref="compound">EglSwapchain</ref> &gt;</type>
        <definition>std::shared_ptr&lt;EglSwapchain&gt; KWin::VirtualEglGbmLayer::m_gbmSwapchain</definition>
        <argsstring></argsstring>
        <name>m_gbmSwapchain</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::m_gbmSwapchain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="55" column="21" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_gbm_layer_1a7b5de9ddbe624ffb1867a2b64ef93162" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_egl_swapchain" kindref="compound">EglSwapchain</ref> &gt;</type>
        <definition>std::shared_ptr&lt;EglSwapchain&gt; KWin::VirtualEglGbmLayer::m_oldGbmSwapchain</definition>
        <argsstring></argsstring>
        <name>m_oldGbmSwapchain</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::m_oldGbmSwapchain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="56" column="21" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_gbm_layer_1aab5cb4e01482c03323838d0461fe59de" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_egl_swapchain_slot" kindref="compound">EglSwapchainSlot</ref> &gt;</type>
        <definition>std::shared_ptr&lt;EglSwapchainSlot&gt; KWin::VirtualEglGbmLayer::m_currentSlot</definition>
        <argsstring></argsstring>
        <name>m_currentSlot</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::m_currentSlot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="57" column="21" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_gbm_layer_1ac06f3627e1824f3ff62a318584e68a39" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_g_l_render_time_query" kindref="compound">GLRenderTimeQuery</ref> &gt;</type>
        <definition>std::unique_ptr&lt;GLRenderTimeQuery&gt; KWin::VirtualEglGbmLayer::m_query</definition>
        <argsstring></argsstring>
        <name>m_query</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::m_query</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="58" column="21" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_virtual_egl_gbm_layer_1ae6d7f2bcfe02fde9302f11445a4f8822" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_egl_gbm_backend" kindref="compound">EglGbmBackend</ref> *const</type>
        <definition>EglGbmBackend* const KWin::VirtualEglGbmLayer::m_eglBackend</definition>
        <argsstring></argsstring>
        <name>m_eglBackend</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::m_eglBackend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="60" column="25" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.h" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1ae933affde2fc0ebc4a686ee67a107bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::VirtualEglGbmLayer::VirtualEglGbmLayer</definition>
        <argsstring>(EglGbmBackend *eglBackend, DrmVirtualOutput *output)</argsstring>
        <name>VirtualEglGbmLayer</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::VirtualEglGbmLayer</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_egl_gbm_backend" kindref="compound">EglGbmBackend</ref> *</type>
          <declname>eglBackend</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_drm_virtual_output" kindref="compound">DrmVirtualOutput</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="34" column="5" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1a89b3b655e497c29804994a7eb7042d02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::VirtualEglGbmLayer::~VirtualEglGbmLayer</definition>
        <argsstring>() override</argsstring>
        <name>~VirtualEglGbmLayer</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::~VirtualEglGbmLayer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="35" column="5" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1acceff2d3a46d3348ff9001595f83b0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::optional&lt; <ref refid="struct_k_win_1_1_output_layer_begin_frame_info" kindref="compound">OutputLayerBeginFrameInfo</ref> &gt;</type>
        <definition>std::optional&lt; OutputLayerBeginFrameInfo &gt; KWin::VirtualEglGbmLayer::doBeginFrame</definition>
        <argsstring>() override</argsstring>
        <name>doBeginFrame</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::doBeginFrame</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1aa468802d01855b8978b27bbc03be0c5b">doBeginFrame</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="37" column="19" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="40" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1ac49c6c2c4e193debc057eff7e37f7a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::VirtualEglGbmLayer::doEndFrame</definition>
        <argsstring>(const QRegion &amp;renderedRegion, const QRegion &amp;damagedRegion, OutputFrame *frame) override</argsstring>
        <name>doEndFrame</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::doEndFrame</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1a693ed0b18329db5416bab2c60b00304b">doEndFrame</reimplements>
        <param>
          <type>const QRegion &amp;</type>
          <declname>renderedRegion</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>damagedRegion</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="38" column="10" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="83" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1ac274f5bbe1f464b3eebba557b6d021e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_g_l_texture" kindref="compound">GLTexture</ref> &gt;</type>
        <definition>std::shared_ptr&lt; GLTexture &gt; KWin::VirtualEglGbmLayer::texture</definition>
        <argsstring>() const override</argsstring>
        <name>texture</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::texture</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_output_layer_1a21dd20caca96f686a9b4f96b92f516a0">texture</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="40" column="21" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="129" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1a22e8209a72b5d2ad308c13275447452f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::VirtualEglGbmLayer::releaseBuffers</definition>
        <argsstring>() override</argsstring>
        <name>releaseBuffers</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::releaseBuffers</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_output_layer_1a30e1157ad2d4eea343afb35e8186e4cb">releaseBuffers</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="41" column="10" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="155" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1a173d8787f18d58c95c5e39ff21dde54c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref> *</type>
        <definition>DrmDevice * KWin::VirtualEglGbmLayer::scanoutDevice</definition>
        <argsstring>() const override</argsstring>
        <name>scanoutDevice</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::scanoutDevice</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1ab43b39c7559453fd517bc4f1ee726784">scanoutDevice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="42" column="15" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1a783aa4641940a686030ad6587629ad13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt;</type>
        <definition>QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt; KWin::VirtualEglGbmLayer::supportedDrmFormats</definition>
        <argsstring>() const override</argsstring>
        <name>supportedDrmFormats</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::supportedDrmFormats</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1ace0c0e616f28f53a53498291526ff62d">supportedDrmFormats</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="43" column="11" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1a1d57a1dc4d47d517c79b8ddd622962ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
        <definition>const ColorDescription &amp; KWin::VirtualEglGbmLayer::colorDescription</definition>
        <argsstring>() const</argsstring>
        <name>colorDescription</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::colorDescription</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="44" column="28" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1a8a78acd37d066d1ace3f58f5d4db6408" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::VirtualEglGbmLayer::doImportScanoutBuffer</definition>
        <argsstring>(GraphicsBuffer *buffer, const ColorDescription &amp;color, RenderingIntent intent, const std::shared_ptr&lt; OutputFrame &gt; &amp;frame) override</argsstring>
        <name>doImportScanoutBuffer</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::doImportScanoutBuffer</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_layer_1a1843ff1def5379cfad784d76df2b5bbb">doImportScanoutBuffer</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_graphics_buffer" kindref="compound">GraphicsBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9" kindref="member">RenderingIntent</ref></type>
          <declname>intent</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="47" column="10" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="139" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1a9fc619c2372d73090a9c1a0eb41a3bff" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_egl_swapchain" kindref="compound">EglSwapchain</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EglSwapchain &gt; KWin::VirtualEglGbmLayer::createGbmSwapchain</definition>
        <argsstring>() const</argsstring>
        <name>createGbmSwapchain</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::createGbmSwapchain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="48" column="21" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="95" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_virtual_egl_gbm_layer_1ac4a9a80f8b4e91e54a355c228439d2ac" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::VirtualEglGbmLayer::doesGbmSwapchainFit</definition>
        <argsstring>(EglSwapchain *swapchain) const</argsstring>
        <name>doesGbmSwapchainFit</name>
        <qualifiedname>KWin::VirtualEglGbmLayer::doesGbmSwapchainFit</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_egl_swapchain" kindref="compound">EglSwapchain</ref> *</type>
          <declname>swapchain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="49" column="10" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.cpp" bodystart="124" bodyend="127"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::DrmOutputLayer</label>
        <link refid="class_k_win_1_1_drm_output_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::OutputLayer</label>
        <link refid="class_k_win_1_1_output_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::VirtualEglGbmLayer</label>
        <link refid="class_k_win_1_1_virtual_egl_gbm_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>KWin::BrightnessDevice</label>
        <link refid="class_k_win_1_1_brightness_device"/>
      </node>
      <node id="8">
        <label>KWin::ColorDescription</label>
        <link refid="class_k_win_1_1_color_description"/>
        <childnode refid="8" relation="usage">
          <edgelabel>sRGB</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>KWin::DrmOutputLayer</label>
        <link refid="class_k_win_1_1_drm_output_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>KWin::Edid</label>
        <link refid="class_k_win_1_1_edid"/>
      </node>
      <node id="6">
        <label>KWin::Output</label>
        <link refid="class_k_win_1_1_output"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_state</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_information</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_brightnessDevice</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>KWin::Output::Information</label>
        <link refid="struct_k_win_1_1_output_1_1_information"/>
        <childnode refid="10" relation="usage">
          <edgelabel>edid</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>panelOrientation</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>KWin::Output::State</label>
        <link refid="struct_k_win_1_1_output_1_1_state"/>
        <childnode refid="5" relation="usage">
          <edgelabel>manualTransform</edgelabel>
          <edgelabel>transform</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>colorDescription</edgelabel>
          <edgelabel>originalColorDescription</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KWin::OutputLayer</label>
        <link refid="class_k_win_1_1_output_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_bufferTransform</edgelabel>
          <edgelabel>m_offloadTransform</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_output</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>KWin::OutputTransform</label>
        <link refid="class_k_win_1_1_output_transform"/>
      </node>
      <node id="1">
        <label>KWin::VirtualEglGbmLayer</label>
        <link refid="class_k_win_1_1_virtual_egl_gbm_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/drm/drm_virtual_egl_layer.h" line="31" column="1" bodyfile="kwin/src/backends/drm/drm_virtual_egl_layer.h" bodystart="32" bodyend="61"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>addRepaint</name></member>
      <member refid="class_k_win_1_1_output_layer_1a0c35fab74670dc55d6778c0ba83f65b3" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>beginFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1abcd7fbb2032b11fdd392da6b6247c725" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>bufferTransform</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a1d57a1dc4d47d517c79b8ddd622962ba" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>colorDescription</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a9fc619c2372d73090a9c1a0eb41a3bff" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>createGbmSwapchain</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1acceff2d3a46d3348ff9001595f83b0a9" prot="public" virt="virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>doBeginFrame</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1ac49c6c2c4e193debc057eff7e37f7a2f" prot="public" virt="virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>doEndFrame</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1ac4a9a80f8b4e91e54a355c228439d2ac" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>doesGbmSwapchainFit</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a8a78acd37d066d1ace3f58f5d4db6408" prot="private" virt="virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>doImportScanoutBuffer</name></member>
      <member refid="class_k_win_1_1_drm_output_layer_1ae1bce9bf8c27ad2d31fc5ec5e01e1e64" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>DrmOutputLayer</name></member>
      <member refid="class_k_win_1_1_output_layer_1a742e96adf296b32a4f1efaca57d602fe" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>endFrame</name></member>
      <member refid="class_k_win_1_1_output_layer_1ab5b0f0faaea0c7e881db718a64658dc0" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>hotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1a54ee1bcc42a4346ddce4860b37339203" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>importScanoutBuffer</name></member>
      <member refid="class_k_win_1_1_output_layer_1ade038d52e72b155d6ee023524d066d7d" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_output_layer_1ae5b61066054d6f2f817700a2ad38c338" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_bufferTransform</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1aab5cb4e01482c03323838d0461fe59de" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_currentSlot</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a319381f9fca8c2922381e027cf582346" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_damageJournal</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1ae6d7f2bcfe02fde9302f11445a4f8822" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_eglBackend</name></member>
      <member refid="class_k_win_1_1_output_layer_1a8b34de14c7ce7f8f60fbb0899afd9d42" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_enabled</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a729dcf23065f0341aac2613eda5f9b9b" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_gbmSwapchain</name></member>
      <member refid="class_k_win_1_1_output_layer_1a30b570aaca0b11d2a9d395703dedfa2e" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_hotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1abe5864edf1b1412b7a922151b603907d" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_offloadTransform</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a9af080c8c2182ceaa7dd2bddf178f507" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_oldDamageJournal</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a7b5de9ddbe624ffb1867a2b64ef93162" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_oldGbmSwapchain</name></member>
      <member refid="class_k_win_1_1_output_layer_1a9b035f27d0ea567a73bf27f9ef82f744" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_output</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1ac06f3627e1824f3ff62a318584e68a39" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_query</name></member>
      <member refid="class_k_win_1_1_output_layer_1a55f0b76d433dc0f1dcbb41ca834e5d00" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_repaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a00e5d48f76d5f74421c89655a66824b7" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_scale</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1ac7e05570ed288eb35271b6be9c0a99e1" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_scanoutBuffer</name></member>
      <member refid="class_k_win_1_1_output_layer_1a008ca7b899cf515c4483c3f45f543b9a" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_scanoutCandidate</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1ab9b02a272c2fc84a9a4c3e809e3ec80a" prot="private" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_scanoutColor</name></member>
      <member refid="class_k_win_1_1_output_layer_1a81b53e2bbdca8faeb1fe25f53da077e6" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_sourceRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1abf7d3cc9dff1017d98b72640f3a775f0" prot="protected" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>m_targetRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1ab44b7af337ba615f5e5550586b99ecc9" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>needsRepaint</name></member>
      <member refid="class_k_win_1_1_output_layer_1accd1ac89381d7761a47ba22f94200000" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>notifyNoScanoutCandidate</name></member>
      <member refid="class_k_win_1_1_output_layer_1abcbc86757c8850d18529bddc3d537160" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>offloadTransform</name></member>
      <member refid="class_k_win_1_1_output_layer_1a9ee261bca4012bac914df29d5ebf4117" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>OutputLayer</name></member>
      <member refid="class_k_win_1_1_output_layer_1ac9ce2d0a04165b7d23f4229c0ed8e0e0" prot="public" virt="virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>recommendedSizes</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a22e8209a72b5d2ad308c13275447452f" prot="public" virt="virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>releaseBuffers</name></member>
      <member refid="class_k_win_1_1_output_layer_1a213d86c0f4be0c717d5e734d43224d01" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>repaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a7e9983dfc6583b829e85961112a76646" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>resetRepaints</name></member>
      <member refid="class_k_win_1_1_output_layer_1a75cc900617e49a9125da7bf26f3ab986" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>scale</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a173d8787f18d58c95c5e39ff21dde54c" prot="public" virt="virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>scanoutDevice</name></member>
      <member refid="class_k_win_1_1_output_layer_1a44ada592a0855658e6e5fa96b5b67c04" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>setEnabled</name></member>
      <member refid="class_k_win_1_1_output_layer_1af15fe575d7268641fccc72b1f91b96aa" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>setHotspot</name></member>
      <member refid="class_k_win_1_1_output_layer_1a4dfcbf3650f97a4f072008773c981a03" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>setScale</name></member>
      <member refid="class_k_win_1_1_output_layer_1a4836d5c759356c56eb085f9d51f6b9df" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>setSourceRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1a85709e6e7f9019c3a16a362d041a8569" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>setTargetRect</name></member>
      <member refid="class_k_win_1_1_output_layer_1a2ae106b6b52ad73ff92ae9f0aa667461" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>sourceRect</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a783aa4641940a686030ad6587629ad13" prot="public" virt="virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>supportedDrmFormats</name></member>
      <member refid="class_k_win_1_1_output_layer_1a55b2e80edaf7ad94832884608aca8042" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>targetRect</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1ac274f5bbe1f464b3eebba557b6d021e1" prot="public" virt="virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>texture</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1ae933affde2fc0ebc4a686ee67a107bab" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>VirtualEglGbmLayer</name></member>
      <member refid="class_k_win_1_1_drm_output_layer_1ac18f189121b670f907382224f53a5fc9" prot="public" virt="virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>~DrmOutputLayer</name></member>
      <member refid="class_k_win_1_1_virtual_egl_gbm_layer_1a89b3b655e497c29804994a7eb7042d02" prot="public" virt="non-virtual"><scope>KWin::VirtualEglGbmLayer</scope><name>~VirtualEglGbmLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
