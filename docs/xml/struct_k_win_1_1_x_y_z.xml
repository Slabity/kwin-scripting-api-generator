<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_k_win_1_1_x_y_z" kind="struct" language="C++" prot="public">
    <compoundname>KWin::XYZ</compoundname>
    <includes refid="colorspace_8h" local="no">colorspace.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::XYZ::X</definition>
        <argsstring></argsstring>
        <name>X</name>
        <qualifiedname>KWin::XYZ::X</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="57" column="12" bodyfile="kwin/src/core/colorspace.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::XYZ::Y</definition>
        <argsstring></argsstring>
        <name>Y</name>
        <qualifiedname>KWin::XYZ::Y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="58" column="12" bodyfile="kwin/src/core/colorspace.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double KWin::XYZ::Z</definition>
        <argsstring></argsstring>
        <name>Z</name>
        <qualifiedname>KWin::XYZ::Z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="59" column="12" bodyfile="kwin/src/core/colorspace.h" bodystart="59" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_k_win_1_1_x_y_z_1a6f6f55a638f620caf33d292e5be201fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_k_win_1_1xy_y" kindref="compound">xyY</ref></type>
        <definition>xyY KWin::XYZ::toxyY</definition>
        <argsstring>() const</argsstring>
        <name>toxyY</name>
        <qualifiedname>KWin::XYZ::toxyY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="61" column="9" bodyfile="kwin/src/core/colorspace.cpp" bodystart="71" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_x_y_z_1a431f73a64eb85847a6e697acf7f2a35e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_k_win_1_1xy" kindref="compound">xy</ref></type>
        <definition>xy KWin::XYZ::toxy</definition>
        <argsstring>() const</argsstring>
        <name>toxy</name>
        <qualifiedname>KWin::XYZ::toxy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="62" column="8" bodyfile="kwin/src/core/colorspace.cpp" bodystart="89" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_x_y_z_1a29fb60bd3bc8ee4b53057f811c07ca25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVector3D</type>
        <definition>QVector3D KWin::XYZ::asVector</definition>
        <argsstring>() const</argsstring>
        <name>asVector</name>
        <qualifiedname>KWin::XYZ::asVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="63" column="15" bodyfile="kwin/src/core/colorspace.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_x_y_z_1aae6fc222397c7f714966ef9ac2e8fa14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref></type>
        <definition>XYZ KWin::XYZ::operator*</definition>
        <argsstring>(double factor) const</argsstring>
        <name>operator*</name>
        <qualifiedname>KWin::XYZ::operator*</qualifiedname>
        <param>
          <type>double</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="64" column="9" bodyfile="kwin/src/core/colorspace.cpp" bodystart="105" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_x_y_z_1a355b8fa7bc53def211f97aaff26f5d61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref></type>
        <definition>XYZ KWin::XYZ::operator/</definition>
        <argsstring>(double factor) const</argsstring>
        <name>operator/</name>
        <qualifiedname>KWin::XYZ::operator/</qualifiedname>
        <param>
          <type>double</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="65" column="9" bodyfile="kwin/src/core/colorspace.cpp" bodystart="114" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_x_y_z_1a3ffb64ac574f447be09edaabd728f18a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref></type>
        <definition>XYZ KWin::XYZ::operator+</definition>
        <argsstring>(const XYZ &amp;other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>KWin::XYZ::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="66" column="9" bodyfile="kwin/src/core/colorspace.cpp" bodystart="123" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="struct_k_win_1_1_x_y_z_1a1c3a90c96fe1b9e0fb14a4aee77f7646" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::XYZ::operator==</definition>
        <argsstring>(const XYZ &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>KWin::XYZ::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="67" column="10" bodyfile="kwin/src/core/colorspace.cpp" bodystart="146" bodyend="151"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_k_win_1_1_x_y_z_1ae91c883816b868d587e5c5fbff8ed9e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_k_win_1_1_x_y_z" kindref="compound">XYZ</ref></type>
        <definition>XYZ KWin::XYZ::fromVector</definition>
        <argsstring>(const QVector3D &amp;vector)</argsstring>
        <name>fromVector</name>
        <qualifiedname>KWin::XYZ::fromVector</qualifiedname>
        <param>
          <type>const QVector3D &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/colorspace.h" line="69" column="16" bodyfile="kwin/src/core/colorspace.cpp" bodystart="137" bodyend="144"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/core/colorspace.h" line="55" column="1" bodyfile="kwin/src/core/colorspace.h" bodystart="56" bodyend="70"/>
    <listofallmembers>
      <member refid="struct_k_win_1_1_x_y_z_1a29fb60bd3bc8ee4b53057f811c07ca25" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>asVector</name></member>
      <member refid="struct_k_win_1_1_x_y_z_1ae91c883816b868d587e5c5fbff8ed9e4" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>fromVector</name></member>
      <member refid="struct_k_win_1_1_x_y_z_1aae6fc222397c7f714966ef9ac2e8fa14" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>operator*</name></member>
      <member refid="struct_k_win_1_1_x_y_z_1a3ffb64ac574f447be09edaabd728f18a" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>operator+</name></member>
      <member refid="struct_k_win_1_1_x_y_z_1a355b8fa7bc53def211f97aaff26f5d61" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>operator/</name></member>
      <member refid="struct_k_win_1_1_x_y_z_1a1c3a90c96fe1b9e0fb14a4aee77f7646" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>operator==</name></member>
      <member refid="struct_k_win_1_1_x_y_z_1a431f73a64eb85847a6e697acf7f2a35e" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>toxy</name></member>
      <member refid="struct_k_win_1_1_x_y_z_1a6f6f55a638f620caf33d292e5be201fd" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>toxyY</name></member>
      <member refid="struct_k_win_1_1_x_y_z_1a1f95b164320ba73268746fc9e9fbe1d0" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>X</name></member>
      <member refid="struct_k_win_1_1_x_y_z_1acf30a364caec1db305f64bda2b6bfced" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>Y</name></member>
      <member refid="struct_k_win_1_1_x_y_z_1a768e39dfa506c9904833d73b33464bd9" prot="public" virt="non-virtual"><scope>KWin::XYZ</scope><name>Z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
