<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_wayland_backend" kind="class" language="C++" prot="public">
    <compoundname>WaylandBackend</compoundname>
    <basecompoundref refid="class_backend" prot="public" virt="non-virtual">Backend</basecompoundref>
    <includes refid="pointerconstraintstest_8h" local="no">pointerconstraintstest.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_wayland_backend_1acf3540a2c5a9e81171c7d973edbf4a8f" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ConnectionThread *</type>
        <definition>KWayland::Client::ConnectionThread* WaylandBackend::m_connectionThreadObject</definition>
        <argsstring></argsstring>
        <name>m_connectionThreadObject</name>
        <qualifiedname>WaylandBackend::m_connectionThreadObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="145" column="40" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_backend_1a6cf2e20c4168c754c60816fd48a06b08" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Compositor *</type>
        <definition>KWayland::Client::Compositor* WaylandBackend::m_compositor</definition>
        <argsstring></argsstring>
        <name>m_compositor</name>
        <qualifiedname>WaylandBackend::m_compositor</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="146" column="34" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_backend_1a3293722d630af9a497757da1eebb11fb" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Seat *</type>
        <definition>KWayland::Client::Seat* WaylandBackend::m_seat</definition>
        <argsstring></argsstring>
        <name>m_seat</name>
        <qualifiedname>WaylandBackend::m_seat</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="147" column="28" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_backend_1a56a6259808cbb1da6a46d82d2c21a049" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Pointer *</type>
        <definition>KWayland::Client::Pointer* WaylandBackend::m_pointer</definition>
        <argsstring></argsstring>
        <name>m_pointer</name>
        <qualifiedname>WaylandBackend::m_pointer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="148" column="31" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_backend_1a82c78bb67413d32502ae63b92a49a7eb" prot="private" static="no" mutable="no">
        <type>KWayland::Client::PointerConstraints *</type>
        <definition>KWayland::Client::PointerConstraints* WaylandBackend::m_pointerConstraints</definition>
        <argsstring></argsstring>
        <name>m_pointerConstraints</name>
        <qualifiedname>WaylandBackend::m_pointerConstraints</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="149" column="42" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_backend_1aa8421e522e622551b29cb19f98832725" prot="private" static="no" mutable="no">
        <type>KWayland::Client::LockedPointer *</type>
        <definition>KWayland::Client::LockedPointer* WaylandBackend::m_lockedPointer</definition>
        <argsstring></argsstring>
        <name>m_lockedPointer</name>
        <qualifiedname>WaylandBackend::m_lockedPointer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="151" column="37" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_backend_1a8eeb72401c37042d8e964cac938d2a91" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool WaylandBackend::m_lockedPointerPersistent</definition>
        <argsstring></argsstring>
        <name>m_lockedPointerPersistent</name>
        <qualifiedname>WaylandBackend::m_lockedPointerPersistent</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="152" column="10" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_backend_1a46cfc5a57448a4fbfc8ac313f0791dc1" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ConfinedPointer *</type>
        <definition>KWayland::Client::ConfinedPointer* WaylandBackend::m_confinedPointer</definition>
        <argsstring></argsstring>
        <name>m_confinedPointer</name>
        <qualifiedname>WaylandBackend::m_confinedPointer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="153" column="39" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_backend_1a3038d37a0f429afc132149c6a7630cbe" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool WaylandBackend::m_confinedPointerPersistent</definition>
        <argsstring></argsstring>
        <name>m_confinedPointerPersistent</name>
        <qualifiedname>WaylandBackend::m_confinedPointerPersistent</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="154" column="10" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="154" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_wayland_backend_1a87e58335a84b60ceb9dcd8752166747c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WaylandBackend::WaylandBackend</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>WaylandBackend</name>
        <qualifiedname>WaylandBackend::WaylandBackend</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="126" column="5" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_backend_1a56e4b736e71d9fdbca6b1549189d7aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void WaylandBackend::init</definition>
        <argsstring>(QQuickView *view) override</argsstring>
        <name>init</name>
        <qualifiedname>WaylandBackend::init</qualifiedname>
        <reimplements refid="class_backend_1a922f911e48ead0c4df7f0acd700e3cd9">init</reimplements>
        <param>
          <type>QQuickView *</type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="128" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_backend_1ab4b50762ea29b950e9643a4027513000" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void WaylandBackend::lockRequest</definition>
        <argsstring>(bool persistent, QRect region) override</argsstring>
        <name>lockRequest</name>
        <qualifiedname>WaylandBackend::lockRequest</qualifiedname>
        <reimplements refid="class_backend_1aedd0d08660af5a2342f5fe0f895713c2">lockRequest</reimplements>
        <param>
          <type>bool</type>
          <declname>persistent</declname>
        </param>
        <param>
          <type>QRect</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="130" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="90" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_backend_1a6ac826b41f876e63f1d26d6b8ee2579a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void WaylandBackend::unlockRequest</definition>
        <argsstring>() override</argsstring>
        <name>unlockRequest</name>
        <qualifiedname>WaylandBackend::unlockRequest</qualifiedname>
        <reimplements refid="class_backend_1aaaeac86fecd1cbb2e1c2e31e68f1355e">unlockRequest</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="131" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="143" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_backend_1a13c4e259f062fbddd560241099a2bf59" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void WaylandBackend::confineRequest</definition>
        <argsstring>(bool persistent, QRect region) override</argsstring>
        <name>confineRequest</name>
        <qualifiedname>WaylandBackend::confineRequest</qualifiedname>
        <reimplements refid="class_backend_1a858b038da22f8f0c96f51aa3d44a1dd0">confineRequest</reimplements>
        <param>
          <type>bool</type>
          <declname>persistent</declname>
        </param>
        <param>
          <type>QRect</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="133" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="163" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_backend_1a9b88ca4d1cdeddf232f8005d4402911d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void WaylandBackend::unconfineRequest</definition>
        <argsstring>() override</argsstring>
        <name>unconfineRequest</name>
        <qualifiedname>WaylandBackend::unconfineRequest</qualifiedname>
        <reimplements refid="class_backend_1a24f84ba0e2ac3112f12c993e9eee8d5e">unconfineRequest</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="134" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="209" bodyend="218"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_wayland_backend_1aa0427a6c0533d11e38f0120f18c136d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WaylandBackend::setupRegistry</definition>
        <argsstring>(KWayland::Client::Registry *registry)</argsstring>
        <name>setupRegistry</name>
        <qualifiedname>WaylandBackend::setupRegistry</qualifiedname>
        <param>
          <type>KWayland::Client::Registry *</type>
          <declname>registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="137" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="43" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_backend_1a907ddaf81fbca1b7e7e7936d7b56ea95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WaylandBackend::isLocked</definition>
        <argsstring>()</argsstring>
        <name>isLocked</name>
        <qualifiedname>WaylandBackend::isLocked</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="139" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_backend_1a7ce39dfd9cd390d41b02f187af7c9435" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WaylandBackend::isConfined</definition>
        <argsstring>()</argsstring>
        <name>isConfined</name>
        <qualifiedname>WaylandBackend::isConfined</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="140" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_backend_1a3eb0bb1c6e76a8e1996ff2ced6c3b39b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WaylandBackend::cleanupLock</definition>
        <argsstring>()</argsstring>
        <name>cleanupLock</name>
        <qualifiedname>WaylandBackend::cleanupLock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="142" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="153" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_backend_1a89d56a58c374f484aa9c9a542da8e280" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WaylandBackend::cleanupConfine</definition>
        <argsstring>()</argsstring>
        <name>cleanupConfine</name>
        <qualifiedname>WaylandBackend::cleanupConfine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/pointerconstraintstest.h" line="143" column="10" bodyfile="kwin/tests/pointerconstraintstest.cpp" bodystart="219" bodyend="227"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Backend</label>
        <link refid="class_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>WaylandBackend</label>
        <link refid="class_wayland_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Backend</label>
        <link refid="class_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>WaylandBackend</label>
        <link refid="class_wayland_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/tests/pointerconstraintstest.h" line="122" column="1" bodyfile="kwin/tests/pointerconstraintstest.h" bodystart="123" bodyend="155"/>
    <listofallmembers>
      <member refid="class_backend_1a5bc0e9ea135112c07e021ebde56ec44f" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>Backend</name></member>
      <member refid="class_wayland_backend_1a89d56a58c374f484aa9c9a542da8e280" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>cleanupConfine</name></member>
      <member refid="class_wayland_backend_1a3eb0bb1c6e76a8e1996ff2ced6c3b39b" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>cleanupLock</name></member>
      <member refid="class_backend_1abae42e001ae46520622eee4b0057ae6e" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>confineChanged</name></member>
      <member refid="class_wayland_backend_1a13c4e259f062fbddd560241099a2bf59" prot="public" virt="virtual"><scope>WaylandBackend</scope><name>confineRequest</name></member>
      <member refid="class_backend_1a4c7d3e2da4b46223e7173bf0dc48bb35" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>errorsAllowed</name></member>
      <member refid="class_backend_1a1c0576d117873460a4c68ab5c66d9bad" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>errorsAllowed</name></member>
      <member refid="class_backend_1a41a60536ee920afd0d172c8e8863a134" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>errorsAllowedChanged</name></member>
      <member refid="class_backend_1a8260b3774634dfe2cf1816da47f7d764" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>forceSurfaceCommit</name></member>
      <member refid="class_backend_1a346634cbbb0b586c8abbfb1fa7745307" prot="public" virt="virtual"><scope>WaylandBackend</scope><name>hideAndConfineRequest</name></member>
      <member refid="class_wayland_backend_1a56e4b736e71d9fdbca6b1549189d7aa4" prot="public" virt="virtual"><scope>WaylandBackend</scope><name>init</name></member>
      <member refid="class_wayland_backend_1a7ce39dfd9cd390d41b02f187af7c9435" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>isConfined</name></member>
      <member refid="class_wayland_backend_1a907ddaf81fbca1b7e7e7936d7b56ea95" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>isLocked</name></member>
      <member refid="class_backend_1a30fc3e2a094ede1ac540a1e10fdc9f25" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>lockChanged</name></member>
      <member refid="class_backend_1a4258f56a05d77aa43630d3997ec308d4" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>lockHint</name></member>
      <member refid="class_backend_1a0e751b0cd0a4e204772f6c5bda422d96" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>lockHint</name></member>
      <member refid="class_backend_1a8734aa3612cd8d8694bee1c43d3e5218" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>lockHintChanged</name></member>
      <member refid="class_wayland_backend_1ab4b50762ea29b950e9643a4027513000" prot="public" virt="virtual"><scope>WaylandBackend</scope><name>lockRequest</name></member>
      <member refid="class_wayland_backend_1a6cf2e20c4168c754c60816fd48a06b08" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>m_compositor</name></member>
      <member refid="class_wayland_backend_1a46cfc5a57448a4fbfc8ac313f0791dc1" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>m_confinedPointer</name></member>
      <member refid="class_wayland_backend_1a3038d37a0f429afc132149c6a7630cbe" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>m_confinedPointerPersistent</name></member>
      <member refid="class_wayland_backend_1acf3540a2c5a9e81171c7d973edbf4a8f" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>m_connectionThreadObject</name></member>
      <member refid="class_wayland_backend_1aa8421e522e622551b29cb19f98832725" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>m_lockedPointer</name></member>
      <member refid="class_wayland_backend_1a8eeb72401c37042d8e964cac938d2a91" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>m_lockedPointerPersistent</name></member>
      <member refid="class_wayland_backend_1a56a6259808cbb1da6a46d82d2c21a049" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>m_pointer</name></member>
      <member refid="class_wayland_backend_1a82c78bb67413d32502ae63b92a49a7eb" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>m_pointerConstraints</name></member>
      <member refid="class_wayland_backend_1a3293722d630af9a497757da1eebb11fb" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>m_seat</name></member>
      <member refid="class_backend_1a3146ef7bb0edf5352175361f04bfa48c" prot="protected" virt="non-virtual"><scope>WaylandBackend</scope><name>Mode</name></member>
      <member refid="class_backend_1a0afd492c3853d7451edbfadd710445e6" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>mode</name></member>
      <member refid="class_backend_1ad550fa5f0c97f4f409ac321a18f98726" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>mode</name></member>
      <member refid="class_backend_1a93043fcdc55e5cffd5c96d1b3ae64861" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>setErrorsAllowed</name></member>
      <member refid="class_backend_1ad44f31164228a1fecdf6534ea68e4cad" prot="protected" virt="non-virtual"><scope>WaylandBackend</scope><name>setMode</name></member>
      <member refid="class_wayland_backend_1aa0427a6c0533d11e38f0120f18c136d6" prot="private" virt="non-virtual"><scope>WaylandBackend</scope><name>setupRegistry</name></member>
      <member refid="class_wayland_backend_1a9b88ca4d1cdeddf232f8005d4402911d" prot="public" virt="virtual"><scope>WaylandBackend</scope><name>unconfineRequest</name></member>
      <member refid="class_backend_1afa628a0785cc8110c033f13f5ebc0d55" prot="public" virt="virtual"><scope>WaylandBackend</scope><name>undoHideRequest</name></member>
      <member refid="class_wayland_backend_1a6ac826b41f876e63f1d26d6b8ee2579a" prot="public" virt="virtual"><scope>WaylandBackend</scope><name>unlockRequest</name></member>
      <member refid="class_backend_1a12349d7c60386523404ffa73cdee07de" prot="protected" virt="non-virtual"><scope>WaylandBackend</scope><name>view</name></member>
      <member refid="class_wayland_backend_1a87e58335a84b60ceb9dcd8752166747c" prot="public" virt="non-virtual"><scope>WaylandBackend</scope><name>WaylandBackend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
