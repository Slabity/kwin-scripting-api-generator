<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_input_event_filter" kind="class" language="C++" prot="public">
    <compoundname>KWin::InputEventFilter</compoundname>
    <derivedcompoundref refid="class_bounce_keys_filter" prot="public" virt="non-virtual">BounceKeysFilter</derivedcompoundref>
    <derivedcompoundref refid="class_button_rebinds_filter" prot="public" virt="non-virtual">ButtonRebindsFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_decoration_event_filter" prot="public" virt="non-virtual">KWin::DecorationEventFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_dpms_input_event_filter" prot="public" virt="non-virtual">KWin::DpmsInputEventFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_drag_and_drop_input_filter" prot="public" virt="non-virtual">KWin::DragAndDropInputFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_effects_filter" prot="public" virt="non-virtual">KWin::EffectsFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_eis_input_capture_filter" prot="public" virt="non-virtual">KWin::EisInputCaptureFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_forward_input_filter" prot="public" virt="non-virtual">KWin::ForwardInputFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_input_method_event_filter" prot="public" virt="non-virtual">KWin::InputMethodEventFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_internal_window_event_filter" prot="public" virt="non-virtual">KWin::InternalWindowEventFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_move_resize_filter" prot="public" virt="non-virtual">KWin::MoveResizeFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_placeholder_input_event_filter" prot="public" virt="non-virtual">KWin::PlaceholderInputEventFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_popup_input_filter" prot="public" virt="non-virtual">KWin::PopupInputFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_screen_edge_input_filter" prot="public" virt="non-virtual">KWin::ScreenEdgeInputFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_virtual_terminal_filter" prot="public" virt="non-virtual">KWin::VirtualTerminalFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_window_action_input_filter" prot="public" virt="non-virtual">KWin::WindowActionInputFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_window_selector_filter" prot="public" virt="non-virtual">KWin::WindowSelectorFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_xwl_1_1_xwayland_input_filter" prot="public" virt="non-virtual">KWin::Xwl::XwaylandInputFilter</derivedcompoundref>
    <derivedcompoundref refid="class_sticky_keys_filter" prot="public" virt="non-virtual">StickyKeysFilter</derivedcompoundref>
    <includes refid="input_8h" local="no">input.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_input_event_filter_1a92ae836dcbf39ada63db48697ccffb6c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::InputEventFilter::m_weight</definition>
        <argsstring></argsstring>
        <name>m_weight</name>
        <qualifiedname>KWin::InputEventFilter::m_weight</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="437" column="9" bodyfile="kwin/src/input.h" bodystart="437" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::InputEventFilter::InputEventFilter</definition>
        <argsstring>(InputFilterOrder::Order weight)</argsstring>
        <name>InputEventFilter</name>
        <qualifiedname>KWin::InputEventFilter::InputEventFilter</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1_1_input_filter_order_1a756edc4ece066f390b6c187c3cd970b1" kindref="member">InputFilterOrder::Order</ref></type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct and install the <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The position in the input chain, lower values come first. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the filter is not installed automatically </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="374" column="5" bodyfile="kwin/src/input.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1ab87db3c27248ac5074cf84ee87d94c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>KWin::InputEventFilter::~InputEventFilter</definition>
        <argsstring>()</argsstring>
        <name>~InputEventFilter</name>
        <qualifiedname>KWin::InputEventFilter::~InputEventFilter</qualifiedname>
        <briefdescription>
<para>~InputEventFilter This will uninstall the event filter if needed </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="379" column="13" bodyfile="kwin/src/input.cpp" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a52a11556fd89cea278b3fcb79d4f6a78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::InputEventFilter::weight</definition>
        <argsstring>() const</argsstring>
        <name>weight</name>
        <qualifiedname>KWin::InputEventFilter::weight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The position in the input chain, lower values come first. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="384" column="9" bodyfile="kwin/src/input.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a0e8cf7f7d0816fa15dbfef65300bdf74" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::pointerMotion</definition>
        <argsstring>(PointerMotionEvent *event)</argsstring>
        <name>pointerMotion</name>
        <qualifiedname>KWin::InputEventFilter::pointerMotion</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_decoration_event_filter_1ab7505620e457b63965b5e65b53dbe180">pointerMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1a43b13a7c81fb7583e391a7ab3143fcd1">pointerMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drag_and_drop_input_filter_1a858c8c4686826b53859ba95bb52ff814">pointerMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1a3626f4479883002722948b0beee68a1c">pointerMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a0ae7fa1f34225eccff524170c60a7dce">pointerMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1ad4eb8786b6c834762c415263991b4a21">pointerMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_internal_window_event_filter_1a1be9240afb51c546b59ba94d0affb677">pointerMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_move_resize_filter_1ae2d7dbd9d4de5d997b7ca06dd50693bb">pointerMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_placeholder_input_event_filter_1a8f6dc36d8e29e4e2345060a0e059110a">pointerMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_screen_edge_input_filter_1a330b05ab89c292517cda6401a3d7aee1">pointerMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_selector_filter_1a589bcf9e8f200d17fc55e087553bf075">pointerMotion</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_motion_event" kindref="compound">PointerMotionEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="386" column="18" bodyfile="kwin/src/input.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a42d5cd1beabe79a9f0f47c7984a63e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::pointerButton</definition>
        <argsstring>(PointerButtonEvent *event)</argsstring>
        <name>pointerButton</name>
        <qualifiedname>KWin::InputEventFilter::pointerButton</qualifiedname>
        <reimplementedby refid="class_button_rebinds_filter_1ab6282e015772c51a8f53608014735c78">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_decoration_event_filter_1a1a2452df095b341d0cd384bf3f382a47">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1a7cd01ef052f903c8429f32f4d067694b">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drag_and_drop_input_filter_1a0c2b228359bfee00203a5964cf069844">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1ab6d8a9cda9277e58c8f5c15eac8ce79c">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1ad0390d9cee3d8a4941e0aa4d6089236c">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a2b93f00cc1a610359d0e4d9e0e154734">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_input_method_event_filter_1ac403c1f398b74cb2d2cee8316e684561">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_internal_window_event_filter_1a790b015db4b82f17bd9feb26fec2195d">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_move_resize_filter_1a692aad0027acb2dafc3669a3da2d8f70">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_placeholder_input_event_filter_1aa32ada57b11e1b77a164c4515497a078">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_popup_input_filter_1aafcda8bb50be86eda4cd0324a684b1bb">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_action_input_filter_1ac1a1756c7089f001e8feaa137993a688">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_selector_filter_1ad9d5d741cb97b1302539e897175d3557">pointerButton</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_xwl_1_1_xwayland_input_filter_1ad5cea55410c382ffcd66c0ff1918be25">pointerButton</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_button_event" kindref="compound">PointerButtonEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="387" column="18" bodyfile="kwin/src/input.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a8aedcd4f0130e1c00d08b87213f123c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::pointerFrame</definition>
        <argsstring>()</argsstring>
        <name>pointerFrame</name>
        <qualifiedname>KWin::InputEventFilter::pointerFrame</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_drag_and_drop_input_filter_1abf5f7d7d799ca43625ac35b76fd020b2">pointerFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1add1078ec066d5221cd8481b4f0aa35a6">pointerFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1abd38c7de35889aaa1706196527894fbc">pointerFrame</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="388" column="18" bodyfile="kwin/src/input.cpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a34fb678aeaece81927f9ffd95bb418a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::pointerAxis</definition>
        <argsstring>(PointerAxisEvent *event)</argsstring>
        <name>pointerAxis</name>
        <qualifiedname>KWin::InputEventFilter::pointerAxis</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_decoration_event_filter_1a652cf7aa58a481b48beb619f0297e162">pointerAxis</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1afd8268470bfe22ed19fdb750e8f157fc">pointerAxis</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1a16e0d9eeb67725faac634c19fca9209a">pointerAxis</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a26a8554913dad313546b1659208ced1d">pointerAxis</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a4a60acff5a0e88c6c8a1317a5004769e">pointerAxis</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_internal_window_event_filter_1a9a5deb699c6b67d44b70168254b5cb57">pointerAxis</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_move_resize_filter_1a09724ce65883c52b5aa5fd6ea38fd489">pointerAxis</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_placeholder_input_event_filter_1a6622547277703cfeacbe0bff406f5d68">pointerAxis</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_action_input_filter_1ac160281527b786fdb27b464bab1284e9">pointerAxis</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_selector_filter_1ad0b811ab9c954d007c51d727096c1b7b">pointerAxis</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_pointer_axis_event" kindref="compound">PointerAxisEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event filter for pointer axis events.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event information about the axis event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> to stop further event processing, <computeroutput>false</computeroutput> to pass to next filter </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="395" column="18" bodyfile="kwin/src/input.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1accb90817b0fb12456022cb3e1d89fd24" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::keyboardKey</definition>
        <argsstring>(KeyboardKeyEvent *event)</argsstring>
        <name>keyboardKey</name>
        <qualifiedname>KWin::InputEventFilter::keyboardKey</qualifiedname>
        <reimplementedby refid="class_bounce_keys_filter_1a7dd663c07b81800340198f5db5056f12">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1a1a74799edbc88fe00e1eef1061bd165e">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drag_and_drop_input_filter_1a9417376c829dc99f10ed40f43422d580">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1ad53e94664b91a0017014086f91837241">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1abb93e71fc9ad9f8c6fecbcf2fadfa132">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1ac953f73f4e301075b1e60c2ef4d38c80">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_input_method_event_filter_1a5a6c63ff779bff7e3d5ab62f0d4c7c0f">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_move_resize_filter_1aed1ba648e19814bec1eba0e80f1c4da6">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_placeholder_input_event_filter_1a31960cd10655711ad9d7ad3299f6fb1d">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_popup_input_filter_1aa9ec95fb661dbc99892dae50a93bb1d9">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_virtual_terminal_filter_1a375ed15094e8469bf58824ae14c70c00">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_selector_filter_1a4b74bfbe416f337a1799169a5ee815d8">keyboardKey</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_xwl_1_1_xwayland_input_filter_1aa4699800acf4edd4642a28a35f3daeef">keyboardKey</reimplementedby>
        <reimplementedby refid="class_sticky_keys_filter_1a027afe49ba151061b50028f8dab29780">keyboardKey</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event filter for keyboard events.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event information about the key event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> to stop further event processing, <computeroutput>false</computeroutput> to pass to next filter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="402" column="18" bodyfile="kwin/src/input.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a9d918ff67523d7f036943c9aa56a2e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::touchDown</definition>
        <argsstring>(qint32 id, const QPointF &amp;pos, std::chrono::microseconds time)</argsstring>
        <name>touchDown</name>
        <qualifiedname>KWin::InputEventFilter::touchDown</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_decoration_event_filter_1a517eae9b57feae01a89dc91d733cc309">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1af5fce7c35dd230507efa1ea79f765a14">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drag_and_drop_input_filter_1a939ce12c01b2e024ecb9841e83649b74">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1aaaace65eb42c809615b291b6a7667d3b">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a26376c2013dffc1240f558e2ba46e3fa">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a78f6ea0ebbb488df04a68d4fa36e3718">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_input_method_event_filter_1a88e5c7823c8116e0cd8d9bec73a15f4b">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_internal_window_event_filter_1a1054f3afb6c85743be62a5baf89174e6">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_move_resize_filter_1a27eb403be250315c517e55ca82f34981">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_placeholder_input_event_filter_1ac1cac6aef6ab620bf7ddaba60c396870">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_popup_input_filter_1a370af6a26e7edbb5a82380fee45df76b">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_screen_edge_input_filter_1a58bd46eff8a71753a3b20de8dc2f4444">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_action_input_filter_1abe989172fb8887a66d9cf56812081879">touchDown</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_selector_filter_1ad9ec43698b51e02614746d1bf1d1aa63">touchDown</reimplementedby>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="403" column="18" bodyfile="kwin/src/input.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1ab8d0440bac50eda28cba2ac9ed7548e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::touchMotion</definition>
        <argsstring>(qint32 id, const QPointF &amp;pos, std::chrono::microseconds time)</argsstring>
        <name>touchMotion</name>
        <qualifiedname>KWin::InputEventFilter::touchMotion</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_decoration_event_filter_1a59f27b89cef2c79e9d8757569d361da8">touchMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1af46829a6a6e63aba177f46417e838fc8">touchMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drag_and_drop_input_filter_1a26a32133c20028500be3fc15a082213a">touchMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1a3d5af61f47ec9ba0250f7156e2df2993">touchMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1af19c64abca88b62008eb9395ee2baf7c">touchMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a55cb658c09319b7bad1d789175ce99d8">touchMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_internal_window_event_filter_1a836ccb639044f8ce296ee995b4d53302">touchMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_move_resize_filter_1a64db534aa8820ad924eb6322fe63fc92">touchMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_placeholder_input_event_filter_1aa9c58eee3463f36fcf41f8c2f64d2d94">touchMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_screen_edge_input_filter_1af599d5554be3ab424d1f4dd784ef8558">touchMotion</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_selector_filter_1ad8286c2fae12c112333f777a8317202d">touchMotion</reimplementedby>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="404" column="18" bodyfile="kwin/src/input.cpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a608cb067e83ad4ed842476cc16ac0800" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::touchUp</definition>
        <argsstring>(qint32 id, std::chrono::microseconds time)</argsstring>
        <name>touchUp</name>
        <qualifiedname>KWin::InputEventFilter::touchUp</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_decoration_event_filter_1a5638240253f82b63893d3e14f63d8384">touchUp</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1a4b5a4574c3f47a78364f8374ea712382">touchUp</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_drag_and_drop_input_filter_1a662ea0c3a818b217689741e2b93db7e6">touchUp</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1ad220ddbfb97ac2d29e4d1152d7a15a97">touchUp</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1aa829f26d9bf716f91c6076c084c0d355">touchUp</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a2485b17a6c34cb6435a188dd3bde0fe5">touchUp</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_internal_window_event_filter_1a3ce55b6a2f5bd0fbac46feee112bd7e2">touchUp</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_move_resize_filter_1af1f83516208ee931612ef1c8a5b2236f">touchUp</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_placeholder_input_event_filter_1a26ae4ac1748e40f427d66b852712bd89">touchUp</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_screen_edge_input_filter_1ac18f4727959ccfa951eb3d18ebda5714">touchUp</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_selector_filter_1aa41a34a739756423ad4ac50c8b57e922">touchUp</reimplementedby>
        <param>
          <type>qint32</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="405" column="18" bodyfile="kwin/src/input.cpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1ae760899fce671a183fbc540b8beaeea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::touchCancel</definition>
        <argsstring>()</argsstring>
        <name>touchCancel</name>
        <qualifiedname>KWin::InputEventFilter::touchCancel</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1a96d9580abeb5f4f496b2cd545295bf18">touchCancel</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a220db7ba35ca1a0f9028f38b16c9c6d2">touchCancel</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1afbf426f9048d9b67990a29ee578df36f">touchCancel</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_internal_window_event_filter_1adae810cd44f02b7184d88658bfc2fe04">touchCancel</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="406" column="18" bodyfile="kwin/src/input.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1ae7e591c6e196c1c8929934c69da523b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::touchFrame</definition>
        <argsstring>()</argsstring>
        <name>touchFrame</name>
        <qualifiedname>KWin::InputEventFilter::touchFrame</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a13ff9662c087abb998fb02ca431b5455">touchFrame</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a5ede90e175cc645f38cd9a941c0aa2da">touchFrame</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="407" column="18" bodyfile="kwin/src/input.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1ad56a554ea3b7f767e31d332c4c5e055c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::pinchGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time)</argsstring>
        <name>pinchGestureBegin</name>
        <qualifiedname>KWin::InputEventFilter::pinchGestureBegin</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a8b30868c8f6669ccffaf9acbed36a01c">pinchGestureBegin</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a65071db47b40357821657a5c38d023fe">pinchGestureBegin</reimplementedby>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="409" column="18" bodyfile="kwin/src/input.cpp" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a598c8b3e5fe665b14a3e67a375832d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::pinchGestureUpdate</definition>
        <argsstring>(qreal scale, qreal angleDelta, const QPointF &amp;delta, std::chrono::microseconds time)</argsstring>
        <name>pinchGestureUpdate</name>
        <qualifiedname>KWin::InputEventFilter::pinchGestureUpdate</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a03f5d40139de231aee39c133709d2823">pinchGestureUpdate</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a3d2fb67590b46c504c6c8f44b5768a60">pinchGestureUpdate</reimplementedby>
        <param>
          <type>qreal</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>angleDelta</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="410" column="18" bodyfile="kwin/src/input.cpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a10658e9f1c58a685940eb12b435fe146" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::pinchGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time)</argsstring>
        <name>pinchGestureEnd</name>
        <qualifiedname>KWin::InputEventFilter::pinchGestureEnd</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1adde52aaf8d7f81cdbf20b60723fc146c">pinchGestureEnd</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1aa5b70aa770e6c1bbbbdd939d2ebd9378">pinchGestureEnd</reimplementedby>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="411" column="18" bodyfile="kwin/src/input.cpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1ab613d6168ad5c579aa19af90b88e87b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::pinchGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time)</argsstring>
        <name>pinchGestureCancelled</name>
        <qualifiedname>KWin::InputEventFilter::pinchGestureCancelled</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a07133292f3a02e94f1b818932f9089c8">pinchGestureCancelled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1ab87836dd95b8559456fef03889715bd3">pinchGestureCancelled</reimplementedby>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="412" column="18" bodyfile="kwin/src/input.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1aef58de63781487e47b4137c43a8d2c44" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::swipeGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time)</argsstring>
        <name>swipeGestureBegin</name>
        <qualifiedname>KWin::InputEventFilter::swipeGestureBegin</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1ac907b4dec640d4a4edb8c6bfcf060af4">swipeGestureBegin</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1af8f9169ad81be6647568f0efdd105671">swipeGestureBegin</reimplementedby>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="414" column="18" bodyfile="kwin/src/input.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a9a1557bd23c9ea3965a7130edc7462c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::swipeGestureUpdate</definition>
        <argsstring>(const QPointF &amp;delta, std::chrono::microseconds time)</argsstring>
        <name>swipeGestureUpdate</name>
        <qualifiedname>KWin::InputEventFilter::swipeGestureUpdate</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1ac32b60ecb0f51cb6e9701f0518b56140">swipeGestureUpdate</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1ad647f32df8f5b42abf1edb69fd3373c4">swipeGestureUpdate</reimplementedby>
        <param>
          <type>const QPointF &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="415" column="18" bodyfile="kwin/src/input.cpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1ab5b578ec73f882e2830f2fefe1f4775e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::swipeGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time)</argsstring>
        <name>swipeGestureEnd</name>
        <qualifiedname>KWin::InputEventFilter::swipeGestureEnd</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a99793477cf7242abd7633298003429d6">swipeGestureEnd</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a31c1f26edec9b98cef0a75fe023fbeb8">swipeGestureEnd</reimplementedby>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="416" column="18" bodyfile="kwin/src/input.cpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a6d1ec0e92bdcd24e12a11a68483f9517" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::swipeGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time)</argsstring>
        <name>swipeGestureCancelled</name>
        <qualifiedname>KWin::InputEventFilter::swipeGestureCancelled</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1acad0e749f0df4e4fd94100f334310b73">swipeGestureCancelled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1aac71c3fb45fe57a20a1d0d97910d439c">swipeGestureCancelled</reimplementedby>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="417" column="18" bodyfile="kwin/src/input.cpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1ac0990f77bd702079fc24ef1b85b6027a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::holdGestureBegin</definition>
        <argsstring>(int fingerCount, std::chrono::microseconds time)</argsstring>
        <name>holdGestureBegin</name>
        <qualifiedname>KWin::InputEventFilter::holdGestureBegin</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a2dcc4ba7d8d4df975aa9195ef7066af3">holdGestureBegin</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1ad66c102494dbe18369b000f1c4f54de3">holdGestureBegin</reimplementedby>
        <param>
          <type>int</type>
          <declname>fingerCount</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="419" column="18" bodyfile="kwin/src/input.cpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1aaf03914c307f1f6e300ac28e7dfd8bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::holdGestureEnd</definition>
        <argsstring>(std::chrono::microseconds time)</argsstring>
        <name>holdGestureEnd</name>
        <qualifiedname>KWin::InputEventFilter::holdGestureEnd</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1aac81f812f13819963b1474f1b848fc09">holdGestureEnd</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a459d558c4e150f71bdc1038ac67d5408">holdGestureEnd</reimplementedby>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="420" column="18" bodyfile="kwin/src/input.cpp" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1ae0d852136e0039a753ffed5feb537f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::holdGestureCancelled</definition>
        <argsstring>(std::chrono::microseconds time)</argsstring>
        <name>holdGestureCancelled</name>
        <qualifiedname>KWin::InputEventFilter::holdGestureCancelled</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_eis_input_capture_filter_1a9c8f63102f8eb7bad8ca1bef79329083">holdGestureCancelled</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a0892e140997f976b24a6354faf272d83">holdGestureCancelled</reimplementedby>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="421" column="18" bodyfile="kwin/src/input.cpp" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1aed8b92865343626379d8ac71f4bd2ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::switchEvent</definition>
        <argsstring>(SwitchEvent *event)</argsstring>
        <name>switchEvent</name>
        <qualifiedname>KWin::InputEventFilter::switchEvent</qualifiedname>
        <param>
          <type><ref refid="struct_k_win_1_1_switch_event" kindref="compound">SwitchEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="423" column="18" bodyfile="kwin/src/input.cpp" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a02802b4a5bef840c2c077f7271755858" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::tabletToolProximityEvent</definition>
        <argsstring>(TabletToolProximityEvent *event)</argsstring>
        <name>tabletToolProximityEvent</name>
        <qualifiedname>KWin::InputEventFilter::tabletToolProximityEvent</qualifiedname>
        <reimplementedby refid="class_button_rebinds_filter_1ab91ec197a366728226ceac508ee17bc7">tabletToolProximityEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_decoration_event_filter_1a48ba40b63df4207147ace9cf181eec78">tabletToolProximityEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1a9e1268a00c592fbaa1e367b1a3e7cb3f">tabletToolProximityEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1a2bb4dea6e873554b6944f42f54985110">tabletToolProximityEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1ac72fc9c645c8ace78fa836d3203614d0">tabletToolProximityEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_internal_window_event_filter_1ad079f65e13c8c2126badd36798af37fc">tabletToolProximityEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_move_resize_filter_1a71ec722486da1083f7c51bc63158e639">tabletToolProximityEvent</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_proximity_event" kindref="compound">TabletToolProximityEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="425" column="18" bodyfile="kwin/src/input.cpp" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1aff68194291337061cc9785d66c3043ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::tabletToolAxisEvent</definition>
        <argsstring>(TabletToolAxisEvent *event)</argsstring>
        <name>tabletToolAxisEvent</name>
        <qualifiedname>KWin::InputEventFilter::tabletToolAxisEvent</qualifiedname>
        <reimplementedby refid="class_button_rebinds_filter_1a7f0fcb24f6c17c7ec0b4069cc6e25460">tabletToolAxisEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_decoration_event_filter_1acce7be7344459e010b593e1104d7cc6a">tabletToolAxisEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1a10503fc9b5ac8e9527c8cfe142ca2014">tabletToolAxisEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1aad8d6dc648de7554b5276073e913021e">tabletToolAxisEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1aa6be8eabe70a9a4fd537806f9d42b742">tabletToolAxisEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_internal_window_event_filter_1a7f74e7b2b30ae87e65eaff624547fa2b">tabletToolAxisEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_move_resize_filter_1a835e337d6abb2f40f80382c7c9347e3b">tabletToolAxisEvent</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_axis_event" kindref="compound">TabletToolAxisEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="426" column="18" bodyfile="kwin/src/input.cpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1af1d39642578227a239b2aa8e55405367" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::tabletToolTipEvent</definition>
        <argsstring>(TabletToolTipEvent *event)</argsstring>
        <name>tabletToolTipEvent</name>
        <qualifiedname>KWin::InputEventFilter::tabletToolTipEvent</qualifiedname>
        <reimplementedby refid="class_button_rebinds_filter_1a286b3140bcda625ecd00d2c3edf24f31">tabletToolTipEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_decoration_event_filter_1a0a600c09a0edc185701a00d5bb8e40c7">tabletToolTipEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1a6736167d111280d51b2df1c1aa558d95">tabletToolTipEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1a5726eb81f0b9c17b55490a6225f21a81">tabletToolTipEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a4d59531f6acece08104b2e727cfa20ce">tabletToolTipEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_internal_window_event_filter_1a4aec87197f0493176663212bf9489a93">tabletToolTipEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_move_resize_filter_1a02d21bc44d70d2dc501613e9ba3dd242">tabletToolTipEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_popup_input_filter_1a36247c29454315ceabff3f01dc1d9b85">tabletToolTipEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_action_input_filter_1a8bbfefc61eacfb642e381093ef8a85f6">tabletToolTipEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_selector_filter_1ae92f85720f920a7e023471a1bb527d2c">tabletToolTipEvent</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_tip_event" kindref="compound">TabletToolTipEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="427" column="18" bodyfile="kwin/src/input.cpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a7a56441182925d5c0fd6876bc0414c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::tabletToolButtonEvent</definition>
        <argsstring>(TabletToolButtonEvent *event)</argsstring>
        <name>tabletToolButtonEvent</name>
        <qualifiedname>KWin::InputEventFilter::tabletToolButtonEvent</qualifiedname>
        <reimplementedby refid="class_button_rebinds_filter_1a015614df447507fd193f111b02a00bd3">tabletToolButtonEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1a958aaa82a541db01499d3eeb90e32284">tabletToolButtonEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1a8378bebf4a31dc3540f5956389bf40bb">tabletToolButtonEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a246c9f0765d88455386b43d21547e245">tabletToolButtonEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_action_input_filter_1adeb00cc4a764e51cc2132904cafad7e0">tabletToolButtonEvent</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_tool_button_event" kindref="compound">TabletToolButtonEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="428" column="18" bodyfile="kwin/src/input.cpp" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a4ef1fabdd3f77b942ee0596f400f32fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::tabletPadButtonEvent</definition>
        <argsstring>(TabletPadButtonEvent *event)</argsstring>
        <name>tabletPadButtonEvent</name>
        <qualifiedname>KWin::InputEventFilter::tabletPadButtonEvent</qualifiedname>
        <reimplementedby refid="class_button_rebinds_filter_1a456818af6e1ea50bb5109806abab17a4">tabletPadButtonEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1ad7a88e4fa9cef0f6954fb2e50e1c0f63">tabletPadButtonEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1a977e2063177a0433f61d33d8208c48be">tabletPadButtonEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a522fcfb89a15d61798e895b09772bcf5">tabletPadButtonEvent</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_pad_button_event" kindref="compound">TabletPadButtonEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="429" column="18" bodyfile="kwin/src/input.cpp" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1a02286f0b50679ecea3e1b231cb27861a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::tabletPadStripEvent</definition>
        <argsstring>(TabletPadStripEvent *event)</argsstring>
        <name>tabletPadStripEvent</name>
        <qualifiedname>KWin::InputEventFilter::tabletPadStripEvent</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1a3545bc7521291e5d9342a500dce45806">tabletPadStripEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1a22faea35b7cac771ac258b502c37db08">tabletPadStripEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1a3b6608a0540ae0af7e9925276d47355b">tabletPadStripEvent</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_pad_strip_event" kindref="compound">TabletPadStripEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="430" column="18" bodyfile="kwin/src/input.cpp" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1aeab73b0dbcd57d4b3f678a81de7489b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::tabletPadRingEvent</definition>
        <argsstring>(TabletPadRingEvent *event)</argsstring>
        <name>tabletPadRingEvent</name>
        <qualifiedname>KWin::InputEventFilter::tabletPadRingEvent</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_dpms_input_event_filter_1a2925587b70e487b9f2e89c921d5cd0c4">tabletPadRingEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_effects_filter_1abbfce55fb47288b693777c3008794baa">tabletPadRingEvent</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_forward_input_filter_1ad99c3050d97c1cf0e82f920794ed544a">tabletPadRingEvent</reimplementedby>
        <param>
          <type><ref refid="struct_k_win_1_1_tablet_pad_ring_event" kindref="compound">TabletPadRingEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="431" column="18" bodyfile="kwin/src/input.cpp" bodystart="240" bodyend="243"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_input_event_filter_1ae72e537c14e9de14f0720c8f25c6c4cd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::InputEventFilter::passToInputMethod</definition>
        <argsstring>(KeyboardKeyEvent *event)</argsstring>
        <name>passToInputMethod</name>
        <qualifiedname>KWin::InputEventFilter::passToInputMethod</qualifiedname>
        <param>
          <type><ref refid="struct_k_win_1_1_keyboard_key_event" kindref="compound">KeyboardKeyEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/input.h" line="434" column="10" bodyfile="kwin/src/input.cpp" bodystart="245" bodyend="261"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class for filtering input events inside <ref refid="class_k_win_1_1_input_redirection" kindref="compound">InputRedirection</ref>.</para>
<para>The idea behind the <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> is to have task oriented filters. E.g. there is one filter taking care of a locked screen, one to take care of interacting with window decorations, etc.</para>
<para>A concrete subclass can reimplement the virtual methods and decide whether an event should be filtered out or not by returning either <computeroutput>true</computeroutput> or <computeroutput>false</computeroutput>. E.g. the lock screen filter can easily ensure that all events are filtered out.</para>
<para>As soon as a filter returns <computeroutput>true</computeroutput> the processing is stopped. If a filter returns <computeroutput>false</computeroutput> the next one is invoked. This means a filter installed early gets to see more events than a filter installed later on.</para>
<para>Deleting an instance of <ref refid="class_k_win_1_1_input_event_filter" kindref="compound">InputEventFilter</ref> automatically uninstalls it from <ref refid="class_k_win_1_1_input_redirection" kindref="compound">InputRedirection</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BounceKeysFilter</label>
        <link refid="class_bounce_keys_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ButtonRebindsFilter</label>
        <link refid="class_button_rebinds_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::DecorationEventFilter</label>
        <link refid="class_k_win_1_1_decoration_event_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::DpmsInputEventFilter</label>
        <link refid="class_k_win_1_1_dpms_input_event_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>KWin::DragAndDropInputFilter</label>
        <link refid="class_k_win_1_1_drag_and_drop_input_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>KWin::EffectsFilter</label>
        <link refid="class_k_win_1_1_effects_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>KWin::EisInputCaptureFilter</label>
        <link refid="class_k_win_1_1_eis_input_capture_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>KWin::ForwardInputFilter</label>
        <link refid="class_k_win_1_1_forward_input_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::InputEventFilter</label>
        <link refid="class_k_win_1_1_input_event_filter"/>
      </node>
      <node id="10">
        <label>KWin::InputMethodEventFilter</label>
        <link refid="class_k_win_1_1_input_method_event_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>KWin::InternalWindowEventFilter</label>
        <link refid="class_k_win_1_1_internal_window_event_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>KWin::MoveResizeFilter</label>
        <link refid="class_k_win_1_1_move_resize_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>KWin::PlaceholderInputEventFilter</label>
        <link refid="class_k_win_1_1_placeholder_input_event_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>KWin::PopupInputFilter</label>
        <link refid="class_k_win_1_1_popup_input_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>KWin::ScreenEdgeInputFilter</label>
        <link refid="class_k_win_1_1_screen_edge_input_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>KWin::VirtualTerminalFilter</label>
        <link refid="class_k_win_1_1_virtual_terminal_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>KWin::WindowActionInputFilter</label>
        <link refid="class_k_win_1_1_window_action_input_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>KWin::WindowSelectorFilter</label>
        <link refid="class_k_win_1_1_window_selector_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>KWin::Xwl::XwaylandInputFilter</label>
        <link refid="class_k_win_1_1_xwl_1_1_xwayland_input_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>StickyKeysFilter</label>
        <link refid="class_sticky_keys_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="kwin/src/input.h" line="366" column="1" bodyfile="kwin/src/input.h" bodystart="367" bodyend="438"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_input_event_filter_1ac0990f77bd702079fc24ef1b85b6027a" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>holdGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ae0d852136e0039a753ffed5feb537f1c" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>holdGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aaf03914c307f1f6e300ac28e7dfd8bbc" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>holdGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a0dacba9bb1bca5bd8462518d8ae07694" prot="public" virt="non-virtual"><scope>KWin::InputEventFilter</scope><name>InputEventFilter</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1accb90817b0fb12456022cb3e1d89fd24" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>keyboardKey</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a92ae836dcbf39ada63db48697ccffb6c" prot="private" virt="non-virtual"><scope>KWin::InputEventFilter</scope><name>m_weight</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ae72e537c14e9de14f0720c8f25c6c4cd" prot="protected" virt="non-virtual"><scope>KWin::InputEventFilter</scope><name>passToInputMethod</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ad56a554ea3b7f767e31d332c4c5e055c" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>pinchGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ab613d6168ad5c579aa19af90b88e87b1" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>pinchGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a10658e9f1c58a685940eb12b435fe146" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>pinchGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a598c8b3e5fe665b14a3e67a375832d08" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>pinchGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a34fb678aeaece81927f9ffd95bb418a6" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>pointerAxis</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a42d5cd1beabe79a9f0f47c7984a63e03" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>pointerButton</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a8aedcd4f0130e1c00d08b87213f123c1" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>pointerFrame</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a0e8cf7f7d0816fa15dbfef65300bdf74" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>pointerMotion</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aef58de63781487e47b4137c43a8d2c44" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>swipeGestureBegin</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a6d1ec0e92bdcd24e12a11a68483f9517" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>swipeGestureCancelled</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ab5b578ec73f882e2830f2fefe1f4775e" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>swipeGestureEnd</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a9a1557bd23c9ea3965a7130edc7462c5" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>swipeGestureUpdate</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aed8b92865343626379d8ac71f4bd2ea4" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>switchEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a4ef1fabdd3f77b942ee0596f400f32fc" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>tabletPadButtonEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aeab73b0dbcd57d4b3f678a81de7489b4" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>tabletPadRingEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a02286f0b50679ecea3e1b231cb27861a" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>tabletPadStripEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1aff68194291337061cc9785d66c3043ce" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>tabletToolAxisEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a7a56441182925d5c0fd6876bc0414c8e" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>tabletToolButtonEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a02802b4a5bef840c2c077f7271755858" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>tabletToolProximityEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1af1d39642578227a239b2aa8e55405367" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>tabletToolTipEvent</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ae760899fce671a183fbc540b8beaeea8" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>touchCancel</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a9d918ff67523d7f036943c9aa56a2e1b" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>touchDown</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ae7e591c6e196c1c8929934c69da523b9" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>touchFrame</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ab8d0440bac50eda28cba2ac9ed7548e1" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>touchMotion</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a608cb067e83ad4ed842476cc16ac0800" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1a52a11556fd89cea278b3fcb79d4f6a78" prot="public" virt="non-virtual"><scope>KWin::InputEventFilter</scope><name>weight</name></member>
      <member refid="class_k_win_1_1_input_event_filter_1ab87db3c27248ac5074cf84ee87d94c9c" prot="public" virt="virtual"><scope>KWin::InputEventFilter</scope><name>~InputEventFilter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
