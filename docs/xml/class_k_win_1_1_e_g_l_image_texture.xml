<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_e_g_l_image_texture" kind="class" language="C++" prot="public">
    <compoundname>KWin::EGLImageTexture</compoundname>
    <basecompoundref refid="class_k_win_1_1_g_l_texture" prot="public" virt="non-virtual">KWin::GLTexture</basecompoundref>
    <includes refid="eglimagetexture_8h" local="no">eglimagetexture.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_e_g_l_image_texture_1a5ff13a0ed58bdd94477db08d4aff4b27" prot="public" static="no" mutable="no">
        <type><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref></type>
        <definition>EGLImageKHR KWin::EGLImageTexture::m_image</definition>
        <argsstring></argsstring>
        <name>m_image</name>
        <qualifiedname>KWin::EGLImageTexture::m_image</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglimagetexture.h" line="30" column="17" bodyfile="kwin/src/opengl/eglimagetexture.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_e_g_l_image_texture_1afc7ed10f1860824ba767c9fa5c45d2e5" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *const</type>
        <definition>EglDisplay* const KWin::EGLImageTexture::m_display</definition>
        <argsstring></argsstring>
        <name>m_display</name>
        <qualifiedname>KWin::EGLImageTexture::m_display</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglimagetexture.h" line="31" column="22" bodyfile="kwin/src/opengl/eglimagetexture.h" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_image_texture_1ad258058164899ecb44d9153cd146462e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::EGLImageTexture::EGLImageTexture</definition>
        <argsstring>(EglDisplay *display, EGLImageKHR image, uint textureId, int internalFormat, const QSize &amp;size, uint32_t target)</argsstring>
        <name>EGLImageTexture</name>
        <qualifiedname>KWin::EGLImageTexture::EGLImageTexture</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref></type>
          <declname>image</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>internalFormat</declname>
        </param>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglimagetexture.h" line="25" column="14" bodyfile="kwin/src/opengl/eglimagetexture.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_image_texture_1ac7f44f6242dbadd94e6bafd1d4c11b63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::EGLImageTexture::~EGLImageTexture</definition>
        <argsstring>() override</argsstring>
        <name>~EGLImageTexture</name>
        <qualifiedname>KWin::EGLImageTexture::~EGLImageTexture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglimagetexture.h" line="26" column="5" bodyfile="kwin/src/opengl/eglimagetexture.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_e_g_l_image_texture_1a40e639dbe342260aa5d6979c91131e02" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_e_g_l_image_texture" kindref="compound">EGLImageTexture</ref> &gt;</type>
        <definition>std::shared_ptr&lt; EGLImageTexture &gt; KWin::EGLImageTexture::create</definition>
        <argsstring>(EglDisplay *display, EGLImageKHR image, int internalFormat, const QSize &amp;size, bool externalOnly)</argsstring>
        <name>create</name>
        <qualifiedname>KWin::EGLImageTexture::create</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_egl_display" kindref="compound">EglDisplay</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type><ref refid="eglimagetexture_8h_1ac56f71530c81ade3ddaab91f45696909" kindref="member">EGLImageKHR</ref></type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>internalFormat</declname>
        </param>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>externalOnly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/opengl/eglimagetexture.h" line="28" column="28" bodyfile="kwin/src/opengl/eglimagetexture.cpp" bodystart="32" bodyend="47"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::EGLImageTexture</label>
        <link refid="class_k_win_1_1_e_g_l_image_texture"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::GLTexture</label>
        <link refid="class_k_win_1_1_g_l_texture"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::EGLImageTexture</label>
        <link refid="class_k_win_1_1_e_g_l_image_texture"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_display</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KWin::EglDisplay</label>
        <link refid="class_k_win_1_1_egl_display"/>
      </node>
      <node id="2">
        <label>KWin::GLTexture</label>
        <link refid="class_k_win_1_1_g_l_texture"/>
      </node>
    </collaborationgraph>
    <location file="kwin/src/opengl/eglimagetexture.h" line="22" column="1" bodyfile="kwin/src/opengl/eglimagetexture.h" bodystart="23" bodyend="32"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_g_l_texture_1a22b5bb33ada7c4b53f73c57f5405289f" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>allocate</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1af4d227b648ea821f3f2ad01a7a166daa" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>bind</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a2b8c1ac9232f0356ac604a963350e91a" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>contentTransform</name></member>
      <member refid="class_k_win_1_1_e_g_l_image_texture_1a40e639dbe342260aa5d6979c91131e02" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>create</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1aa3d73c1663aaaa8611fcef846fc78742" prot="public" virt="non-virtual" ambiguityscope="KWin::GLTexture::"><scope>KWin::EGLImageTexture</scope><name>create</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a832006557690b1b0e0b605f1553742aa" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>createNonOwningWrapper</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a1060852093ece0363e9abcf49da3c8af" prot="protected" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>d</name></member>
      <member refid="class_k_win_1_1_e_g_l_image_texture_1ad258058164899ecb44d9153cd146462e" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>EGLImageTexture</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a1e49874ce269e7be549d24be64fdc51c" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>filter</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a40fec104ab8844fcccf19be86ec74986" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>generateMipmaps</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1ad2e7540fd78f144ccfd5fb010bff9a36" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>GLTexture</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1ac820e0fd92ee134c1d46ce061b5b6e4f" prot="protected" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>GLTexture</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1aad07b441c0726ead8e91b73a750c0289" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>height</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a8c7cd33c9ac0c984b6aa50c7a8f258ea" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>internalFormat</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a4732e9350196f128470ca6a56dd89de9" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>isNull</name></member>
      <member refid="class_k_win_1_1_e_g_l_image_texture_1afc7ed10f1860824ba767c9fa5c45d2e5" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>m_display</name></member>
      <member refid="class_k_win_1_1_e_g_l_image_texture_1a5ff13a0ed58bdd94477db08d4aff4b27" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>m_image</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1ade184fbdb00efd4e35c42a4b975a100a" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>matrix</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1ae171f72388c70d1e30af3da712def893" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>render</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a787e7f2d161a88b97e0d998bbcf9fd5a" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>render</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1aa430a60e300f2fadeca388f6081c491f" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>render</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a2c981651fa4c6b0779bf2efd8a30bebf" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>setContentTransform</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a59759b0cac258d426a5583b6ae01e11b" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>setFilter</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1aae1de5a574570f21feb3438a05011014" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>setSize</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1aba9725197cdfa27ed5db7a16463d43f9" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>setSwizzle</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1aec13a982bbfa6c29e0502eb368f643bb" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>setWrapMode</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a1dec6b68997f434cadbaaed078875ece" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>size</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a396def695ca56d81cf47fecc0dc2d74a" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>supportsFormatRG</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1af0cdc1bf0a2c14c934caa8779e8ef96c" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>supportsSwizzle</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1ae095181b76e95834bfba13b60cdcb1a2" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>target</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a360a391fa414aca738ddd07dee9c4cbd" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>texture</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a0c9c3d518e8a66594937e820d31f5cd2" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>toImage</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a411bfda8f73dd14077b15b3f4a87457f" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>unbind</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a8089683b63e92df439d27a1e3ada4404" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>update</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1abfb1321ce70899df263d8c8db90a2d59" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>upload</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1af2232b9dada7294a45a7a9e2784068d6" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>upload</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a1ca4334af1a415346fca662ffba25da1" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>width</name></member>
      <member refid="class_k_win_1_1_e_g_l_image_texture_1ac7f44f6242dbadd94e6bafd1d4c11b63" prot="public" virt="non-virtual"><scope>KWin::EGLImageTexture</scope><name>~EGLImageTexture</name></member>
      <member refid="class_k_win_1_1_g_l_texture_1a467f2f1ee778d3c04dbe7c3eecf2737e" prot="public" virt="virtual"><scope>KWin::EGLImageTexture</scope><name>~GLTexture</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
