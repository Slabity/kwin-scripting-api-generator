<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_output_frame" kind="class" language="C++" prot="public">
    <compoundname>KWin::OutputFrame</compoundname>
    <includes refid="renderbackend_8h" local="no">renderbackend.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1a37197d275e5fea32310b0918b309f9cf" prot="private" static="no" mutable="no">
        <type>const QPointer&lt; <ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> &gt;</type>
        <definition>const QPointer&lt;RenderLoop&gt; KWin::OutputFrame::m_loop</definition>
        <argsstring></argsstring>
        <name>m_loop</name>
        <qualifiedname>KWin::OutputFrame::m_loop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="106" column="20" bodyfile="kwin/src/core/renderbackend.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1a545e096a4a36460f6ec298ef0aff3991" prot="private" static="no" mutable="no">
        <type>const std::chrono::nanoseconds</type>
        <definition>const std::chrono::nanoseconds KWin::OutputFrame::m_refreshDuration</definition>
        <argsstring></argsstring>
        <name>m_refreshDuration</name>
        <qualifiedname>KWin::OutputFrame::m_refreshDuration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="107" column="36" bodyfile="kwin/src/core/renderbackend.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1ad6d00fe09c5e7fecd324735c12fb8cf9" prot="private" static="no" mutable="no">
        <type>const std::chrono::steady_clock::time_point</type>
        <definition>const std::chrono::steady_clock::time_point KWin::OutputFrame::m_targetPageflipTime</definition>
        <argsstring></argsstring>
        <name>m_targetPageflipTime</name>
        <qualifiedname>KWin::OutputFrame::m_targetPageflipTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="108" column="49" bodyfile="kwin/src/core/renderbackend.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1a59dff03e8e020e4647adaa6be45b0062" prot="private" static="no" mutable="no">
        <type>const std::chrono::nanoseconds</type>
        <definition>const std::chrono::nanoseconds KWin::OutputFrame::m_predictedRenderTime</definition>
        <argsstring></argsstring>
        <name>m_predictedRenderTime</name>
        <qualifiedname>KWin::OutputFrame::m_predictedRenderTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="109" column="36" bodyfile="kwin/src/core/renderbackend.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1a2d348c5f9d80d6498e62d12547826721" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="class_k_win_1_1_presentation_feedback" kindref="compound">PresentationFeedback</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;PresentationFeedback&gt; &gt; KWin::OutputFrame::m_feedbacks</definition>
        <argsstring></argsstring>
        <name>m_feedbacks</name>
        <qualifiedname>KWin::OutputFrame::m_feedbacks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="110" column="17" bodyfile="kwin/src/core/renderbackend.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1adb52a75d89f36cc87eb0292cbdd9f1df" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="namespace_k_win_1ae822402a75b1dbd6c2afc72f87fa60a6" kindref="member">ContentType</ref> &gt;</type>
        <definition>std::optional&lt;ContentType&gt; KWin::OutputFrame::m_contentType</definition>
        <argsstring></argsstring>
        <name>m_contentType</name>
        <qualifiedname>KWin::OutputFrame::m_contentType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="111" column="19" bodyfile="kwin/src/core/renderbackend.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1afcffaf0221c1f8f74060075557f43acf" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref></type>
        <definition>PresentationMode KWin::OutputFrame::m_presentationMode</definition>
        <argsstring></argsstring>
        <name>m_presentationMode</name>
        <qualifiedname>KWin::OutputFrame::m_presentationMode</qualifiedname>
        <initializer>= <ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a98b06ef30caa386be0f897d0e5c5a135" kindref="member">PresentationMode::VSync</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="112" column="22" bodyfile="kwin/src/core/renderbackend.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1aede3b8850b4a11ec4ac9d7fc209a348e" prot="private" static="no" mutable="no">
        <type>QRegion</type>
        <definition>QRegion KWin::OutputFrame::m_damage</definition>
        <argsstring></argsstring>
        <name>m_damage</name>
        <qualifiedname>KWin::OutputFrame::m_damage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="113" column="13" bodyfile="kwin/src/core/renderbackend.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1a56702dd379035aa7b31975db476d0732" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="class_k_win_1_1_render_time_query" kindref="compound">RenderTimeQuery</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;RenderTimeQuery&gt; &gt; KWin::OutputFrame::m_renderTimeQueries</definition>
        <argsstring></argsstring>
        <name>m_renderTimeQueries</name>
        <qualifiedname>KWin::OutputFrame::m_renderTimeQueries</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="114" column="17" bodyfile="kwin/src/core/renderbackend.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1a147a37af2224c35493c45ad86ec6e9d5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::OutputFrame::m_presented</definition>
        <argsstring></argsstring>
        <name>m_presented</name>
        <qualifiedname>KWin::OutputFrame::m_presented</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="115" column="10" bodyfile="kwin/src/core/renderbackend.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1a53835d5d222dca102b57e6543f39707a" prot="private" static="no" mutable="no">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt;double&gt; KWin::OutputFrame::m_brightness</definition>
        <argsstring></argsstring>
        <name>m_brightness</name>
        <qualifiedname>KWin::OutputFrame::m_brightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="116" column="19" bodyfile="kwin/src/core/renderbackend.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_output_frame_1a9f1ce8baef0c37970281390660cb6261" prot="private" static="no" mutable="no">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt;double&gt; KWin::OutputFrame::m_artificialHdrHeadroom</definition>
        <argsstring></argsstring>
        <name>m_artificialHdrHeadroom</name>
        <qualifiedname>KWin::OutputFrame::m_artificialHdrHeadroom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="117" column="19" bodyfile="kwin/src/core/renderbackend.h" bodystart="117" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1aab9b23ffbdaba4937c9da4b02015f8d4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::OutputFrame::OutputFrame</definition>
        <argsstring>(RenderLoop *loop, std::chrono::nanoseconds refreshDuration)</argsstring>
        <name>OutputFrame</name>
        <qualifiedname>KWin::OutputFrame::OutputFrame</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type>std::chrono::nanoseconds</type>
          <declname>refreshDuration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="76" column="14" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a4cd64d3e7378a94820c7370c95c2777c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::OutputFrame::~OutputFrame</definition>
        <argsstring>()</argsstring>
        <name>~OutputFrame</name>
        <qualifiedname>KWin::OutputFrame::~OutputFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="77" column="5" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="55" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1aef1211064d01d61f5d4121bb20dbc2f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputFrame::presented</definition>
        <argsstring>(std::chrono::nanoseconds timestamp, PresentationMode mode)</argsstring>
        <name>presented</name>
        <qualifiedname>KWin::OutputFrame::presented</qualifiedname>
        <param>
          <type>std::chrono::nanoseconds</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="79" column="10" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="88" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a5e62b43777a3b46765d48ff7265ef8eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputFrame::addFeedback</definition>
        <argsstring>(std::unique_ptr&lt; PresentationFeedback &gt; &amp;&amp;feedback)</argsstring>
        <name>addFeedback</name>
        <qualifiedname>KWin::OutputFrame::addFeedback</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_presentation_feedback" kindref="compound">PresentationFeedback</ref> &gt; &amp;&amp;</type>
          <declname>feedback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="81" column="10" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1ab41144b758501086879768b80ea02c72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputFrame::setContentType</definition>
        <argsstring>(ContentType type)</argsstring>
        <name>setContentType</name>
        <qualifiedname>KWin::OutputFrame::setContentType</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1ae822402a75b1dbd6c2afc72f87fa60a6" kindref="member">ContentType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="83" column="10" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a04aaeda7249fb950f09ff00376e0cbd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="namespace_k_win_1ae822402a75b1dbd6c2afc72f87fa60a6" kindref="member">ContentType</ref> &gt;</type>
        <definition>std::optional&lt; ContentType &gt; KWin::OutputFrame::contentType</definition>
        <argsstring>() const</argsstring>
        <name>contentType</name>
        <qualifiedname>KWin::OutputFrame::contentType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="84" column="19" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a9598496c88df295e025df83e67bf58f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputFrame::setPresentationMode</definition>
        <argsstring>(PresentationMode mode)</argsstring>
        <name>setPresentationMode</name>
        <qualifiedname>KWin::OutputFrame::setPresentationMode</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="86" column="10" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a1addeb54d871c28a83f75c249bda6d02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref></type>
        <definition>PresentationMode KWin::OutputFrame::presentationMode</definition>
        <argsstring>() const</argsstring>
        <name>presentationMode</name>
        <qualifiedname>KWin::OutputFrame::presentationMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="87" column="22" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a8ace2e5dc2bc14312b4a83bc285d18dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputFrame::setDamage</definition>
        <argsstring>(const QRegion &amp;region)</argsstring>
        <name>setDamage</name>
        <qualifiedname>KWin::OutputFrame::setDamage</qualifiedname>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="89" column="10" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a2578e0107c2e6cc5f86659339d0c4684" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRegion</type>
        <definition>QRegion KWin::OutputFrame::damage</definition>
        <argsstring>() const</argsstring>
        <name>damage</name>
        <qualifiedname>KWin::OutputFrame::damage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="90" column="13" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1aaede3e4b1639e0772c87e0105e49981f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputFrame::addRenderTimeQuery</definition>
        <argsstring>(std::unique_ptr&lt; RenderTimeQuery &gt; &amp;&amp;query)</argsstring>
        <name>addRenderTimeQuery</name>
        <qualifiedname>KWin::OutputFrame::addRenderTimeQuery</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_render_time_query" kindref="compound">RenderTimeQuery</ref> &gt; &amp;&amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="91" column="10" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1adaf1e373e89caf839bc0f546389a9600" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::steady_clock::time_point</type>
        <definition>std::chrono::steady_clock::time_point KWin::OutputFrame::targetPageflipTime</definition>
        <argsstring>() const</argsstring>
        <name>targetPageflipTime</name>
        <qualifiedname>KWin::OutputFrame::targetPageflipTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="93" column="43" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a898456fed1cda2918aaa1aee1efdab6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds KWin::OutputFrame::refreshDuration</definition>
        <argsstring>() const</argsstring>
        <name>refreshDuration</name>
        <qualifiedname>KWin::OutputFrame::refreshDuration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="94" column="30" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a486fd2fa93eac82b8307df482429628c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds KWin::OutputFrame::predictedRenderTime</definition>
        <argsstring>() const</argsstring>
        <name>predictedRenderTime</name>
        <qualifiedname>KWin::OutputFrame::predictedRenderTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="95" column="30" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1adfdfeed0e4b3676314d2ed4359756577" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::OutputFrame::brightness</definition>
        <argsstring>() const</argsstring>
        <name>brightness</name>
        <qualifiedname>KWin::OutputFrame::brightness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="97" column="19" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a6ce71a97a48117b917ca67d42ecb54f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputFrame::setBrightness</definition>
        <argsstring>(double brightness)</argsstring>
        <name>setBrightness</name>
        <qualifiedname>KWin::OutputFrame::setBrightness</qualifiedname>
        <param>
          <type>double</type>
          <declname>brightness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="98" column="10" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1a0157ba120db844d9f41db11b7c29fefc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt; double &gt; KWin::OutputFrame::artificialHdrHeadroom</definition>
        <argsstring>() const</argsstring>
        <name>artificialHdrHeadroom</name>
        <qualifiedname>KWin::OutputFrame::artificialHdrHeadroom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="100" column="19" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1aec9d52289649ff9568fc8074bd973280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OutputFrame::setArtificialHdrHeadroom</definition>
        <argsstring>(double edr)</argsstring>
        <name>setArtificialHdrHeadroom</name>
        <qualifiedname>KWin::OutputFrame::setArtificialHdrHeadroom</qualifiedname>
        <param>
          <type>double</type>
          <declname>edr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="101" column="10" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="167" bodyend="170"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_output_frame_1af9771743c934e7efadbc355a34bb7fac" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="struct_k_win_1_1_render_time_span" kindref="compound">RenderTimeSpan</ref> &gt;</type>
        <definition>std::optional&lt; RenderTimeSpan &gt; KWin::OutputFrame::queryRenderTime</definition>
        <argsstring>() const</argsstring>
        <name>queryRenderTime</name>
        <qualifiedname>KWin::OutputFrame::queryRenderTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/core/renderbackend.h" line="104" column="19" bodyfile="kwin/src/core/renderbackend.cpp" bodystart="68" bodyend="86"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/core/renderbackend.h" line="73" column="1" bodyfile="kwin/src/core/renderbackend.h" bodystart="74" bodyend="118"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_output_frame_1a5e62b43777a3b46765d48ff7265ef8eb" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>addFeedback</name></member>
      <member refid="class_k_win_1_1_output_frame_1aaede3e4b1639e0772c87e0105e49981f" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>addRenderTimeQuery</name></member>
      <member refid="class_k_win_1_1_output_frame_1a0157ba120db844d9f41db11b7c29fefc" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>artificialHdrHeadroom</name></member>
      <member refid="class_k_win_1_1_output_frame_1adfdfeed0e4b3676314d2ed4359756577" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>brightness</name></member>
      <member refid="class_k_win_1_1_output_frame_1a04aaeda7249fb950f09ff00376e0cbd1" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>contentType</name></member>
      <member refid="class_k_win_1_1_output_frame_1a2578e0107c2e6cc5f86659339d0c4684" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>damage</name></member>
      <member refid="class_k_win_1_1_output_frame_1a9f1ce8baef0c37970281390660cb6261" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_artificialHdrHeadroom</name></member>
      <member refid="class_k_win_1_1_output_frame_1a53835d5d222dca102b57e6543f39707a" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_brightness</name></member>
      <member refid="class_k_win_1_1_output_frame_1adb52a75d89f36cc87eb0292cbdd9f1df" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_contentType</name></member>
      <member refid="class_k_win_1_1_output_frame_1aede3b8850b4a11ec4ac9d7fc209a348e" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_damage</name></member>
      <member refid="class_k_win_1_1_output_frame_1a2d348c5f9d80d6498e62d12547826721" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_feedbacks</name></member>
      <member refid="class_k_win_1_1_output_frame_1a37197d275e5fea32310b0918b309f9cf" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_loop</name></member>
      <member refid="class_k_win_1_1_output_frame_1a59dff03e8e020e4647adaa6be45b0062" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_predictedRenderTime</name></member>
      <member refid="class_k_win_1_1_output_frame_1afcffaf0221c1f8f74060075557f43acf" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_presentationMode</name></member>
      <member refid="class_k_win_1_1_output_frame_1a147a37af2224c35493c45ad86ec6e9d5" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_presented</name></member>
      <member refid="class_k_win_1_1_output_frame_1a545e096a4a36460f6ec298ef0aff3991" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_refreshDuration</name></member>
      <member refid="class_k_win_1_1_output_frame_1a56702dd379035aa7b31975db476d0732" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_renderTimeQueries</name></member>
      <member refid="class_k_win_1_1_output_frame_1ad6d00fe09c5e7fecd324735c12fb8cf9" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>m_targetPageflipTime</name></member>
      <member refid="class_k_win_1_1_output_frame_1aab9b23ffbdaba4937c9da4b02015f8d4" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>OutputFrame</name></member>
      <member refid="class_k_win_1_1_output_frame_1a486fd2fa93eac82b8307df482429628c" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>predictedRenderTime</name></member>
      <member refid="class_k_win_1_1_output_frame_1a1addeb54d871c28a83f75c249bda6d02" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>presentationMode</name></member>
      <member refid="class_k_win_1_1_output_frame_1aef1211064d01d61f5d4121bb20dbc2f6" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>presented</name></member>
      <member refid="class_k_win_1_1_output_frame_1af9771743c934e7efadbc355a34bb7fac" prot="private" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>queryRenderTime</name></member>
      <member refid="class_k_win_1_1_output_frame_1a898456fed1cda2918aaa1aee1efdab6f" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>refreshDuration</name></member>
      <member refid="class_k_win_1_1_output_frame_1aec9d52289649ff9568fc8074bd973280" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>setArtificialHdrHeadroom</name></member>
      <member refid="class_k_win_1_1_output_frame_1a6ce71a97a48117b917ca67d42ecb54f4" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>setBrightness</name></member>
      <member refid="class_k_win_1_1_output_frame_1ab41144b758501086879768b80ea02c72" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>setContentType</name></member>
      <member refid="class_k_win_1_1_output_frame_1a8ace2e5dc2bc14312b4a83bc285d18dc" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>setDamage</name></member>
      <member refid="class_k_win_1_1_output_frame_1a9598496c88df295e025df83e67bf58f4" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>setPresentationMode</name></member>
      <member refid="class_k_win_1_1_output_frame_1adaf1e373e89caf839bc0f546389a9600" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>targetPageflipTime</name></member>
      <member refid="class_k_win_1_1_output_frame_1a4cd64d3e7378a94820c7370c95c2777c" prot="public" virt="non-virtual"><scope>KWin::OutputFrame</scope><name>~OutputFrame</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
