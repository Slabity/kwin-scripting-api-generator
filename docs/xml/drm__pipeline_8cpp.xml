<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="drm__pipeline_8cpp" kind="file" language="C++">
    <compoundname>drm_pipeline.cpp</compoundname>
    <includes refid="drm__pipeline_8h" local="yes">drm_pipeline.h</includes>
    <includes local="no">errno.h</includes>
    <includes refid="iccprofile_8h" local="yes">core/iccprofile.h</includes>
    <includes refid="session_8h" local="yes">core/session.h</includes>
    <includes refid="drm__backend_8h" local="yes">drm_backend.h</includes>
    <includes refid="drm__buffer_8h" local="yes">drm_buffer.h</includes>
    <includes refid="drm__commit_8h" local="yes">drm_commit.h</includes>
    <includes refid="drm__commit__thread_8h" local="yes">drm_commit_thread.h</includes>
    <includes refid="drm__connector_8h" local="yes">drm_connector.h</includes>
    <includes refid="drm__crtc_8h" local="yes">drm_crtc.h</includes>
    <includes refid="drm__egl__backend_8h" local="yes">drm_egl_backend.h</includes>
    <includes refid="drm__gpu_8h" local="yes">drm_gpu.h</includes>
    <includes refid="drm__layer_8h" local="yes">drm_layer.h</includes>
    <includes refid="drm__logging_8h" local="yes">drm_logging.h</includes>
    <includes refid="drm__output_8h" local="yes">drm_output.h</includes>
    <includes refid="drm__plane_8h" local="yes">drm_plane.h</includes>
    <includes local="no">drm_fourcc.h</includes>
    <includes local="no">gbm.h</includes>
    <incdepgraph>
      <node id="112">
        <label>drm_abstract_output.h</label>
        <link refid="drm__abstract__output_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>drm_backend.h</label>
        <link refid="drm__backend_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>drm_blob.h</label>
        <link refid="drm__blob_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>drm_buffer.h</label>
        <link refid="drm__buffer_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>drm_colorop.h</label>
        <link refid="drm__colorop_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>drm_commit.h</label>
        <link refid="drm__commit_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>drm_commit_thread.h</label>
        <link refid="drm__commit__thread_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>drm_connector.h</label>
        <link refid="drm__connector_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>drm_crtc.h</label>
        <link refid="drm__crtc_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>drm_egl_backend.h</label>
        <link refid="drm__egl__backend_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>drm_gpu.h</label>
        <link refid="drm__gpu_8h"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>drm_layer.h</label>
        <link refid="drm__layer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>drm_logging.h</label>
        <link refid="drm__logging_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>drm_object.h</label>
        <link refid="drm__object_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>drm_output.h</label>
        <link refid="drm__output_8h"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/backends/drm/drm_pipeline.cpp</label>
        <link refid="drm__pipeline_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>drm_pipeline.h</label>
        <link refid="drm__pipeline_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>drm_plane.h</label>
        <link refid="drm__plane_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>drm_pointer.h</label>
        <link refid="drm__pointer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>drm_property.h</label>
        <link refid="drm__property_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>drm_render_backend.h</label>
        <link refid="drm__render__backend_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>colorlut3d.h</label>
        <link refid="colorlut3d_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>core/colorpipeline.h</label>
        <link refid="colorpipeline_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>colortransformation.h</label>
        <link refid="colortransformation_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>core/drmdevice.h</label>
        <link refid="drmdevice_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>graphicsbufferallocator.h</label>
        <link refid="graphicsbufferallocator_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>core/iccprofile.h</label>
        <link refid="iccprofile_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>core/outputlayer.h</label>
        <link refid="outputlayer_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>renderjournal.h</label>
        <link refid="renderjournal_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>core/renderloop_p.h</label>
        <link refid="renderloop__p_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>core/session.h</label>
        <link refid="session_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>opengl/eglcontext.h</label>
        <link refid="eglcontext_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>opengl/egldisplay.h</label>
        <link refid="egldisplay_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>opengl/glframebuffer.h</label>
        <link refid="glframebuffer_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>opengl/glshader.h</label>
        <link refid="glshader_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>opengl/glshadermanager.h</label>
        <link refid="glshadermanager_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>opengl/gltexture.h</label>
        <link refid="gltexture_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>opengl/glutils.h</label>
        <link refid="glutils_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>opengl/glvertexbuffer.h</label>
        <link refid="glvertexbuffer_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>platformsupport/scenes/opengl/abstract_egl_backend.h</label>
        <link refid="abstract__egl__backend_8h"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>platformsupport/scenes/opengl/openglbackend.h</label>
        <link refid="openglbackend_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>wayland/linuxdmabufv1clientbuffer.h</label>
        <link refid="linuxdmabufv1clientbuffer_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>QByteArray</label>
      </node>
      <node id="90">
        <label>QColor</label>
      </node>
      <node id="25">
        <label>QCoreApplication</label>
      </node>
      <node id="31">
        <label>QDebug</label>
      </node>
      <node id="83">
        <label>QExplicitlySharedDataPointer</label>
      </node>
      <node id="94">
        <label>QFlags</label>
      </node>
      <node id="67">
        <label>QHash</label>
      </node>
      <node id="26">
        <label>QImage</label>
      </node>
      <node id="3">
        <label>QList</label>
      </node>
      <node id="50">
        <label>QLoggingCategory</label>
      </node>
      <node id="45">
        <label>QMap</label>
      </node>
      <node id="91">
        <label>QMatrix3x3</label>
      </node>
      <node id="15">
        <label>QMatrix4x4</label>
      </node>
      <node id="28">
        <label>QObject</label>
      </node>
      <node id="4">
        <label>QPoint</label>
      </node>
      <node id="38">
        <label>QPointer</label>
      </node>
      <node id="32">
        <label>QRect</label>
      </node>
      <node id="84">
        <label>QRegion</label>
      </node>
      <node id="103">
        <label>QSet</label>
      </node>
      <node id="5">
        <label>QSize</label>
      </node>
      <node id="62">
        <label>QSocketNotifier</label>
      </node>
      <node id="87">
        <label>QStack</label>
      </node>
      <node id="55">
        <label>QString</label>
      </node>
      <node id="71">
        <label>QThread</label>
      </node>
      <node id="40">
        <label>QTimer</label>
      </node>
      <node id="33">
        <label>QUuid</label>
      </node>
      <node id="27">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector</label>
      </node>
      <node id="16">
        <label>QVector2D</label>
      </node>
      <node id="92">
        <label>QVector3D</label>
      </node>
      <node id="6">
        <label>chrono</label>
      </node>
      <node id="72">
        <label>condition_variable</label>
      </node>
      <node id="24">
        <label>config-kwin.h</label>
      </node>
      <node id="76">
        <label>drm.h</label>
      </node>
      <node id="113">
        <label>drm_fourcc.h</label>
      </node>
      <node id="61">
        <label>epoxy/egl.h</label>
      </node>
      <node id="85">
        <label>epoxy/gl.h</label>
      </node>
      <node id="53">
        <label>errno.h</label>
      </node>
      <node id="56">
        <label>expected</label>
      </node>
      <node id="41">
        <label>fstream</label>
      </node>
      <node id="98">
        <label>functional</label>
      </node>
      <node id="114">
        <label>gbm.h</label>
      </node>
      <node id="12">
        <label>kwin_export.h</label>
      </node>
      <node id="95">
        <label>map</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="73">
        <label>mutex</label>
      </node>
      <node id="14">
        <label>optional</label>
      </node>
      <node id="108">
        <label>qobject.h</label>
      </node>
      <node id="52">
        <label>qobjectdefs.h</label>
      </node>
      <node id="97">
        <label>ranges</label>
      </node>
      <node id="77">
        <label>span</label>
      </node>
      <node id="18">
        <label>stdint.h</label>
      </node>
      <node id="58">
        <label>sys/types.h</label>
      </node>
      <node id="19">
        <label>tuple</label>
      </node>
      <node id="68">
        <label>unordered_map</label>
      </node>
      <node id="69">
        <label>unordered_set</label>
      </node>
      <node id="65">
        <label>utility</label>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
      <node id="104">
        <label>wayland-server.h</label>
      </node>
      <node id="47">
        <label>xf86drm.h</label>
      </node>
      <node id="7">
        <label>xf86drmMode.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespacestd_1_1literals">std::literals</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__pipeline_8h" kindref="compound">drm_pipeline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="iccprofile_8h" kindref="compound">core/iccprofile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="session_8h" kindref="compound">core/session.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__backend_8h" kindref="compound">drm_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__buffer_8h" kindref="compound">drm_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__commit_8h" kindref="compound">drm_commit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__commit__thread_8h" kindref="compound">drm_commit_thread.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__connector_8h" kindref="compound">drm_connector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__crtc_8h" kindref="compound">drm_crtc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__egl__backend_8h" kindref="compound">drm_egl_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__gpu_8h" kindref="compound">drm_gpu.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__layer_8h" kindref="compound">drm_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__logging_8h" kindref="compound">drm_logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__output_8h" kindref="compound">drm_output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__plane_8h" kindref="compound">drm_plane.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drm_fourcc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gbm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::literals;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;uint64_t&gt;<sp/>implicitModifier<sp/>=<sp/>{DRM_FORMAT_MOD_INVALID};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>legacyFormats<sp/>=<sp/>{{DRM_FORMAT_XRGB8888,<sp/>implicitModifier}};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/>legacyCursorFormats<sp/>=<sp/>{{DRM_FORMAT_ARGB8888,<sp/>implicitModifier}};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_k_win_1_1_drm_pipeline_1ad74039facf0e4ea1a1dc0b2753067a02" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1ad74039facf0e4ea1a1dc0b2753067a02" kindref="member">DrmPipeline::DrmPipeline</ref>(<ref refid="class_k_win_1_1_drm_connector" kindref="compound">DrmConnector</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_connector(conn)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_commitThread(std::make_unique&lt;<ref refid="class_k_win_1_1_drm_commit_thread" kindref="compound">DrmCommitThread</ref>&gt;(conn-&gt;<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>(),<sp/>conn-&gt;connectorName()))</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_drm_pipeline_1a8b254855358b104ced5ca679abd421ad" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a8b254855358b104ced5ca679abd421ad" kindref="member">DrmPipeline::~DrmPipeline</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>commit<sp/>thread<sp/>may<sp/>still<sp/>access<sp/>the<sp/>pipeline<sp/>until<sp/>it&apos;s<sp/>stopped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>it<sp/>must<sp/>be<sp/>deleted<sp/>before<sp/>everything<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>m_commitThread.reset();</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_k_win_1_1_drm_pipeline_1aee4d9fad0e623f6afb450f000fcf29a6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/><ref refid="class_k_win_1_1_drm_pipeline_1aee4d9fad0e623f6afb450f000fcf29a6" kindref="member">DrmPipeline::present</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(m_pending.crtc);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;atomicModeSetting())<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>the<sp/>full<sp/>state,<sp/>to<sp/>take<sp/>pending<sp/>commits<sp/>into<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>DrmPipeline::commitPipelinesAtomic({</highlight><highlight class="keyword">this</highlight><highlight class="normal">},<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca0cbc6611f5540bd0809a388dc95a615b" kindref="member">CommitMode::Test</ref>,<sp/>frame,<sp/>{});<sp/>err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>give<sp/>the<sp/>actual<sp/>state<sp/>update<sp/>to<sp/>the<sp/>commit<sp/>thread,<sp/>so<sp/>that<sp/>it<sp/>can<sp/>potentially<sp/>reorder<sp/>the<sp/>commits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>primaryPlaneUpdate<sp/>=<sp/>std::make_unique&lt;DrmAtomicCommit&gt;(QList&lt;DrmPipeline<sp/>*&gt;{</highlight><highlight class="keyword">this</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">Error</ref><sp/>err<sp/>=<sp/>prepareAtomicPresentation(primaryPlaneUpdate.get(),<sp/>frame);<sp/>err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.needsModesetProperties<sp/>&amp;&amp;<sp/>!prepareAtomicModeset(primaryPlaneUpdate.get()))<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_next.needsModesetProperties<sp/>=<sp/>m_pending.needsModesetProperties<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_commitThread-&gt;addCommit(std::move(primaryPlaneUpdate));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>presentLegacy(frame);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_k_win_1_1_drm_pipeline_1a862d8a5337e2ced557eb169d0365ce5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a862d8a5337e2ced557eb169d0365ce5f" kindref="member">DrmPipeline::maybeModeset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>m_modesetPresentPending<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;<ref refid="class_k_win_1_1_drm_gpu_1a42b2a3d4b9bfc4071f3ecb0b039a8313" kindref="member">maybeModeset</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>frame);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_k_win_1_1_drm_pipeline_1ad2120a27a0a06b86f4b03cd6c912b430" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ad2120a27a0a06b86f4b03cd6c912b430" kindref="member">DrmPipeline::commitPipelines</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;DrmPipeline<sp/>*&gt;<sp/>&amp;pipelines,<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894c" kindref="member">CommitMode</ref><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;DrmObject<sp/>*&gt;<sp/>&amp;unusedObjects)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!pipelines.isEmpty());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipelines[0]-&gt;<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;atomicModeSetting())<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commitPipelinesAtomic(pipelines,<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>unusedObjects);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commitPipelinesLegacy(pipelines,<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref>,<sp/>unusedObjects);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/>DrmPipeline::commitPipelinesAtomic(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;DrmPipeline<sp/>*&gt;<sp/>&amp;pipelines,<sp/>CommitMode<sp/>mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;DrmObject<sp/>*&gt;<sp/>&amp;unusedObjects)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>commit<sp/>=<sp/>std::make_unique&lt;DrmAtomicCommit&gt;(pipelines);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref><sp/>==<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca0cbc6611f5540bd0809a388dc95a615b" kindref="member">CommitMode::Test</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there&apos;s<sp/>a<sp/>modeset<sp/>pending,<sp/>the<sp/>tests<sp/>on<sp/>top<sp/>of<sp/>that<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>have<sp/>to<sp/>allow<sp/>modesets<sp/>or<sp/>they&apos;ll<sp/>always<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wantsModeset<sp/>=<sp/>std::ranges::any_of(pipelines,<sp/>[](<ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref><sp/>*pipeline)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pipeline-&gt;<ref refid="class_k_win_1_1_drm_pipeline_1a521450612c74412d1d071d9e6fb239ef" kindref="member">needsModeset</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wantsModeset)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref><sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca4cc63495694df017edaa8cca4a578e3f" kindref="member">CommitMode::TestAllowModeset</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pipeline<sp/>:<sp/>pipelines)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">Error</ref><sp/>err<sp/>=<sp/>pipeline-&gt;prepareAtomicCommit(commit.get(),<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref>,<sp/>frame);<sp/>err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;unused<sp/>:<sp/>unusedObjects)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unused-&gt;disable(commit.get());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca4cc63495694df017edaa8cca4a578e3f" kindref="member">CommitMode::TestAllowModeset</ref>:<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!commit-&gt;testAllowModeset())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Atomic<sp/>modeset<sp/>test<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errnoToError();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>withoutModeset<sp/>=<sp/>std::ranges::all_of(pipelines,<sp/>[&amp;frame](<ref refid="class_k_win_1_1_drm_pipeline_1ad74039facf0e4ea1a1dc0b2753067a02" kindref="member">DrmPipeline</ref><sp/>*pipeline)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>commit<sp/>=<sp/>std::make_unique&lt;DrmAtomicCommit&gt;(QVector&lt;DrmPipeline<sp/>*&gt;{pipeline});</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pipeline-&gt;prepareAtomicCommit(commit.get(),<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca4cc63495694df017edaa8cca4a578e3f" kindref="member">CommitMode::TestAllowModeset</ref>,<sp/>frame)<sp/>==<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref><sp/>&amp;&amp;<sp/>commit-&gt;test();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pipeline<sp/>:<sp/>pipelines)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline-&gt;m_pending.needsModeset<sp/>=<sp/>!withoutModeset;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline-&gt;m_pending.needsModesetProperties<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894cae60a24390723aaabf0dec8612ff6517b" kindref="member">CommitMode::CommitModeset</ref>:<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>kernel<sp/>fails<sp/>commits<sp/>with<sp/>DRM_MODE_PAGE_FLIP_EVENT<sp/>when<sp/>a<sp/>crtc<sp/>is<sp/>disabled<sp/>in<sp/>the<sp/>commit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>already<sp/>was<sp/>disabled<sp/>before,<sp/>to<sp/>work<sp/>around<sp/>some<sp/>quirks<sp/>in<sp/>old<sp/>userspace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instead<sp/>of<sp/>using<sp/>DRM_MODE_PAGE_FLIP_EVENT<sp/>|<sp/>DRM_MODE_ATOMIC_NONBLOCK,<sp/>do<sp/>the<sp/>modeset<sp/>in<sp/>a<sp/>blocking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fashion<sp/>without<sp/>page<sp/>flip<sp/>events<sp/>and<sp/>trigger<sp/>the<sp/>pageflip<sp/>notification<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!commit-&gt;commitModeset())<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCCritical(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Atomic<sp/>modeset<sp/>commit<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errnoToError();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pipeline<sp/>:<sp/>pipelines)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline-&gt;m_next.needsModeset<sp/>=<sp/>pipeline-&gt;m_pending.needsModeset<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;pageFlipped(std::chrono::steady_clock::now().time_since_epoch());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca0cbc6611f5540bd0809a388dc95a615b" kindref="member">CommitMode::Test</ref>:<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!commit-&gt;test())<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Atomic<sp/>test<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strerror(errno);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errnoToError();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/>DrmPipeline::prepareAtomicCommit(<ref refid="class_k_win_1_1_drm_atomic_commit" kindref="compound">DrmAtomicCommit</ref><sp/>*commit,<sp/>CommitMode<sp/>mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1af7db525a7239d89edbaf003be2bfac72" kindref="member">activePending</ref>())<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">Error</ref><sp/>err<sp/>=<sp/>prepareAtomicPresentation(commit,<sp/>frame);<sp/>err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.crtc-&gt;cursorPlane())<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepareAtomicCursor(commit);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref><sp/>==<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca4cc63495694df017edaa8cca4a578e3f" kindref="member">CommitMode::TestAllowModeset</ref><sp/>||<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref><sp/>==<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894cae60a24390723aaabf0dec8612ff6517b" kindref="member">CommitMode::CommitModeset</ref><sp/>||<sp/>m_pending.needsModesetProperties)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prepareAtomicModeset(commit))<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepareAtomicDisable(commit);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/>DrmPipeline::prepareAtomicPresentation(<ref refid="class_k_win_1_1_drm_atomic_commit" kindref="compound">DrmAtomicCommit</ref><sp/>*commit,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>commit-&gt;setPresentationMode(m_pending.presentationMode);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;contentType.isValid())<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(m_connector-&gt;contentType,<sp/>m_pending.contentType);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.crtc-&gt;vrrEnabled.isValid())<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;setVrr(m_pending.crtc,<sp/>m_pending.presentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a21ae134702d2a8b0953846e2e4ee9e95" kindref="member">PresentationMode::AdaptiveSync</ref><sp/>||<sp/>m_pending.presentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_cursorLayer-&gt;isEnabled()<sp/>&amp;&amp;<sp/>m_primaryLayer-&gt;colorPipeline()<sp/>!=<sp/>m_cursorLayer-&gt;colorPipeline())<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">DrmPipeline::Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColorPipeline<sp/>colorPipeline<sp/>=<sp/>m_primaryLayer-&gt;colorPipeline().merged(m_pending.crtcColorPipeline);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pending.crtc-&gt;postBlendingPipeline)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!colorPipeline.isIdentity())<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pending.crtc-&gt;postBlendingPipeline-&gt;matchPipeline(commit,<sp/>colorPipeline))<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_primaryLayer-&gt;checkTestBuffer())<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>test<sp/>buffer<sp/>failed!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba041b9356343474123a9604fbd61c5dc4" kindref="member">Error::TestBufferFailed</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fb<sp/>=<sp/>m_primaryLayer-&gt;currentBuffer();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fb)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>primary<sp/>=<sp/>m_pending.crtc-&gt;primaryPlane();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transform<sp/>=<sp/>m_primaryLayer-&gt;offloadTransform();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>planeTransform<sp/>=<sp/><ref refid="class_k_win_1_1_drm_plane_1a7a55a0ad950e614879c867277fb1389e" kindref="member">DrmPlane::outputTransformToPlaneTransform</ref>(transform);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(primary-&gt;rotation.isValid())<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!primary-&gt;rotation.hasEnum(planeTransform))<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(primary-&gt;rotation,<sp/>planeTransform);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(planeTransform<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_plane_1acac567f6431e9bfcabfe8d309166c9eba291b44223b90e70be1fade1eff8a55e0" kindref="member">DrmPlane::Transformation::Rotate0</ref>)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>primary-&gt;set(commit,<sp/>m_primaryLayer-&gt;sourceRect().toRect(),<sp/>m_primaryLayer-&gt;targetRect());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>commit-&gt;addBuffer(m_pending.crtc-&gt;primaryPlane(),<sp/>fb,<sp/>frame);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m_primaryLayer-&gt;colorDescription().yuvCoefficients())<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9ac9c5c65fb4af9cf90eb99b3b84424189" kindref="member">YUVMatrixCoefficients::Identity</ref>:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9a8b844879ae7dc4d0447f1986a7432db9" kindref="member">YUVMatrixCoefficients::BT601</ref>:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!primary-&gt;colorEncoding.isValid()<sp/>||<sp/>!primary-&gt;colorRange.isValid())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(primary-&gt;colorEncoding,<sp/><ref refid="class_k_win_1_1_drm_plane_1ad41412681a907af29b03f8e5283d2993a69507938bc7cc512ba7cf7691bb1cde3" kindref="member">DrmPlane::ColorEncoding::BT601_YCbCr</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(primary-&gt;colorRange,<sp/><ref refid="class_k_win_1_1_drm_plane_1a3d7395abfc1c3c0926fd222b95bd4696ab88ca76d49f5b763f5d8351aee3473ec" kindref="member">DrmPlane::ColorRange::Limited_YCbCr</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9a0b69475c5783f10c0be13d36825fc3b9" kindref="member">YUVMatrixCoefficients::BT709</ref>:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!primary-&gt;colorEncoding.isValid()<sp/>||<sp/>!primary-&gt;colorRange.isValid())<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(primary-&gt;colorEncoding,<sp/><ref refid="class_k_win_1_1_drm_plane_1ad41412681a907af29b03f8e5283d2993a370f68ace3c5eea9edbf387f79cb07db" kindref="member">DrmPlane::ColorEncoding::BT709_YCbCr</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(primary-&gt;colorRange,<sp/><ref refid="class_k_win_1_1_drm_plane_1a3d7395abfc1c3c0926fd222b95bd4696ab88ca76d49f5b763f5d8351aee3473ec" kindref="member">DrmPlane::ColorRange::Limited_YCbCr</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9acede9bc5f1db241392356796faabf6e6" kindref="member">YUVMatrixCoefficients::BT2020</ref>:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!primary-&gt;colorEncoding.isValid()<sp/>||<sp/>!primary-&gt;colorRange.isValid())<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(primary-&gt;colorEncoding,<sp/><ref refid="class_k_win_1_1_drm_plane_1ad41412681a907af29b03f8e5283d2993a929ed0b9366627444b67236e2866306f" kindref="member">DrmPlane::ColorEncoding::BT2020_YCbCr</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(primary-&gt;colorRange,<sp/><ref refid="class_k_win_1_1_drm_plane_1a3d7395abfc1c3c0926fd222b95bd4696ab88ca76d49f5b763f5d8351aee3473ec" kindref="member">DrmPlane::ColorRange::Limited_YCbCr</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrmPipeline::prepareAtomicCursor(<ref refid="class_k_win_1_1_drm_atomic_commit" kindref="compound">DrmAtomicCommit</ref><sp/>*commit)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>plane<sp/>=<sp/>m_pending.crtc-&gt;cursorPlane();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layer<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a050f4592818862139a1ac68c65de1fd8" kindref="member">cursorLayer</ref>();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer-&gt;isEnabled())<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plane-&gt;set(commit,<sp/>layer-&gt;sourceRect().toRect(),<sp/>layer-&gt;targetRect());</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addProperty(plane-&gt;crtcId,<sp/>m_pending.crtc-&gt;id());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addBuffer(plane,<sp/>layer-&gt;currentBuffer(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plane-&gt;vmHotspotX.isValid()<sp/>&amp;&amp;<sp/>plane-&gt;vmHotspotY.isValid())<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addProperty(plane-&gt;vmHotspotX,<sp/>std::round(layer-&gt;hotspot().x()));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addProperty(plane-&gt;vmHotspotY,<sp/>std::round(layer-&gt;hotspot().y()));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addProperty(plane-&gt;crtcId,<sp/>0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addBuffer(plane,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrmPipeline::prepareAtomicDisable(<ref refid="class_k_win_1_1_drm_atomic_commit" kindref="compound">DrmAtomicCommit</ref><sp/>*commit)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>m_connector-&gt;disable(commit);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.crtc)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pending.crtc-&gt;disable(commit);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pending.crtc-&gt;primaryPlane()-&gt;disable(commit);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cursor<sp/>=<sp/>m_pending.crtc-&gt;cursorPlane())<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor-&gt;disable(commit);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_forceScalingMode<sp/>=<sp/>[]()<sp/>-&gt;<sp/>std::optional&lt;DrmConnector::ScalingMode&gt;<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>env<sp/>=<sp/>qEnvironmentVariable(</highlight><highlight class="stringliteral">&quot;KWIN_DRM_FORCE_SCALING_MODE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmConnector::ScalingMode::None</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FULL&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564babbd47109890259c0127154db1af26c75" kindref="member">DrmConnector::ScalingMode::Full</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CENTER&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564ba4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member">DrmConnector::ScalingMode::Center</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FULL_ASPECT&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564bae3e49ef459a22fff631ffb399bdcba82" kindref="member">DrmConnector::ScalingMode::Full_Aspect</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DrmPipeline::prepareAtomicModeset(<ref refid="class_k_win_1_1_drm_atomic_commit" kindref="compound">DrmAtomicCommit</ref><sp/>*commit)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>commit-&gt;addProperty(m_connector-&gt;crtcId,<sp/>m_pending.crtc-&gt;id());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;broadcastRGB.isValid())<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(m_connector-&gt;broadcastRGB,<sp/><ref refid="class_k_win_1_1_drm_connector_1a5b4473f103edc6d43fea880dcda809fc" kindref="member">DrmConnector::rgbRangeToBroadcastRgb</ref>(m_pending.rgbRange));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;linkStatus.isValid())<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(m_connector-&gt;linkStatus,<sp/><ref refid="class_k_win_1_1_drm_connector_1ae48133d62cc8f097dcb56ca130b8a873a0c6ad70beb3a7e76c3fc7adab7c46acc" kindref="member">DrmConnector::LinkStatus::Good</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;overscan.isValid())<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addProperty(m_connector-&gt;overscan,<sp/>m_pending.overscan);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;underscan.isValid())<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>hborder<sp/>=<sp/>calculateUnderscan();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(m_connector-&gt;underscan,<sp/>m_pending.overscan<sp/>!=<sp/>0<sp/>?<sp/><ref refid="class_k_win_1_1_drm_connector_1a570fa52b4a07182c9c8ada17326a2ff9a521c36a31c2762741cf0f8890cbe05e3" kindref="member">DrmConnector::UnderscanOptions::On</ref><sp/>:<sp/><ref refid="class_k_win_1_1_drm_connector_1a570fa52b4a07182c9c8ada17326a2ff9ad15305d7a4e34e02489c74a5ef542f36" kindref="member">DrmConnector::UnderscanOptions::Off</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addProperty(m_connector-&gt;underscanVBorder,<sp/>m_pending.overscan);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addProperty(m_connector-&gt;underscanHBorder,<sp/>hborder);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;maxBpc.isValid())<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addProperty(m_connector-&gt;maxBpc,<sp/>std::clamp&lt;uint32_t&gt;(m_pending.maxBpc,<sp/>m_connector-&gt;maxBpc.minValue(),<sp/>m_connector-&gt;maxBpc.maxValue()));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;hdrMetadata.isValid())<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addBlob(m_connector-&gt;hdrMetadata,<sp/>createHdrMetadata(m_pending.hdr<sp/>?<sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref><sp/>:<sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.hdr)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.wcg)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_connector-&gt;colorspace.isValid()<sp/>||<sp/>!m_connector-&gt;colorspace.hasEnum(<ref refid="class_k_win_1_1_drm_connector_1a0f6c1df77081a8760cac70cce2e2d8d7afe4a585d94741421927ee1ed38e64fa1" kindref="member">DrmConnector::Colorspace::BT2020_RGB</ref>))<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(m_connector-&gt;colorspace,<sp/><ref refid="class_k_win_1_1_drm_connector_1a0f6c1df77081a8760cac70cce2e2d8d7afe4a585d94741421927ee1ed38e64fa1" kindref="member">DrmConnector::Colorspace::BT2020_RGB</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;colorspace.isValid())<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(m_connector-&gt;colorspace,<sp/><ref refid="class_k_win_1_1_drm_connector_1a0f6c1df77081a8760cac70cce2e2d8d7a7a1920d61156abc05a60135aefe8bc67" kindref="member">DrmConnector::Colorspace::Default</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;scalingMode.isValid())<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_forceScalingMode.has_value())<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;scalingMode.hasEnum(*s_forceScalingMode))<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(m_connector-&gt;scalingMode,<sp/>*s_forceScalingMode);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;scalingMode.hasEnum(<ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmConnector::ScalingMode::None</ref>))<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(m_connector-&gt;scalingMode,<sp/><ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmConnector::ScalingMode::None</ref>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;isInternal()<sp/>&amp;&amp;<sp/>m_connector-&gt;scalingMode.hasEnum(<ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564bae3e49ef459a22fff631ffb399bdcba82" kindref="member">DrmConnector::ScalingMode::Full_Aspect</ref>)<sp/>&amp;&amp;<sp/>(m_pending.mode-&gt;flags()<sp/>&amp;<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0a5c5f06440fcb85cd5c8cfafe32e34b78" kindref="member">OutputMode::Flag::Generated</ref>))<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(m_connector-&gt;scalingMode,<sp/><ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564bae3e49ef459a22fff631ffb399bdcba82" kindref="member">DrmConnector::ScalingMode::Full_Aspect</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;scalingMode.hasEnum(<ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmConnector::ScalingMode::None</ref>))<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(m_connector-&gt;scalingMode,<sp/><ref refid="class_k_win_1_1_drm_connector_1ad35442285b66b35fec93cea422b9564ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmConnector::ScalingMode::None</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>commit-&gt;addProperty(m_pending.crtc-&gt;active,<sp/>1);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>commit-&gt;addBlob(m_pending.crtc-&gt;modeId,<sp/>m_pending.mode-&gt;blob());</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>primary<sp/>=<sp/>m_pending.crtc-&gt;primaryPlane();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>commit-&gt;addProperty(primary-&gt;crtcId,<sp/>m_pending.crtc-&gt;id());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(primary-&gt;rotation.isValid())<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(primary-&gt;rotation,<sp/>{DrmPlane::Transformation::Rotate0});</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(primary-&gt;alpha.isValid())<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addProperty(primary-&gt;alpha,<sp/>primary-&gt;alpha.maxValue());</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(primary-&gt;pixelBlendMode.isValid())<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(primary-&gt;pixelBlendMode,<sp/><ref refid="class_k_win_1_1_drm_plane_1aa26f851a800509e77e6e6ca3782b6e5da35f7a4d0017cc8c4ea4c3691caf1fdfa" kindref="member">DrmPlane::PixelBlendMode::PreMultiplied</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cursor<sp/>=<sp/>m_pending.crtc-&gt;cursorPlane())<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor-&gt;rotation.isValid())<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(cursor-&gt;rotation,<sp/>DrmPlane::Transformations(<ref refid="class_k_win_1_1_drm_plane_1acac567f6431e9bfcabfe8d309166c9eba291b44223b90e70be1fade1eff8a55e0" kindref="member">DrmPlane::Transformation::Rotate0</ref>));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor-&gt;alpha.isValid())<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addProperty(cursor-&gt;alpha,<sp/>cursor-&gt;alpha.maxValue());</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor-&gt;pixelBlendMode.isValid())<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commit-&gt;addEnum(cursor-&gt;pixelBlendMode,<sp/><ref refid="class_k_win_1_1_drm_plane_1aa26f851a800509e77e6e6ca3782b6e5da35f7a4d0017cc8c4ea4c3691caf1fdfa" kindref="member">DrmPlane::PixelBlendMode::PreMultiplied</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepareAtomicCursor(commit);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">uint32_t<sp/>DrmPipeline::calculateUnderscan()</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>m_pending.mode-&gt;size();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>aspectRatio<sp/>=<sp/>size.width()<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size.height());</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>hborder<sp/>=<sp/>m_pending.overscan<sp/>*<sp/>aspectRatio;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hborder<sp/>&gt;<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overscan<sp/>only<sp/>goes<sp/>from<sp/>0-100<sp/>so<sp/>we<sp/>cut<sp/>off<sp/>the<sp/>101-128<sp/>value<sp/>range<sp/>of<sp/>underscan_vborder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hborder<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pending.overscan<sp/>=<sp/>128<sp/>/<sp/>aspectRatio;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hborder;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/>DrmPipeline::errnoToError()</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(errno)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EINVAL:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5bae73a2e92f1c87086c838b442552a4775" kindref="member">Error::InvalidArguments</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EBUSY:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5baae7987f09dd89eebf719e8a31371f1f6" kindref="member">Error::FramePending</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ENOMEM:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba0fce51713c5b85159c90435fa877e225" kindref="member">Error::OutofMemory</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EACCES:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba5eb47444d07dffc6d504bea4145a0ad8" kindref="member">Error::NoPermission</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">Error::Unknown</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="class_k_win_1_1_drm_pipeline_1a422edce2f2d2e9cd4e91e253445b27e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a422edce2f2d2e9cd4e91e253445b27e3" kindref="member">DrmPipeline::updateCursor</ref>(std::optional&lt;std::chrono::nanoseconds&gt;<sp/>allowedVrrDelay)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1a521450612c74412d1d071d9e6fb239ef" kindref="member">needsModeset</ref>()<sp/>||<sp/>!m_pending.crtc<sp/>||<sp/>!m_pending.active)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1a1310c8bfa4079793297cc7eaa777c176" kindref="member">amdgpuVrrWorkaroundActive</ref>()<sp/>&amp;&amp;<sp/>m_cursorLayer-&gt;isEnabled())<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>on<sp/>vmwgfx<sp/>software<sp/>cursor<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>Broadcom<sp/>fixes<sp/>hw<sp/>cursor<sp/>issues<sp/>with<sp/>vmwgfx.<sp/>Otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>cursor<sp/>is<sp/>missing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;isVmwgfx())<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>explicitly<sp/>check<sp/>for<sp/>the<sp/>cursor<sp/>plane<sp/>and<sp/>not<sp/>for<sp/>AMS,<sp/>as<sp/>we<sp/>might<sp/>not<sp/>always<sp/>have<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.crtc-&gt;cursorPlane())<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>the<sp/>full<sp/>state,<sp/>to<sp/>take<sp/>pending<sp/>commits<sp/>into<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DrmPipeline::commitPipelinesAtomic({</highlight><highlight class="keyword">this</highlight><highlight class="normal">},<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca0cbc6611f5540bd0809a388dc95a615b" kindref="member">CommitMode::Test</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>{})<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>give<sp/>the<sp/>actual<sp/>state<sp/>update<sp/>to<sp/>the<sp/>commit<sp/>thread,<sp/>so<sp/>that<sp/>it<sp/>can<sp/>potentially<sp/>reorder<sp/>the<sp/>commits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cursorOnly<sp/>=<sp/>std::make_unique&lt;DrmAtomicCommit&gt;(QList&lt;DrmPipeline<sp/>*&gt;{</highlight><highlight class="keyword">this</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepareAtomicCursor(cursorOnly.get());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursorOnly-&gt;setAllowedVrrDelay(allowedVrrDelay);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_commitThread-&gt;addCommit(std::move(cursorOnly));</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setCursorLegacy();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="class_k_win_1_1_drm_pipeline_1a1310c8bfa4079793297cc7eaa777c176" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a1310c8bfa4079793297cc7eaa777c176" kindref="member">DrmPipeline::amdgpuVrrWorkaroundActive</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="434"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_env<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_DRM_DONT_FORCE_AMD_SW_CURSOR&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!s_env<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;<ref refid="class_k_win_1_1_drm_gpu_1acaa37b26bfe93a2556f4bab1f88aa447" kindref="member">isAmdgpu</ref>()<sp/>&amp;&amp;<sp/>(m_pending.presentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a21ae134702d2a8b0953846e2e4ee9e95" kindref="member">PresentationMode::AdaptiveSync</ref><sp/>||<sp/>m_pending.presentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="class_k_win_1_1_drm_pipeline_1a90b0a1bbf427a54f251ce1919183637f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a90b0a1bbf427a54f251ce1919183637f" kindref="member">DrmPipeline::applyPendingChanges</ref>()</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>m_next<sp/>=<sp/>m_pending;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>m_commitThread-&gt;setModeInfo(m_pending.mode-&gt;refreshRate(),<sp/>m_pending.mode-&gt;vblankTime());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>m_output-&gt;renderLoop()-&gt;setPresentationSafetyMargin(m_commitThread-&gt;safetyMargin());</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>m_output-&gt;renderLoop()-&gt;setRefreshRate(m_pending.mode-&gt;refreshRate());</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="class_k_win_1_1_drm_pipeline_1a0a1be2bd5b198c9e965f5a20dc4dcb05" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_connector" kindref="compound">DrmConnector</ref><sp/>*<ref refid="class_k_win_1_1_drm_pipeline_1a0a1be2bd5b198c9e965f5a20dc4dcb05" kindref="member">DrmPipeline::connector</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="448"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_connector;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_gpu" kindref="compound">DrmGpu</ref><sp/>*<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">DrmPipeline::gpu</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="453"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_connector-&gt;gpu();</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="class_k_win_1_1_drm_pipeline_1a635f6747b7f5335e59f20295d5bc8f19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a635f6747b7f5335e59f20295d5bc8f19" kindref="member">DrmPipeline::pageFlipped</ref>(std::chrono::nanoseconds<sp/>timestamp)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop_private_1a2a9dc8ff7ad26efd60e9c02334d249d3" kindref="member">RenderLoopPrivate::get</ref>(m_output-&gt;renderLoop())-&gt;<ref refid="class_k_win_1_1_render_loop_private_1ac995209e39bd4c277a6f7cfaff65d32b" kindref="member">notifyVblank</ref>(timestamp);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>m_commitThread-&gt;pageFlipped(timestamp);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;<ref refid="class_k_win_1_1_drm_pipeline_1a521450612c74412d1d071d9e6fb239ef" kindref="member">needsModeset</ref>())<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;<ref refid="class_k_win_1_1_drm_gpu_1a42b2a3d4b9bfc4071f3ecb0b039a8313" kindref="member">maybeModeset</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="class_k_win_1_1_drm_pipeline_1a227f5f6f02d73931ade20876e918d926" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a227f5f6f02d73931ade20876e918d926" kindref="member">DrmPipeline::setOutput</ref>(<ref refid="class_k_win_1_1_drm_output" kindref="compound">DrmOutput</ref><sp/>*<ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>m_output<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_output" kindref="compound">DrmOutput</ref><sp/>*<ref refid="class_k_win_1_1_drm_pipeline_1a419d39b2b9bab964dacfb1ed55267dd2" kindref="member">DrmPipeline::output</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="472"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_output;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="class_k_win_1_1_drm_pipeline_1a659af5c1ddc86cdae0541708830ce395" refkind="member"><highlight class="normal">QHash&lt;uint32_t,<sp/>QList&lt;uint64_t&gt;&gt;<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a659af5c1ddc86cdae0541708830ce395" kindref="member">DrmPipeline::formats</ref>(<ref refid="class_k_win_1_1_drm_plane_1a3cf72c069e4b10ac10646deba960d050" kindref="member">DrmPlane::TypeIndex</ref><sp/>planeType)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="477"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(planeType)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_plane_1a3cf72c069e4b10ac10646deba960d050a074de7e7c226d5c60f8af14c20725352" kindref="member">DrmPlane::TypeIndex::Primary</ref>:</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.formats;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_plane_1a3cf72c069e4b10ac10646deba960d050a9abdae4fa5d93330363a88ed8a5e7946" kindref="member">DrmPlane::TypeIndex::Cursor</ref>:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.crtc<sp/>&amp;&amp;<sp/>m_pending.crtc-&gt;cursorPlane())<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.crtc-&gt;cursorPlane()-&gt;formats();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>legacyCursorFormats;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_plane_1a3cf72c069e4b10ac10646deba960d050a6b551379c3c0b59326abdaf3b4395bd3" kindref="member">DrmPlane::TypeIndex::Overlay</ref>:</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="class_k_win_1_1_drm_pipeline_1a12f9842b63bfc88c7843f7032320265f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a12f9842b63bfc88c7843f7032320265f" kindref="member">DrmPipeline::pruneModifier</ref>()</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_dma_buf_attributes" kindref="compound">DmaBufAttributes</ref><sp/>*dmabufAttributes<sp/>=<sp/>m_primaryLayer-&gt;currentBuffer()<sp/>?<sp/>m_primaryLayer-&gt;currentBuffer()-&gt;buffer()-&gt;dmabufAttributes()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dmabufAttributes)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;modifiers<sp/>=<sp/>m_pending.formats[dmabufAttributes-&gt;<ref refid="struct_k_win_1_1_dma_buf_attributes_1aa8ab574dc34b0c719d7545e55806039a" kindref="member">format</ref>];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modifiers<sp/>==<sp/>implicitModifier)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiers<sp/>=<sp/>implicitModifier;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="class_k_win_1_1_drm_pipeline_1a5a4192335eae02699cbc465137827ee7" refkind="member"><highlight class="normal">QList&lt;QSize&gt;<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a5a4192335eae02699cbc465137827ee7" kindref="member">DrmPipeline::recommendedSizes</ref>(<ref refid="class_k_win_1_1_drm_plane_1a3cf72c069e4b10ac10646deba960d050" kindref="member">DrmPlane::TypeIndex</ref><sp/>planeType)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="509"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(planeType)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_plane_1a3cf72c069e4b10ac10646deba960d050a074de7e7c226d5c60f8af14c20725352" kindref="member">DrmPlane::TypeIndex::Primary</ref>:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.crtc<sp/>&amp;&amp;<sp/>m_pending.crtc-&gt;primaryPlane())<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.crtc-&gt;primaryPlane()-&gt;recommendedSizes();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QList&lt;QSize&gt;{};</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_plane_1a3cf72c069e4b10ac10646deba960d050a9abdae4fa5d93330363a88ed8a5e7946" kindref="member">DrmPlane::TypeIndex::Cursor</ref>:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pending.crtc<sp/>&amp;&amp;<sp/>m_pending.crtc-&gt;cursorPlane())<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.crtc-&gt;cursorPlane()-&gt;recommendedSizes();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QList&lt;QSize&gt;{<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>()-&gt;<ref refid="class_k_win_1_1_drm_gpu_1a7d1826fb6863bee6abdf7450e3ed340f" kindref="member">cursorSize</ref>()};</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_plane_1a3cf72c069e4b10ac10646deba960d050a6b551379c3c0b59326abdaf3b4395bd3" kindref="member">DrmPlane::TypeIndex::Overlay</ref>:</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QList&lt;QSize&gt;{};</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="class_k_win_1_1_drm_pipeline_1a521450612c74412d1d071d9e6fb239ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a521450612c74412d1d071d9e6fb239ef" kindref="member">DrmPipeline::needsModeset</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="530"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.needsModeset;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="class_k_win_1_1_drm_pipeline_1af7db525a7239d89edbaf003be2bfac72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1af7db525a7239d89edbaf003be2bfac72" kindref="member">DrmPipeline::activePending</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="535"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.crtc<sp/>&amp;&amp;<sp/>m_pending.mode<sp/>&amp;&amp;<sp/>m_pending.active;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="class_k_win_1_1_drm_pipeline_1a599705ade89e3dc8767e6e024126581f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a599705ade89e3dc8767e6e024126581f" kindref="member">DrmPipeline::revertPendingChanges</ref>()</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending<sp/>=<sp/>m_next;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="class_k_win_1_1_drm_pipeline_1a931ed2c09308d6999116c4a68cb47fe0" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_commit_thread" kindref="compound">DrmCommitThread</ref><sp/>*<ref refid="class_k_win_1_1_drm_pipeline_1a931ed2c09308d6999116c4a68cb47fe0" kindref="member">DrmPipeline::commitThread</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="545"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_commitThread.get();</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="class_k_win_1_1_drm_pipeline_1abc443a8ca037cc8d489435211d4fb3c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1abc443a8ca037cc8d489435211d4fb3c7" kindref="member">DrmPipeline::modesetPresentPending</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="550"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_modesetPresentPending;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="class_k_win_1_1_drm_pipeline_1af37ca2cb26628c00ac9b4d80d9087722" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1af37ca2cb26628c00ac9b4d80d9087722" kindref="member">DrmPipeline::resetModesetPresentPending</ref>()</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>m_modesetPresentPending<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="class_k_win_1_1_drm_pipeline_1ade877865c237b042bcff6884eaa6be0a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_crtc" kindref="compound">DrmCrtc</ref><sp/>*<ref refid="class_k_win_1_1_drm_pipeline_1ade877865c237b042bcff6884eaa6be0a" kindref="member">DrmPipeline::crtc</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="560"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.crtc;</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" refkind="member"><highlight class="normal">std::shared_ptr&lt;DrmConnectorMode&gt;<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">DrmPipeline::mode</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="565"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.mode;</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="class_k_win_1_1_drm_pipeline_1a611dd21649097e4b1d71a0bfbfa7619b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a611dd21649097e4b1d71a0bfbfa7619b" kindref="member">DrmPipeline::active</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="570"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.<ref refid="class_k_win_1_1_drm_crtc_1a0873c58239492690e30847d22ea9a4ae" kindref="member">active</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="class_k_win_1_1_drm_pipeline_1ac0222fa45462fb13b328ef9c72b6f4da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ac0222fa45462fb13b328ef9c72b6f4da" kindref="member">DrmPipeline::enabled</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="575"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.enabled;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579" refid="class_k_win_1_1_drm_pipeline_1ae914f5dc7b8f8dbe31bead04ced20481" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_layer" kindref="compound">DrmPipelineLayer</ref><sp/>*<ref refid="class_k_win_1_1_drm_pipeline_1ae914f5dc7b8f8dbe31bead04ced20481" kindref="member">DrmPipeline::primaryLayer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="580"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_primaryLayer.get();</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="class_k_win_1_1_drm_pipeline_1a050f4592818862139a1ac68c65de1fd8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline_layer" kindref="compound">DrmPipelineLayer</ref><sp/>*<ref refid="class_k_win_1_1_drm_pipeline_1a050f4592818862139a1ac68c65de1fd8" kindref="member">DrmPipeline::cursorLayer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="585"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cursorLayer.get();</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="class_k_win_1_1_drm_pipeline_1a44fb995ea3d8a91b838a77c7de531279" refkind="member"><highlight class="normal"><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a44fb995ea3d8a91b838a77c7de531279" kindref="member">DrmPipeline::presentationMode</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="590"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.presentationMode;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="class_k_win_1_1_drm_pipeline_1a185b3ebefd1120f5f728ab3478c0a67d" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a185b3ebefd1120f5f728ab3478c0a67d" kindref="member">DrmPipeline::overscan</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="595"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.overscan;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599" refid="class_k_win_1_1_drm_pipeline_1a04fe039dcc8163db4bf3ecc38cc9d6d0" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83" kindref="member">Output::RgbRange</ref><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a04fe039dcc8163db4bf3ecc38cc9d6d0" kindref="member">DrmPipeline::rgbRange</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="600"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.rgbRange;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="class_k_win_1_1_drm_pipeline_1af2a134d3b85dd66f9ae507d8e9fefbd6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_connector_1ac103a1aa529fa1efb645f6e589046cc0" kindref="member">DrmConnector::DrmContentType</ref><sp/><ref refid="class_k_win_1_1_drm_pipeline_1af2a134d3b85dd66f9ae507d8e9fefbd6" kindref="member">DrmPipeline::contentType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="605"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.contentType;</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="class_k_win_1_1_drm_pipeline_1a56ba24f18c01bc5687edbc15af4c988d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;IccProfile&gt;<sp/>&amp;<ref refid="class_k_win_1_1_drm_pipeline_1a56ba24f18c01bc5687edbc15af4c988d" kindref="member">DrmPipeline::iccProfile</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="610"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pending.iccProfile;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="class_k_win_1_1_drm_pipeline_1ab603e9a49c112d0f03516ccefdce9848" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ab603e9a49c112d0f03516ccefdce9848" kindref="member">DrmPipeline::setCrtc</ref>(<ref refid="class_k_win_1_1_drm_crtc" kindref="compound">DrmCrtc</ref><sp/>*<ref refid="class_k_win_1_1_drm_pipeline_1ade877865c237b042bcff6884eaa6be0a" kindref="member">crtc</ref>)</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.crtc<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ade877865c237b042bcff6884eaa6be0a" kindref="member">crtc</ref>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1ade877865c237b042bcff6884eaa6be0a" kindref="member">crtc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pending.formats<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ade877865c237b042bcff6884eaa6be0a" kindref="member">crtc</ref>-&gt;primaryPlane()<sp/>?<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ade877865c237b042bcff6884eaa6be0a" kindref="member">crtc</ref>-&gt;primaryPlane()-&gt;formats()<sp/>:<sp/>legacyFormats;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pending.formats<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="class_k_win_1_1_drm_pipeline_1a50c0987e4e4de9dd5795356bc725dd6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a50c0987e4e4de9dd5795356bc725dd6f" kindref="member">DrmPipeline::setMode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DrmConnectorMode&gt;<sp/>&amp;<ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref>)</highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.mode<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="class_k_win_1_1_drm_pipeline_1ab03b55a4ac01ffe95e082ff7ba9f4e47" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ab03b55a4ac01ffe95e082ff7ba9f4e47" kindref="member">DrmPipeline::setActive</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a611dd21649097e4b1d71a0bfbfa7619b" kindref="member">active</ref>)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.active<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a611dd21649097e4b1d71a0bfbfa7619b" kindref="member">active</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="class_k_win_1_1_drm_pipeline_1aa0facff113d04a5ae2d877c45a191017" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1aa0facff113d04a5ae2d877c45a191017" kindref="member">DrmPipeline::setEnable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.enabled<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="class_k_win_1_1_drm_pipeline_1a63a376ab067026dafe709a0c7ccc1b3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a63a376ab067026dafe709a0c7ccc1b3f" kindref="member">DrmPipeline::setLayers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DrmPipelineLayer&gt;<sp/>&amp;<ref refid="class_k_win_1_1_drm_pipeline_1ae914f5dc7b8f8dbe31bead04ced20481" kindref="member">primaryLayer</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DrmPipelineLayer&gt;<sp/>&amp;<ref refid="class_k_win_1_1_drm_pipeline_1a050f4592818862139a1ac68c65de1fd8" kindref="member">cursorLayer</ref>)</highlight></codeline>
<codeline lineno="640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>m_primaryLayer<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae914f5dc7b8f8dbe31bead04ced20481" kindref="member">primaryLayer</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cursorLayer<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a050f4592818862139a1ac68c65de1fd8" kindref="member">cursorLayer</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="class_k_win_1_1_drm_pipeline_1ae227e331a52dec246aa620488f1415b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae227e331a52dec246aa620488f1415b9" kindref="member">DrmPipeline::setPresentationMode</ref>(<ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref>)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.presentationMode<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="class_k_win_1_1_drm_pipeline_1ae9a20e9b4cb4650b3841f08cadaa1226" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae9a20e9b4cb4650b3841f08cadaa1226" kindref="member">DrmPipeline::setOverscan</ref>(uint32_t<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a185b3ebefd1120f5f728ab3478c0a67d" kindref="member">overscan</ref>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.overscan<sp/>=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a185b3ebefd1120f5f728ab3478c0a67d" kindref="member">overscan</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="class_k_win_1_1_drm_pipeline_1a788a568351705079f1b6c71149e22371" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a788a568351705079f1b6c71149e22371" kindref="member">DrmPipeline::setRgbRange</ref>(<ref refid="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83" kindref="member">Output::RgbRange</ref><sp/>range)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.rgbRange<sp/>=<sp/>range;</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="class_k_win_1_1_drm_pipeline_1a2eb009faa45f6945276ffbdfceb899db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a2eb009faa45f6945276ffbdfceb899db" kindref="member">DrmPipeline::setCrtcColorPipeline</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_pipeline" kindref="compound">ColorPipeline</ref><sp/>&amp;pipeline)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.crtcColorPipeline<sp/>=<sp/>pipeline;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="class_k_win_1_1_drm_pipeline_1a7a133b6c60e13370f9fdf78aa877ece0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7a133b6c60e13370f9fdf78aa877ece0" kindref="member">DrmPipeline::setHighDynamicRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hdr)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.hdr<sp/>=<sp/>hdr;</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="class_k_win_1_1_drm_pipeline_1af72968f1cf479b7e043da1b210434537" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1af72968f1cf479b7e043da1b210434537" kindref="member">DrmPipeline::setWideColorGamut</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wcg)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.wcg<sp/>=<sp/>wcg;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="class_k_win_1_1_drm_pipeline_1acec79364d852674c682b69ce064ef40d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1acec79364d852674c682b69ce064ef40d" kindref="member">DrmPipeline::setMaxBpc</ref>(uint32_t<sp/>max)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.maxBpc<sp/>=<sp/>max;</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680" refid="class_k_win_1_1_drm_pipeline_1a41c6f95188f82d509b6a61297b9313c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a41c6f95188f82d509b6a61297b9313c3" kindref="member">DrmPipeline::setContentType</ref>(<ref refid="class_k_win_1_1_drm_connector_1ac103a1aa529fa1efb645f6e589046cc0" kindref="member">DrmConnector::DrmContentType</ref><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.contentType<sp/>=<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685" refid="class_k_win_1_1_drm_pipeline_1ae7fe59a518246e4b2ed6c18ffe56cb61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_pipeline_1ae7fe59a518246e4b2ed6c18ffe56cb61" kindref="member">DrmPipeline::setIccProfile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;IccProfile&gt;<sp/>&amp;profile)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pending.iccProfile<sp/>=<sp/>profile;</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">std::shared_ptr&lt;DrmBlob&gt;<sp/>DrmPipeline::createHdrMetadata(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13" kindref="member">TransferFunction::Type</ref><sp/>transferFunction)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="691"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transferFunction<sp/>!=<sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>sRGB<sp/>/<sp/>gamma<sp/>2.2,<sp/>don&apos;t<sp/>send<sp/>any<sp/>metadata,<sp/>to<sp/>ensure<sp/>the<sp/>non-HDR<sp/>experience<sp/>stays<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_connector-&gt;<ref refid="class_k_win_1_1_drm_connector_1ac8a199917c9f4986eab4d41ab0b97f97" kindref="member">edid</ref>()-&gt;<ref refid="class_k_win_1_1_edid_1aaa57a17a12f2044fa31523f3b2676cfb" kindref="member">supportsPQ</ref>())<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>colorimetry<sp/>=<sp/>m_connector-&gt;edid()-&gt;colorimetry().value_or(<ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xyY<sp/>red<sp/>=<sp/>colorimetry.red().toxyY();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xyY<sp/>green<sp/>=<sp/>colorimetry.green().toxyY();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xyY<sp/>blue<sp/>=<sp/>colorimetry.blue().toxyY();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xyY<sp/>white<sp/>=<sp/>colorimetry.white().toxyY();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to16Bit<sp/>=<sp/>[](</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uint16_t(std::round(value<sp/>/<sp/>0.00002));</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_output_metadata<sp/>data{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.metadata_type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hdmi_metadata_type1<sp/>=<sp/>hdr_metadata_infoframe{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eotf<sp/>types<sp/>(from<sp/>CTA-861-G<sp/>page<sp/>85):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>0:<sp/>traditional<sp/>gamma,<sp/>SDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>1:<sp/>traditional<sp/>gamma,<sp/>HDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>2:<sp/>SMPTE<sp/>ST2084</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>3:<sp/>hybrid<sp/>Log-Gamma<sp/>based<sp/>on<sp/>BT.2100-0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>4-7:<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.eotf<sp/>=<sp/>uint8_t(2),</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there&apos;s<sp/>only<sp/>one<sp/>type.<sp/>1-7<sp/>are<sp/>reserved<sp/>for<sp/>future<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.metadata_type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>0.00002<sp/>nits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.display_primaries<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{to16Bit(red.x),<sp/>to16Bit(red.y)},</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{to16Bit(green.x),<sp/>to16Bit(green.y)},</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{to16Bit(blue.x),<sp/>to16Bit(blue.y)},</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.white_point<sp/>=<sp/>{to16Bit(white.x),<sp/>to16Bit(white.y)},</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>nits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.max_display_mastering_luminance<sp/>=<sp/>uint16_t(std::round(m_connector-&gt;edid()-&gt;desiredMaxFrameAverageLuminance().value_or(0))),</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>0.0001<sp/>nits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.min_display_mastering_luminance<sp/>=<sp/>uint16_t(std::round(m_connector-&gt;edid()-&gt;desiredMinLuminance()<sp/>*<sp/>10000)),</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>nits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.max_cll<sp/>=<sp/>uint16_t(std::round(m_connector-&gt;edid()-&gt;desiredMaxFrameAverageLuminance().value_or(0))),</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.max_fall<sp/>=<sp/>uint16_t(std::round(m_connector-&gt;edid()-&gt;desiredMaxFrameAverageLuminance().value_or(0))),</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_blob_1a26d8f56e11c0090e06042564ff7170f3" kindref="member">DrmBlob::create</ref>(<ref refid="class_k_win_1_1_drm_pipeline_1a8cfc628f8e5de110f1b5386ebc15750a" kindref="member">gpu</ref>(),<sp/>&amp;data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data));</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="class_k_win_1_1_drm_pipeline_1a9dbb51784d5da0cf55369110414c8a5b" refkind="member"><highlight class="normal">std::chrono::nanoseconds<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a9dbb51784d5da0cf55369110414c8a5b" kindref="member">DrmPipeline::presentationDeadline</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="739"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_commitThread-&gt;safetyMargin();</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/drm/drm_pipeline.cpp"/>
  </compounddef>
</doxygen>
