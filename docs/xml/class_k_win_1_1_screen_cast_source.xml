<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_screen_cast_source" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::ScreenCastSource</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="class_k_win_1_1_output_screen_cast_source" prot="public" virt="non-virtual">KWin::OutputScreenCastSource</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_region_screen_cast_source" prot="public" virt="non-virtual">KWin::RegionScreenCastSource</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_window_screen_cast_source" prot="public" virt="non-virtual">KWin::WindowScreenCastSource</derivedcompoundref>
    <includes refid="screencastsource_8h" local="no">screencastsource.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1a4378aea966d5f53a2ac02905cf1486ce" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ScreenCastSource::ScreenCastSource</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>ScreenCastSource</name>
        <qualifiedname>KWin::ScreenCastSource::ScreenCastSource</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="25" column="14" bodyfile="kwin/src/plugins/screencast/screencastsource.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1a40b0b5e9cf19cece49b2244cf48ebaec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint</type>
        <definition>virtual uint KWin::ScreenCastSource::refreshRate</definition>
        <argsstring>() const =0</argsstring>
        <name>refreshRate</name>
        <qualifiedname>KWin::ScreenCastSource::refreshRate</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1a52aab239b675950bac2e5f8e2b6e839b">refreshRate</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1ad22faa428101cd530eb9ea389a7cf67e">refreshRate</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1a51d9c50b80c56b98b0e1a648fe464a24">refreshRate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="27" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1a4bd7da03d7f79c860e750331a13043d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>quint32</type>
        <definition>virtual quint32 KWin::ScreenCastSource::drmFormat</definition>
        <argsstring>() const =0</argsstring>
        <name>drmFormat</name>
        <qualifiedname>KWin::ScreenCastSource::drmFormat</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1a36b96f1f8a6512a0aef8d00e56cac0de">drmFormat</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1aa997c0767089d65f940c3243829fb542">drmFormat</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1a7d0c86d3ff4c902345f4fdc7c8fb3706">drmFormat</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="28" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1a00506590dd66318f56a95fcdb78afc92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QSize</type>
        <definition>virtual QSize KWin::ScreenCastSource::textureSize</definition>
        <argsstring>() const =0</argsstring>
        <name>textureSize</name>
        <qualifiedname>KWin::ScreenCastSource::textureSize</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1ac03d2a5dd2603fdb6d3f74336eb1437e">textureSize</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1a7647e0abdd2407d424f9cd249dd869bc">textureSize</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1abbed6970ddf7a1cf2356f3e136f5e0b6">textureSize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="29" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1a29fa5efbc02330c8963336a6f5055fb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>qreal</type>
        <definition>virtual qreal KWin::ScreenCastSource::devicePixelRatio</definition>
        <argsstring>() const =0</argsstring>
        <name>devicePixelRatio</name>
        <qualifiedname>KWin::ScreenCastSource::devicePixelRatio</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1aa61b4f1772e7bf27af047fbe649f411f">devicePixelRatio</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1a1b8f82b5a6db72a7b75b5dfbfa304f3a">devicePixelRatio</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1a53760311f3356c1955a0edcd6f43c1e2">devicePixelRatio</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="30" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1a202abfaf50c525aad37385774929e290" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KWin::ScreenCastSource::render</definition>
        <argsstring>(GLFramebuffer *target)=0</argsstring>
        <name>render</name>
        <qualifiedname>KWin::ScreenCastSource::render</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1a32b26b4d0b30e6cc71f5cfd594a02df4">render</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1a3e779c79adc3ac7f43d64c9ded555d05">render</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1aaf71d5a05c60d2cec39b650665ec46d4">render</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_g_l_framebuffer" kindref="compound">GLFramebuffer</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="32" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1a89c429ed58340166161661c363cd9037" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KWin::ScreenCastSource::render</definition>
        <argsstring>(QImage *target)=0</argsstring>
        <name>render</name>
        <qualifiedname>KWin::ScreenCastSource::render</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1a0e600178167a87568445c8ce26ba0ab6">render</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1a8c2c896324875128ed63cfba39c52a3d">render</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1a13473caeaeee286525aa8582d13e96c5">render</reimplementedby>
        <param>
          <type>QImage *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="33" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1afee3e29eae3341ce19ae90632390bd83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::chrono::nanoseconds</type>
        <definition>virtual std::chrono::nanoseconds KWin::ScreenCastSource::clock</definition>
        <argsstring>() const =0</argsstring>
        <name>clock</name>
        <qualifiedname>KWin::ScreenCastSource::clock</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1aa42dfb174c5fd6ddd28c14056244ec60">clock</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1a1a2dc74814c77351d3888b39c17072d5">clock</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1a5b6ef549553a6a08dab4b5309bf03c09">clock</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="34" column="38"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1aaa45df2379526fde4a9f83f74ec1f5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KWin::ScreenCastSource::resume</definition>
        <argsstring>()=0</argsstring>
        <name>resume</name>
        <qualifiedname>KWin::ScreenCastSource::resume</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1a98e6ea5635eed0bdb5c84e1ef4eae9b2">resume</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1af42972999b25d44006769e5914937787">resume</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1a7665acd6bf4b0577287f62348d4c9579">resume</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="36" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1a90dca872fa39221898c6412035916354" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void KWin::ScreenCastSource::pause</definition>
        <argsstring>()=0</argsstring>
        <name>pause</name>
        <qualifiedname>KWin::ScreenCastSource::pause</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1a1c3a19ed2ba9cd2fc6a9755ec703071d">pause</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1ac75238ce8c6fc4d3550cf58a5ad0e42d">pause</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1a13db42165f57d1d41d8fec23f5e548a7">pause</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="37" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1a15050cfc40a73453ebc835ba3510f5f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::ScreenCastSource::includesCursor</definition>
        <argsstring>(Cursor *cursor) const =0</argsstring>
        <name>includesCursor</name>
        <qualifiedname>KWin::ScreenCastSource::includesCursor</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1a0a65ad1a90cd7246246ba9ae5d6a5231">includesCursor</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1adc44aae7db8833da06854f4b4ef3107b">includesCursor</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1aaf792c182f0880fe53fffc92474ec285">includesCursor</reimplementedby>
        <param>
          <type><ref refid="class_k_win_1_1_cursor" kindref="compound">Cursor</ref> *</type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="39" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1ab8184b1757e827ba757cf81948a14600" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QPointF</type>
        <definition>virtual QPointF KWin::ScreenCastSource::mapFromGlobal</definition>
        <argsstring>(const QPointF &amp;point) const =0</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::ScreenCastSource::mapFromGlobal</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1ac665c7f4b86782c026375c7212de4df7">mapFromGlobal</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1a207583b86082a7ce4e0512e787b6838f">mapFromGlobal</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1a750aff7d8c4f771704e8d0e5bfb3189f">mapFromGlobal</reimplementedby>
        <param>
          <type>const QPointF &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="41" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_cast_source_1a88658385a395ea0ff532782092457ad6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QRectF</type>
        <definition>virtual QRectF KWin::ScreenCastSource::mapFromGlobal</definition>
        <argsstring>(const QRectF &amp;rect) const =0</argsstring>
        <name>mapFromGlobal</name>
        <qualifiedname>KWin::ScreenCastSource::mapFromGlobal</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_output_screen_cast_source_1a9b3ea0c699a7cdb666bd6fe75f860bd8">mapFromGlobal</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_region_screen_cast_source_1a2af8629af6fa0e17923b5b76d161b506">mapFromGlobal</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_screen_cast_source_1a00dee2b86dd3febbd5fd0c81927c37c6">mapFromGlobal</reimplementedby>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="42" column="20"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_screen_cast_source_1a9443c863764d2c30b342ed33b77bb4b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenCastSource::frame</definition>
        <argsstring>(const QRegion &amp;damage)</argsstring>
        <name>frame</name>
        <qualifiedname>KWin::ScreenCastSource::frame</qualifiedname>
        <param>
          <type>const QRegion &amp;</type>
          <declname>damage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="45" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_screen_cast_source_1ae91ee4eb8ad477ac2e0772da3fb2024c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenCastSource::closed</definition>
        <argsstring>()</argsstring>
        <name>closed</name>
        <qualifiedname>KWin::ScreenCastSource::closed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/screencast/screencastsource.h" line="46" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::OutputScreenCastSource</label>
        <link refid="class_k_win_1_1_output_screen_cast_source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::RegionScreenCastSource</label>
        <link refid="class_k_win_1_1_region_screen_cast_source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::ScreenCastSource</label>
        <link refid="class_k_win_1_1_screen_cast_source"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>KWin::WindowScreenCastSource</label>
        <link refid="class_k_win_1_1_window_screen_cast_source"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::ScreenCastSource</label>
        <link refid="class_k_win_1_1_screen_cast_source"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/screencast/screencastsource.h" line="20" column="1" bodyfile="kwin/src/plugins/screencast/screencastsource.h" bodystart="21" bodyend="47"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_screen_cast_source_1afee3e29eae3341ce19ae90632390bd83" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>clock</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1ae91ee4eb8ad477ac2e0772da3fb2024c" prot="public" virt="non-virtual"><scope>KWin::ScreenCastSource</scope><name>closed</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a29fa5efbc02330c8963336a6f5055fb2" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>devicePixelRatio</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a4bd7da03d7f79c860e750331a13043d5" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>drmFormat</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a9443c863764d2c30b342ed33b77bb4b2" prot="public" virt="non-virtual"><scope>KWin::ScreenCastSource</scope><name>frame</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a15050cfc40a73453ebc835ba3510f5f8" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>includesCursor</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1ab8184b1757e827ba757cf81948a14600" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a88658385a395ea0ff532782092457ad6" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a90dca872fa39221898c6412035916354" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>pause</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a40b0b5e9cf19cece49b2244cf48ebaec" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>refreshRate</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a202abfaf50c525aad37385774929e290" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>render</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a89c429ed58340166161661c363cd9037" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>render</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1aaa45df2379526fde4a9f83f74ec1f5e8" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>resume</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a4378aea966d5f53a2ac02905cf1486ce" prot="public" virt="non-virtual"><scope>KWin::ScreenCastSource</scope><name>ScreenCastSource</name></member>
      <member refid="class_k_win_1_1_screen_cast_source_1a00506590dd66318f56a95fcdb78afc92" prot="public" virt="pure-virtual"><scope>KWin::ScreenCastSource</scope><name>textureSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
