<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_libinput_pointer_event" kind="class" language="C++" prot="public">
    <compoundname>TestLibinputPointerEvent</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_test_libinput_pointer_event_1a26e6c2e48551b7944f5eb8194f6a12d6" prot="private" static="no" mutable="no">
        <type><ref refid="structlibinput__device" kindref="compound">libinput_device</ref> *</type>
        <definition>libinput_device* TestLibinputPointerEvent::m_nativeDevice</definition>
        <argsstring></argsstring>
        <name>m_nativeDevice</name>
        <qualifiedname>TestLibinputPointerEvent::m_nativeDevice</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="45" column="21" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_test_libinput_pointer_event_1afec36fcedace499e5e2ef7450edd52ac" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_lib_input_1_1_device" kindref="compound">Device</ref> *</type>
        <definition>Device* TestLibinputPointerEvent::m_device</definition>
        <argsstring></argsstring>
        <name>m_device</name>
        <qualifiedname>TestLibinputPointerEvent::m_device</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="46" column="12" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1ad71e78b439c52a870eaf853cd4a12534" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>TestLibinputPointerEvent::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="28" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1ac6aebc53687d3d49bd5c2f25a0f0619d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>TestLibinputPointerEvent::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="29" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a0d26ccae4887787e71c095db15d0e17b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testType_data</definition>
        <argsstring>()</argsstring>
        <name>testType_data</name>
        <qualifiedname>TestLibinputPointerEvent::testType_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="31" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="66" bodyend="76"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a2e61946a7ced0de25dc4a26f30ccbfa8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testType</definition>
        <argsstring>()</argsstring>
        <name>testType</name>
        <qualifiedname>TestLibinputPointerEvent::testType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="32" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="78" bodyend="95"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a1936c45bf716a6f39fcd6e8c079f4549" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testButton_data</definition>
        <argsstring>()</argsstring>
        <name>testButton_data</name>
        <qualifiedname>TestLibinputPointerEvent::testButton_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="33" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="97" bodyend="106"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a12e8295fa8d5b9d22265206dcf423693" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testButton</definition>
        <argsstring>()</argsstring>
        <name>testButton</name>
        <qualifiedname>TestLibinputPointerEvent::testButton</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="34" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="108" bodyend="128"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a326159a99d9953dc6749ee09194af2ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testScrollWheel_data</definition>
        <argsstring>()</argsstring>
        <name>testScrollWheel_data</name>
        <qualifiedname>TestLibinputPointerEvent::testScrollWheel_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="35" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="130" bodyend="141"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a282a99c8abd156d7349fc6fd71f7756e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testScrollWheel</definition>
        <argsstring>()</argsstring>
        <name>testScrollWheel</name>
        <qualifiedname>TestLibinputPointerEvent::testScrollWheel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="36" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="143" bodyend="173"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a0f0031a20ef12778d00022ba1a7eb421" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testScrollFinger_data</definition>
        <argsstring>()</argsstring>
        <name>testScrollFinger_data</name>
        <qualifiedname>TestLibinputPointerEvent::testScrollFinger_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="37" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="175" bodyend="188"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1abaf538fda8c685c65b11df61420beef0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testScrollFinger</definition>
        <argsstring>()</argsstring>
        <name>testScrollFinger</name>
        <qualifiedname>TestLibinputPointerEvent::testScrollFinger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="38" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="190" bodyend="215"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a8cf95e4c1d0a3ef145bf5ad4e829b727" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testScrollContinuous_data</definition>
        <argsstring>()</argsstring>
        <name>testScrollContinuous_data</name>
        <qualifiedname>TestLibinputPointerEvent::testScrollContinuous_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="39" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="217" bodyend="227"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a0b93d12f7093a6e1b8199a9c83fdff3e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testScrollContinuous</definition>
        <argsstring>()</argsstring>
        <name>testScrollContinuous</name>
        <qualifiedname>TestLibinputPointerEvent::testScrollContinuous</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="40" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="229" bodyend="254"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a1f06e819c0762627d988cb00f42f1e06" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testMotion</definition>
        <argsstring>()</argsstring>
        <name>testMotion</name>
        <qualifiedname>TestLibinputPointerEvent::testMotion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="41" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="256" bodyend="271"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_libinput_pointer_event_1a4df208feac502da9ec71388c8cd9469f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestLibinputPointerEvent::testAbsoluteMotion</definition>
        <argsstring>()</argsstring>
        <name>testAbsoluteMotion</name>
        <qualifiedname>TestLibinputPointerEvent::testAbsoluteMotion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="42" column="10" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="273" bodyend="289"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestLibinputPointerEvent</label>
        <link refid="class_test_libinput_pointer_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestLibinputPointerEvent</label>
        <link refid="class_test_libinput_pointer_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/libinput/pointer_event_test.cpp" line="24" column="1" bodyfile="kwin/autotests/libinput/pointer_event_test.cpp" bodystart="25" bodyend="47"/>
    <listofallmembers>
      <member refid="class_test_libinput_pointer_event_1ac6aebc53687d3d49bd5c2f25a0f0619d" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>cleanup</name></member>
      <member refid="class_test_libinput_pointer_event_1ad71e78b439c52a870eaf853cd4a12534" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>init</name></member>
      <member refid="class_test_libinput_pointer_event_1afec36fcedace499e5e2ef7450edd52ac" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>m_device</name></member>
      <member refid="class_test_libinput_pointer_event_1a26e6c2e48551b7944f5eb8194f6a12d6" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>m_nativeDevice</name></member>
      <member refid="class_test_libinput_pointer_event_1a4df208feac502da9ec71388c8cd9469f" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testAbsoluteMotion</name></member>
      <member refid="class_test_libinput_pointer_event_1a12e8295fa8d5b9d22265206dcf423693" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testButton</name></member>
      <member refid="class_test_libinput_pointer_event_1a1936c45bf716a6f39fcd6e8c079f4549" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testButton_data</name></member>
      <member refid="class_test_libinput_pointer_event_1a1f06e819c0762627d988cb00f42f1e06" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testMotion</name></member>
      <member refid="class_test_libinput_pointer_event_1a0b93d12f7093a6e1b8199a9c83fdff3e" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testScrollContinuous</name></member>
      <member refid="class_test_libinput_pointer_event_1a8cf95e4c1d0a3ef145bf5ad4e829b727" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testScrollContinuous_data</name></member>
      <member refid="class_test_libinput_pointer_event_1abaf538fda8c685c65b11df61420beef0" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testScrollFinger</name></member>
      <member refid="class_test_libinput_pointer_event_1a0f0031a20ef12778d00022ba1a7eb421" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testScrollFinger_data</name></member>
      <member refid="class_test_libinput_pointer_event_1a282a99c8abd156d7349fc6fd71f7756e" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testScrollWheel</name></member>
      <member refid="class_test_libinput_pointer_event_1a326159a99d9953dc6749ee09194af2ec" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testScrollWheel_data</name></member>
      <member refid="class_test_libinput_pointer_event_1a2e61946a7ced0de25dc4a26f30ccbfa8" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testType</name></member>
      <member refid="class_test_libinput_pointer_event_1a0d26ccae4887787e71c095db15d0e17b" prot="private" virt="non-virtual"><scope>TestLibinputPointerEvent</scope><name>testType_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
