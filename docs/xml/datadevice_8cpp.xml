<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="datadevice_8cpp" kind="file" language="C++">
    <compoundname>datadevice.cpp</compoundname>
    <includes refid="datadevice_8h" local="yes">datadevice.h</includes>
    <includes refid="datadevice__p_8h" local="yes">datadevice_p.h</includes>
    <includes refid="datadevicemanager_8h" local="yes">datadevicemanager.h</includes>
    <includes refid="dataoffer_8h" local="yes">dataoffer.h</includes>
    <includes refid="wayland_2datasource_8h" local="yes">datasource.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes refid="pointer_8h" local="yes">pointer.h</includes>
    <includes refid="seat_8h" local="yes">seat.h</includes>
    <includes refid="seat__p_8h" local="yes">seat_p.h</includes>
    <includes refid="surface_8h" local="yes">surface.h</includes>
    <includes local="yes">moc_datadevice.cpp</includes>
    <incdepgraph>
      <node id="34">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>abstract_data_source.h</label>
        <link refid="abstract__data__source_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>abstract_drop_handler.h</label>
        <link refid="abstract__drop__handler_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>clientconnection.h</label>
        <link refid="clientconnection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/datadevice.cpp</label>
        <link refid="datadevice_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>datadevice.h</label>
        <link refid="datadevice_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>datadevice_p.h</label>
        <link refid="datadevice__p_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>datadevicemanager.h</label>
        <link refid="datadevicemanager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>dataoffer.h</label>
        <link refid="dataoffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>datasource.h</label>
        <link refid="wayland_2datasource_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>pointer.h</label>
        <link refid="pointer_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>seat.h</label>
        <link refid="seat_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>seat_p.h</label>
        <link refid="seat__p_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>QByteArray</label>
      </node>
      <node id="23">
        <label>QCoreApplication</label>
      </node>
      <node id="40">
        <label>QDebug</label>
      </node>
      <node id="31">
        <label>QHash</label>
      </node>
      <node id="24">
        <label>QImage</label>
      </node>
      <node id="18">
        <label>QList</label>
      </node>
      <node id="32">
        <label>QMap</label>
      </node>
      <node id="29">
        <label>QMatrix4x4</label>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="25">
        <label>QPoint</label>
      </node>
      <node id="8">
        <label>QPointer</label>
      </node>
      <node id="41">
        <label>QRect</label>
      </node>
      <node id="46">
        <label>QRegion</label>
      </node>
      <node id="39">
        <label>QSize</label>
      </node>
      <node id="42">
        <label>QUuid</label>
      </node>
      <node id="26">
        <label>QVariant</label>
      </node>
      <node id="27">
        <label>QVector2D</label>
      </node>
      <node id="22">
        <label>config-kwin.h</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="47">
        <label>moc_datadevice.cpp</label>
      </node>
      <node id="12">
        <label>optional</label>
      </node>
      <node id="9">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="16">
        <label>sys/types.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_drag_and_drop_icon_private" prot="public">KWin::DragAndDropIconPrivate</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2014<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>David<sp/>Edmundson<sp/>&lt;davidedmundson@kde.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datadevice_8h" kindref="compound">datadevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datadevice__p_8h" kindref="compound">datadevice_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datadevicemanager_8h" kindref="compound">datadevicemanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dataoffer_8h" kindref="compound">dataoffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2datasource_8h" kindref="compound">datasource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer_8h" kindref="compound">pointer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat_8h" kindref="compound">seat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat__p_8h" kindref="compound">seat_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22" refid="class_k_win_1_1_drag_and_drop_icon_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_drag_and_drop_icon_private_1a7f83caa6be2b856ab020a67a0a0fef8f" kindref="member">DragAndDropIconPrivate</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drag_and_drop_icon_private_1a7f83caa6be2b856ab020a67a0a0fef8f" kindref="member">DragAndDropIconPrivate</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_drag_and_drop_icon_private_1aae38f98b60ed88a73ea2162165182dd4" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_k_win_1_1_drag_and_drop_icon_private_1aae38f98b60ed88a73ea2162165182dd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointer&lt;SurfaceInterface&gt;<sp/><ref refid="class_k_win_1_1_drag_and_drop_icon_private_1aae38f98b60ed88a73ea2162165182dd4" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="28" refid="class_k_win_1_1_drag_and_drop_icon_private_1ae8bf245b30faf7dc26040b9ea33620c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/><ref refid="class_k_win_1_1_drag_and_drop_icon_private_1ae8bf245b30faf7dc26040b9ea33620c3" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_k_win_1_1_drag_and_drop_icon_private_1a7f83caa6be2b856ab020a67a0a0fef8f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drag_and_drop_icon_private_1a7f83caa6be2b856ab020a67a0a0fef8f" kindref="member">DragAndDropIconPrivate::DragAndDropIconPrivate</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_drag_and_drop_icon_private_1aae38f98b60ed88a73ea2162165182dd4" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_drag_and_drop_icon_private_1aae38f98b60ed88a73ea2162165182dd4" kindref="member">surface</ref>(<ref refid="class_k_win_1_1_drag_and_drop_icon_private_1aae38f98b60ed88a73ea2162165182dd4" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">DragAndDropIcon::DragAndDropIcon(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(surface)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_drag_and_drop_icon_private" kindref="compound">DragAndDropIconPrivate</ref>(surface))</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_drag_and_drop_icon_private_1aae38f98b60ed88a73ea2162165182dd4" kindref="member">surface</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_1a0ef181bc149455033328ca56afc61697" kindref="member">SurfaceInterface::committed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;DragAndDropIcon::commit);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_k_win_1_1_drag_and_drop_icon_1a3e14d06bf87d64b444e721bd72932acb" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drag_and_drop_icon_1a3e14d06bf87d64b444e721bd72932acb" kindref="member">DragAndDropIcon::~DragAndDropIcon</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_k_win_1_1_drag_and_drop_icon_1a854cd6bdd637e43c7cf24728eabf234d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref><sp/>*<ref refid="class_k_win_1_1_drag_and_drop_icon_1a854cd6bdd637e43c7cf24728eabf234d" kindref="member">DragAndDropIcon::role</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref><sp/><ref refid="class_k_win_1_1_drag_and_drop_icon_1a854cd6bdd637e43c7cf24728eabf234d" kindref="member">role</ref>(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;dnd_icon&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_k_win_1_1_drag_and_drop_icon_1a854cd6bdd637e43c7cf24728eabf234d" kindref="member">role</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DragAndDropIcon::commit()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;position<sp/>+=<sp/>d-&gt;surface-&gt;offset();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_drag_and_drop_icon_1a9421e794366028713e40383c14030eb8" kindref="member">changed</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_k_win_1_1_drag_and_drop_icon_1a7f3a8e73f8b15a93496c2f50749997ce" refkind="member"><highlight class="normal">QPoint<sp/><ref refid="class_k_win_1_1_drag_and_drop_icon_1a7f3a8e73f8b15a93496c2f50749997ce" kindref="member">DragAndDropIcon::position</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="60"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;position;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_k_win_1_1_drag_and_drop_icon_1a11ef4c5df4188bba7553fe7e9dc39e84" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_drag_and_drop_icon_1a11ef4c5df4188bba7553fe7e9dc39e84" kindref="member">DragAndDropIcon::surface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="65"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;surface;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_k_win_1_1_data_device_interface_private_1a0f94deebd73ff373f77ac12292320ba1" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_data_device_interface_private_1a962262356d80ae2dedc88ef593c95d77" kindref="member">DataDeviceInterfacePrivate</ref><sp/>*<ref refid="class_k_win_1_1_data_device_interface_private_1a0f94deebd73ff373f77ac12292320ba1" kindref="member">DataDeviceInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_data_device_interface" kindref="compound">DataDeviceInterface</ref><sp/>*device)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>device-&gt;d.get();</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_k_win_1_1_data_device_interface_private_1a962262356d80ae2dedc88ef593c95d77" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_data_device_interface_private_1a962262356d80ae2dedc88ef593c95d77" kindref="member">DataDeviceInterfacePrivate::DataDeviceInterfacePrivate</ref>(<ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*<ref refid="class_k_win_1_1_data_device_interface_private_1aa22c7f94980a6560adb4cc1a847174e3" kindref="member">seat</ref>,<sp/><ref refid="class_k_win_1_1_data_device_interface" kindref="compound">DataDeviceInterface</ref><sp/>*_q,<sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::wl_data_device(resource)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_data_device_interface_private_1aa22c7f94980a6560adb4cc1a847174e3" kindref="member">seat</ref>(<ref refid="class_k_win_1_1_data_device_interface_private_1aa22c7f94980a6560adb4cc1a847174e3" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a28d80c42df30988bd5c8fbc679b06804" kindref="member">q</ref>(_q)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_k_win_1_1_data_device_interface_private_1a1bd090f79797bce9cc0ccc3033434a63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a1bd090f79797bce9cc0ccc3033434a63" kindref="member">DataDeviceInterfacePrivate::data_device_start_drag</ref>(Resource<sp/>*resource,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource<sp/>*sourceResource,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource<sp/>*originResource,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource<sp/>*iconResource,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*focusSurface<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">SurfaceInterface::get</ref>(originResource);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_data_source_interface" kindref="compound">DataSourceInterface</ref><sp/>*dataSource<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceResource)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSource<sp/>=<sp/><ref refid="class_k_win_1_1_data_source_interface_1ac1e03427d7f868e2e7da4bc3eb73f2ea" kindref="member">DataSourceInterface::get</ref>(sourceResource);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointerGrab<sp/>=<sp/><ref refid="class_k_win_1_1_data_device_interface_private_1aa22c7f94980a6560adb4cc1a847174e3" kindref="member">seat</ref>-&gt;hasImplicitPointerGrab(serial)<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_data_device_interface_private_1aa22c7f94980a6560adb4cc1a847174e3" kindref="member">seat</ref>-&gt;focusedPointerSurface()<sp/>==<sp/>focusSurface;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointerGrab)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Client<sp/>doesn&apos;t<sp/>have<sp/>pointer<sp/>grab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touchGrab<sp/>=<sp/><ref refid="class_k_win_1_1_data_device_interface_private_1aa22c7f94980a6560adb4cc1a847174e3" kindref="member">seat</ref>-&gt;hasImplicitTouchGrab(serial)<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_data_device_interface_private_1aa22c7f94980a6560adb4cc1a847174e3" kindref="member">seat</ref>-&gt;isSurfaceTouched(focusSurface);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!touchGrab)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Client<sp/>neither<sp/>has<sp/>pointer<sp/>nor<sp/>touch<sp/>grab.<sp/>No<sp/>drag<sp/>start<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drag_and_drop_icon" kindref="compound">DragAndDropIcon</ref><sp/>*dragIcon<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*iconSurface<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">SurfaceInterface::get</ref>(iconResource))<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref><sp/>*role<sp/>=<sp/>iconSurface-&gt;role())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(role<sp/>!=<sp/><ref refid="class_k_win_1_1_drag_and_drop_icon_1a854cd6bdd637e43c7cf24728eabf234d" kindref="member">DragAndDropIcon::role</ref>())<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>0,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>wl_surface<sp/>already<sp/>has<sp/>a<sp/>role<sp/>assigned<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>role-&gt;name().constData());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iconSurface-&gt;setRole(<ref refid="class_k_win_1_1_drag_and_drop_icon_1a854cd6bdd637e43c7cf24728eabf234d" kindref="member">DragAndDropIcon::role</ref>());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drag<sp/>icon<sp/>lifespan<sp/>is<sp/>mapped<sp/>to<sp/>surface<sp/>lifespan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragIcon<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drag_and_drop_icon" kindref="compound">DragAndDropIcon</ref>(iconSurface);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a8db17fc2f4f7b543c4aedc9fc6dac117" kindref="member">drag</ref>.serial<sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a28d80c42df30988bd5c8fbc679b06804" kindref="member">q</ref>-&gt;dragStarted(dataSource,<sp/>focusSurface,<sp/>serial,<sp/>dragIcon);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_k_win_1_1_data_device_interface_private_1a5f60d0f2fcc9670fb2c2df568bf11df3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a5f60d0f2fcc9670fb2c2df568bf11df3" kindref="member">DataDeviceInterfacePrivate::data_device_set_selection</ref>(Resource<sp/>*resource,<sp/>wl_resource<sp/>*source,<sp/>uint32_t<sp/>serial)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_data_source_interface" kindref="compound">DataSourceInterface</ref><sp/>*dataSource<sp/>=<sp/><ref refid="class_k_win_1_1_data_source_interface_1ac1e03427d7f868e2e7da4bc3eb73f2ea" kindref="member">DataSourceInterface::get</ref>(source);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataSource<sp/>&amp;&amp;<sp/>dataSource-&gt;<ref refid="class_k_win_1_1_data_source_interface_1ade02b7f35b9ca7dfa17a5a2393473a7e" kindref="member">supportedDragAndDropActions</ref>()<sp/>&amp;&amp;<sp/>wl_resource_get_version(dataSource-&gt;<ref refid="class_k_win_1_1_data_source_interface_1a1e4a481f62c63c6b500c2a719787017f" kindref="member">resource</ref>())<sp/>&gt;=<sp/>WL_DATA_SOURCE_ACTION_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(dataSource-&gt;<ref refid="class_k_win_1_1_data_source_interface_1a1e4a481f62c63c6b500c2a719787017f" kindref="member">resource</ref>(),<sp/>QtWaylandServer::wl_data_source::error_invalid_source,<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>source<sp/>is<sp/>for<sp/>drag<sp/>and<sp/>drop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataSource<sp/>&amp;&amp;<sp/>dataSource-&gt;<ref refid="class_k_win_1_1_data_source_interface_1afdc2d8691e969e43a1b23f9d82bca6c4" kindref="member">xdgToplevelDrag</ref>())<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>QtWaylandServer::wl_data_source::error_invalid_source,<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>source<sp/>is<sp/>for<sp/>drag<sp/>and<sp/>drop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_data_device_interface_private_1a62af7ef0654162b1c9be0bd6450f45da" kindref="member">selection</ref><sp/>==<sp/>dataSource)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_data_device_interface_private_1a62af7ef0654162b1c9be0bd6450f45da" kindref="member">selection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a62af7ef0654162b1c9be0bd6450f45da" kindref="member">selection</ref>-&gt;cancel();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a62af7ef0654162b1c9be0bd6450f45da" kindref="member">selection</ref><sp/>=<sp/>dataSource;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a28d80c42df30988bd5c8fbc679b06804" kindref="member">q</ref>-&gt;selectionChanged(<ref refid="class_k_win_1_1_data_device_interface_private_1a62af7ef0654162b1c9be0bd6450f45da" kindref="member">selection</ref>,<sp/>serial);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_k_win_1_1_data_device_interface_private_1a3caf2f5643f9d574a9f6c3d9e2e26ee9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a3caf2f5643f9d574a9f6c3d9e2e26ee9" kindref="member">DataDeviceInterfacePrivate::data_device_release</ref>(QtWaylandServer::wl_data_device::Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_k_win_1_1_data_device_interface_private_1afc69bea854cddf02fb99aef6bec7c93f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_data_offer_interface" kindref="compound">DataOfferInterface</ref><sp/>*<ref refid="class_k_win_1_1_data_device_interface_private_1afc69bea854cddf02fb99aef6bec7c93f" kindref="member">DataDeviceInterfacePrivate::createDataOffer</ref>(<ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*source)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!source)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>data<sp/>offer<sp/>can<sp/>only<sp/>exist<sp/>together<sp/>with<sp/>a<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource<sp/>*data_offer_resource<sp/>=<sp/>wl_resource_create(resource()-&gt;client(),<sp/>&amp;wl_data_offer_interface,<sp/>resource()-&gt;<ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data_offer_resource)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_no_memory(resource()-&gt;handle);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_data_offer_interface" kindref="compound">DataOfferInterface</ref><sp/>*offer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_data_offer_interface" kindref="compound">DataOfferInterface</ref>(source,<sp/>data_offer_resource);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>send_data_offer(offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1acd99b9af9be2df7e00db3b11a6112dd5" kindref="member">resource</ref>());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a74d5f48205123e866b7520bda3deae91" kindref="member">sendAllOffers</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offer;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_k_win_1_1_data_device_interface_private_1a7efbb3389532a967e8162bf19676ea24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a7efbb3389532a967e8162bf19676ea24" kindref="member">DataDeviceInterfacePrivate::data_device_destroy_resource</ref>(QtWaylandServer::wl_data_device::Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a28d80c42df30988bd5c8fbc679b06804" kindref="member">q</ref>-&gt;aboutToBeDestroyed();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_data_device_interface_private_1a28d80c42df30988bd5c8fbc679b06804" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">DataDeviceInterface::DataDeviceInterface(<ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat,<sp/>wl_resource<sp/>*resource)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_abstract_drop_handler" kindref="compound">AbstractDropHandler</ref>(nullptr)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_data_device_interface_private" kindref="compound">DataDeviceInterfacePrivate</ref>(seat,<sp/>this,<sp/>resource))</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private" kindref="compound">SeatInterfacePrivate</ref><sp/>*seatPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a5a91f5f417a6ee1b8bbe71a016d9ab4e" kindref="member">SeatInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_data_device_interface_private_1aa22c7f94980a6560adb4cc1a847174e3" kindref="member">seat</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>seatPrivate-&gt;<ref refid="class_k_win_1_1_seat_interface_private_1a8877801c1ad727e93fc3e2e12fab34c4" kindref="member">registerDataDevice</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="class_k_win_1_1_data_device_interface_1a96fa4424e9ac97d4d5de8f7ca87d9aaa" kindref="member">DataDeviceInterface::~DataDeviceInterface</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="class_k_win_1_1_data_device_interface_1a4fe18772a2f088c482a5b4de570c7894" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*<ref refid="class_k_win_1_1_data_device_interface_1a4fe18772a2f088c482a5b4de570c7894" kindref="member">DataDeviceInterface::seat</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="187"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;seat;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="class_k_win_1_1_data_device_interface_1aa209a08c9b03b6ad970568150228f6dc" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_data_source_interface" kindref="compound">DataSourceInterface</ref><sp/>*<ref refid="class_k_win_1_1_data_device_interface_1aa209a08c9b03b6ad970568150228f6dc" kindref="member">DataDeviceInterface::selection</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="192"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;selection;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="class_k_win_1_1_data_device_interface_1aa7628ede409cae10b83a422b59467cc0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_data_device_interface_1aa7628ede409cae10b83a422b59467cc0" kindref="member">DataDeviceInterface::sendSelection</ref>(<ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*other)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>other<sp/>?<sp/>d-&gt;createDataOffer(other)<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;send_selection(r<sp/>?<sp/>r-&gt;resource()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_k_win_1_1_data_device_interface_1a580e204762122e30dcfe9442e38b257d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_data_device_interface_1a580e204762122e30dcfe9442e38b257d" kindref="member">DataDeviceInterface::drop</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;send_drop();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;drag.surface<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>sending<sp/>wl_data_device.leave<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.posConnection);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;drag.posConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.destroyConnection);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;drag.destroyConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;seat-&gt;dragSource()-&gt;selectedDndAction()<sp/>!=<sp/>DataDeviceManagerInterface::DnDAction::Ask)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.sourceActionConnection);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.sourceActionConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.targetActionConnection);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.targetActionConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.keyboardModifiersConnection);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.keyboardModifiersConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_data_device_manager_interface_1a8aae415a2e33ca11c48d18e128f627b4" kindref="member">DataDeviceManagerInterface::DnDAction</ref><sp/>chooseDndAction(<ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*source,<sp/><ref refid="class_k_win_1_1_data_offer_interface" kindref="compound">DataOfferInterface</ref><sp/>*offer,<sp/>Qt::KeyboardModifiers<sp/>keyboardModifiers)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>compositor<sp/>picks<sp/>an<sp/>action<sp/>if<sp/>modifiers<sp/>are<sp/>pressed<sp/>and<sp/>it&apos;s<sp/>supported<sp/>both<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardModifiers.testFlag(Qt::ControlModifier))<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source-&gt;<ref refid="class_k_win_1_1_abstract_data_source_1a5233ed309a59d1070c3c17c90c69de3e" kindref="member">supportedDragAndDropActions</ref>().testFlag(DataDeviceManagerInterface::DnDAction::Copy)<sp/>&amp;&amp;<sp/>offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a7442b079144e044e6bc7eeb5537c91e6" kindref="member">supportedDragAndDropActions</ref>().has_value()<sp/>&amp;&amp;<sp/>offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a7442b079144e044e6bc7eeb5537c91e6" kindref="member">supportedDragAndDropActions</ref>()-&gt;testFlag(DataDeviceManagerInterface::DnDAction::Copy))<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataDeviceManagerInterface::DnDAction::Copy;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardModifiers.testFlag(Qt::ShiftModifier))<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source-&gt;<ref refid="class_k_win_1_1_abstract_data_source_1a5233ed309a59d1070c3c17c90c69de3e" kindref="member">supportedDragAndDropActions</ref>().testFlag(DataDeviceManagerInterface::DnDAction::Move)<sp/>&amp;&amp;<sp/>offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a7442b079144e044e6bc7eeb5537c91e6" kindref="member">supportedDragAndDropActions</ref>().has_value()<sp/>&amp;&amp;<sp/>offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a7442b079144e044e6bc7eeb5537c91e6" kindref="member">supportedDragAndDropActions</ref>()-&gt;testFlag(DataDeviceManagerInterface::DnDAction::Move))<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataDeviceManagerInterface::DnDAction::Move;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>we<sp/>pick<sp/>the<sp/>preferred<sp/>action<sp/>from<sp/>the<sp/>target<sp/>if<sp/>the<sp/>source<sp/>supported<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a04dd1f65f790df7a9ba15bd418a0ddbb" kindref="member">preferredDragAndDropAction</ref>().has_value())<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source-&gt;<ref refid="class_k_win_1_1_abstract_data_source_1a5233ed309a59d1070c3c17c90c69de3e" kindref="member">supportedDragAndDropActions</ref>().testFlag(*offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a04dd1f65f790df7a9ba15bd418a0ddbb" kindref="member">preferredDragAndDropAction</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a04dd1f65f790df7a9ba15bd418a0ddbb" kindref="member">preferredDragAndDropAction</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>pick<sp/>something<sp/>everyone<sp/>supports<sp/>in<sp/>a<sp/>deterministic<sp/>fashion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a7442b079144e044e6bc7eeb5537c91e6" kindref="member">supportedDragAndDropActions</ref>().has_value())<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;action<sp/>:<sp/>{DataDeviceManagerInterface::DnDAction::Copy,<sp/>DataDeviceManagerInterface::DnDAction::Move,<sp/>DataDeviceManagerInterface::DnDAction::Ask})<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source-&gt;<ref refid="class_k_win_1_1_abstract_data_source_1a5233ed309a59d1070c3c17c90c69de3e" kindref="member">supportedDragAndDropActions</ref>().testFlag(action)<sp/>&amp;&amp;<sp/>offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a7442b079144e044e6bc7eeb5537c91e6" kindref="member">supportedDragAndDropActions</ref>()-&gt;testFlag(action))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>action;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DataDeviceManagerInterface::DnDAction::None;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_k_win_1_1_data_device_interface_1adca3780c31168c7074df9a0bc804872f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_data_device_interface_1adca3780c31168c7074df9a0bc804872f" kindref="member">DataDeviceInterface::updateDragTarget</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.surface<sp/>==<sp/>surface)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.surface)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_leave();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.posConnection)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.posConnection);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.posConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.destroyConnection);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.destroyConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.surface<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.sourceActionConnection)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.sourceActionConnection);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.sourceActionConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.targetActionConnection)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.targetActionConnection);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.targetActionConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.keyboardModifiersConnection)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.keyboardModifiersConnection);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.keyboardModifiersConnection<sp/>=<sp/>QMetaObject::Connection();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>update<sp/>serial,<sp/>we<sp/>need<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dragSource<sp/>=<sp/>d-&gt;seat-&gt;dragSource();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!surface<sp/>||<sp/>!dragSource)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>dragSource)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;dndAction(DataDeviceManagerInterface::DnDAction::None);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dragSource)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragSource-&gt;accept(QString());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_data_offer_interface" kindref="compound">DataOfferInterface</ref><sp/>*offer<sp/>=<sp/>d-&gt;createDataOffer(dragSource);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1a9448c0eb7829e3c952113cf58dd18603" kindref="member">sendSourceActions</ref>();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;drag.surface<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;seat-&gt;isDragPointer())<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.posConnection<sp/>=<sp/>connect(d-&gt;seat,<sp/>&amp;<ref refid="class_k_win_1_1_seat_interface_1aa45ec0696603ab055b470dffa00ab43d" kindref="member">SeatInterface::pointerPosChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>QPointF<sp/>pos<sp/>=<sp/>d-&gt;seat-&gt;dragSurfaceTransformation().map(d-&gt;seat-&gt;pointerPos());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_motion(d-&gt;seat-&gt;timestamp().count(),<sp/>wl_fixed_from_double(pos.x()),<sp/>wl_fixed_from_double(pos.y()));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;seat-&gt;isDragTouch())<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>dragging<sp/>from<sp/>one<sp/>window<sp/>to<sp/>another,<sp/>we<sp/>may<sp/>end<sp/>up<sp/>in<sp/>a<sp/>data_device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>didn&apos;t<sp/>get<sp/>&quot;data_device_start_drag&quot;.<sp/>In<sp/>that<sp/>case,<sp/>the<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>touch<sp/>point<sp/>serial<sp/>will<sp/>be<sp/>incorrect<sp/>and<sp/>we<sp/>need<sp/>to<sp/>update<sp/>it<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>serial<sp/>from<sp/>the<sp/>seat.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private" kindref="compound">SeatInterfacePrivate</ref><sp/>*seatPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a5a91f5f417a6ee1b8bbe71a016d9ab4e" kindref="member">SeatInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_data_device_interface_1a4fe18772a2f088c482a5b4de570c7894" kindref="member">seat</ref>());</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seatPrivate-&gt;<ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.<ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1a6f713729d1f13e402196543213adaa65" kindref="member">dragImplicitGrabSerial</ref><sp/>!=<sp/>d-&gt;drag.serial)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.serial<sp/>=<sp/>seatPrivate-&gt;<ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.<ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1a6f713729d1f13e402196543213adaa65" kindref="member">dragImplicitGrabSerial</ref>.value();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.posConnection<sp/>=<sp/>connect(d-&gt;seat,<sp/>&amp;<ref refid="class_k_win_1_1_seat_interface_1a560e24d032be268d9d9049a3eb276af6" kindref="member">SeatInterface::touchMoved</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>quint32<sp/>serial,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;globalPosition)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(serial<sp/>!=<sp/>d-&gt;drag.serial)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>touch<sp/>down<sp/>has<sp/>been<sp/>moved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>pos<sp/>=<sp/>d-&gt;seat-&gt;dragSurfaceTransformation().map(globalPosition);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_motion(d-&gt;seat-&gt;timestamp().count(),<sp/>wl_fixed_from_double(pos.x()),<sp/>wl_fixed_from_double(pos.y()));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;drag.destroyConnection<sp/>=<sp/>connect(d-&gt;drag.surface,<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_1a547a07eb856d80205eb584e50571d1ee" kindref="member">SurfaceInterface::aboutToBeDestroyed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_leave();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(d-&gt;drag.posConnection)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.posConnection);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(d-&gt;drag.sourceActionConnection)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.sourceActionConnection);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(d-&gt;drag.targetActionConnection)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;drag.targetActionConnection);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag<sp/>=<sp/><ref refid="struct_k_win_1_1_data_device_interface_private_1_1_drag" kindref="compound">DataDeviceInterfacePrivate::Drag</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>pos;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;seat-&gt;isDragPointer())<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>d-&gt;seat-&gt;dragSurfaceTransformation().map(d-&gt;seat-&gt;pointerPos());</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;seat-&gt;isDragTouch())<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>d-&gt;seat-&gt;dragSurfaceTransformation().map(d-&gt;seat-&gt;firstTouchPointPosition(surface));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;send_enter(serial,<sp/>surface-&gt;resource(),<sp/>wl_fixed_from_double(pos.x()),<sp/>wl_fixed_from_double(pos.y()),<sp/>offer<sp/>?<sp/>offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1acd99b9af9be2df7e00db3b11a6112dd5" kindref="member">resource</ref>()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offer)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>matchOffers<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>dragSource,<sp/>offer]<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qt::KeyboardModifiers<sp/>keyboardModifiers;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;seat-&gt;isDrag())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>keyboard<sp/>modifiers<sp/>when<sp/>in<sp/>&quot;ask&quot;<sp/>negotiation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyboardModifiers<sp/>=<sp/>dragSource-&gt;keyboardModifiers();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataDeviceManagerInterface::DnDAction<sp/>action<sp/>=<sp/>chooseDndAction(dragSource,<sp/>offer,<sp/>keyboardModifiers);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offer-&gt;<ref refid="class_k_win_1_1_data_offer_interface_1abdceca4d508186c6a1a9597cf069052a" kindref="member">dndAction</ref>(action);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragSource-&gt;dndAction(action);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matchOffers();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.targetActionConnection<sp/>=<sp/>connect(offer,<sp/>&amp;DataOfferInterface::dragAndDropActionsChanged,<sp/>dragSource,<sp/>matchOffers);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.sourceActionConnection<sp/>=<sp/>connect(dragSource,<sp/>&amp;AbstractDataSource::supportedDragAndDropActionsChanged,<sp/>offer,<sp/>matchOffers);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.keyboardModifiersConnection<sp/>=<sp/>connect(dragSource,<sp/>&amp;AbstractDataSource::keyboardModifiersChanged,<sp/>offer,<sp/>matchOffers);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="class_k_win_1_1_data_device_interface_1af38ced668b79506e45bfdc72edc86ebf" refkind="member"><highlight class="normal">wl_client<sp/>*<ref refid="class_k_win_1_1_data_device_interface_1af38ced668b79506e45bfdc72edc86ebf" kindref="member">DataDeviceInterface::client</ref>()</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;resource()-&gt;client();</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_datadevice.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/datadevice.cpp"/>
  </compounddef>
</doxygen>
