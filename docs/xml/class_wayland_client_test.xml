<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_wayland_client_test" kind="class" language="C++" prot="public">
    <compoundname>WaylandClientTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="touchclienttest_8h" local="no">touchclienttest.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_wayland_client_test_1aafab26b45b733018cec82227448b75cd" prot="private" static="no" mutable="no">
        <type>QThread *</type>
        <definition>QThread* WaylandClientTest::m_connectionThread</definition>
        <argsstring></argsstring>
        <name>m_connectionThread</name>
        <qualifiedname>WaylandClientTest::m_connectionThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="40" column="13" bodyfile="kwin/tests/touchclienttest.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_client_test_1a0e92fd016add6eaae73c342e8083f21d" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ConnectionThread *</type>
        <definition>KWayland::Client::ConnectionThread* WaylandClientTest::m_connectionThreadObject</definition>
        <argsstring></argsstring>
        <name>m_connectionThreadObject</name>
        <qualifiedname>WaylandClientTest::m_connectionThreadObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="41" column="40" bodyfile="kwin/tests/touchclienttest.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_client_test_1acbb160ac0898550db68ebee0a4056460" prot="private" static="no" mutable="no">
        <type>KWayland::Client::EventQueue *</type>
        <definition>KWayland::Client::EventQueue* WaylandClientTest::m_eventQueue</definition>
        <argsstring></argsstring>
        <name>m_eventQueue</name>
        <qualifiedname>WaylandClientTest::m_eventQueue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="42" column="34" bodyfile="kwin/tests/touchclienttest.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_client_test_1a28fad3fcfaeb846cadf8594fd3f5e3de" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Compositor *</type>
        <definition>KWayland::Client::Compositor* WaylandClientTest::m_compositor</definition>
        <argsstring></argsstring>
        <name>m_compositor</name>
        <qualifiedname>WaylandClientTest::m_compositor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="43" column="34" bodyfile="kwin/tests/touchclienttest.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_client_test_1ac3620c0c932fcec1712ac2d2d4b010fc" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Output *</type>
        <definition>KWayland::Client::Output* WaylandClientTest::m_output</definition>
        <argsstring></argsstring>
        <name>m_output</name>
        <qualifiedname>WaylandClientTest::m_output</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="44" column="30" bodyfile="kwin/tests/touchclienttest.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_client_test_1ac001d543a963104c9182a0ca6201d18f" prot="private" static="no" mutable="no">
        <type>KWayland::Client::Surface *</type>
        <definition>KWayland::Client::Surface* WaylandClientTest::m_surface</definition>
        <argsstring></argsstring>
        <name>m_surface</name>
        <qualifiedname>WaylandClientTest::m_surface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="45" column="31" bodyfile="kwin/tests/touchclienttest.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_client_test_1abf1aaa816832fd8f3eeb9ed5b3a077eb" prot="private" static="no" mutable="no">
        <type>KWayland::Client::ShmPool *</type>
        <definition>KWayland::Client::ShmPool* WaylandClientTest::m_shm</definition>
        <argsstring></argsstring>
        <name>m_shm</name>
        <qualifiedname>WaylandClientTest::m_shm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="46" column="31" bodyfile="kwin/tests/touchclienttest.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_client_test_1a2ffefbba8c9630bd127d2174b25b93bb" prot="private" static="no" mutable="no">
        <type>QSize</type>
        <definition>QSize WaylandClientTest::m_currentSize</definition>
        <argsstring></argsstring>
        <name>m_currentSize</name>
        <qualifiedname>WaylandClientTest::m_currentSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="47" column="11" bodyfile="kwin/tests/touchclienttest.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wayland_client_test_1af45e9b3e8e9e88ff0dcb07a63c03b20f" prot="private" static="no" mutable="no">
        <type>QTimer *</type>
        <definition>QTimer* WaylandClientTest::m_timer</definition>
        <argsstring></argsstring>
        <name>m_timer</name>
        <qualifiedname>WaylandClientTest::m_timer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="48" column="12" bodyfile="kwin/tests/touchclienttest.h" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_wayland_client_test_1ac2a4ad781b93fbbfca9cb51872f14b9f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>WaylandClientTest::WaylandClientTest</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>WaylandClientTest</name>
        <qualifiedname>WaylandClientTest::WaylandClientTest</qualifiedname>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="32" column="14" bodyfile="kwin/tests/touchclienttest.cpp" bodystart="37" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_client_test_1a8a64cb834502eff5600148077b8327da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>WaylandClientTest::~WaylandClientTest</definition>
        <argsstring>()</argsstring>
        <name>~WaylandClientTest</name>
        <qualifiedname>WaylandClientTest::~WaylandClientTest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="33" column="13" bodyfile="kwin/tests/touchclienttest.cpp" bodystart="51" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_wayland_client_test_1aec8128d9f8edc012447b464eb0686c63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WaylandClientTest::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>WaylandClientTest::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="36" column="10" bodyfile="kwin/tests/touchclienttest.cpp" bodystart="58" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_client_test_1a1e20471c53d4e2f96a8f684bd46b010e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WaylandClientTest::render</definition>
        <argsstring>(const QSize &amp;size)</argsstring>
        <name>render</name>
        <qualifiedname>WaylandClientTest::render</qualifiedname>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="37" column="10" bodyfile="kwin/tests/touchclienttest.cpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_client_test_1a1be7ca6c8f1bc8ee6f322d473e214c87" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WaylandClientTest::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <qualifiedname>WaylandClientTest::render</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="38" column="10" bodyfile="kwin/tests/touchclienttest.cpp" bodystart="180" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_wayland_client_test_1a7b9bbfafbf46a5ad713476a7064be8bf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WaylandClientTest::setupRegistry</definition>
        <argsstring>(KWayland::Client::Registry *registry)</argsstring>
        <name>setupRegistry</name>
        <qualifiedname>WaylandClientTest::setupRegistry</qualifiedname>
        <param>
          <type>KWayland::Client::Registry *</type>
          <declname>registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/tests/touchclienttest.h" line="39" column="10" bodyfile="kwin/tests/touchclienttest.cpp" bodystart="87" bodyend="172"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>WaylandClientTest</label>
        <link refid="class_wayland_client_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>WaylandClientTest</label>
        <link refid="class_wayland_client_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/tests/touchclienttest.h" line="28" column="1" bodyfile="kwin/tests/touchclienttest.h" bodystart="29" bodyend="49"/>
    <listofallmembers>
      <member refid="class_wayland_client_test_1aec8128d9f8edc012447b464eb0686c63" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>init</name></member>
      <member refid="class_wayland_client_test_1a28fad3fcfaeb846cadf8594fd3f5e3de" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>m_compositor</name></member>
      <member refid="class_wayland_client_test_1aafab26b45b733018cec82227448b75cd" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>m_connectionThread</name></member>
      <member refid="class_wayland_client_test_1a0e92fd016add6eaae73c342e8083f21d" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>m_connectionThreadObject</name></member>
      <member refid="class_wayland_client_test_1a2ffefbba8c9630bd127d2174b25b93bb" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>m_currentSize</name></member>
      <member refid="class_wayland_client_test_1acbb160ac0898550db68ebee0a4056460" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>m_eventQueue</name></member>
      <member refid="class_wayland_client_test_1ac3620c0c932fcec1712ac2d2d4b010fc" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>m_output</name></member>
      <member refid="class_wayland_client_test_1abf1aaa816832fd8f3eeb9ed5b3a077eb" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>m_shm</name></member>
      <member refid="class_wayland_client_test_1ac001d543a963104c9182a0ca6201d18f" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>m_surface</name></member>
      <member refid="class_wayland_client_test_1af45e9b3e8e9e88ff0dcb07a63c03b20f" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>m_timer</name></member>
      <member refid="class_wayland_client_test_1a1e20471c53d4e2f96a8f684bd46b010e" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>render</name></member>
      <member refid="class_wayland_client_test_1a1be7ca6c8f1bc8ee6f322d473e214c87" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>render</name></member>
      <member refid="class_wayland_client_test_1a7b9bbfafbf46a5ad713476a7064be8bf" prot="private" virt="non-virtual"><scope>WaylandClientTest</scope><name>setupRegistry</name></member>
      <member refid="class_wayland_client_test_1ac2a4ad781b93fbbfca9cb51872f14b9f" prot="public" virt="non-virtual"><scope>WaylandClientTest</scope><name>WaylandClientTest</name></member>
      <member refid="class_wayland_client_test_1a8a64cb834502eff5600148077b8327da" prot="public" virt="virtual"><scope>WaylandClientTest</scope><name>~WaylandClientTest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
