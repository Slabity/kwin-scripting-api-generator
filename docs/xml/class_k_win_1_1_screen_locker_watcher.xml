<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_screen_locker_watcher" kind="class" language="C++" prot="public">
    <compoundname>KWin::ScreenLockerWatcher</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="screenlockerwatcher_8h" local="no">screenlockerwatcher.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_screen_locker_watcher_1a1ad1f773ca5d83899e654e49c86b670e" prot="private" static="no" mutable="no">
        <type>OrgFreedesktopScreenSaverInterface *</type>
        <definition>OrgFreedesktopScreenSaverInterface* KWin::ScreenLockerWatcher::m_interface</definition>
        <argsstring></argsstring>
        <name>m_interface</name>
        <qualifiedname>KWin::ScreenLockerWatcher::m_interface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="41" column="40" bodyfile="kwin/src/screenlockerwatcher.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_locker_watcher_1ace97ef6164c7f307b1d436e4c69fea96" prot="private" static="no" mutable="no">
        <type>OrgKdeScreensaverInterface *</type>
        <definition>OrgKdeScreensaverInterface* KWin::ScreenLockerWatcher::m_kdeInterface</definition>
        <argsstring></argsstring>
        <name>m_kdeInterface</name>
        <qualifiedname>KWin::ScreenLockerWatcher::m_kdeInterface</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="42" column="32" bodyfile="kwin/src/screenlockerwatcher.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_locker_watcher_1aee71764f73b2896a851239909789ba2f" prot="private" static="no" mutable="no">
        <type>QDBusServiceWatcher *</type>
        <definition>QDBusServiceWatcher* KWin::ScreenLockerWatcher::m_serviceWatcher</definition>
        <argsstring></argsstring>
        <name>m_serviceWatcher</name>
        <qualifiedname>KWin::ScreenLockerWatcher::m_serviceWatcher</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="43" column="25" bodyfile="kwin/src/screenlockerwatcher.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_locker_watcher_1a352d84b996a3d3716a3b673c6037d151" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::ScreenLockerWatcher::m_locked</definition>
        <argsstring></argsstring>
        <name>m_locked</name>
        <qualifiedname>KWin::ScreenLockerWatcher::m_locked</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="44" column="10" bodyfile="kwin/src/screenlockerwatcher.h" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_screen_locker_watcher_1aa3e36b22dee141f864cf488992f68ae1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ScreenLockerWatcher::ScreenLockerWatcher</definition>
        <argsstring>()</argsstring>
        <name>ScreenLockerWatcher</name>
        <qualifiedname>KWin::ScreenLockerWatcher::ScreenLockerWatcher</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="27" column="14" bodyfile="kwin/src/screenlockerwatcher.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_locker_watcher_1a961dc0d6143352b59e9be3d32a44373d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::ScreenLockerWatcher::isLocked</definition>
        <argsstring>() const</argsstring>
        <name>isLocked</name>
        <qualifiedname>KWin::ScreenLockerWatcher::isLocked</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="29" column="10" bodyfile="kwin/src/screenlockerwatcher.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_screen_locker_watcher_1ae21a00302ccc4de7fe370159bf982c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenLockerWatcher::locked</definition>
        <argsstring>(bool locked)</argsstring>
        <name>locked</name>
        <qualifiedname>KWin::ScreenLockerWatcher::locked</qualifiedname>
        <param>
          <type>bool</type>
          <declname>locked</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="31" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_screen_locker_watcher_1a3a69dfe8a2f6294aa54338b7f7e2b644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenLockerWatcher::aboutToLock</definition>
        <argsstring>()</argsstring>
        <name>aboutToLock</name>
        <qualifiedname>KWin::ScreenLockerWatcher::aboutToLock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="32" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_screen_locker_watcher_1aa0c298574e5549f05f77497edc7b4168" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenLockerWatcher::setLocked</definition>
        <argsstring>(bool activated)</argsstring>
        <name>setLocked</name>
        <qualifiedname>KWin::ScreenLockerWatcher::setLocked</qualifiedname>
        <param>
          <type>bool</type>
          <declname>activated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="34" column="10" bodyfile="kwin/src/screenlockerwatcher.cpp" bodystart="67" bodyend="74"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_screen_locker_watcher_1ad39d20c18c45884c175484c2b3d371aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenLockerWatcher::activeQueried</definition>
        <argsstring>(QDBusPendingCallWatcher *watcher)</argsstring>
        <name>activeQueried</name>
        <qualifiedname>KWin::ScreenLockerWatcher::activeQueried</qualifiedname>
        <param>
          <type>QDBusPendingCallWatcher *</type>
          <declname>watcher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="35" column="10" bodyfile="kwin/src/screenlockerwatcher.cpp" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_screen_locker_watcher_1a3af5396c3cc1c4c6b20ce601e61f4ce2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenLockerWatcher::serviceOwnerChanged</definition>
        <argsstring>(const QString &amp;serviceName, const QString &amp;oldOwner, const QString &amp;newOwner)</argsstring>
        <name>serviceOwnerChanged</name>
        <qualifiedname>KWin::ScreenLockerWatcher::serviceOwnerChanged</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>serviceName</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>oldOwner</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>newOwner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="36" column="10" bodyfile="kwin/src/screenlockerwatcher.cpp" bodystart="42" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_screen_locker_watcher_1a4edf2d3facd1488e3ac7476eb3e501e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenLockerWatcher::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <qualifiedname>KWin::ScreenLockerWatcher::initialize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="39" column="10" bodyfile="kwin/src/screenlockerwatcher.cpp" bodystart="27" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_locker_watcher_1a7f095cf1b3f1a84bf06dd3ead2981c15" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenLockerWatcher::queryActive</definition>
        <argsstring>()</argsstring>
        <name>queryActive</name>
        <qualifiedname>KWin::ScreenLockerWatcher::queryActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenlockerwatcher.h" line="40" column="10" bodyfile="kwin/src/screenlockerwatcher.cpp" bodystart="51" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::ScreenLockerWatcher</label>
        <link refid="class_k_win_1_1_screen_locker_watcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::ScreenLockerWatcher</label>
        <link refid="class_k_win_1_1_screen_locker_watcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/screenlockerwatcher.h" line="23" column="1" bodyfile="kwin/src/screenlockerwatcher.h" bodystart="24" bodyend="45"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_screen_locker_watcher_1a3a69dfe8a2f6294aa54338b7f7e2b644" prot="public" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>aboutToLock</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1ad39d20c18c45884c175484c2b3d371aa" prot="private" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>activeQueried</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1a4edf2d3facd1488e3ac7476eb3e501e3" prot="private" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>initialize</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1a961dc0d6143352b59e9be3d32a44373d" prot="public" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>isLocked</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1ae21a00302ccc4de7fe370159bf982c62" prot="public" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>locked</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1a1ad1f773ca5d83899e654e49c86b670e" prot="private" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>m_interface</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1ace97ef6164c7f307b1d436e4c69fea96" prot="private" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>m_kdeInterface</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1a352d84b996a3d3716a3b673c6037d151" prot="private" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>m_locked</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1aee71764f73b2896a851239909789ba2f" prot="private" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>m_serviceWatcher</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1a7f095cf1b3f1a84bf06dd3ead2981c15" prot="private" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>queryActive</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1aa3e36b22dee141f864cf488992f68ae1" prot="public" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>ScreenLockerWatcher</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1a3af5396c3cc1c4c6b20ce601e61f4ce2" prot="private" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>serviceOwnerChanged</name></member>
      <member refid="class_k_win_1_1_screen_locker_watcher_1aa0c298574e5549f05f77497edc7b4168" prot="private" virt="non-virtual"><scope>KWin::ScreenLockerWatcher</scope><name>setLocked</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
