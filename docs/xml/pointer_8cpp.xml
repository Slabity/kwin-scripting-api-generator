<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="pointer_8cpp" kind="file" language="C++">
    <compoundname>pointer.cpp</compoundname>
    <includes refid="pointer_8h" local="yes">pointer.h</includes>
    <includes refid="clientconnection_8h" local="yes">clientconnection.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes refid="pointer__p_8h" local="yes">pointer_p.h</includes>
    <includes refid="pointergestures__v1__p_8h" local="yes">pointergestures_v1_p.h</includes>
    <includes refid="relativepointer__v1__p_8h" local="yes">relativepointer_v1_p.h</includes>
    <includes refid="seat_8h" local="yes">seat.h</includes>
    <includes refid="surface_8h" local="yes">surface.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes refid="resource_8h" local="yes">utils/resource.h</includes>
    <includes local="yes">moc_pointer.cpp</includes>
    <incdepgraph>
      <node id="29">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>utils/resource.h</label>
        <link refid="resource_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>clientconnection.h</label>
        <link refid="clientconnection_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/pointer.cpp</label>
        <link refid="pointer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pointer.h</label>
        <link refid="pointer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>pointer_p.h</label>
        <link refid="pointer__p_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>pointergestures_v1_p.h</label>
        <link refid="pointergestures__v1__p_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>relativepointer_v1_p.h</label>
        <link refid="relativepointer__v1__p_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>seat.h</label>
        <link refid="seat_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>QByteArray</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="36">
        <label>QDebug</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="17">
        <label>QList</label>
      </node>
      <node id="46">
        <label>QLoggingCategory</label>
      </node>
      <node id="27">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="19">
        <label>QPointF</label>
      </node>
      <node id="20">
        <label>QPointer</label>
      </node>
      <node id="37">
        <label>QRect</label>
      </node>
      <node id="42">
        <label>QRegion</label>
      </node>
      <node id="35">
        <label>QSize</label>
      </node>
      <node id="45">
        <label>QString</label>
      </node>
      <node id="38">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="47">
        <label>climits</label>
      </node>
      <node id="5">
        <label>config-kwin.h</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="49">
        <label>limits</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="51">
        <label>moc_pointer.cpp</label>
      </node>
      <node id="30">
        <label>optional</label>
      </node>
      <node id="23">
        <label>qwayland-server-pointer-gestures-unstable-v1.h</label>
      </node>
      <node id="25">
        <label>qwayland-server-relative-pointer-unstable-v1.h</label>
      </node>
      <node id="21">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="15">
        <label>sys/types.h</label>
      </node>
      <node id="50">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_pointer_surface_cursor_private" prot="public">KWin::PointerSurfaceCursorPrivate</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2014<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>Adrien<sp/>Faveraux<sp/>&lt;ad1rie3@hotmail.fr&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer_8h" kindref="compound">pointer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clientconnection_8h" kindref="compound">clientconnection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__p_8h" kindref="compound">pointer_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointergestures__v1__p_8h" kindref="compound">pointergestures_v1_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="relativepointer__v1__p_8h" kindref="compound">relativepointer_v1_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat_8h" kindref="compound">seat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resource_8h" kindref="compound">utils/resource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22" refid="class_k_win_1_1_pointer_surface_cursor_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_pointer_surface_cursor_private" kindref="compound">PointerSurfaceCursorPrivate</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25" refid="class_k_win_1_1_pointer_surface_cursor_private_1a636698074b079b318cca8583f5502c9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/><ref refid="class_k_win_1_1_pointer_surface_cursor_private_1a636698074b079b318cca8583f5502c9f" kindref="member">hotspot</ref>;</highlight></codeline>
<codeline lineno="26" refid="class_k_win_1_1_pointer_surface_cursor_private_1ace4a0e9c427f22470ccc287b4d5c67fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointer&lt;SurfaceInterface&gt;<sp/><ref refid="class_k_win_1_1_pointer_surface_cursor_private_1ace4a0e9c427f22470ccc287b4d5c67fc" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_k_win_1_1_pointer_interface_private_1acd1dec82f581dd8d9ccc055ae380548f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_interface_private_1ac7cb2bfce1918b14a51487d0171114b6" kindref="member">PointerInterfacePrivate</ref><sp/>*<ref refid="class_k_win_1_1_pointer_interface_private_1acd1dec82f581dd8d9ccc055ae380548f" kindref="member">PointerInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*pointer)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointer-&gt;d.get();</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_k_win_1_1_pointer_interface_private_1ac7cb2bfce1918b14a51487d0171114b6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_interface_private_1ac7cb2bfce1918b14a51487d0171114b6" kindref="member">PointerInterfacePrivate::PointerInterfacePrivate</ref>(<ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_interface_private_1ae4333b1eb4df2fb44dde6cdb621ff6d9" kindref="member">q</ref>,<sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_interface_private_1a69fc6208b1011150b4dbee3237f229c6" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1ae4333b1eb4df2fb44dde6cdb621ff6d9" kindref="member">q</ref>(<ref refid="class_k_win_1_1_pointer_interface_private_1ae4333b1eb4df2fb44dde6cdb621ff6d9" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a69fc6208b1011150b4dbee3237f229c6" kindref="member">seat</ref>(<ref refid="class_k_win_1_1_pointer_interface_private_1a69fc6208b1011150b4dbee3237f229c6" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a271022e8dd50ec1532232cd7a758d14a" kindref="member">relativePointersV1</ref>(new<sp/><ref refid="class_k_win_1_1_relative_pointer_v1_interface" kindref="compound">RelativePointerV1Interface</ref>(<ref refid="class_k_win_1_1_pointer_interface_private_1ae4333b1eb4df2fb44dde6cdb621ff6d9" kindref="member">q</ref>))</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a1c0e41e3b6bc5ad998a4448f799bd8ce" kindref="member">swipeGesturesV1</ref>(new<sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface" kindref="compound">PointerSwipeGestureV1Interface</ref>(<ref refid="class_k_win_1_1_pointer_interface_private_1ae4333b1eb4df2fb44dde6cdb621ff6d9" kindref="member">q</ref>))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a53e679ddc9f5562c36b3cd342cc9f15b" kindref="member">pinchGesturesV1</ref>(new<sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface" kindref="compound">PointerPinchGestureV1Interface</ref>(<ref refid="class_k_win_1_1_pointer_interface_private_1ae4333b1eb4df2fb44dde6cdb621ff6d9" kindref="member">q</ref>))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a12ee3f18f0e4df9fea02c549680b53cc" kindref="member">holdGesturesV1</ref>(new<sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface" kindref="compound">PointerHoldGestureV1Interface</ref>(<ref refid="class_k_win_1_1_pointer_interface_private_1ae4333b1eb4df2fb44dde6cdb621ff6d9" kindref="member">q</ref>))</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_k_win_1_1_pointer_interface_private_1ac934561075c7f882dc75c37330f64b87" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_interface_private_1ac934561075c7f882dc75c37330f64b87" kindref="member">PointerInterfacePrivate::~PointerInterfacePrivate</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_k_win_1_1_pointer_interface_private_1a7a3b19c8964089efd8034631523527a1" refkind="member"><highlight class="normal">QList&lt;PointerInterfacePrivate::Resource<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a7a3b19c8964089efd8034631523527a1" kindref="member">PointerInterfacePrivate::pointersForClient</ref>(<ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*client)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="49"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resourceMap().values(client-&gt;<ref refid="class_k_win_1_1_client_connection_1aa3b49670cf09ff8b5bf837f7ba29f7d2" kindref="member">client</ref>());</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_k_win_1_1_pointer_interface_private_1a70df43984f555cb8acd70ac73cac85d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a70df43984f555cb8acd70ac73cac85d4" kindref="member">PointerInterfacePrivate::pointer_set_cursor</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/>serial,<sp/>::wl_resource<sp/>*surface_resource,<sp/>int32_t<sp/>hotspot_x,<sp/>int32_t<sp/>hotspot_y)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref>-&gt;client()-&gt;client()<sp/>!=<sp/>resource-&gt;client())<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_CORE,<sp/></highlight><highlight class="stringliteral">&quot;Denied<sp/>set_cursor<sp/>request<sp/>from<sp/>unfocused<sp/>client&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_pointer_interface_private_1a840bc0509f1d2c25c73667886559e40b" kindref="member">focusedSerial</ref><sp/>!=<sp/>serial)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface_resource)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface<sp/>=<sp/><ref refid="class_k_win_1_1_surface_interface_1a24ac16f7936d889771c2ab09d973175b" kindref="member">SurfaceInterface::get</ref>(surface_resource);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!surface)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>WL_DISPLAY_ERROR_INVALID_OBJECT,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>surface&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref><sp/>cursorRole(QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;cursor&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_role" kindref="compound">SurfaceRole</ref><sp/>*role<sp/>=<sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a74d8c5aef926651948ae88d70feb0ffe" kindref="member">role</ref>())<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(role<sp/>!=<sp/>&amp;cursorRole)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_resource_post_error(resource-&gt;handle,<sp/>error_role,<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>wl_surface<sp/>already<sp/>has<sp/>a<sp/>role<sp/>assigned<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>role-&gt;name().constData());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1af7fc1b7a86682bcd55e1195f471213e4" kindref="member">setRole</ref>(&amp;cursorRole);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_pointer_interface_private_1a43a3e2ccf9fbd983316ace93522566ea" kindref="member">cursor</ref>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a43a3e2ccf9fbd983316ace93522566ea" kindref="member">cursor</ref><sp/>=<sp/>std::make_unique&lt;PointerSurfaceCursor&gt;();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a43a3e2ccf9fbd983316ace93522566ea" kindref="member">cursor</ref>-&gt;d-&gt;hotspot<sp/>=<sp/>QPointF(hotspot_x,<sp/>hotspot_y)<sp/>/<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref>-&gt;client()-&gt;scaleOverride();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a43a3e2ccf9fbd983316ace93522566ea" kindref="member">cursor</ref>-&gt;d-&gt;surface<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1ae4333b1eb4df2fb44dde6cdb621ff6d9" kindref="member">q</ref>-&gt;cursorChanged(<ref refid="class_k_win_1_1_pointer_interface_private_1a43a3e2ccf9fbd983316ace93522566ea" kindref="member">cursor</ref>.get());</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_k_win_1_1_pointer_interface_private_1ab5429e871f49879ef8bf2f458ab4a2a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_private_1ab5429e871f49879ef8bf2f458ab4a2a6" kindref="member">PointerInterfacePrivate::pointer_release</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_k_win_1_1_pointer_interface_private_1a813fa0ad93c2f8550c31a4577eebac8f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a813fa0ad93c2f8550c31a4577eebac8f" kindref="member">PointerInterfacePrivate::pointer_bind_resource</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*focusedClient<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref><sp/>?<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref>-&gt;client()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusedClient<sp/>&amp;&amp;<sp/>focusedClient-&gt;<ref refid="class_k_win_1_1_client_connection_1aa3b49670cf09ff8b5bf837f7ba29f7d2" kindref="member">client</ref>()<sp/>==<sp/>resource-&gt;client())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a69fc6208b1011150b4dbee3237f229c6" kindref="member">seat</ref>-&gt;display()-&gt;nextSerial();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_enter(resource-&gt;handle,<sp/>serial,<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref>-&gt;resource(),<sp/>wl_fixed_from_double(<ref refid="class_k_win_1_1_pointer_interface_private_1abe641d023141432f2f22e205242e9aa1" kindref="member">lastPosition</ref>.x()),<sp/>wl_fixed_from_double(<ref refid="class_k_win_1_1_pointer_interface_private_1abe641d023141432f2f22e205242e9aa1" kindref="member">lastPosition</ref>.y()));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;version()<sp/>&gt;=<sp/>WL_POINTER_FRAME_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_frame(resource-&gt;handle);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_k_win_1_1_pointer_interface_private_1a3614042b58d2b2627584fb6f557281ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a3614042b58d2b2627584fb6f557281ed" kindref="member">PointerInterfacePrivate::sendLeave</ref>(quint32<sp/>serial)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>pointerResources<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a7a3b19c8964089efd8034631523527a1" kindref="member">pointersForClient</ref>(<ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*resource<sp/>:<sp/>pointerResources)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_leave(resource-&gt;handle,<sp/>serial,<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref>-&gt;resource());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_k_win_1_1_pointer_interface_private_1abee19e8ea348900c81f533b4c0776c6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_private_1abee19e8ea348900c81f533b4c0776c6e" kindref="member">PointerInterfacePrivate::sendEnter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;position,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>pointerResources<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a7a3b19c8964089efd8034631523527a1" kindref="member">pointersForClient</ref>(<ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*resource<sp/>:<sp/>pointerResources)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_enter(resource-&gt;handle,<sp/>serial,<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref>-&gt;resource(),<sp/>wl_fixed_from_double(position.x()),<sp/>wl_fixed_from_double(position.y()));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_k_win_1_1_pointer_interface_private_1a902ad6e60febf232f814f0401950e801" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a902ad6e60febf232f814f0401950e801" kindref="member">PointerInterfacePrivate::sendFrame</ref>()</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Resource<sp/>*&gt;<sp/>pointerResources<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a7a3b19c8964089efd8034631523527a1" kindref="member">pointersForClient</ref>(<ref refid="class_k_win_1_1_pointer_interface_private_1a25b6e5aa9f4a0ce7f60121533af78856" kindref="member">focusedSurface</ref>-&gt;client());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Resource<sp/>*resource<sp/>:<sp/>pointerResources)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;version()<sp/>&gt;=<sp/>WL_POINTER_FRAME_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_frame(resource-&gt;handle);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="struct_k_win_1_1_pointer_interface_private_1_1_axis_accumulator_1_1_axis_1aec3be4801f253d8c212faa652daa5fb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_pointer_interface_private_1_1_axis_accumulator_1_1_axis_1aec3be4801f253d8c212faa652daa5fb2" kindref="member">PointerInterfacePrivate::AxisAccumulator::Axis::shouldReset</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newDirection,<sp/>std::chrono::milliseconds<sp/>newTimestamp)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="140"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newTimestamp.count()<sp/>-<sp/><ref refid="struct_k_win_1_1_pointer_interface_private_1_1_axis_accumulator_1_1_axis_1af0deff64a6b5029d1227c2c326db47bd" kindref="member">timestamp</ref>.count()<sp/>&gt;=<sp/>1000)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>accumulator<sp/>if<sp/>the<sp/>delta<sp/>has<sp/>opposite<sp/>sign.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_pointer_interface_private_1_1_axis_accumulator_1_1_axis_1a2d2fe746d0062d267179b5a6c4781c68" kindref="member">direction</ref><sp/>&amp;&amp;<sp/>((<ref refid="struct_k_win_1_1_pointer_interface_private_1_1_axis_accumulator_1_1_axis_1a2d2fe746d0062d267179b5a6c4781c68" kindref="member">direction</ref><sp/>&lt;<sp/>0)<sp/>!=<sp/>(newDirection<sp/>&lt;<sp/>0));</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">PointerInterface::PointerInterface(<ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_interface_private_1a69fc6208b1011150b4dbee3237f229c6" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d(new<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1ac7cb2bfce1918b14a51487d0171114b6" kindref="member">PointerInterfacePrivate</ref>(this,<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1a69fc6208b1011150b4dbee3237f229c6" kindref="member">seat</ref>))</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_k_win_1_1_pointer_interface_1a44f29f6a67987519d8d5be69256bb205" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_interface_1a44f29f6a67987519d8d5be69256bb205" kindref="member">PointerInterface::~PointerInterface</ref>()</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_k_win_1_1_pointer_interface_1a525c28fbabc77a62f71ee2335206fc07" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_interface_1a525c28fbabc77a62f71ee2335206fc07" kindref="member">PointerInterface::focusedSurface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;focusedSurface;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_k_win_1_1_pointer_interface_1a0ae76fd33d0441a23f72fff2d708affc" refkind="member"><highlight class="normal">quint32<sp/><ref refid="class_k_win_1_1_pointer_interface_1a0ae76fd33d0441a23f72fff2d708affc" kindref="member">PointerInterface::focusedSerial</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="164"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;focusedSerial;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_k_win_1_1_pointer_interface_1a640527f6247d2b43aa07e436d5001285" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_1a640527f6247d2b43aa07e436d5001285" kindref="member">PointerInterface::sendEnter</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;position,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;focusedSurface<sp/>==<sp/>surface)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendLeave(serial);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;focusedSurface-&gt;client()<sp/>!=<sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>())<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendFrame();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;destroyConnection);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;focusedSurface<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;focusedSerial<sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;destroyConnection<sp/>=<sp/>connect(d-&gt;focusedSurface,<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_1a547a07eb856d80205eb584e50571d1ee" kindref="member">SurfaceInterface::aboutToBeDestroyed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendLeave(d-&gt;seat-&gt;display()-&gt;nextSerial());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendFrame();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;focusedSurface<sp/>=<sp/>nullptr;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/>focusedSurfaceChanged();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendEnter(d-&gt;focusedSurface-&gt;toSurfaceLocal(position),<sp/>serial);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendFrame();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lastPosition<sp/>=<sp/>position;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_pointer_interface_1acd310095194b7a3a2720856e37481e45" kindref="member">focusedSurfaceChanged</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="class_k_win_1_1_pointer_interface_1a31c4334d7f1fc95d8800c0175bdf366e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_1a31c4334d7f1fc95d8800c0175bdf366e" kindref="member">PointerInterface::sendLeave</ref>(quint32<sp/>serial)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendLeave(serial);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendFrame();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;focusedSurface<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(d-&gt;destroyConnection);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_pointer_interface_1acd310095194b7a3a2720856e37481e45" kindref="member">focusedSurfaceChanged</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>quint32<sp/>pointerButtonStateToWaylandState(<ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref><sp/>state)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref>:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WL_POINTER_BUTTON_STATE_PRESSED;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">PointerButtonState::Released</ref>:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WL_POINTER_BUTTON_STATE_RELEASED;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_k_win_1_1_pointer_interface_1a21c88824cd0322fbd6acf515db0e4a13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_1a21c88824cd0322fbd6acf515db0e4a13" kindref="member">PointerInterface::sendButton</ref>(quint32<sp/>button,<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref><sp/>state,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pointerResources<sp/>=<sp/>d-&gt;pointersForClient(d-&gt;focusedSurface-&gt;client());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>waylandState<sp/>=<sp/>pointerButtonStateToWaylandState(state);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(PointerInterfacePrivate::Resource<sp/>*resource<sp/>:<sp/>pointerResources)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_button(resource-&gt;handle,<sp/>serial,<sp/>d-&gt;seat-&gt;timestamp().count(),<sp/>button,<sp/>waylandState);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_k_win_1_1_pointer_interface_1a8956fc494af462297f2d12f68e962fe7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_1a21c88824cd0322fbd6acf515db0e4a13" kindref="member">PointerInterface::sendButton</ref>(quint32<sp/>button,<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref><sp/>state,<sp/><ref refid="class_k_win_1_1_client_connection" kindref="compound">ClientConnection</ref><sp/>*client)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pointerResources<sp/>=<sp/>d-&gt;pointersForClient(client);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>waylandState<sp/>=<sp/>pointerButtonStateToWaylandState(state);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/>d-&gt;seat-&gt;display()-&gt;nextSerial();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(PointerInterfacePrivate::Resource<sp/>*resource<sp/>:<sp/>pointerResources)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_button(resource-&gt;handle,<sp/>serial,<sp/>d-&gt;seat-&gt;timestamp().count(),<sp/>button,<sp/>waylandState);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAccumulators(Qt::Orientation<sp/>orientation,<sp/>qreal<sp/>delta,<sp/>qint32<sp/>deltaV120,<sp/><ref refid="class_k_win_1_1_pointer_interface_private" kindref="compound">PointerInterfacePrivate</ref><sp/>*d,<sp/>qint32<sp/>&amp;valueAxisLowRes,<sp/>qint32<sp/>&amp;valueDiscrete)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newDirection<sp/>=<sp/>deltaV120<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;accum<sp/>=<sp/>d-&gt;<ref refid="class_k_win_1_1_pointer_interface_private_1a96cb5548cc3b642d76e7b5ee59cab6ff" kindref="member">axisAccumulator</ref>.axis(orientation);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accum.shouldReset(newDirection,<sp/>d-&gt;<ref refid="class_k_win_1_1_pointer_interface_private_1a69fc6208b1011150b4dbee3237f229c6" kindref="member">seat</ref>-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accum.reset();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>accum.<ref refid="struct_k_win_1_1_pointer_interface_private_1_1_axis_accumulator_1_1_axis_1af0deff64a6b5029d1227c2c326db47bd" kindref="member">timestamp</ref><sp/>=<sp/>d-&gt;<ref refid="class_k_win_1_1_pointer_interface_private_1a69fc6208b1011150b4dbee3237f229c6" kindref="member">seat</ref>-&gt;<ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">timestamp</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>accum.direction<sp/>=<sp/>newDirection;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>accum.axis<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>accum.axis120<sp/>+=<sp/>deltaV120;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>±120<sp/>is<sp/>a<sp/>&quot;wheel<sp/>click&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(accum.axis120)<sp/>&gt;=<sp/>60)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>steps<sp/>=<sp/>accum.axis120<sp/>/<sp/>120;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueDiscrete<sp/>+=<sp/>steps;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(steps<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueDiscrete<sp/>+=<sp/>accum.direction;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accum.axis120<sp/>-=<sp/>valueDiscrete<sp/>*<sp/>120;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueDiscrete)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accumulate<sp/>the<sp/>axis<sp/>values<sp/>to<sp/>send<sp/>to<sp/>low-res<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueAxisLowRes<sp/>=<sp/>accum.axis;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accum.axis<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="class_k_win_1_1_pointer_interface_1ad3a3e0d49fe6f62bb896daf07a57ff80" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_1ad3a3e0d49fe6f62bb896daf07a57ff80" kindref="member">PointerInterface::sendAxis</ref>(Qt::Orientation<sp/>orientation,<sp/>qreal<sp/>delta,<sp/>qint32<sp/>deltaV120,<sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248" kindref="member">PointerAxisSource</ref><sp/>source,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>qint32<sp/>valueAxisLowRes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>qint32<sp/>valueDiscrete<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaV120)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateAccumulators(orientation,<sp/>delta,<sp/>deltaV120,<sp/>d.get(),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueAxisLowRes,<sp/>valueDiscrete);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueAxisLowRes<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pointerResources<sp/>=<sp/>d-&gt;pointersForClient(d-&gt;focusedSurface-&gt;client());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(PointerInterfacePrivate::Resource<sp/>*resource<sp/>:<sp/>pointerResources)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref><sp/>=<sp/>resource-&gt;version();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>send<sp/>anything<sp/>if<sp/>the<sp/>client<sp/>doesn&apos;t<sp/>support<sp/>high-res<sp/>scrolling<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>haven&apos;t<sp/>accumulated<sp/>a<sp/>wheel<sp/>click&apos;s<sp/>worth<sp/>of<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref><sp/>&lt;<sp/>WL_POINTER_AXIS_VALUE120_SINCE_VERSION<sp/>&amp;&amp;<sp/>deltaV120<sp/>&amp;&amp;<sp/>!valueDiscrete)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>!=<sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248a88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">PointerAxisSource::Unknown</ref><sp/>&amp;&amp;<sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref><sp/>&gt;=<sp/>WL_POINTER_AXIS_SOURCE_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PointerInterfacePrivate::axis_source<sp/>wlSource;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(source)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248aa5df60ef4fc4447353769d66661d2229" kindref="member">PointerAxisSource::Wheel</ref>:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wlSource<sp/>=<sp/>PointerInterfacePrivate::axis_source_wheel;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248a05d7a63454d2014f937df55fd0fb3a63" kindref="member">PointerAxisSource::Finger</ref>:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wlSource<sp/>=<sp/>PointerInterfacePrivate::axis_source_finger;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248a535863a82f163709557e59e2eb8139a7" kindref="member">PointerAxisSource::Continuous</ref>:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wlSource<sp/>=<sp/>PointerInterfacePrivate::axis_source_continuous;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248a27d333dd47d06ab98ba388e9a2fc817c" kindref="member">PointerAxisSource::WheelTilt</ref>:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wlSource<sp/>=<sp/>PointerInterfacePrivate::axis_source_wheel_tilt;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_axis_source(resource-&gt;handle,<sp/>wlSource);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wlOrientation<sp/>=</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(orientation<sp/>==<sp/>Qt::Vertical)<sp/>?<sp/>PointerInterfacePrivate::axis_vertical_scroll<sp/>:<sp/>PointerInterfacePrivate::axis_horizontal_scroll;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref><sp/>&gt;=<sp/>WL_POINTER_AXIS_RELATIVE_DIRECTION_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wlRelativeDirection<sp/>=<sp/>inverted<sp/>?<sp/>PointerInterfacePrivate::axis_relative_direction_inverted<sp/>:<sp/>PointerInterfacePrivate::axis_relative_direction_identical;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_axis_relative_direction(resource-&gt;handle,<sp/>wlOrientation,<sp/>wlRelativeDirection);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaV120)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref><sp/>&gt;=<sp/>WL_POINTER_AXIS_VALUE120_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>high<sp/>resolution<sp/>scroll<sp/>events<sp/>if<sp/>client<sp/>supports<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_axis_value120(resource-&gt;handle,<sp/>wlOrientation,<sp/>deltaV120);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_axis(resource-&gt;handle,<sp/>d-&gt;seat-&gt;timestamp().count(),<sp/>wlOrientation,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_double(delta));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref><sp/>&gt;=<sp/>WL_POINTER_AXIS_DISCRETE_SINCE_VERSION<sp/>&amp;&amp;<sp/>valueDiscrete)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>discrete<sp/>scroll<sp/>events<sp/>if<sp/>client<sp/>supports<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_axis_discrete(resource-&gt;handle,<sp/>wlOrientation,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueDiscrete);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>accumulated<sp/>axis<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_axis(resource-&gt;handle,<sp/>d-&gt;seat-&gt;timestamp().count(),<sp/>wlOrientation,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_double(valueAxisLowRes));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finger<sp/>or<sp/>continuous<sp/>scroll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_axis(resource-&gt;handle,<sp/>d-&gt;seat-&gt;timestamp().count(),<sp/>wlOrientation,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_fixed_from_double(delta));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref><sp/>&gt;=<sp/>WL_POINTER_AXIS_STOP_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_axis_stop(resource-&gt;handle,<sp/>d-&gt;seat-&gt;timestamp().count(),<sp/>wlOrientation);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="class_k_win_1_1_pointer_interface_1a9f1e0f0fbb663e59b4b7c64b6b6ccc2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_1a9f1e0f0fbb663e59b4b7c64b6b6ccc2f" kindref="member">PointerInterface::sendMotion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;position)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lastPosition<sp/>=<sp/>position;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>localPos<sp/>=<sp/>d-&gt;focusedSurface-&gt;toSurfaceLocal(position);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pointerResources<sp/>=<sp/>d-&gt;pointersForClient(d-&gt;focusedSurface-&gt;client());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(PointerInterfacePrivate::Resource<sp/>*resource<sp/>:<sp/>pointerResources)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;send_motion(resource-&gt;handle,<sp/>d-&gt;seat-&gt;timestamp().count(),<sp/>wl_fixed_from_double(localPos.x()),<sp/>wl_fixed_from_double(localPos.y()));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="class_k_win_1_1_pointer_interface_1a4c07d977613e383947c3f64b2bed5fd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface_1a4c07d977613e383947c3f64b2bed5fd9" kindref="member">PointerInterface::sendFrame</ref>()</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;sendFrame();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="class_k_win_1_1_pointer_interface_1a2710b3ac09cbe72ef975c458dfe778f5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_interface_1a2710b3ac09cbe72ef975c458dfe778f5" kindref="member">PointerInterface::seat</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="389"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;seat;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="class_k_win_1_1_pointer_interface_1adb41bec900d6203bc4e19641e48a35b6" refkind="member"><highlight class="normal">PointerInterface<sp/>*<ref refid="class_k_win_1_1_pointer_interface_1adb41bec900d6203bc4e19641e48a35b6" kindref="member">PointerInterface::get</ref>(wl_resource<sp/>*native)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_pointer_interface_1a4ca4749b5170ace1bf3762526a322800" kindref="member">PointerInterfacePrivate</ref><sp/>*pointerPrivate<sp/>=<sp/><ref refid="namespace_k_win_1a8c77ef01a5298009b38f91650c249957" kindref="member">resource_cast&lt;PointerInterfacePrivate *&gt;</ref>(native))<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointerPrivate-&gt;q;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="class_k_win_1_1_pointer_surface_cursor_1a13fb14e7882a69d5c30fba6d2136b288" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_surface_cursor_1a13fb14e7882a69d5c30fba6d2136b288" kindref="member">PointerSurfaceCursor::PointerSurfaceCursor</ref>()</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d(new<sp/><ref refid="class_k_win_1_1_pointer_surface_cursor_private" kindref="compound">PointerSurfaceCursorPrivate</ref>())</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="class_k_win_1_1_pointer_surface_cursor_1a1da7036ed2d4f15d0b39714e67a985b3" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_surface_cursor_1a1da7036ed2d4f15d0b39714e67a985b3" kindref="member">PointerSurfaceCursor::~PointerSurfaceCursor</ref>()</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="class_k_win_1_1_pointer_surface_cursor_1a1fd9a2c91aa8d637d184f6ad67413ef3" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_pointer_surface_cursor_1a1fd9a2c91aa8d637d184f6ad67413ef3" kindref="member">PointerSurfaceCursor::hotspot</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="411"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;hotspot;</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="class_k_win_1_1_pointer_surface_cursor_1a579c1d7b868c2133fbd47e7ff1010076" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_pointer_surface_cursor_1a579c1d7b868c2133fbd47e7ff1010076" kindref="member">PointerSurfaceCursor::surface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="416"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;surface;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_pointer.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/pointer.cpp"/>
  </compounddef>
</doxygen>
