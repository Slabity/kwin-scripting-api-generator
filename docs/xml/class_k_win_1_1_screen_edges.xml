<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_screen_edges" kind="class" language="C++" prot="public">
    <compoundname>KWin::ScreenEdges</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="screenedge_8h" local="no">screenedge.h</includes>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_k_win_1_1_screen_edges_1a689ba8c751a028ceea73cd59e01e6907" prot="private" static="no" strong="no">
        <type></type>
        <name></name>
        <qualifiedname>KWin::ScreenEdges</qualifiedname>
        <enumvalue id="class_k_win_1_1_screen_edges_1a689ba8c751a028ceea73cd59e01e6907ac422d13fbbff80b56794987361fe26ad" prot="private">
          <name>ElectricDisabled</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_screen_edges_1a689ba8c751a028ceea73cd59e01e6907ac8e7f8810392e2e9aae50ac43832f0e1" prot="private">
          <name>ElectricMoveOnly</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_screen_edges_1a689ba8c751a028ceea73cd59e01e6907a70b5077d34d9456e114a5184f73d3a20" prot="private">
          <name>ElectricAlways</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="354" column="5" bodyfile="kwin/src/screenedge.h" bodystart="354" bodyend="358"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1a7da6157a62a35b66725087af573a9b1f" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::desktopSwitching</definition>
        <argsstring></argsstring>
        <name>desktopSwitching</name>
        <qualifiedname>KWin::ScreenEdges::desktopSwitching</qualifiedname>
        <read>isDesktopSwitching</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="203" column="5" bodyfile="kwin/src/screenedge.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1aacafece6f0b5932a4d306911160e6f83" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::desktopSwitchingMovingClients</definition>
        <argsstring></argsstring>
        <name>desktopSwitchingMovingClients</name>
        <qualifiedname>KWin::ScreenEdges::desktopSwitchingMovingClients</qualifiedname>
        <read>isDesktopSwitchingMovingClients</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="204" column="5" bodyfile="kwin/src/screenedge.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1a34d5eb7ad5fa5f9a57f186e7e3d382c3" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>QSize</type>
        <definition>QSize KWin::ScreenEdges::cursorPushBackDistance</definition>
        <argsstring></argsstring>
        <name>cursorPushBackDistance</name>
        <qualifiedname>KWin::ScreenEdges::cursorPushBackDistance</qualifiedname>
        <read>cursorPushBackDistance</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="205" column="5" bodyfile="kwin/src/screenedge.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1aab715012b1f166aaa9fd99ed51bfbff2" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ScreenEdges::actionTopLeft</definition>
        <argsstring></argsstring>
        <name>actionTopLeft</name>
        <qualifiedname>KWin::ScreenEdges::actionTopLeft</qualifiedname>
        <read>actionTopLeft</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="206" column="5" bodyfile="kwin/src/screenedge.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1a30e6b98d24a83a6acf5b3d48e6a3650c" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ScreenEdges::actionTop</definition>
        <argsstring></argsstring>
        <name>actionTop</name>
        <qualifiedname>KWin::ScreenEdges::actionTop</qualifiedname>
        <read>actionTop</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="207" column="5" bodyfile="kwin/src/screenedge.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1ad7689c4b7133eecf017302dd200cee32" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ScreenEdges::actionTopRight</definition>
        <argsstring></argsstring>
        <name>actionTopRight</name>
        <qualifiedname>KWin::ScreenEdges::actionTopRight</qualifiedname>
        <read>actionTopRight</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="208" column="5" bodyfile="kwin/src/screenedge.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1ae4f5403c64455329d88a853e0b60463c" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ScreenEdges::actionRight</definition>
        <argsstring></argsstring>
        <name>actionRight</name>
        <qualifiedname>KWin::ScreenEdges::actionRight</qualifiedname>
        <read>actionRight</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="209" column="5" bodyfile="kwin/src/screenedge.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1af1fac84c5186139e9ac40b6a62600c47" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ScreenEdges::actionBottomRight</definition>
        <argsstring></argsstring>
        <name>actionBottomRight</name>
        <qualifiedname>KWin::ScreenEdges::actionBottomRight</qualifiedname>
        <read>actionBottomRight</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="210" column="5" bodyfile="kwin/src/screenedge.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1a5535bb12ff3ea597f6e40fe687b8e243" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ScreenEdges::actionBottom</definition>
        <argsstring></argsstring>
        <name>actionBottom</name>
        <qualifiedname>KWin::ScreenEdges::actionBottom</qualifiedname>
        <read>actionBottom</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="211" column="5" bodyfile="kwin/src/screenedge.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1a802dfb23561e36c9557bce24bba38f58" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ScreenEdges::actionBottomLeft</definition>
        <argsstring></argsstring>
        <name>actionBottomLeft</name>
        <qualifiedname>KWin::ScreenEdges::actionBottomLeft</qualifiedname>
        <read>actionBottomLeft</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="212" column="5" bodyfile="kwin/src/screenedge.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_screen_edges_1abb654efd30aee9fddbf8183c62efc35a" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::ScreenEdges::actionLeft</definition>
        <argsstring></argsstring>
        <name>actionLeft</name>
        <qualifiedname>KWin::ScreenEdges::actionLeft</qualifiedname>
        <read>actionLeft</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="213" column="5" bodyfile="kwin/src/screenedge.h" bodystart="213" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1a06ab8d8ef1e968384361db6beb2321fa" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::m_desktopSwitching</definition>
        <argsstring></argsstring>
        <name>m_desktopSwitching</name>
        <qualifiedname>KWin::ScreenEdges::m_desktopSwitching</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="374" column="10" bodyfile="kwin/src/screenedge.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1a918b5cb4dd0cf0cd9004b755fd27ddae" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::m_desktopSwitchingMovingClients</definition>
        <argsstring></argsstring>
        <name>m_desktopSwitchingMovingClients</name>
        <qualifiedname>KWin::ScreenEdges::m_desktopSwitchingMovingClients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="375" column="10" bodyfile="kwin/src/screenedge.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1a0ec56673554eafdbb7f2293ae586fb91" prot="private" static="no" mutable="no">
        <type>QSize</type>
        <definition>QSize KWin::ScreenEdges::m_cursorPushBackDistance</definition>
        <argsstring></argsstring>
        <name>m_cursorPushBackDistance</name>
        <qualifiedname>KWin::ScreenEdges::m_cursorPushBackDistance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="376" column="11" bodyfile="kwin/src/screenedge.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1aa9e5d2ab22a88927c8c05eb72a6cf76d" prot="private" static="no" mutable="no">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds KWin::ScreenEdges::m_timeThreshold</definition>
        <argsstring></argsstring>
        <name>m_timeThreshold</name>
        <qualifiedname>KWin::ScreenEdges::m_timeThreshold</qualifiedname>
        <initializer>= std::chrono::milliseconds::zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="377" column="31" bodyfile="kwin/src/screenedge.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1a470a9056f0388de24f1580ca1b95b83e" prot="private" static="no" mutable="no">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds KWin::ScreenEdges::m_reactivateThreshold</definition>
        <argsstring></argsstring>
        <name>m_reactivateThreshold</name>
        <qualifiedname>KWin::ScreenEdges::m_reactivateThreshold</qualifiedname>
        <initializer>= std::chrono::milliseconds::zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="378" column="31" bodyfile="kwin/src/screenedge.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1af90771f3f0394f8bf5640a3508c9652a" prot="private" static="no" mutable="no">
        <type>Qt::Orientations</type>
        <definition>Qt::Orientations KWin::ScreenEdges::m_virtualDesktopLayout</definition>
        <argsstring></argsstring>
        <name>m_virtualDesktopLayout</name>
        <qualifiedname>KWin::ScreenEdges::m_virtualDesktopLayout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="379" column="22" bodyfile="kwin/src/screenedge.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1a3eef0546af681bd0c94e3f03c35f4438" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;Edge&gt; &gt; KWin::ScreenEdges::m_edges</definition>
        <argsstring></argsstring>
        <name>m_edges</name>
        <qualifiedname>KWin::ScreenEdges::m_edges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="380" column="17" bodyfile="kwin/src/screenedge.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1a1f25c5e40b9103810e99dd00459ff70c" prot="private" static="no" mutable="no">
        <type>KSharedConfig::Ptr</type>
        <definition>KSharedConfig::Ptr KWin::ScreenEdges::m_config</definition>
        <argsstring></argsstring>
        <name>m_config</name>
        <qualifiedname>KWin::ScreenEdges::m_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="381" column="24" bodyfile="kwin/src/screenedge.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1a6e2148e01e5998901b5c2f2d3ac5b72b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::m_actionTopLeft</definition>
        <argsstring></argsstring>
        <name>m_actionTopLeft</name>
        <qualifiedname>KWin::ScreenEdges::m_actionTopLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="382" column="26" bodyfile="kwin/src/screenedge.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1ac587b913b0e69a3db3adacf6e276ad14" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::m_actionTop</definition>
        <argsstring></argsstring>
        <name>m_actionTop</name>
        <qualifiedname>KWin::ScreenEdges::m_actionTop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="383" column="26" bodyfile="kwin/src/screenedge.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1adbc8b6407a75b248d8b1f3d49498ef6a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::m_actionTopRight</definition>
        <argsstring></argsstring>
        <name>m_actionTopRight</name>
        <qualifiedname>KWin::ScreenEdges::m_actionTopRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="384" column="26" bodyfile="kwin/src/screenedge.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1ae2807d87012415cff36e4763429028b2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::m_actionRight</definition>
        <argsstring></argsstring>
        <name>m_actionRight</name>
        <qualifiedname>KWin::ScreenEdges::m_actionRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="385" column="26" bodyfile="kwin/src/screenedge.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1a78441196fa9905aff00d100032c4ea5c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::m_actionBottomRight</definition>
        <argsstring></argsstring>
        <name>m_actionBottomRight</name>
        <qualifiedname>KWin::ScreenEdges::m_actionBottomRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="386" column="26" bodyfile="kwin/src/screenedge.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1aaf22130ad98178fdeae89870d20ce39f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::m_actionBottom</definition>
        <argsstring></argsstring>
        <name>m_actionBottom</name>
        <qualifiedname>KWin::ScreenEdges::m_actionBottom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="387" column="26" bodyfile="kwin/src/screenedge.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1ae913a8872c5b67b4623094c0b69ae2b3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::m_actionBottomLeft</definition>
        <argsstring></argsstring>
        <name>m_actionBottomLeft</name>
        <qualifiedname>KWin::ScreenEdges::m_actionBottomLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="388" column="26" bodyfile="kwin/src/screenedge.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1addc029459a76c0edfaecda584d36ae84" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::m_actionLeft</definition>
        <argsstring></argsstring>
        <name>m_actionLeft</name>
        <qualifiedname>KWin::ScreenEdges::m_actionLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="389" column="26" bodyfile="kwin/src/screenedge.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1ab878618a16485ae7d53463773c7b0dd6" prot="private" static="no" mutable="no">
        <type>QMap&lt; <ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref>, <ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref> &gt;</type>
        <definition>QMap&lt;ElectricBorder, ElectricBorderAction&gt; KWin::ScreenEdges::m_touchCallbacks</definition>
        <argsstring></argsstring>
        <name>m_touchCallbacks</name>
        <qualifiedname>KWin::ScreenEdges::m_touchCallbacks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="390" column="10" bodyfile="kwin/src/screenedge.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1abacb43a4051f1e1681820f9c231e89d8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::ScreenEdges::m_cornerOffset</definition>
        <argsstring></argsstring>
        <name>m_cornerOffset</name>
        <qualifiedname>KWin::ScreenEdges::m_cornerOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="391" column="9" bodyfile="kwin/src/screenedge.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1aabab49ee52269664179eb2978064735e" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_gesture_recognizer" kindref="compound">GestureRecognizer</ref> *</type>
        <definition>GestureRecognizer* KWin::ScreenEdges::m_gestureRecognizer</definition>
        <argsstring></argsstring>
        <name>m_gestureRecognizer</name>
        <qualifiedname>KWin::ScreenEdges::m_gestureRecognizer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="392" column="23" bodyfile="kwin/src/screenedge.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_screen_edges_1acc07dfe193eda8b07a1b766a37abeb61" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::m_remainActiveOnFullscreen</definition>
        <argsstring></argsstring>
        <name>m_remainActiveOnFullscreen</name>
        <qualifiedname>KWin::ScreenEdges::m_remainActiveOnFullscreen</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="393" column="10" bodyfile="kwin/src/screenedge.h" bodystart="393" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a4c924d4b9390de7667398acea4d3c680" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::ScreenEdges::ScreenEdges</definition>
        <argsstring>()</argsstring>
        <name>ScreenEdges</name>
        <qualifiedname>KWin::ScreenEdges::ScreenEdges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="215" column="14" bodyfile="kwin/src/screenedge.cpp" bodystart="758" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a452b0b322b9e42b9b197b12622dc9c4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::setConfig</definition>
        <argsstring>(KSharedConfig::Ptr config)</argsstring>
        <name>setConfig</name>
        <qualifiedname>KWin::ScreenEdges::setConfig</qualifiedname>
        <param>
          <type>KSharedConfig::Ptr</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="219" column="10" bodyfile="kwin/src/screenedge.h" bodystart="494" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a27d9ec41d3d42563fd0b2f403f1f7c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>KWin::ScreenEdges::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the screen edges. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="224" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="778" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a3aaaca8b523e58f43fc6511e99b8fd46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::inApproachGeometry</definition>
        <argsstring>(const QPoint &amp;pos) const</argsstring>
        <name>inApproachGeometry</name>
        <qualifiedname>KWin::ScreenEdges::inApproachGeometry</qualifiedname>
        <param>
          <type>const QPoint &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check, if <computeroutput>pos</computeroutput> is in the approach geometry of any edge. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="228" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1377" bodyend="1385"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a424ddb713802889d1b1175c27c74005c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::ScreenEdges::cornerOffset</definition>
        <argsstring>() const</argsstring>
        <name>cornerOffset</name>
        <qualifiedname>KWin::ScreenEdges::cornerOffset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The (dpi dependent) length, reserved for the active corners of each edge - 1/3" </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="232" column="9" bodyfile="kwin/src/screenedge.h" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a26e8b8046e90de4811253d87de67477d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::reserve</definition>
        <argsstring>(ElectricBorder border, QObject *object, const char *callback)</argsstring>
        <name>reserve</name>
        <qualifiedname>KWin::ScreenEdges::reserve</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark the specified screen edge as reserved. This method is provided for external activation like effects and scripts. When the effect/script does no longer need the edge it is supposed to call <ref refid="class_k_win_1_1_screen_edges_1aaee4026fa795568ea3217b1d70cd4234" kindref="member">unreserve</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>border</parametername>
</parameternamelist>
<parameterdescription>
<para>the screen edge to mark as reserved </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which the <computeroutput>callback</computeroutput> needs to be invoked </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The method name to be invoked - uses QMetaObject::invokeMethod </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_screen_edges_1aaee4026fa795568ea3217b1d70cd4234" kindref="member">unreserve</ref> </para>
</simplesect>
<xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>: add pointer to script/effect </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="243" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1265" bodyend="1272"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1aaee4026fa795568ea3217b1d70cd4234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::unreserve</definition>
        <argsstring>(ElectricBorder border, QObject *object)</argsstring>
        <name>unreserve</name>
        <qualifiedname>KWin::ScreenEdges::unreserve</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark the specified screen edge as unreserved. This method is provided for external activation like effects and scripts. This method is only allowed to be called if <ref refid="class_k_win_1_1_screen_edges_1a26e8b8046e90de4811253d87de67477d" kindref="member">reserve</ref> had been called before for the same <computeroutput>border</computeroutput>. An unbalanced calling of reserve/unreserve leads to the edge never being active or never being able to deactivate again. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>border</parametername>
</parameternamelist>
<parameterdescription>
<para>the screen edge to mark as unreserved </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>the object on which the callback had been invoked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_screen_edges_1a26e8b8046e90de4811253d87de67477d" kindref="member">reserve</ref> </para>
</simplesect>
<xrefsect id="todo_1_todo000003"><xreftitle>Todo</xreftitle><xrefdescription><para>: add pointer to script/effect </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="254" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1274" bodyend="1281"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a7857f57d699b22934c6f6ee7e9a51fa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::reserve</definition>
        <argsstring>(KWin::Window *client, ElectricBorder border)</argsstring>
        <name>reserve</name>
        <qualifiedname>KWin::ScreenEdges::reserve</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserves an edge for the <computeroutput>client</computeroutput>. The idea behind this is to show the <computeroutput>client</computeroutput> if the screen edge which the <computeroutput>client</computeroutput> borders gets triggered.</para>
<para>When first called it is tried to create an <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> for the client. This is only done if the client borders with a screen edge specified by <computeroutput>border</computeroutput>. If the client doesn&apos;t border the screen edge, no <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> gets created and the client is shown again. Otherwise there would not be a possibility to show the client again.</para>
<para>On subsequent calls for the client no new <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> is created, but the existing one gets reused and if the client is already hidden, the <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> gets reserved.</para>
<para>Once the <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> for the client triggers, the client gets shown again and the <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> unreserved. The idea is that the <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> can only get activated if the client is currently hidden.</para>
<para>The <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> gets automatically destroyed if the client gets released. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_client" kindref="compound">Client</ref> for which an <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> should be reserved </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>border</parametername>
</parameternamelist>
<parameterdescription>
<para>The border which the client wants to use, only proper borders are supported (no corners) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="274" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1283" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1abdd24d5b332b226ad4b3b84d79979721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::reserveTouch</definition>
        <argsstring>(ElectricBorder border, QAction *action, TouchCallback::CallbackFunction callback=nullptr)</argsstring>
        <name>reserveTouch</name>
        <qualifiedname>KWin::ScreenEdges::reserveTouch</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <param>
          <type>QAction *</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_touch_callback_1a3b5c8d7685030f4a2ea6d4a578f5731f" kindref="member">TouchCallback::CallbackFunction</ref></type>
          <declname>callback</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark the specified screen edge as reserved for touch gestures. This method is provided for external activation like effects and scripts. When the effect/script does no longer need the edge it is supposed to call <ref refid="class_k_win_1_1_screen_edges_1a013549bda3a4da212b74b5e4bc017529" kindref="member">unreserveTouch</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>border</parametername>
</parameternamelist>
<parameterdescription>
<para>the screen edge to mark as reserved </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The action which gets triggered </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_screen_edges_1a013549bda3a4da212b74b5e4bc017529" kindref="member">unreserveTouch</ref> </para>
</simplesect>
<simplesect kind="since"><para>5.10 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="286" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1298" bodyend="1305"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a013549bda3a4da212b74b5e4bc017529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::unreserveTouch</definition>
        <argsstring>(ElectricBorder border, QAction *action)</argsstring>
        <name>unreserveTouch</name>
        <qualifiedname>KWin::ScreenEdges::unreserveTouch</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <param>
          <type>QAction *</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unreserves the specified <computeroutput>border</computeroutput> from activating the <computeroutput>action</computeroutput> for touch gestures. <simplesect kind="see"><para><ref refid="class_k_win_1_1_screen_edges_1abdd24d5b332b226ad4b3b84d79979721" kindref="member">reserveTouch</ref> </para>
</simplesect>
<simplesect kind="since"><para>5.10 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="292" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1307" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1aa72115d9a908aa89f130570da84fe54a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::reserveDesktopSwitching</definition>
        <argsstring>(bool isToReserve, Qt::Orientations o)</argsstring>
        <name>reserveDesktopSwitching</name>
        <qualifiedname>KWin::ScreenEdges::reserveDesktopSwitching</qualifiedname>
        <param>
          <type>bool</type>
          <declname>isToReserve</declname>
        </param>
        <param>
          <type>Qt::Orientations</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserve desktop switching for screen edges, if <computeroutput>isToReserve</computeroutput> is <computeroutput>true</computeroutput>. Unreserve otherwise. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isToReserve</parametername>
</parameternamelist>
<parameterdescription>
<para>indicated whether desktop switching should be reserved or unreseved </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>Qt orientations </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="299" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1246" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1aa5c8cd787f3a9f0bef1fad08288dc384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::isEntered</definition>
        <argsstring>(const QPointF &amp;pos, std::chrono::microseconds timestamp)</argsstring>
        <name>isEntered</name>
        <qualifiedname>KWin::ScreenEdges::isEntered</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::chrono::microseconds</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="300" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1387" bodyend="1433"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ae49bba58e718a90d166445f33eff36d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::isDesktopSwitching</definition>
        <argsstring>() const</argsstring>
        <name>isDesktopSwitching</name>
        <qualifiedname>KWin::ScreenEdges::isDesktopSwitching</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="302" column="10" bodyfile="kwin/src/screenedge.h" bodystart="509" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a390f8ec665d1bfb5a5cff97f6227854d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::isDesktopSwitchingMovingClients</definition>
        <argsstring>() const</argsstring>
        <name>isDesktopSwitchingMovingClients</name>
        <qualifiedname>KWin::ScreenEdges::isDesktopSwitchingMovingClients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="303" column="10" bodyfile="kwin/src/screenedge.h" bodystart="514" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ab904450f65c66aaa64faf3babdcf10ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QSize &amp;</type>
        <definition>const QSize &amp; KWin::ScreenEdges::cursorPushBackDistance</definition>
        <argsstring>() const</argsstring>
        <name>cursorPushBackDistance</name>
        <qualifiedname>KWin::ScreenEdges::cursorPushBackDistance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="304" column="17" bodyfile="kwin/src/screenedge.h" bodystart="504" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ab4b5d8b229afc966970ab568802b541d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds KWin::ScreenEdges::timeThreshold</definition>
        <argsstring>() const</argsstring>
        <name>timeThreshold</name>
        <qualifiedname>KWin::ScreenEdges::timeThreshold</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum time between the push back of the cursor and the activation by re-entering the edge. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="308" column="31" bodyfile="kwin/src/screenedge.h" bodystart="524" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a5744fdcfde0c5d50bab9cb1f4ddd72c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds KWin::ScreenEdges::reActivationThreshold</definition>
        <argsstring>() const</argsstring>
        <name>reActivationThreshold</name>
        <qualifiedname>KWin::ScreenEdges::reActivationThreshold</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum time between triggers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="312" column="31" bodyfile="kwin/src/screenedge.h" bodystart="519" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a6a5c4311c08227b0fa8746657cb55a75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionTopLeft</definition>
        <argsstring>() const</argsstring>
        <name>actionTopLeft</name>
        <qualifiedname>KWin::ScreenEdges::actionTopLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="313" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ab57c99d6201a28b30218ee62e0a80374" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionTop</definition>
        <argsstring>() const</argsstring>
        <name>actionTop</name>
        <qualifiedname>KWin::ScreenEdges::actionTop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="314" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ac1f0132edbd02750257de817859f6038" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionTopRight</definition>
        <argsstring>() const</argsstring>
        <name>actionTopRight</name>
        <qualifiedname>KWin::ScreenEdges::actionTopRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="315" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a78b15d3779384a778528c3a282035f7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionRight</definition>
        <argsstring>() const</argsstring>
        <name>actionRight</name>
        <qualifiedname>KWin::ScreenEdges::actionRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="316" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a67c8683da5df8123949334ae62f63234" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionBottomRight</definition>
        <argsstring>() const</argsstring>
        <name>actionBottomRight</name>
        <qualifiedname>KWin::ScreenEdges::actionBottomRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="317" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1abd6c7934c3c350d89b8a11f4e26a889b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionBottom</definition>
        <argsstring>() const</argsstring>
        <name>actionBottom</name>
        <qualifiedname>KWin::ScreenEdges::actionBottom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="318" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1aa3c91b0e8a39dc2e0b45f4bcba8bddd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionBottomLeft</definition>
        <argsstring>() const</argsstring>
        <name>actionBottomLeft</name>
        <qualifiedname>KWin::ScreenEdges::actionBottomLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="319" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a01e7f77b3d27a6a10150316794f6c85f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionLeft</definition>
        <argsstring>() const</argsstring>
        <name>actionLeft</name>
        <qualifiedname>KWin::ScreenEdges::actionLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="320" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ab61f4c4ca8aa7d73695c19dde6632274" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionForTouchBorder</definition>
        <argsstring>(ElectricBorder border) const</argsstring>
        <name>actionForTouchBorder</name>
        <qualifiedname>KWin::ScreenEdges::actionForTouchBorder</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="322" column="26" bodyfile="kwin/src/screenedge.cpp" bodystart="1241" bodyend="1244"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a4da87a029d5815148210925be6d1aef8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_gesture_recognizer" kindref="compound">GestureRecognizer</ref> *</type>
        <definition>GestureRecognizer * KWin::ScreenEdges::gestureRecognizer</definition>
        <argsstring>() const</argsstring>
        <name>gestureRecognizer</name>
        <qualifiedname>KWin::ScreenEdges::gestureRecognizer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="324" column="23" bodyfile="kwin/src/screenedge.h" bodystart="324" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a66a98c3028359867cbd4bd87421d0ecc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::remainActiveOnFullscreen</definition>
        <argsstring>() const</argsstring>
        <name>remainActiveOnFullscreen</name>
        <qualifiedname>KWin::ScreenEdges::remainActiveOnFullscreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="329" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1050" bodyend="1053"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a4d02afdbac98d118586f9cc3be660276" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::unique_ptr&lt; <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; std::unique_ptr&lt; Edge &gt; &gt; &amp; KWin::ScreenEdges::edges</definition>
        <argsstring>() const</argsstring>
        <name>edges</name>
        <qualifiedname>KWin::ScreenEdges::edges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="330" column="23" bodyfile="kwin/src/screenedge.cpp" bodystart="1440" bodyend="1443"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_screen_edges_1aabcd0c0281892e8e5dcfd1a4fc327dae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::reconfigure</definition>
        <argsstring>()</argsstring>
        <name>reconfigure</name>
        <qualifiedname>KWin::ScreenEdges::reconfigure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="333" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="801" bodyend="850"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_screen_edges_1a1835617ab4141e02dc5a5f362168a261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::updateLayout</definition>
        <argsstring>()</argsstring>
        <name>updateLayout</name>
        <qualifiedname>KWin::ScreenEdges::updateLayout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates the layout of virtual desktops and adjust the reserved borders in case of virtual desktop switching on edges. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="338" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="920" bodyend="940"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_screen_edges_1a11e5186a584ee58fef83dc95c7564b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::recreateEdges</definition>
        <argsstring>()</argsstring>
        <name>recreateEdges</name>
        <qualifiedname>KWin::ScreenEdges::recreateEdges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recreates all edges e.g. after the screen size changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="342" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1055" bodyend="1110"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_screen_edges_1a04aa6440e7ee09f13b55057b1941d174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::approaching</definition>
        <argsstring>(ElectricBorder border, qreal factor, const QRect &amp;geometry)</argsstring>
        <name>approaching</name>
        <qualifiedname>KWin::ScreenEdges::approaching</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signal emitted during approaching of mouse towards <computeroutput>border</computeroutput>. The <computeroutput>factor</computeroutput> indicates how far away the mouse is from the approaching area. The values are clamped into [0.0,1.0] with <computeroutput>0.0</computeroutput> meaning far away from the border, <computeroutput>1.0</computeroutput> in trigger distance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="350" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_screen_edges_1a3916c0b17e5f50d15654dc4e577323e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::checkBlocking</definition>
        <argsstring>()</argsstring>
        <name>checkBlocking</name>
        <qualifiedname>KWin::ScreenEdges::checkBlocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="351" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a0ee7a85d6bd79c0fbb7977ab1faf81b7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::setDesktopSwitching</definition>
        <argsstring>(bool enable)</argsstring>
        <name>setDesktopSwitching</name>
        <qualifiedname>KWin::ScreenEdges::setDesktopSwitching</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="359" column="10" bodyfile="kwin/src/screenedge.h" bodystart="534" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ac59a2444e2fb572a0d1d51c0f5657e65" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::setDesktopSwitchingMovingClients</definition>
        <argsstring>(bool enable)</argsstring>
        <name>setDesktopSwitchingMovingClients</name>
        <qualifiedname>KWin::ScreenEdges::setDesktopSwitchingMovingClients</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="360" column="10" bodyfile="kwin/src/screenedge.h" bodystart="543" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ad28d7d90e0ccba61492600749a81fd47" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::setCursorPushBackDistance</definition>
        <argsstring>(const QSize &amp;distance)</argsstring>
        <name>setCursorPushBackDistance</name>
        <qualifiedname>KWin::ScreenEdges::setCursorPushBackDistance</qualifiedname>
        <param>
          <type>const QSize &amp;</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="361" column="10" bodyfile="kwin/src/screenedge.h" bodystart="529" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a8077fb3e321fe377dd43fea2c47d0c94" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::setTimeThreshold</definition>
        <argsstring>(std::chrono::milliseconds threshold)</argsstring>
        <name>setTimeThreshold</name>
        <qualifiedname>KWin::ScreenEdges::setTimeThreshold</qualifiedname>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="362" column="10" bodyfile="kwin/src/screenedge.h" bodystart="554" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a203fd137d7c05b6972458a93a7f99d9b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::setReActivationThreshold</definition>
        <argsstring>(std::chrono::milliseconds threshold)</argsstring>
        <name>setReActivationThreshold</name>
        <qualifiedname>KWin::ScreenEdges::setReActivationThreshold</qualifiedname>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="363" column="10" bodyfile="kwin/src/screenedge.h" bodystart="548" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ae8b0b56d1993f8dff7a488366c4dded6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::createHorizontalEdge</definition>
        <argsstring>(ElectricBorder border, const QRect &amp;screen, const QRect &amp;fullArea, Output *output)</argsstring>
        <name>createHorizontalEdge</name>
        <qualifiedname>KWin::ScreenEdges::createHorizontalEdge</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>fullArea</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="364" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1142" bodyend="1164"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ae56ce90708eec6a17b74d1fda8dd6468" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::createVerticalEdge</definition>
        <argsstring>(ElectricBorder border, const QRect &amp;screen, const QRect &amp;fullArea, Output *output)</argsstring>
        <name>createVerticalEdge</name>
        <qualifiedname>KWin::ScreenEdges::createVerticalEdge</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>const QRect &amp;</type>
          <declname>fullArea</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="365" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1112" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a49b084fc5411323b17ae79b0556a8715" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Edge &gt; KWin::ScreenEdges::createEdge</definition>
        <argsstring>(ElectricBorder border, int x, int y, int width, int height, Output *output, bool createAction=true)</argsstring>
        <name>createEdge</name>
        <qualifiedname>KWin::ScreenEdges::createEdge</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>createAction</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="366" column="21" bodyfile="kwin/src/screenedge.cpp" bodystart="1166" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1ae8923587772649d8006e47378f6bd51c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::setActionForBorder</definition>
        <argsstring>(ElectricBorder border, ElectricBorderAction *oldValue, ElectricBorderAction newValue)</argsstring>
        <name>setActionForBorder</name>
        <qualifiedname>KWin::ScreenEdges::setActionForBorder</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref> *</type>
          <declname>oldValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="367" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="852" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a0af21c172c82681dea609226edfc2e54" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::setActionForTouchBorder</definition>
        <argsstring>(ElectricBorder border, ElectricBorderAction newValue)</argsstring>
        <name>setActionForTouchBorder</name>
        <qualifiedname>KWin::ScreenEdges::setActionForTouchBorder</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="368" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="882" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a1d9a75216fe0310d8d9597a3cd3496c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::setRemainActiveOnFullscreen</definition>
        <argsstring>(bool remainActive)</argsstring>
        <name>setRemainActiveOnFullscreen</name>
        <qualifiedname>KWin::ScreenEdges::setRemainActiveOnFullscreen</qualifiedname>
        <param>
          <type>bool</type>
          <declname>remainActive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="369" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1435" bodyend="1438"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1af049b00d13720796ac81fc15a77b194b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionForEdge</definition>
        <argsstring>(Edge *edge) const</argsstring>
        <name>actionForEdge</name>
        <qualifiedname>KWin::ScreenEdges::actionForEdge</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="370" column="26" bodyfile="kwin/src/screenedge.cpp" bodystart="1206" bodyend="1230"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a45d92731810fbc2258c8b1a8030eba0d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a984e1af1aa8924cdddeeba318fa7dd76" kindref="member">ElectricBorderAction</ref></type>
        <definition>ElectricBorderAction KWin::ScreenEdges::actionForTouchEdge</definition>
        <argsstring>(Edge *edge) const</argsstring>
        <name>actionForTouchEdge</name>
        <qualifiedname>KWin::ScreenEdges::actionForTouchEdge</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="371" column="26" bodyfile="kwin/src/screenedge.cpp" bodystart="1232" bodyend="1239"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a83abdf4a8ad4fda0f7435eb3a9d34826" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::ScreenEdges::createEdgeForClient</definition>
        <argsstring>(Window *client, ElectricBorder border)</argsstring>
        <name>createEdgeForClient</name>
        <qualifiedname>KWin::ScreenEdges::createEdgeForClient</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref></type>
          <declname>border</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="372" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1316" bodyend="1367"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_screen_edges_1a2d861107987442d91e74637386c269ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::ScreenEdges::deleteEdgeForClient</definition>
        <argsstring>(Window *client)</argsstring>
        <name>deleteEdgeForClient</name>
        <qualifiedname>KWin::ScreenEdges::deleteEdgeForClient</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/screenedge.h" line="373" column="10" bodyfile="kwin/src/screenedge.cpp" bodystart="1369" bodyend="1375"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class for controlling screen edges. </para>
    </briefdescription>
    <detaileddescription>
<para>The screen edge functionality is split into three parts: <itemizedlist>
<listitem><para>This manager class <ref refid="class_k_win_1_1_screen_edges" kindref="compound">ScreenEdges</ref> </para>
</listitem>
<listitem><para>abstract class <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> </para>
</listitem>
<listitem><para>specific implementation of <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref>, e.g. WindowBasedEdge</para>
</listitem>
</itemizedlist>
The <ref refid="class_k_win_1_1_screen_edges" kindref="compound">ScreenEdges</ref> creates an <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> for each screen edge which is also an edge in the combination of all screens. E.g. if there are two screens, no <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> is created between the screens, but at all other edges even if the screens have a different dimension.</para>
<para>In addition at each corner of the overall display geometry an one-pixel large <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> is created. No matter how many screens there are, there will only be exactly four of these corner edges. This is motivated by Fitts&apos;s Law which show that it&apos;s easy to trigger such a corner, but it would be very difficult to trigger a corner between two screens (one pixel target not visually outlined).</para>
<para>The <ref refid="class_k_win_1_1_screen_edges" kindref="compound">ScreenEdges</ref> are used for one of the following functionality: <itemizedlist>
<listitem><para>switch virtual desktop (see property <ref refid="class_k_win_1_1_screen_edges_1a7da6157a62a35b66725087af573a9b1f" kindref="member">desktopSwitching</ref>) </para>
</listitem>
<listitem><para>switch virtual desktop when moving a window (see property <ref refid="class_k_win_1_1_screen_edges_1aacafece6f0b5932a4d306911160e6f83" kindref="member">desktopSwitchingMovingClients</ref>) </para>
</listitem>
<listitem><para>trigger a pre-defined action (see properties <ref refid="class_k_win_1_1_screen_edges_1a30e6b98d24a83a6acf5b3d48e6a3650c" kindref="member">actionTop</ref> and similar) </para>
</listitem>
<listitem><para>trigger an externally configured action (e.g. <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref>, <ref refid="class_k_win_1_1_script" kindref="compound">Script</ref>, see <ref refid="class_k_win_1_1_screen_edges_1a26e8b8046e90de4811253d87de67477d" kindref="member">reserve</ref>, <ref refid="class_k_win_1_1_screen_edges_1aaee4026fa795568ea3217b1d70cd4234" kindref="member">unreserve</ref>)</para>
</listitem>
</itemizedlist>
An <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> is only active if there is at least one of the possible actions &quot;reserved&quot; for this edge. The idea is to not block the screen edge if nothing could be triggered there, so that the user e.g. can configure nothing on the top edge, which tends to interfere with full screen apps having a hidden panel there. On X11 (currently only supported backend) the <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref> is represented by a WindowBasedEdge which creates an input only window for the geometry and reacts on enter notify events. If the edge gets reserved for the first time a window is created and mapped, once the edge gets unreserved again, the window gets destroyed.</para>
<para>When the mouse enters one of the screen edges the following values are used to determine whether the action should be triggered or the cursor be pushed back <itemizedlist>
<listitem><para>Time difference between two entering events is not larger than a certain threshold </para>
</listitem>
<listitem><para>Time difference between two entering events is larger than <ref refid="class_k_win_1_1_screen_edges_1ab4b5d8b229afc966970ab568802b541d" kindref="member">timeThreshold</ref> </para>
</listitem>
<listitem><para>Time difference between two activations is larger than reActivateThreshold </para>
</listitem>
<listitem><para>Distance between two enter events is not larger than a defined pixel distance These checks are performed in <ref refid="class_k_win_1_1_edge" kindref="compound">Edge</ref></para>
</listitem>
</itemizedlist>
<xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>change way how Effects/Scripts can reserve an edge and are notified. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::ScreenEdges</label>
        <link refid="class_k_win_1_1_screen_edges"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::ScreenEdges</label>
        <link refid="class_k_win_1_1_screen_edges"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/screenedge.h" line="200" column="1" bodyfile="kwin/src/screenedge.h" bodystart="201" bodyend="394"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_screen_edges_1a5535bb12ff3ea597f6e40fe687b8e243" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionBottom</name></member>
      <member refid="class_k_win_1_1_screen_edges_1abd6c7934c3c350d89b8a11f4e26a889b" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionBottom</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a802dfb23561e36c9557bce24bba38f58" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionBottomLeft</name></member>
      <member refid="class_k_win_1_1_screen_edges_1aa3c91b0e8a39dc2e0b45f4bcba8bddd9" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionBottomLeft</name></member>
      <member refid="class_k_win_1_1_screen_edges_1af1fac84c5186139e9ac40b6a62600c47" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionBottomRight</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a67c8683da5df8123949334ae62f63234" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionBottomRight</name></member>
      <member refid="class_k_win_1_1_screen_edges_1af049b00d13720796ac81fc15a77b194b" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionForEdge</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ab61f4c4ca8aa7d73695c19dde6632274" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionForTouchBorder</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a45d92731810fbc2258c8b1a8030eba0d" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionForTouchEdge</name></member>
      <member refid="class_k_win_1_1_screen_edges_1abb654efd30aee9fddbf8183c62efc35a" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionLeft</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a01e7f77b3d27a6a10150316794f6c85f" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionLeft</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ae4f5403c64455329d88a853e0b60463c" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionRight</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a78b15d3779384a778528c3a282035f7a" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionRight</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a30e6b98d24a83a6acf5b3d48e6a3650c" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionTop</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ab57c99d6201a28b30218ee62e0a80374" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionTop</name></member>
      <member refid="class_k_win_1_1_screen_edges_1aab715012b1f166aaa9fd99ed51bfbff2" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionTopLeft</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a6a5c4311c08227b0fa8746657cb55a75" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionTopLeft</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ad7689c4b7133eecf017302dd200cee32" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionTopRight</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ac1f0132edbd02750257de817859f6038" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>actionTopRight</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a04aa6440e7ee09f13b55057b1941d174" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>approaching</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a3916c0b17e5f50d15654dc4e577323e4" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>checkBlocking</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a424ddb713802889d1b1175c27c74005c" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>cornerOffset</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a49b084fc5411323b17ae79b0556a8715" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>createEdge</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a83abdf4a8ad4fda0f7435eb3a9d34826" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>createEdgeForClient</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ae8b0b56d1993f8dff7a488366c4dded6" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>createHorizontalEdge</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ae56ce90708eec6a17b74d1fda8dd6468" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>createVerticalEdge</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a34d5eb7ad5fa5f9a57f186e7e3d382c3" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>cursorPushBackDistance</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ab904450f65c66aaa64faf3babdcf10ec" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>cursorPushBackDistance</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a2d861107987442d91e74637386c269ec" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>deleteEdgeForClient</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a7da6157a62a35b66725087af573a9b1f" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>desktopSwitching</name></member>
      <member refid="class_k_win_1_1_screen_edges_1aacafece6f0b5932a4d306911160e6f83" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>desktopSwitchingMovingClients</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a4d02afdbac98d118586f9cc3be660276" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>edges</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a689ba8c751a028ceea73cd59e01e6907a70b5077d34d9456e114a5184f73d3a20" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>ElectricAlways</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a689ba8c751a028ceea73cd59e01e6907ac422d13fbbff80b56794987361fe26ad" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>ElectricDisabled</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a689ba8c751a028ceea73cd59e01e6907ac8e7f8810392e2e9aae50ac43832f0e1" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>ElectricMoveOnly</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a4da87a029d5815148210925be6d1aef8" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>gestureRecognizer</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a3aaaca8b523e58f43fc6511e99b8fd46" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>inApproachGeometry</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a27d9ec41d3d42563fd0b2f403f1f7c09" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>init</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ae49bba58e718a90d166445f33eff36d0" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>isDesktopSwitching</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a390f8ec665d1bfb5a5cff97f6227854d" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>isDesktopSwitchingMovingClients</name></member>
      <member refid="class_k_win_1_1_screen_edges_1aa5c8cd787f3a9f0bef1fad08288dc384" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>isEntered</name></member>
      <member refid="class_k_win_1_1_screen_edges_1aaf22130ad98178fdeae89870d20ce39f" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_actionBottom</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ae913a8872c5b67b4623094c0b69ae2b3" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_actionBottomLeft</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a78441196fa9905aff00d100032c4ea5c" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_actionBottomRight</name></member>
      <member refid="class_k_win_1_1_screen_edges_1addc029459a76c0edfaecda584d36ae84" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_actionLeft</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ae2807d87012415cff36e4763429028b2" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_actionRight</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ac587b913b0e69a3db3adacf6e276ad14" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_actionTop</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a6e2148e01e5998901b5c2f2d3ac5b72b" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_actionTopLeft</name></member>
      <member refid="class_k_win_1_1_screen_edges_1adbc8b6407a75b248d8b1f3d49498ef6a" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_actionTopRight</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a1f25c5e40b9103810e99dd00459ff70c" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_config</name></member>
      <member refid="class_k_win_1_1_screen_edges_1abacb43a4051f1e1681820f9c231e89d8" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_cornerOffset</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a0ec56673554eafdbb7f2293ae586fb91" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_cursorPushBackDistance</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a06ab8d8ef1e968384361db6beb2321fa" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_desktopSwitching</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a918b5cb4dd0cf0cd9004b755fd27ddae" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_desktopSwitchingMovingClients</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a3eef0546af681bd0c94e3f03c35f4438" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_edges</name></member>
      <member refid="class_k_win_1_1_screen_edges_1aabab49ee52269664179eb2978064735e" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_gestureRecognizer</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a470a9056f0388de24f1580ca1b95b83e" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_reactivateThreshold</name></member>
      <member refid="class_k_win_1_1_screen_edges_1acc07dfe193eda8b07a1b766a37abeb61" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_remainActiveOnFullscreen</name></member>
      <member refid="class_k_win_1_1_screen_edges_1aa9e5d2ab22a88927c8c05eb72a6cf76d" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_timeThreshold</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ab878618a16485ae7d53463773c7b0dd6" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_touchCallbacks</name></member>
      <member refid="class_k_win_1_1_screen_edges_1af90771f3f0394f8bf5640a3508c9652a" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>m_virtualDesktopLayout</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a5744fdcfde0c5d50bab9cb1f4ddd72c1" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>reActivationThreshold</name></member>
      <member refid="class_k_win_1_1_screen_edges_1aabcd0c0281892e8e5dcfd1a4fc327dae" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>reconfigure</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a11e5186a584ee58fef83dc95c7564b4a" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>recreateEdges</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a66a98c3028359867cbd4bd87421d0ecc" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>remainActiveOnFullscreen</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a26e8b8046e90de4811253d87de67477d" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>reserve</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a7857f57d699b22934c6f6ee7e9a51fa0" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>reserve</name></member>
      <member refid="class_k_win_1_1_screen_edges_1aa72115d9a908aa89f130570da84fe54a" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>reserveDesktopSwitching</name></member>
      <member refid="class_k_win_1_1_screen_edges_1abdd24d5b332b226ad4b3b84d79979721" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>reserveTouch</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a4c924d4b9390de7667398acea4d3c680" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>ScreenEdges</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ae8923587772649d8006e47378f6bd51c" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>setActionForBorder</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a0af21c172c82681dea609226edfc2e54" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>setActionForTouchBorder</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a452b0b322b9e42b9b197b12622dc9c4e" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>setConfig</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ad28d7d90e0ccba61492600749a81fd47" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>setCursorPushBackDistance</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a0ee7a85d6bd79c0fbb7977ab1faf81b7" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>setDesktopSwitching</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ac59a2444e2fb572a0d1d51c0f5657e65" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>setDesktopSwitchingMovingClients</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a203fd137d7c05b6972458a93a7f99d9b" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>setReActivationThreshold</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a1d9a75216fe0310d8d9597a3cd3496c9" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>setRemainActiveOnFullscreen</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a8077fb3e321fe377dd43fea2c47d0c94" prot="private" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>setTimeThreshold</name></member>
      <member refid="class_k_win_1_1_screen_edges_1ab4b5d8b229afc966970ab568802b541d" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>timeThreshold</name></member>
      <member refid="class_k_win_1_1_screen_edges_1aaee4026fa795568ea3217b1d70cd4234" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>unreserve</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a013549bda3a4da212b74b5e4bc017529" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>unreserveTouch</name></member>
      <member refid="class_k_win_1_1_screen_edges_1a1835617ab4141e02dc5a5f362168a261" prot="public" virt="non-virtual"><scope>KWin::ScreenEdges</scope><name>updateLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
