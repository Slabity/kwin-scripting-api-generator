<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_linux_dma_buf_v1_feedback" kind="class" language="C++" prot="public">
    <compoundname>KWin::LinuxDmaBufV1Feedback</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="linuxdmabufv1clientbuffer_8h" local="no">linuxdmabufv1clientbuffer.h</includes>
    <innerclass refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" prot="public">KWin::LinuxDmaBufV1Feedback::Tranche</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_linux_dma_buf_v1_feedback_1a9b0afcafb17d66d526a7075627c51308" prot="public" static="no" strong="yes">
        <type>uint32_t</type>
        <name>TrancheFlag</name>
        <qualifiedname>KWin::LinuxDmaBufV1Feedback::TrancheFlag</qualifiedname>
        <enumvalue id="class_k_win_1_1_linux_dma_buf_v1_feedback_1a9b0afcafb17d66d526a7075627c51308a981c09d70fb19f05c134f81c7d608ebb" prot="public">
          <name>Scanout</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h" line="33" column="5" bodyfile="kwin/src/wayland/linuxdmabufv1clientbuffer.h" bodystart="33" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_linux_dma_buf_v1_feedback_1a749a2b769cb0a85adba0dd660291a9e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class LinuxDmaBufV1ClientBufferIntegrationPrivate</definition>
        <argsstring></argsstring>
        <name>LinuxDmaBufV1ClientBufferIntegrationPrivate</name>
        <qualifiedname>KWin::LinuxDmaBufV1Feedback::LinuxDmaBufV1ClientBufferIntegrationPrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private" kindref="compound">LinuxDmaBufV1ClientBufferIntegrationPrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h" line="56" column="18" bodyfile="kwin/src/wayland/linuxdmabufv1clientbuffer.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_linux_dma_buf_v1_feedback_1a751c43aedce49710f4a2e420deb4280f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class LinuxDmaBufV1FeedbackPrivate</definition>
        <argsstring></argsstring>
        <name>LinuxDmaBufV1FeedbackPrivate</name>
        <qualifiedname>KWin::LinuxDmaBufV1Feedback::LinuxDmaBufV1FeedbackPrivate</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private" kindref="compound">LinuxDmaBufV1FeedbackPrivate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h" line="57" column="18" bodyfile="kwin/src/wayland/linuxdmabufv1clientbuffer.h" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_linux_dma_buf_v1_feedback_1a8058c9b140d47c68031045d3a623fcfc" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_linux_dma_buf_v1_feedback_private" kindref="compound">LinuxDmaBufV1FeedbackPrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;LinuxDmaBufV1FeedbackPrivate&gt; KWin::LinuxDmaBufV1Feedback::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::LinuxDmaBufV1Feedback::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h" line="58" column="21" bodyfile="kwin/src/wayland/linuxdmabufv1clientbuffer.h" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_linux_dma_buf_v1_feedback_1ad4edd3d95013f5186646b38b8451e678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::LinuxDmaBufV1Feedback::~LinuxDmaBufV1Feedback</definition>
        <argsstring>() override</argsstring>
        <name>~LinuxDmaBufV1Feedback</name>
        <qualifiedname>KWin::LinuxDmaBufV1Feedback::~LinuxDmaBufV1Feedback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_linux_dma_buf_v1_feedback_1a383af90709901eb93f22cf8aa6a8a0bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LinuxDmaBufV1Feedback::setScanoutTranches</definition>
        <argsstring>(DrmDevice *device, const QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt; &amp;formats)</argsstring>
        <name>setScanoutTranches</name>
        <qualifiedname>KWin::LinuxDmaBufV1Feedback::setScanoutTranches</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt; &amp;</type>
          <declname>formats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the list of tranches for this feedback object, with lower indices indicating a higher priority / a more optimal configuration. The main device does not need to be included </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h" line="49" column="10" bodyfile="kwin/src/wayland/linuxdmabufv1clientbuffer.cpp" bodystart="394" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_linux_dma_buf_v1_feedback_1ac50eb179d4e2eec0ff84329a762cea2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::LinuxDmaBufV1Feedback::setTranches</definition>
        <argsstring>(const QList&lt; Tranche &gt; &amp;tranches)</argsstring>
        <name>setTranches</name>
        <qualifiedname>KWin::LinuxDmaBufV1Feedback::setTranches</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" kindref="compound">Tranche</ref> &gt; &amp;</type>
          <declname>tranches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h" line="50" column="10" bodyfile="kwin/src/wayland/linuxdmabufv1clientbuffer.cpp" bodystart="399" bodyend="408"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_k_win_1_1_linux_dma_buf_v1_feedback_1a1230d1c7ab7c571350773b7caa67da7f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" kindref="compound">Tranche</ref> &gt;</type>
        <definition>QList&lt; LinuxDmaBufV1Feedback::Tranche &gt; KWin::LinuxDmaBufV1Feedback::createScanoutTranches</definition>
        <argsstring>(const QList&lt; Tranche &gt; &amp;tranches, DrmDevice *device, const QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt; &amp;formats)</argsstring>
        <name>createScanoutTranches</name>
        <qualifiedname>KWin::LinuxDmaBufV1Feedback::createScanoutTranches</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="struct_k_win_1_1_linux_dma_buf_v1_feedback_1_1_tranche" kindref="compound">Tranche</ref> &gt; &amp;</type>
          <declname>tranches</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const QHash&lt; uint32_t, QList&lt; uint64_t &gt; &gt; &amp;</type>
          <declname>formats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h" line="53" column="18" bodyfile="kwin/src/wayland/linuxdmabufv1clientbuffer.cpp" bodystart="410" bodyend="432"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_linux_dma_buf_v1_feedback_1a890a750f8fe015f509aef4cc41537943" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::LinuxDmaBufV1Feedback::LinuxDmaBufV1Feedback</definition>
        <argsstring>(LinuxDmaBufV1ClientBufferIntegrationPrivate *integration)</argsstring>
        <name>LinuxDmaBufV1Feedback</name>
        <qualifiedname>KWin::LinuxDmaBufV1Feedback::LinuxDmaBufV1Feedback</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_linux_dma_buf_v1_client_buffer_integration_private" kindref="compound">LinuxDmaBufV1ClientBufferIntegrationPrivate</ref> *</type>
          <declname>integration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h" line="55" column="5" bodyfile="kwin/src/wayland/linuxdmabufv1clientbuffer.cpp" bodystart="387" bodyend="390"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::LinuxDmaBufV1Feedback</label>
        <link refid="class_k_win_1_1_linux_dma_buf_v1_feedback"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::LinuxDmaBufV1Feedback</label>
        <link refid="class_k_win_1_1_linux_dma_buf_v1_feedback"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/linuxdmabufv1clientbuffer.h" line="27" column="1" bodyfile="kwin/src/wayland/linuxdmabufv1clientbuffer.h" bodystart="28" bodyend="59"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a1230d1c7ab7c571350773b7caa67da7f" prot="private" virt="non-virtual"><scope>KWin::LinuxDmaBufV1Feedback</scope><name>createScanoutTranches</name></member>
      <member refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a8058c9b140d47c68031045d3a623fcfc" prot="private" virt="non-virtual"><scope>KWin::LinuxDmaBufV1Feedback</scope><name>d</name></member>
      <member refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a749a2b769cb0a85adba0dd660291a9e1" prot="private" virt="non-virtual"><scope>KWin::LinuxDmaBufV1Feedback</scope><name>LinuxDmaBufV1ClientBufferIntegrationPrivate</name></member>
      <member refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a890a750f8fe015f509aef4cc41537943" prot="private" virt="non-virtual"><scope>KWin::LinuxDmaBufV1Feedback</scope><name>LinuxDmaBufV1Feedback</name></member>
      <member refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a751c43aedce49710f4a2e420deb4280f" prot="private" virt="non-virtual"><scope>KWin::LinuxDmaBufV1Feedback</scope><name>LinuxDmaBufV1FeedbackPrivate</name></member>
      <member refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a383af90709901eb93f22cf8aa6a8a0bd" prot="public" virt="non-virtual"><scope>KWin::LinuxDmaBufV1Feedback</scope><name>setScanoutTranches</name></member>
      <member refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1ac50eb179d4e2eec0ff84329a762cea2f" prot="public" virt="non-virtual"><scope>KWin::LinuxDmaBufV1Feedback</scope><name>setTranches</name></member>
      <member refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1a9b0afcafb17d66d526a7075627c51308" prot="public" virt="non-virtual"><scope>KWin::LinuxDmaBufV1Feedback</scope><name>TrancheFlag</name></member>
      <member refid="class_k_win_1_1_linux_dma_buf_v1_feedback_1ad4edd3d95013f5186646b38b8451e678" prot="public" virt="non-virtual"><scope>KWin::LinuxDmaBufV1Feedback</scope><name>~LinuxDmaBufV1Feedback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
