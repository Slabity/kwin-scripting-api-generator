<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_plasma_virtual_desktop_management_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::PlasmaVirtualDesktopManagementInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="plasmavirtualdesktop_8h" local="no">plasmavirtualdesktop.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a41508a607b7468dbcf9495c0c490a1c4" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_private" kindref="compound">PlasmaVirtualDesktopManagementInterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PlasmaVirtualDesktopManagementInterfacePrivate&gt; KWin::PlasmaVirtualDesktopManagementInterface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="92" column="21" bodyfile="kwin/src/wayland/plasmavirtualdesktop.h" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a9e620a1aa9ab8fb4f0282f2a653055ab" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PlasmaVirtualDesktopManagementInterface::PlasmaVirtualDesktopManagementInterface</definition>
        <argsstring>(Display *display, QObject *parent=nullptr)</argsstring>
        <name>PlasmaVirtualDesktopManagementInterface</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::PlasmaVirtualDesktopManagementInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="30" column="14" bodyfile="kwin/src/wayland/plasmavirtualdesktop.cpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a50c13d4a466b98d525edd0b63c4d6713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PlasmaVirtualDesktopManagementInterface::~PlasmaVirtualDesktopManagementInterface</definition>
        <argsstring>() override</argsstring>
        <name>~PlasmaVirtualDesktopManagementInterface</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::~PlasmaVirtualDesktopManagementInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="31" column="5" bodyfile="kwin/src/wayland/plasmavirtualdesktop.cpp" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a2d55df2206539cd8e495e67086ba68cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaVirtualDesktopManagementInterface::setRows</definition>
        <argsstring>(quint32 rows)</argsstring>
        <name>setRows</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::setRows</qualifiedname>
        <param>
          <type>quint32</type>
          <declname>rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets how many rows the virtual desktops should be laid into </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="36" column="10" bodyfile="kwin/src/wayland/plasmavirtualdesktop.cpp" bodystart="129" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1aa04dd403d8c473390475257f87df4ef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_plasma_virtual_desktop_interface" kindref="compound">PlasmaVirtualDesktopInterface</ref> *</type>
        <definition>PlasmaVirtualDesktopInterface * KWin::PlasmaVirtualDesktopManagementInterface::desktop</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>desktop</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::desktop</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A desktop identified uniquely by this id. If not found, nullptr will be returned. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a288fd9a0f7a44a53afe93c91858835c5" kindref="member">createDesktop</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="43" column="35" bodyfile="kwin/src/wayland/plasmavirtualdesktop.cpp" bodystart="146" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a288fd9a0f7a44a53afe93c91858835c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_plasma_virtual_desktop_interface" kindref="compound">PlasmaVirtualDesktopInterface</ref> *</type>
        <definition>PlasmaVirtualDesktopInterface * KWin::PlasmaVirtualDesktopManagementInterface::createDesktop</definition>
        <argsstring>(const QString &amp;id, quint32 position=std::numeric_limits&lt; uint32_t &gt;::max())</argsstring>
        <name>createDesktop</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::createDesktop</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>position</declname>
          <defval>std::numeric_limits&lt; uint32_t &gt;::max()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A desktop identified uniquely by this id, if not found a new desktop will be created for this id at a given position. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the id for the desktop </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>the position the desktop will be in, if not provided, it will be appended at the end. If the desktop was already existing, position is ignored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="53" column="35" bodyfile="kwin/src/wayland/plasmavirtualdesktop.cpp" bodystart="155" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a66d062fbbdd4b8b587916d29d14ac4e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaVirtualDesktopManagementInterface::removeDesktop</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>removeDesktop</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::removeDesktop</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removed and destroys the desktop identified by id, if present </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="58" column="10" bodyfile="kwin/src/wayland/plasmavirtualdesktop.cpp" bodystart="187" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a0ed746da88853684aee81cb934c439cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_plasma_virtual_desktop_interface" kindref="compound">PlasmaVirtualDesktopInterface</ref> * &gt;</type>
        <definition>QList&lt; PlasmaVirtualDesktopInterface * &gt; KWin::PlasmaVirtualDesktopManagementInterface::desktops</definition>
        <argsstring>() const</argsstring>
        <name>desktops</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::desktops</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>All tghe desktops present. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="63" column="11" bodyfile="kwin/src/wayland/plasmavirtualdesktop.cpp" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a578f1a62c6de22025b586f4134fe92a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaVirtualDesktopManagementInterface::sendDone</definition>
        <argsstring>()</argsstring>
        <name>sendDone</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::sendDone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inform the clients that all the properties have been sent, and their client-side representation is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="69" column="10" bodyfile="kwin/src/wayland/plasmavirtualdesktop.cpp" bodystart="209" bodyend="215"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a1e42809165325bd89411accdee1e3a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaVirtualDesktopManagementInterface::desktopActivated</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>desktopActivated</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::desktopActivated</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A desktop has been activated </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="75" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a5a44e68ce01cbd7093b032955fadce34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaVirtualDesktopManagementInterface::desktopRemoveRequested</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>desktopRemoveRequested</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::desktopRemoveRequested</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The client asked to remove a desktop, It&apos;s responsibility of the server deciding whether to remove it or not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="81" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a56ead651939b1820f5e65052ae900ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PlasmaVirtualDesktopManagementInterface::desktopCreateRequested</definition>
        <argsstring>(const QString &amp;name, quint32 position)</argsstring>
        <name>desktopCreateRequested</name>
        <qualifiedname>KWin::PlasmaVirtualDesktopManagementInterface::desktopCreateRequested</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>quint32</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The client asked to create a desktop, It&apos;s responsibility of the server deciding whether to create it or not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired user readable name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired position. Normalized, guaranteed to be in the range 0-count </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="89" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Wrapper for the org_kde_plasma_virtual_desktop_management interface. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides a convenient wrapper for the org_kde_plasma_virtual_desktop_management interface. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::PlasmaVirtualDesktopManagementInterface</label>
        <link refid="class_k_win_1_1_plasma_virtual_desktop_management_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::PlasmaVirtualDesktopManagementInterface</label>
        <link refid="class_k_win_1_1_plasma_virtual_desktop_management_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/plasmavirtualdesktop.h" line="25" column="1" bodyfile="kwin/src/wayland/plasmavirtualdesktop.h" bodystart="26" bodyend="93"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a288fd9a0f7a44a53afe93c91858835c5" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>createDesktop</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a41508a607b7468dbcf9495c0c490a1c4" prot="private" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1aa04dd403d8c473390475257f87df4ef3" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>desktop</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a1e42809165325bd89411accdee1e3a22" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>desktopActivated</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a56ead651939b1820f5e65052ae900ed1" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>desktopCreateRequested</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a5a44e68ce01cbd7093b032955fadce34" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>desktopRemoveRequested</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a0ed746da88853684aee81cb934c439cf" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>desktops</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a9e620a1aa9ab8fb4f0282f2a653055ab" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>PlasmaVirtualDesktopManagementInterface</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a66d062fbbdd4b8b587916d29d14ac4e9" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>removeDesktop</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a578f1a62c6de22025b586f4134fe92a1" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>sendDone</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a2d55df2206539cd8e495e67086ba68cd" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>setRows</name></member>
      <member refid="class_k_win_1_1_plasma_virtual_desktop_management_interface_1a50c13d4a466b98d525edd0b63c4d6713" prot="public" virt="non-virtual"><scope>KWin::PlasmaVirtualDesktopManagementInterface</scope><name>~PlasmaVirtualDesktopManagementInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
