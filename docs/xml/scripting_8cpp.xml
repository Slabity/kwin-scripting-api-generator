<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="scripting_8cpp" kind="file" language="C++">
    <compoundname>scripting.cpp</compoundname>
    <includes refid="scripting_8h" local="yes">scripting.h</includes>
    <includes refid="dbuscall_8h" local="yes">dbuscall.h</includes>
    <includes refid="desktopbackgrounditem_8h" local="yes">desktopbackgrounditem.h</includes>
    <includes refid="quickeffect_8h" local="yes">effect/quickeffect.h</includes>
    <includes refid="gesturehandler_8h" local="yes">gesturehandler.h</includes>
    <includes refid="screenedgehandler_8h" local="yes">screenedgehandler.h</includes>
    <includes refid="scriptedquicksceneeffect_8h" local="yes">scriptedquicksceneeffect.h</includes>
    <includes refid="scripting__logging_8h" local="yes">scripting_logging.h</includes>
    <includes refid="scriptingutils_8h" local="yes">scriptingutils.h</includes>
    <includes refid="shortcuthandler_8h" local="yes">shortcuthandler.h</includes>
    <includes refid="virtualdesktopmodel_8h" local="yes">virtualdesktopmodel.h</includes>
    <includes refid="windowmodel_8h" local="yes">windowmodel.h</includes>
    <includes refid="windowthumbnailitem_8h" local="yes">windowthumbnailitem.h</includes>
    <includes refid="workspace__wrapper_8h" local="yes">workspace_wrapper.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="input_8h" local="yes">input.h</includes>
    <includes refid="options_8h" local="yes">options.h</includes>
    <includes refid="screenedge_8h" local="yes">screenedge.h</includes>
    <includes refid="tilemanager_8h" local="yes">tiles/tilemanager.h</includes>
    <includes local="yes">virtualdesktops.h</includes>
    <includes local="yes">window.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes local="no">KConfigGroup</includes>
    <includes local="no">KConfigPropertyMap</includes>
    <includes local="no">KGlobalAccel</includes>
    <includes local="no">KLocalizedContext</includes>
    <includes local="no">KLocalizedQmlContext</includes>
    <includes local="no">KPackage/PackageLoader</includes>
    <includes local="no">QDBusConnection</includes>
    <includes local="no">QDBusPendingCallWatcher</includes>
    <includes local="no">QDebug</includes>
    <includes local="no">QFutureWatcher</includes>
    <includes local="no">QMenu</includes>
    <includes local="no">QQmlContext</includes>
    <includes local="no">QQmlEngine</includes>
    <includes local="no">QQmlExpression</includes>
    <includes local="no">QQuickWindow</includes>
    <includes local="no">QSettings</includes>
    <includes local="no">QStandardPaths</includes>
    <includes local="no">QtConcurrentRun</includes>
    <includes local="yes">scriptadaptor.h</includes>
    <includes local="yes">moc_scripting.cpp</includes>
    <incdepgraph>
      <node id="30">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>effect/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>effect/offscreenquickview.h</label>
        <link refid="offscreenquickview_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>effect/quickeffect.h</label>
        <link refid="quickeffect_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>screenedge.h</label>
        <link refid="screenedge_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>dbuscall.h</label>
        <link refid="dbuscall_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>desktopbackgrounditem.h</label>
        <link refid="desktopbackgrounditem_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>gesturehandler.h</label>
        <link refid="gesturehandler_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>screenedgehandler.h</label>
        <link refid="screenedgehandler_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>scriptedquicksceneeffect.h</label>
        <link refid="scriptedquicksceneeffect_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/scripting/scripting.cpp</label>
        <link refid="scripting_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>scripting.h</label>
        <link refid="scripting_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>scripting_logging.h</label>
        <link refid="scripting__logging_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>scriptingutils.h</label>
        <link refid="scriptingutils_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>shortcuthandler.h</label>
        <link refid="shortcuthandler_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>scripting/tilemodel.h</label>
        <link refid="tilemodel_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>virtualdesktopmodel.h</label>
        <link refid="virtualdesktopmodel_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>windowmodel.h</label>
        <link refid="windowmodel_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>windowthumbnailitem.h</label>
        <link refid="windowthumbnailitem_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>workspace_wrapper.h</label>
        <link refid="workspace__wrapper_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>customtile.h</label>
        <link refid="customtile_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>quicktile.h</label>
        <link refid="quicktile_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>tiles/tile.h</label>
        <link refid="tile_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>tiles/tilemanager.h</label>
        <link refid="tilemanager_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>KConfigGroup</label>
      </node>
      <node id="50">
        <label>KConfigPropertyMap</label>
      </node>
      <node id="66">
        <label>KConfigWatcher</label>
      </node>
      <node id="93">
        <label>KGlobalAccel</label>
      </node>
      <node id="94">
        <label>KLocalizedContext</label>
      </node>
      <node id="95">
        <label>KLocalizedQmlContext</label>
      </node>
      <node id="96">
        <label>KPackage/PackageLoader</label>
      </node>
      <node id="40">
        <label>KPluginFactory</label>
      </node>
      <node id="41">
        <label>KSharedConfig</label>
      </node>
      <node id="84">
        <label>QAbstractItemModel</label>
      </node>
      <node id="57">
        <label>QAbstractListModel</label>
      </node>
      <node id="71">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="72">
        <label>QApplication</label>
      </node>
      <node id="33">
        <label>QByteArray</label>
      </node>
      <node id="5">
        <label>QCoreApplication</label>
      </node>
      <node id="97">
        <label>QDBusConnection</label>
      </node>
      <node id="16">
        <label>QDBusContext</label>
      </node>
      <node id="17">
        <label>QDBusMessage</label>
      </node>
      <node id="98">
        <label>QDBusPendingCallWatcher</label>
      </node>
      <node id="90">
        <label>QDataStream</label>
      </node>
      <node id="36">
        <label>QDebug</label>
      </node>
      <node id="99">
        <label>QFutureWatcher</label>
      </node>
      <node id="11">
        <label>QHash</label>
      </node>
      <node id="6">
        <label>QImage</label>
      </node>
      <node id="12">
        <label>QJSEngine</label>
      </node>
      <node id="13">
        <label>QJSValue</label>
      </node>
      <node id="85">
        <label>QJsonValue</label>
      </node>
      <node id="55">
        <label>QKeySequence</label>
      </node>
      <node id="34">
        <label>QList</label>
      </node>
      <node id="52">
        <label>QLoggingCategory</label>
      </node>
      <node id="32">
        <label>QMatrix4x4</label>
      </node>
      <node id="100">
        <label>QMenu</label>
      </node>
      <node id="19">
        <label>QObject</label>
      </node>
      <node id="7">
        <label>QPoint</label>
      </node>
      <node id="60">
        <label>QPointer</label>
      </node>
      <node id="73">
        <label>QProcessEnvironment</label>
      </node>
      <node id="45">
        <label>QQmlComponent</label>
      </node>
      <node id="101">
        <label>QQmlContext</label>
      </node>
      <node id="102">
        <label>QQmlEngine</label>
      </node>
      <node id="103">
        <label>QQmlExpression</label>
      </node>
      <node id="63">
        <label>QQmlListProperty</label>
      </node>
      <node id="47">
        <label>QQmlParserStatus</label>
      </node>
      <node id="23">
        <label>QQuickItem</label>
      </node>
      <node id="104">
        <label>QQuickWindow</label>
      </node>
      <node id="37">
        <label>QRect</label>
      </node>
      <node id="83">
        <label>QRectF</label>
      </node>
      <node id="39">
        <label>QRegion</label>
      </node>
      <node id="67">
        <label>QSet</label>
      </node>
      <node id="105">
        <label>QSettings</label>
      </node>
      <node id="35">
        <label>QSize</label>
      </node>
      <node id="61">
        <label>QSortFilterProxyModel</label>
      </node>
      <node id="106">
        <label>QStandardPaths</label>
      </node>
      <node id="20">
        <label>QString</label>
      </node>
      <node id="14">
        <label>QStringList</label>
      </node>
      <node id="15">
        <label>QTimer</label>
      </node>
      <node id="43">
        <label>QUrl</label>
      </node>
      <node id="24">
        <label>QUuid</label>
      </node>
      <node id="8">
        <label>QVariant</label>
      </node>
      <node id="9">
        <label>QVector2D</label>
      </node>
      <node id="107">
        <label>QtConcurrentRun</label>
      </node>
      <node id="82">
        <label>climits</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="25">
        <label>epoxy/gl.h</label>
      </node>
      <node id="68">
        <label>functional</label>
      </node>
      <node id="10">
        <label>kwin_export.h</label>
      </node>
      <node id="44">
        <label>memory</label>
      </node>
      <node id="109">
        <label>moc_scripting.cpp</label>
      </node>
      <node id="92">
        <label>netwm_def.h</label>
      </node>
      <node id="31">
        <label>optional</label>
      </node>
      <node id="108">
        <label>scriptadaptor.h</label>
      </node>
      <node id="59">
        <label>virtualdesktops.h</label>
      </node>
      <node id="87">
        <label>window.h</label>
      </node>
      <node id="75">
        <label>xcb/xcb.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="scripting_8cpp_1af72486b3c74c39afb7d57a78e2945669" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QRect</type>
        <definition>static QRect scriptValueToRect</definition>
        <argsstring>(const QJSValue &amp;value)</argsstring>
        <name>scriptValueToRect</name>
        <param>
          <type>const QJSValue &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scripting/scripting.cpp" line="59" column="14" bodyfile="kwin/src/scripting/scripting.cpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="scripting_8cpp_1a881d58b64490234c2b9c586c09dd3e94" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>static QRectF scriptValueToRectF</definition>
        <argsstring>(const QJSValue &amp;value)</argsstring>
        <name>scriptValueToRectF</name>
        <param>
          <type>const QJSValue &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scripting/scripting.cpp" line="67" column="15" bodyfile="kwin/src/scripting/scripting.cpp" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="scripting_8cpp_1a222cf288113b3162adcf3c28548f6759" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QPoint</type>
        <definition>static QPoint scriptValueToPoint</definition>
        <argsstring>(const QJSValue &amp;value)</argsstring>
        <name>scriptValueToPoint</name>
        <param>
          <type>const QJSValue &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scripting/scripting.cpp" line="75" column="15" bodyfile="kwin/src/scripting/scripting.cpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="scripting_8cpp_1ae940fd812eef02bc74e82cc616f33310" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>static QPointF scriptValueToPointF</definition>
        <argsstring>(const QJSValue &amp;value)</argsstring>
        <name>scriptValueToPointF</name>
        <param>
          <type>const QJSValue &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scripting/scripting.cpp" line="81" column="16" bodyfile="kwin/src/scripting/scripting.cpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="scripting_8cpp_1a90ccecd6556172bef52687e4421e91ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>static QSize scriptValueToSize</definition>
        <argsstring>(const QJSValue &amp;value)</argsstring>
        <name>scriptValueToSize</name>
        <param>
          <type>const QJSValue &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scripting/scripting.cpp" line="87" column="14" bodyfile="kwin/src/scripting/scripting.cpp" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="scripting_8cpp_1a4179bc1059d6f450858e91f997e7c0a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>static QSizeF scriptValueToSizeF</definition>
        <argsstring>(const QJSValue &amp;value)</argsstring>
        <name>scriptValueToSizeF</name>
        <param>
          <type>const QJSValue &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/scripting/scripting.cpp" line="93" column="15" bodyfile="kwin/src/scripting/scripting.cpp" bodystart="93" bodyend="97"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2010<sp/>Rohan<sp/>Prabhu<sp/>&lt;rohan@rohanprabhu.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2011<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scripting_8h" kindref="compound">scripting.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dbuscall_8h" kindref="compound">dbuscall.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="desktopbackgrounditem_8h" kindref="compound">desktopbackgrounditem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="quickeffect_8h" kindref="compound">effect/quickeffect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gesturehandler_8h" kindref="compound">gesturehandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="screenedgehandler_8h" kindref="compound">screenedgehandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scriptedquicksceneeffect_8h" kindref="compound">scriptedquicksceneeffect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scripting__logging_8h" kindref="compound">scripting_logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scriptingutils_8h" kindref="compound">scriptingutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shortcuthandler_8h" kindref="compound">shortcuthandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="virtualdesktopmodel_8h" kindref="compound">virtualdesktopmodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="windowmodel_8h" kindref="compound">windowmodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="windowthumbnailitem_8h" kindref="compound">windowthumbnailitem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace__wrapper_8h" kindref="compound">workspace_wrapper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input_8h" kindref="compound">input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="options_8h" kindref="compound">options.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="screenedge_8h" kindref="compound">screenedge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tilemanager_8h" kindref="compound">tiles/tilemanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;virtualdesktops.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KConfigGroup&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KConfigPropertyMap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KGlobalAccel&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KLocalizedContext&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KLocalizedQmlContext&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KPackage/PackageLoader&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDBusConnection&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDBusPendingCallWatcher&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFutureWatcher&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QMenu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QQmlContext&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QQmlEngine&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QQmlExpression&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QQuickWindow&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSettings&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QStandardPaths&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtConcurrentRun&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;scriptadaptor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QRect<sp/>scriptValueToRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;value)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRect(value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">)).toInt(),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">)).toInt(),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">)).toInt(),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">)).toInt());</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QRectF<sp/>scriptValueToRectF(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;value)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRectF(value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">)).toNumber(),</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">)).toNumber(),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">)).toNumber(),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">)).toNumber());</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QPoint<sp/>scriptValueToPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;value)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPoint(value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">)).toInt(),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">)).toInt());</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QPointF<sp/>scriptValueToPointF(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;value)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">)).toNumber(),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">)).toNumber());</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QSize<sp/>scriptValueToSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;value)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QSize(value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">)).toInt(),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">)).toInt());</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QSizeF<sp/>scriptValueToSizeF(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;value)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QSizeF(value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">)).toNumber(),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">)).toNumber());</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_k_win_1_1_abstract_script_1a76d921a0d06d2d9e3783739c683225d5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_abstract_script_1a76d921a0d06d2d9e3783739c683225d5" kindref="member">KWin::AbstractScript::AbstractScript</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>QString<sp/>scriptName,<sp/>QString<sp/><ref refid="class_k_win_1_1_abstract_script_1a89bae1f44250e540c3952bceb3f46c65" kindref="member">pluginName</ref>,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_scriptId(id)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_fileName(scriptName)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pluginName(<ref refid="class_k_win_1_1_abstract_script_1a89bae1f44250e540c3952bceb3f46c65" kindref="member">pluginName</ref>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_running(false)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pluginName.isNull())<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pluginName<sp/>=<sp/>scriptName;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ScriptAdaptor(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>QDBusConnection::sessionBus().registerObject(QStringLiteral(</highlight><highlight class="stringliteral">&quot;/Scripting/Script&quot;</highlight><highlight class="normal">)<sp/>+<sp/>QString::number(<ref refid="class_k_win_1_1_abstract_script_1ae8f1f9aa3f49d4ff42404fcc272ab4f5" kindref="member">scriptId</ref>()),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>QDBusConnection::ExportAdaptors);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_k_win_1_1_abstract_script_1afac9b3c7d793923982af2b2919bca2c8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_abstract_script_1afac9b3c7d793923982af2b2919bca2c8" kindref="member">KWin::AbstractScript::~AbstractScript</ref>()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_k_win_1_1_abstract_script_1adedebe311021f5d95fe467faeffca8dc" refkind="member"><highlight class="normal">KConfigGroup<sp/><ref refid="class_k_win_1_1_abstract_script_1adedebe311021f5d95fe467faeffca8dc" kindref="member">KWin::AbstractScript::config</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="119"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kwinApp()-&gt;config()-&gt;group(QLatin1String(</highlight><highlight class="stringliteral">&quot;Script-&quot;</highlight><highlight class="normal">)<sp/>+<sp/>m_pluginName);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_k_win_1_1_abstract_script_1ad09c6008ab7e5629b49af42a3bf3271d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_abstract_script_1ad09c6008ab7e5629b49af42a3bf3271d" kindref="member">KWin::AbstractScript::stop</ref>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>deleteLater();</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_k_win_1_1_script_timer_1ae556302e470671be322137dae9cbe0c4" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_script_timer_1ae556302e470671be322137dae9cbe0c4" kindref="member">KWin::ScriptTimer::ScriptTimer</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QTimer(parent)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_k_win_1_1_script_1a5386a6cb0c28b8bdf1538adc8808fac9" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_script_1a5386a6cb0c28b8bdf1538adc8808fac9" kindref="member">KWin::Script::Script</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>QString<sp/>scriptName,<sp/>QString<sp/><ref refid="class_k_win_1_1_abstract_script_1a89bae1f44250e540c3952bceb3f46c65" kindref="member">pluginName</ref>,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_abstract_script_1a76d921a0d06d2d9e3783739c683225d5" kindref="member">AbstractScript</ref>(id,<sp/>scriptName,<sp/><ref refid="class_k_win_1_1_abstract_script_1a89bae1f44250e540c3952bceb3f46c65" kindref="member">pluginName</ref>,<sp/>parent)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_engine(new<sp/>QJSEngine(this))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_starting(false)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Remove<sp/>in<sp/>kwin<sp/>6.<sp/>We<sp/>have<sp/>these<sp/>converters<sp/>only<sp/>for<sp/>compatibility<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!QMetaType::hasRegisteredConverterFunction&lt;QJSValue,<sp/>QRect&gt;())<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaType::registerConverter&lt;QJSValue,<sp/>QRect&gt;(scriptValueToRect);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!QMetaType::hasRegisteredConverterFunction&lt;QJSValue,<sp/>QRectF&gt;())<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaType::registerConverter&lt;QJSValue,<sp/>QRectF&gt;(scriptValueToRectF);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!QMetaType::hasRegisteredConverterFunction&lt;QJSValue,<sp/>QPoint&gt;())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaType::registerConverter&lt;QJSValue,<sp/>QPoint&gt;(scriptValueToPoint);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!QMetaType::hasRegisteredConverterFunction&lt;QJSValue,<sp/>QPointF&gt;())<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaType::registerConverter&lt;QJSValue,<sp/>QPointF&gt;(scriptValueToPointF);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!QMetaType::hasRegisteredConverterFunction&lt;QJSValue,<sp/>QSize&gt;())<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaType::registerConverter&lt;QJSValue,<sp/>QSize&gt;(scriptValueToSize);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!QMetaType::hasRegisteredConverterFunction&lt;QJSValue,<sp/>QSizeF&gt;())<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMetaType::registerConverter&lt;QJSValue,<sp/>QSizeF&gt;(scriptValueToSizeF);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_k_win_1_1_script_1a86b6b20a771b7f03a51e127b2dca4459" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_script_1a86b6b20a771b7f03a51e127b2dca4459" kindref="member">KWin::Script::~Script</ref>()</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="class_k_win_1_1_script_1a5f98b562df6f7281531e4baaac9f7bfa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_script_1a5f98b562df6f7281531e4baaac9f7bfa" kindref="member">KWin::Script::run</ref>()</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_abstract_script_1ac139b32bc133682b4589c4dc51434f66" kindref="member">running</ref>()<sp/>||<sp/>m_starting)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calledFromDBus())<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_invocationContext<sp/>=<sp/>message();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDelayedReply(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>m_starting<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_future_watcher" kindref="compound">QFutureWatcher&lt;QByteArray&gt;</ref><sp/>*watcher<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_future_watcher" kindref="compound">QFutureWatcher&lt;QByteArray&gt;</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(watcher,<sp/>&amp;QFutureWatcherBase::finished,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;Script::slotScriptLoadedFromFile);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>watcher-&gt;setFuture(QtConcurrent::run(&amp;KWin::Script::loadScriptFromFile,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_abstract_script_1a2dcb378e96229c16daad1c4f1dc7b468" kindref="member">fileName</ref>()));</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">QByteArray<sp/>KWin::Script::loadScriptFromFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>file(fileName);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.open(QIODevice::ReadOnly))<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QByteArray();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>result(file.readAll());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KWin::Script::slotScriptLoadedFromFile()</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>QFutureWatcher&lt;QByteArray&gt;<sp/>*watcher<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">QFutureWatcher&lt;QByteArray&gt;<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sender());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!watcher)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>invoked<sp/>from<sp/>a<sp/>QFutureWatcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watcher-&gt;result().isNull())<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>load<sp/>empty<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deleteLater();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watcher-&gt;deleteLater();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_invocationContext.type()<sp/>==<sp/>QDBusMessage::MethodCallMessage)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reply<sp/>=<sp/>m_invocationContext.createErrorReply(</highlight><highlight class="stringliteral">&quot;org.kde.kwin.Scripting.FileError&quot;</highlight><highlight class="normal">,<sp/>QString(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>%1&quot;</highlight><highlight class="normal">).arg(fileName()));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDBusConnection::sessionBus().send(reply);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_invocationContext<sp/>=<sp/>QDBusMessage();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Install<sp/>console<sp/>functions<sp/>(e.g.<sp/>console.assert(),<sp/>console.log(),<sp/>etc).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>m_engine-&gt;installExtensions(QJSEngine::ConsoleExtension);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>timer<sp/>visible<sp/>to<sp/>QJSEngine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>timerMetaObject<sp/>=<sp/>m_engine-&gt;newQMetaObject(&amp;ScriptTimer::staticMetaObject);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>m_engine-&gt;globalObject().setProperty(</highlight><highlight class="stringliteral">&quot;QTimer&quot;</highlight><highlight class="normal">,<sp/>timerMetaObject);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Expose<sp/>enums.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>m_engine-&gt;globalObject().setProperty(QStringLiteral(</highlight><highlight class="stringliteral">&quot;KWin&quot;</highlight><highlight class="normal">),<sp/>m_engine-&gt;newQMetaObject(&amp;QtScriptWorkspaceWrapper::staticMetaObject));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>options<sp/>object<sp/>visible<sp/>to<sp/>QJSEngine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>optionsObject<sp/>=<sp/>m_engine-&gt;newQObject(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSEngine::setObjectOwnership(<ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>,<sp/>QJSEngine::CppOwnership);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>m_engine-&gt;globalObject().setProperty(QStringLiteral(</highlight><highlight class="stringliteral">&quot;options&quot;</highlight><highlight class="normal">),<sp/>optionsObject);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>workspace<sp/>visible<sp/>to<sp/>QJSEngine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>workspaceObject<sp/>=<sp/>m_engine-&gt;newQObject(<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;workspaceWrapper());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSEngine::setObjectOwnership(<ref refid="class_k_win_1_1_scripting_1ae42e35c69eacf6822dccda0b351fdc84" kindref="member">Scripting::self</ref>()-&gt;workspaceWrapper(),<sp/>QJSEngine::CppOwnership);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>m_engine-&gt;globalObject().setProperty(QStringLiteral(</highlight><highlight class="stringliteral">&quot;workspace&quot;</highlight><highlight class="normal">),<sp/>workspaceObject);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>self<sp/>=<sp/>m_engine-&gt;newQObject(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSEngine::setObjectOwnership(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>QJSEngine::CppOwnership);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>globalProperties{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;readConfig&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;callDBus&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;registerShortcut&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;registerScreenEdge&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;unregisterScreenEdge&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;registerTouchScreenEdge&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;unregisterTouchScreenEdge&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;registerUserActionsMenu&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;propertyName<sp/>:<sp/>globalProperties)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;globalObject().setProperty(propertyName,<sp/>self.property(propertyName));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inject<sp/>assertion<sp/>functions.<sp/>It<sp/>would<sp/>be<sp/>better<sp/>to<sp/>create<sp/>a<sp/>module<sp/>with<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>assert<sp/>functions<sp/>or<sp/>just<sp/>deprecate<sp/>them<sp/>in<sp/>favor<sp/>of<sp/>console.assert().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>result<sp/>=<sp/>m_engine-&gt;evaluate(QStringLiteral(R</highlight><highlight class="stringliteral">&quot;(</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>assert(condition,<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console.assert(condition,<sp/>message<sp/>||<sp/>&apos;Assertion<sp/>failed&apos;);</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>assertTrue(condition,<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console.assert(condition,<sp/>message<sp/>||<sp/>&apos;Assertion<sp/>failed&apos;);</highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>assertFalse(condition,<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console.assert(!condition,<sp/>message<sp/>||<sp/>&apos;Assertion<sp/>failed&apos;);</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>assertNull(value,<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console.assert(value<sp/>===<sp/>null,<sp/>message<sp/>||<sp/>&apos;Assertion<sp/>failed&apos;);</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>assertNotNull(value,<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console.assert(value<sp/>!==<sp/>null,<sp/>message<sp/>||<sp/>&apos;Assertion<sp/>failed&apos;);</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>assertEquals(expected,<sp/>actual,<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console.assert(expected<sp/>===<sp/>actual,<sp/>message<sp/>||<sp/>&apos;Assertion<sp/>failed&apos;);</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>)&quot;));</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Q_ASSERT(!result.isError());</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>m_engine-&gt;evaluate(QString::fromUtf8(watcher-&gt;result()),<sp/>fileName());</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.isError())<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_SCRIPTING,<sp/></highlight><highlight class="stringliteral">&quot;%s:%d:<sp/>error:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>qPrintable(fileName()),</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;lineNumber&quot;</highlight><highlight class="normal">)).toInt(),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qPrintable(result.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">)).toString()));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deleteLater();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_invocationContext.type()<sp/>==<sp/>QDBusMessage::MethodCallMessage)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reply<sp/>=<sp/>m_invocationContext.createReply();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QDBusConnection::sessionBus().send(reply);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_invocationContext<sp/>=<sp/>QDBusMessage();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>watcher-&gt;deleteLater();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>setRunning(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>m_starting<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="class_k_win_1_1_script_1a21611e13f0afa92b37842baf67294599" refkind="member"><highlight class="normal">QVariant<sp/><ref refid="class_k_win_1_1_script_1a21611e13f0afa92b37842baf67294599" kindref="member">KWin::Script::readConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;defaultValue)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_abstract_script_1adedebe311021f5d95fe467faeffca8dc" kindref="member">config</ref>().readEntry(key,<sp/>defaultValue);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="class_k_win_1_1_script_1a585c5d02390b9e2b6ae7f77fbfdf4e4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_script_1a585c5d02390b9e2b6ae7f77fbfdf4e4a" kindref="member">KWin::Script::callDBus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;service,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;interface,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;method,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;arg1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;arg2,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;arg3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;arg4,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;arg5,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;arg6,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;arg7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;arg8,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;arg9)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValueList<sp/>jsArguments;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>jsArguments.reserve(9);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg1.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsArguments<sp/>&lt;&lt;<sp/>arg1;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg2.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsArguments<sp/>&lt;&lt;<sp/>arg2;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg3.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsArguments<sp/>&lt;&lt;<sp/>arg3;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg4.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsArguments<sp/>&lt;&lt;<sp/>arg4;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg5.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsArguments<sp/>&lt;&lt;<sp/>arg5;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg6.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsArguments<sp/>&lt;&lt;<sp/>arg6;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg7.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsArguments<sp/>&lt;&lt;<sp/>arg7;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg8.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsArguments<sp/>&lt;&lt;<sp/>arg8;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arg9.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsArguments<sp/>&lt;&lt;<sp/>arg9;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValue<sp/>callback;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!jsArguments.isEmpty()<sp/>&amp;&amp;<sp/>jsArguments.last().isCallable())<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback<sp/>=<sp/>jsArguments.takeLast();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>QVariantList<sp/>dbusArguments;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>dbusArguments.reserve(jsArguments.count());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;jsArgument<sp/>:<sp/>std::as_const(jsArguments))<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbusArguments<sp/>&lt;&lt;<sp/>jsArgument.toVariant();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>QDBusMessage<sp/>message<sp/>=<sp/>QDBusMessage::createMethodCall(service,<sp/>path,<sp/>interface,<sp/>method);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>message.setArguments(dbusArguments);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusPendingCall<sp/>call<sp/>=<sp/>QDBusConnection::sessionBus().asyncCall(message);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>QDBusPendingCallWatcher<sp/>*watcher<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QDBusPendingCallWatcher(call,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(watcher,<sp/>&amp;QDBusPendingCallWatcher::finished,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>callback](QDBusPendingCallWatcher<sp/>*self)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;deleteLater();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;isError())<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_SCRIPTING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>D-Bus<sp/>message<sp/>is<sp/>error:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>self-&gt;error().message();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValueList<sp/>arguments;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariantList<sp/>reply<sp/>=<sp/>self-&gt;reply().arguments();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;variant<sp/>:<sp/>reply)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments<sp/>&lt;&lt;<sp/>m_engine-&gt;toScriptValue(<ref refid="namespace_k_win_1a19449039799dcafb994719a68964b51e" kindref="member">dbusToVariant</ref>(variant));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue(callback).call(arguments);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="class_k_win_1_1_script_1a67c2e733f5d2bd4ecfccd69b9cae7721" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_script_1a67c2e733f5d2bd4ecfccd69b9cae7721" kindref="member">KWin::Script::registerShortcut</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;objectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;keySequence,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isCallable())<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Shortcut<sp/>handler<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>QAction<sp/>*action<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>action-&gt;setObjectName(objectName);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>action-&gt;setText(text);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QKeySequence<sp/>shortcut<sp/>=<sp/>keySequence;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>KGlobalAccel::self()-&gt;setShortcut(action,<sp/>{shortcut});</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(action,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>action,<sp/>callback]()<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue(callback).call({m_engine-&gt;toScriptValue(action)});</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="class_k_win_1_1_script_1aec2f16a1931cb76ae63800317f59143f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_script_1aec2f16a1931cb76ae63800317f59143f" kindref="member">KWin::Script::registerScreenEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isCallable())<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Screen<sp/>edge<sp/>handler<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>QJSValueList<sp/>&amp;callbacks<sp/>=<sp/>m_screenEdgeCallbacks[edge];</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callbacks.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1a26e8b8046e90de4811253d87de67477d" kindref="member">reserve</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">KWin::ElectricBorder</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(edge),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;slotBorderActivated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>callbacks<sp/>&lt;&lt;<sp/>callback;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="class_k_win_1_1_script_1ad1d31827251be0938d99afeb9c75fb15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_script_1ad1d31827251be0938d99afeb9c75fb15" kindref="member">KWin::Script::unregisterScreenEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_screenEdgeCallbacks.find(edge);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_screenEdgeCallbacks.end())<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1aaee4026fa795568ea3217b1d70cd4234" kindref="member">unreserve</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">KWin::ElectricBorder</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(edge),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>m_screenEdgeCallbacks.erase(it);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="class_k_win_1_1_script_1a5c248700c9be5f45686920811c53f397" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_script_1a5c248700c9be5f45686920811c53f397" kindref="member">KWin::Script::registerTouchScreenEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isCallable())<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;Touch<sp/>screen<sp/>edge<sp/>handler<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_touchScreenEdgeCallbacks.contains(edge))<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>QAction<sp/>*action<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" kindref="member">screenEdges</ref>()-&gt;<ref refid="class_k_win_1_1_screen_edges_1abdd24d5b332b226ad4b3b84d79979721" kindref="member">reserveTouch</ref>(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">KWin::ElectricBorder</ref>(edge),<sp/>action);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchScreenEdgeCallbacks.insert(edge,<sp/>action);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(action,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[callback]()<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue(callback).call();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="class_k_win_1_1_script_1a3c166d77163bd5f8f1212aa2b0b9c103" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_script_1a3c166d77163bd5f8f1212aa2b0b9c103" kindref="member">KWin::Script::unregisterTouchScreenEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_touchScreenEdgeCallbacks.find(edge);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_touchScreenEdgeCallbacks.end())<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it.value();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>m_touchScreenEdgeCallbacks.erase(it);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="class_k_win_1_1_script_1abf13a1ea2aa7473b508aded77caa8c2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_script_1abf13a1ea2aa7473b508aded77caa8c2b" kindref="member">KWin::Script::registerUserActionsMenu</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;callback)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isCallable())<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_engine-&gt;throwError(QStringLiteral(</highlight><highlight class="stringliteral">&quot;User<sp/>action<sp/>handler<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>m_userActionsMenuCallbacks.append(callback);</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="class_k_win_1_1_script_1a71b2899512833c0f332ceb2e2dbd7087" refkind="member"><highlight class="normal">QList&lt;QAction<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_script_1a71b2899512833c0f332ceb2e2dbd7087" kindref="member">KWin::Script::actionsForUserActionMenu</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref><sp/>*client,<sp/>QMenu<sp/>*parent)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QAction<sp/>*&gt;<sp/>actions;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>actions.reserve(m_userActionsMenuCallbacks.count());</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QJSValue<sp/>callback<sp/>:<sp/>std::as_const(m_userActionsMenuCallbacks))<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>result<sp/>=<sp/>callback.call({m_engine-&gt;toScriptValue(client)});</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.isError())<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.isObject())<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QAction<sp/>*action<sp/>=<sp/>scriptValueToAction(result,<sp/>parent))<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions<sp/>&lt;&lt;<sp/>action;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>actions;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>KWin::Script::slotBorderActivated(<ref refid="namespace_k_win_1a7eda12963fb07e3df0c1f337e8526bc5" kindref="member">ElectricBorder</ref><sp/>border)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValueList<sp/>callbacks<sp/>=<sp/>m_screenEdgeCallbacks.value(border);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callbacks.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>std::for_each(callbacks.begin(),<sp/>callbacks.end(),<sp/>[](QJSValue<sp/>callback)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback.call();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">QAction<sp/>*KWin::Script::scriptValueToAction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;value,<sp/>QMenu<sp/>*parent)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>title<sp/>=<sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">)).toString();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(title.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>a<sp/>menu<sp/>or<sp/>a<sp/>menu<sp/>item.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>itemsValue<sp/>=<sp/>value.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;items&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!itemsValue.isUndefined())<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createMenu(title,<sp/>itemsValue,<sp/>parent);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createAction(title,<sp/>value,<sp/>parent);</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal">QAction<sp/>*KWin::Script::createAction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;item,<sp/>QMenu<sp/>*parent)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>callback<sp/>=<sp/>item.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;triggered&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isCallable())<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkable<sp/>=<sp/>item.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;checkable&quot;</highlight><highlight class="normal">)).toBool();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checked<sp/>=<sp/>item.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;checked&quot;</highlight><highlight class="normal">)).toBool();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>QAction<sp/>*action<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QAction(title,<sp/>parent);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>action-&gt;setCheckable(checkable);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>action-&gt;setChecked(checked);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(action,<sp/>&amp;QAction::triggered,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>action,<sp/>callback]()<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QJSValue(callback).call({m_engine-&gt;toScriptValue(action)});</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>action;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">QAction<sp/>*KWin::Script::createMenu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>&amp;items,<sp/>QMenu<sp/>*parent)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!items.isArray())<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>items.property(QStringLiteral(</highlight><highlight class="stringliteral">&quot;length&quot;</highlight><highlight class="normal">)).toInt();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!length)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>QMenu<sp/>*menu<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QMenu(title,<sp/>parent);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QJSValue<sp/>value<sp/>=<sp/>items.property(QString::number(i));</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value.isObject())<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QAction<sp/>*action<sp/>=<sp/>scriptValueToAction(value,<sp/>menu))<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>menu-&gt;addAction(action);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>menu-&gt;menuAction();</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="class_k_win_1_1_declarative_script_1ad4aaeff1be15700c211a59639370080a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_declarative_script_1ad4aaeff1be15700c211a59639370080a" kindref="member">KWin::DeclarativeScript::DeclarativeScript</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>QString<sp/>scriptName,<sp/>QString<sp/><ref refid="class_k_win_1_1_abstract_script_1a89bae1f44250e540c3952bceb3f46c65" kindref="member">pluginName</ref>,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_abstract_script_1a76d921a0d06d2d9e3783739c683225d5" kindref="member">AbstractScript</ref>(id,<sp/>scriptName,<sp/><ref refid="class_k_win_1_1_abstract_script_1a89bae1f44250e540c3952bceb3f46c65" kindref="member">pluginName</ref>,<sp/>parent)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_context(new<sp/>QQmlContext(<ref refid="class_k_win_1_1_scripting" kindref="compound">Scripting</ref>::self()-&gt;declarativeScriptSharedContext(),<sp/>this))</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_component(new<sp/>QQmlComponent(<ref refid="class_k_win_1_1_scripting" kindref="compound">Scripting</ref>::self()-&gt;qmlEngine(),<sp/>this))</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>m_context-&gt;setContextProperty(QStringLiteral(</highlight><highlight class="stringliteral">&quot;KWin&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_j_s_engine_global_methods_wrapper" kindref="compound">JSEngineGlobalMethodsWrapper</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="class_k_win_1_1_declarative_script_1a45d299727e1402417c866b50be01f9b3" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_declarative_script_1a45d299727e1402417c866b50be01f9b3" kindref="member">KWin::DeclarativeScript::~DeclarativeScript</ref>()</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576" refid="class_k_win_1_1_declarative_script_1a18b787cd3ad89dd5b3e64c71f15cf1ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_declarative_script_1a18b787cd3ad89dd5b3e64c71f15cf1ce" kindref="member">KWin::DeclarativeScript::run</ref>()</highlight></codeline>
<codeline lineno="577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_abstract_script_1ac139b32bc133682b4589c4dc51434f66" kindref="member">running</ref>())<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>m_component-&gt;loadUrl(QUrl::fromLocalFile(<ref refid="class_k_win_1_1_abstract_script_1a2dcb378e96229c16daad1c4f1dc7b468" kindref="member">fileName</ref>()));</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_component-&gt;isLoading())<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(m_component,<sp/>&amp;QQmlComponent::statusChanged,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;DeclarativeScript::createComponent);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createComponent();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KWin::DeclarativeScript::createComponent()</highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_component-&gt;isError())<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_SCRIPTING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Component<sp/>failed<sp/>to<sp/>load:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_component-&gt;errors();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QObject<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>m_component-&gt;create(m_context))<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;setParent(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>setRunning(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="class_k_win_1_1_j_s_engine_global_methods_wrapper_1aa7a620aa9f819d9e2429f2acffbf0b80" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_j_s_engine_global_methods_wrapper_1aa7a620aa9f819d9e2429f2acffbf0b80" kindref="member">KWin::JSEngineGlobalMethodsWrapper::JSEngineGlobalMethodsWrapper</ref>(<ref refid="class_k_win_1_1_declarative_script" kindref="compound">KWin::DeclarativeScript</ref><sp/>*parent)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_script(parent)</highlight></codeline>
<codeline lineno="605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="class_k_win_1_1_j_s_engine_global_methods_wrapper_1a3afaf6bda1eba512517dff706e9b826b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_j_s_engine_global_methods_wrapper_1a3afaf6bda1eba512517dff706e9b826b" kindref="member">KWin::JSEngineGlobalMethodsWrapper::~JSEngineGlobalMethodsWrapper</ref>()</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="class_k_win_1_1_j_s_engine_global_methods_wrapper_1ad1a68caccb57532305c08717beaf36db" refkind="member"><highlight class="normal">QVariant<sp/><ref refid="class_k_win_1_1_j_s_engine_global_methods_wrapper_1ad1a68caccb57532305c08717beaf36db" kindref="member">KWin::JSEngineGlobalMethodsWrapper::readConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;key,<sp/>QVariant<sp/>defaultValue)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_script-&gt;config().readEntry(key,<sp/>defaultValue);</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><ref refid="class_k_win_1_1_scripting" kindref="compound">KWin::Scripting</ref><sp/>*KWin::Scripting::s_self<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="class_k_win_1_1_scripting_1a435da48783defd7960eaf079e772459a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_scripting" kindref="compound">KWin::Scripting</ref><sp/>*<ref refid="class_k_win_1_1_scripting_1a435da48783defd7960eaf079e772459a" kindref="member">KWin::Scripting::create</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!s_self);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>s_self<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Scripting(parent);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_self;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal">KWin::Scripting::Scripting(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_scriptsLock(new<sp/>QRecursiveMutex)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_qmlEngine(new<sp/>QQmlEngine(this))</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_declarativeScriptSharedContext(new<sp/>QQmlContext(m_qmlEngine,<sp/>this))</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_workspaceWrapper(new<sp/><ref refid="class_k_win_1_1_qt_script_workspace_wrapper" kindref="compound">QtScriptWorkspaceWrapper</ref>(this))</highlight></codeline>
<codeline lineno="632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>m_qmlEngine-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;_kirigamiTheme&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;KirigamiPlasmaStyle&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>m_qmlEngine-&gt;rootContext()-&gt;setContextObject(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KLocalizedQmlContext(m_qmlEngine));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>QDBusConnection::sessionBus().registerObject(QStringLiteral(</highlight><highlight class="stringliteral">&quot;/Scripting&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>QDBusConnection::ExportScriptableContents<sp/>|<sp/>QDBusConnection::ExportScriptableInvokables);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1abd94bbc1291ecb4698c459980e158ace" kindref="member">Workspace::configChanged</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_scripting_1afd37e1362c714de166990156ddf62e8a" kindref="member">Scripting::start</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" kindref="member">Workspace::self</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a40a0c2857a176b5288406b0aaa5b79d6" kindref="member">Workspace::workspaceInitialized</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_scripting_1afd37e1362c714de166990156ddf62e8a" kindref="member">Scripting::start</ref>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KWin::Scripting::init()</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;QList&lt;KWin::Output<sp/>*&gt;&gt;();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;QList&lt;KWin::Window<sp/>*&gt;&gt;();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;QList&lt;KWin::VirtualDesktop<sp/>*&gt;&gt;();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;DesktopBackgroundItem&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;DesktopBackground&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;WindowThumbnailItem&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;WindowThumbnail&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;DBusCall&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;DBusCall&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;ScreenEdgeHandler&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ScreenEdgeHandler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;ShortcutHandler&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;ShortcutHandler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;SwipeGestureHandler&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;SwipeGestureHandler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;PinchGestureHandler&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;PinchGestureHandler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;WindowModel&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;WindowModel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;WindowFilterModel&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;WindowFilterModel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;VirtualDesktopModel&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;VirtualDesktopModel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterUncreatableType&lt;KWin::QuickSceneView&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;SceneView&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>instantiate<sp/>an<sp/>object<sp/>of<sp/>type<sp/>SceneView&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterType&lt;ScriptedQuickSceneEffect&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;SceneEffect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterSingletonType&lt;DeclarativeScriptWorkspaceWrapper&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Workspace&quot;</highlight><highlight class="normal">,<sp/>[](QQmlEngine<sp/>*qmlEngine,<sp/>QJSEngine<sp/>*jsEngine)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DeclarativeScriptWorkspaceWrapper();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterSingletonInstance(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Options&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_k_win_1aacddce7916a99bb943d9071c40754c1c" kindref="member">options</ref>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterAnonymousType&lt;KConfigPropertyMap&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterAnonymousType&lt;KWin::Output&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterAnonymousType&lt;KWin::Window&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterAnonymousType&lt;KWin::VirtualDesktop&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterAnonymousType&lt;QAbstractItemModel&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterAnonymousType&lt;KWin::TileManager&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>call<sp/>the<sp/>qml<sp/>types<sp/>as<sp/>the<sp/>C++<sp/>types?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterUncreatableType&lt;KWin::CustomTile&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;CustomTile&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>objects<sp/>of<sp/>type<sp/>Tile&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>qmlRegisterUncreatableType&lt;KWin::Tile&gt;(</highlight><highlight class="stringliteral">&quot;org.kde.kwin&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Tile&quot;</highlight><highlight class="normal">,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>objects<sp/>of<sp/>type<sp/>AbstractTile&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="class_k_win_1_1_scripting_1afd37e1362c714de166990156ddf62e8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripting_1afd37e1362c714de166990156ddf62e8a" kindref="member">KWin::Scripting::start</ref>()</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>make<sp/>this<sp/>threaded<sp/>again<sp/>once<sp/>KConfigGroup<sp/>is<sp/>sufficiently<sp/>thread<sp/>safe,<sp/>bug<sp/>#305361<sp/>and<sp/>friends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>querying<sp/>for<sp/>the<sp/>services<sp/>in<sp/>a<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_future_watcher" kindref="compound">QFutureWatcher&lt;LoadScriptList&gt;</ref><sp/>*watcher<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_future_watcher" kindref="compound">QFutureWatcher&lt;LoadScriptList&gt;</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(watcher,<sp/>&amp;<ref refid="class_q_future_watcher" kindref="compound">QFutureWatcher&lt;LoadScriptList&gt;::finished</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;Scripting::slotScriptsQueried);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>watcher-&gt;setFuture(QtConcurrent::run(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;KWin::Scripting::queryScriptsToLoad,<sp/>pluginStates,<sp/>offers));</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scripting_8h_1afb5c13d7e637b8983a9e532a0b6dcbfe" kindref="member">LoadScriptList</ref><sp/>scriptsToLoad<sp/>=<sp/>queryScriptsToLoad();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(LoadScriptList::const_iterator<sp/>it<sp/>=<sp/>scriptsToLoad.constBegin();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>scriptsToLoad.constEnd();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;first)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_scripting_1adb86674cfb829b7b89bc88556db9a29f" kindref="member">loadScript</ref>(it-&gt;second.first,<sp/>it-&gt;second.second);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_scripting_1acb0eac88b1d79c1718eb83d301493d7a" kindref="member">loadDeclarativeScript</ref>(it-&gt;second.first,<sp/>it-&gt;second.second);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>runScripts();</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><ref refid="scripting_8h_1afb5c13d7e637b8983a9e532a0b6dcbfe" kindref="member">LoadScriptList</ref><sp/>KWin::Scripting::queryScriptsToLoad()</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>KSharedConfig::Ptr<sp/>_config<sp/>=<sp/>kwinApp()-&gt;config();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_started<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_started)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_config-&gt;reparseConfiguration();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_started<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>QMap&lt;QString,<sp/>QString&gt;<sp/>pluginStates<sp/>=<sp/>KConfigGroup(_config,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;Plugins&quot;</highlight><highlight class="normal">)).entryMap();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>scriptFolders{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kwin-wayland/scripts/&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kwin/scripts/&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scripting_8h_1afb5c13d7e637b8983a9e532a0b6dcbfe" kindref="member">LoadScriptList</ref><sp/>scriptsToLoad;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;scriptFolder<sp/>:<sp/>scriptFolders)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>offers<sp/>=<sp/>KPackage::PackageLoader::self()-&gt;listPackages(QStringLiteral(</highlight><highlight class="stringliteral">&quot;KWin/Script&quot;</highlight><highlight class="normal">),<sp/>scriptFolder);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KPluginMetaData<sp/>&amp;service<sp/>:<sp/>offers)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>value<sp/>=<sp/>pluginStates.value(service.pluginId()<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal">),<sp/>QString());</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled<sp/>=<sp/>value.isNull()<sp/>?<sp/>service.isEnabledByDefault()<sp/>:<sp/>QVariant(value).toBool();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>javaScript<sp/>=<sp/>service.value(QStringLiteral(</highlight><highlight class="stringliteral">&quot;X-Plasma-API&quot;</highlight><highlight class="normal">))<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;javascript&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>declarativeScript<sp/>=<sp/>service.value(QStringLiteral(</highlight><highlight class="stringliteral">&quot;X-Plasma-API&quot;</highlight><highlight class="normal">))<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;declarativescript&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!javaScript<sp/>&amp;&amp;<sp/>!declarativeScript)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isScriptLoaded(service.pluginId()))<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unload<sp/>the<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unloadScript(service.pluginId());</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>pluginName<sp/>=<sp/>service.pluginId();</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>file<sp/>we<sp/>want<sp/>to<sp/>load<sp/>depends<sp/>on<sp/>the<sp/>specified<sp/>API.<sp/>We<sp/>could<sp/>check<sp/>if<sp/>one<sp/>or<sp/>the<sp/>other<sp/>file<sp/>exists,<sp/>but<sp/>that<sp/>is<sp/>more<sp/>error<sp/>prone<sp/>and<sp/>causes<sp/>IO<sp/>overhead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>relScriptPath<sp/>=<sp/>scriptFolder<sp/>+<sp/>pluginName<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;/contents/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>(javaScript<sp/>?<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;code/main.js&quot;</highlight><highlight class="normal">)<sp/>:<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;ui/main.qml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>file<sp/>=<sp/>QStandardPaths::locate(QStandardPaths::GenericDataLocation,<sp/>relScriptPath);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(KWIN_SCRIPTING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>script<sp/>file<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pluginName;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptsToLoad<sp/>&lt;&lt;<sp/>qMakePair(javaScript,<sp/>qMakePair(file,<sp/>pluginName));</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scriptsToLoad;</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KWin::Scripting::slotScriptsQueried()</highlight></codeline>
<codeline lineno="751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>QFutureWatcher&lt;LoadScriptList&gt;<sp/>*watcher<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">QFutureWatcher&lt;LoadScriptList&gt;<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sender());</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!watcher)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slot<sp/>invoked<sp/>not<sp/>from<sp/>a<sp/>FutureWatcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scripting_8h_1afb5c13d7e637b8983a9e532a0b6dcbfe" kindref="member">LoadScriptList</ref><sp/>scriptsToLoad<sp/>=<sp/>watcher-&gt;result();</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(LoadScriptList::const_iterator<sp/>it<sp/>=<sp/>scriptsToLoad.constBegin();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>scriptsToLoad.constEnd();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;first)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadScript(it-&gt;second.first,<sp/>it-&gt;second.second);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadDeclarativeScript(it-&gt;second.first,<sp/>it-&gt;second.second);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>runScripts();</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>watcher-&gt;deleteLater();</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773" refid="class_k_win_1_1_scripting_1a4e2286c762b2e3294fed7cbcfc46453b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripting_1a4e2286c762b2e3294fed7cbcfc46453b" kindref="member">KWin::Scripting::isScriptLoaded</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pluginName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="774"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripting_1a157a8abdd6f6b334e80f9cd2ba697494" kindref="member">findScript</ref>(pluginName)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778" refid="class_k_win_1_1_scripting_1a157a8abdd6f6b334e80f9cd2ba697494" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_abstract_script" kindref="compound">KWin::AbstractScript</ref><sp/>*<ref refid="class_k_win_1_1_scripting_1a157a8abdd6f6b334e80f9cd2ba697494" kindref="member">KWin::Scripting::findScript</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pluginName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="779"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>QMutexLocker<sp/>locker(m_scriptsLock.get());</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_abstract_script" kindref="compound">AbstractScript</ref><sp/>*script<sp/>:<sp/>std::as_const(scripts))<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script-&gt;pluginName()<sp/>==<sp/>pluginName)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>script;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="class_k_win_1_1_scripting_1a86614b2061d94f0aa87c28ffc9f790da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripting_1a86614b2061d94f0aa87c28ffc9f790da" kindref="member">KWin::Scripting::unloadScript</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pluginName)</highlight></codeline>
<codeline lineno="790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>QMutexLocker<sp/>locker(m_scriptsLock.get());</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_abstract_script" kindref="compound">AbstractScript</ref><sp/>*script<sp/>:<sp/>std::as_const(scripts))<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script-&gt;pluginName()<sp/>==<sp/>pluginName)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script-&gt;deleteLater();</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KWin::Scripting::runScripts()</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>QMutexLocker<sp/>locker(m_scriptsLock.get());</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>scripts.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scripts.at(i)-&gt;run();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="class_k_win_1_1_scripting_1ae71adccb69f6bedc04645d52245b869a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripting_1ae71adccb69f6bedc04645d52245b869a" kindref="member">KWin::Scripting::scriptDestroyed</ref>(QObject<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>QMutexLocker<sp/>locker(m_scriptsLock.get());</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>scripts.removeAll(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_script" kindref="compound">KWin::Script</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815" refid="class_k_win_1_1_scripting_1adb86674cfb829b7b89bc88556db9a29f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripting_1adb86674cfb829b7b89bc88556db9a29f" kindref="member">KWin::Scripting::loadScript</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;filePath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pluginName)</highlight></codeline>
<codeline lineno="816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>QMutexLocker<sp/>locker(m_scriptsLock.get());</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_scripting_1a4e2286c762b2e3294fed7cbcfc46453b" kindref="member">isScriptLoaded</ref>(pluginName))<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>scripts.size();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_script" kindref="compound">KWin::Script</ref><sp/>*script<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_script" kindref="compound">KWin::Script</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>filePath,<sp/>pluginName,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(script,<sp/>&amp;QObject::destroyed,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_scripting_1ae71adccb69f6bedc04645d52245b869a" kindref="member">Scripting::scriptDestroyed</ref>);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>scripts.append(script);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828" refid="class_k_win_1_1_scripting_1acb0eac88b1d79c1718eb83d301493d7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_scripting_1acb0eac88b1d79c1718eb83d301493d7a" kindref="member">KWin::Scripting::loadDeclarativeScript</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;filePath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pluginName)</highlight></codeline>
<codeline lineno="829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>QMutexLocker<sp/>locker(m_scriptsLock.get());</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_scripting_1a4e2286c762b2e3294fed7cbcfc46453b" kindref="member">isScriptLoaded</ref>(pluginName))<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>scripts.size();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_declarative_script" kindref="compound">KWin::DeclarativeScript</ref><sp/>*script<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_declarative_script" kindref="compound">KWin::DeclarativeScript</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>filePath,<sp/>pluginName,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(script,<sp/>&amp;QObject::destroyed,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_scripting_1ae71adccb69f6bedc04645d52245b869a" kindref="member">Scripting::scriptDestroyed</ref>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>scripts.append(script);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="class_k_win_1_1_scripting_1a82be76e174d5f13e24ee8751ef17fc56" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_scripting_1a82be76e174d5f13e24ee8751ef17fc56" kindref="member">KWin::Scripting::~Scripting</ref>()</highlight></codeline>
<codeline lineno="842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>QDBusConnection::sessionBus().unregisterObject(QStringLiteral(</highlight><highlight class="stringliteral">&quot;/Scripting&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>s_self<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="class_k_win_1_1_scripting_1aac1399c98e9a5912716fedbe711eaca4" refkind="member"><highlight class="normal">QList&lt;QAction<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_scripting_1aac1399c98e9a5912716fedbe711eaca4" kindref="member">KWin::Scripting::actionsForUserActionMenu</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref><sp/>*c,<sp/>QMenu<sp/>*parent)</highlight></codeline>
<codeline lineno="848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QAction<sp/>*&gt;<sp/>actions;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_abstract_script" kindref="compound">AbstractScript</ref><sp/>*s<sp/>:<sp/>std::as_const(scripts))<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Allow<sp/>declarative<sp/>scripts<sp/>to<sp/>add<sp/>their<sp/>own<sp/>user<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_script" kindref="compound">Script</ref><sp/>*script<sp/>=<sp/>qobject_cast&lt;Script<sp/>*&gt;(s))<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions<sp/>&lt;&lt;<sp/>script-&gt;actionsForUserActionMenu(c,<sp/>parent);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>actions;</highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_scripting.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/scripting/scripting.cpp"/>
  </compounddef>
</doxygen>
