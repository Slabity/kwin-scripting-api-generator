<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="drm__output_8cpp" kind="file" language="C++">
    <compoundname>drm_output.cpp</compoundname>
    <includes refid="drm__output_8h" local="yes">drm_output.h</includes>
    <includes refid="drm__backend_8h" local="yes">drm_backend.h</includes>
    <includes refid="drm__connector_8h" local="yes">drm_connector.h</includes>
    <includes refid="drm__crtc_8h" local="yes">drm_crtc.h</includes>
    <includes refid="drm__gpu_8h" local="yes">drm_gpu.h</includes>
    <includes refid="drm__pipeline_8h" local="yes">drm_pipeline.h</includes>
    <includes refid="brightnessdevice_8h" local="yes">core/brightnessdevice.h</includes>
    <includes refid="colortransformation_8h" local="yes">core/colortransformation.h</includes>
    <includes refid="iccprofile_8h" local="yes">core/iccprofile.h</includes>
    <includes refid="outputconfiguration_8h" local="yes">core/outputconfiguration.h</includes>
    <includes refid="renderbackend_8h" local="yes">core/renderbackend.h</includes>
    <includes refid="renderloop_8h" local="yes">core/renderloop.h</includes>
    <includes refid="renderloop__p_8h" local="yes">core/renderloop_p.h</includes>
    <includes refid="session_8h" local="yes">core/session.h</includes>
    <includes refid="drm__layer_8h" local="yes">drm_layer.h</includes>
    <includes refid="drm__logging_8h" local="yes">drm_logging.h</includes>
    <includes refid="kernel_8h" local="yes">utils/kernel.h</includes>
    <includes local="no">QCryptographicHash</includes>
    <includes local="no">QMatrix4x4</includes>
    <includes local="no">QPainter</includes>
    <includes local="no">cerrno</includes>
    <includes local="no">drm_fourcc.h</includes>
    <includes local="no">libdrm/drm_mode.h</includes>
    <includes local="no">xf86drm.h</includes>
    <includes local="yes">moc_drm_output.cpp</includes>
    <incdepgraph>
      <node id="3">
        <label>drm_abstract_output.h</label>
        <link refid="drm__abstract__output_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>drm_backend.h</label>
        <link refid="drm__backend_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>drm_blob.h</label>
        <link refid="drm__blob_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>drm_buffer.h</label>
        <link refid="drm__buffer_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>drm_colorop.h</label>
        <link refid="drm__colorop_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>drm_connector.h</label>
        <link refid="drm__connector_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>drm_crtc.h</label>
        <link refid="drm__crtc_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>drm_gpu.h</label>
        <link refid="drm__gpu_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>drm_layer.h</label>
        <link refid="drm__layer_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>drm_logging.h</label>
        <link refid="drm__logging_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>drm_object.h</label>
        <link refid="drm__object_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/backends/drm/drm_output.cpp</label>
        <link refid="drm__output_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>drm_output.h</label>
        <link refid="drm__output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>drm_pipeline.h</label>
        <link refid="drm__pipeline_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>drm_plane.h</label>
        <link refid="drm__plane_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>drm_pointer.h</label>
        <link refid="drm__pointer_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>drm_property.h</label>
        <link refid="drm__property_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>core/brightnessdevice.h</label>
        <link refid="brightnessdevice_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>colorlut3d.h</label>
        <link refid="colorlut3d_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>core/colorpipeline.h</label>
        <link refid="colorpipeline_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>colortransformation.h</label>
        <link refid="colortransformation_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>core/drmdevice.h</label>
        <link refid="drmdevice_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>core/graphicsbuffer.h</label>
        <link refid="graphicsbuffer_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>graphicsbufferallocator.h</label>
        <link refid="graphicsbufferallocator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>core/iccprofile.h</label>
        <link refid="iccprofile_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>core/outputconfiguration.h</label>
        <link refid="outputconfiguration_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>core/outputlayer.h</label>
        <link refid="outputlayer_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>renderjournal.h</label>
        <link refid="renderjournal_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>core/renderloop_p.h</label>
        <link refid="renderloop__p_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>core/session.h</label>
        <link refid="session_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>utils/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>QByteArray</label>
      </node>
      <node id="9">
        <label>QCoreApplication</label>
      </node>
      <node id="83">
        <label>QCryptographicHash</label>
      </node>
      <node id="22">
        <label>QDebug</label>
      </node>
      <node id="10">
        <label>QImage</label>
      </node>
      <node id="20">
        <label>QList</label>
      </node>
      <node id="34">
        <label>QLoggingCategory</label>
      </node>
      <node id="26">
        <label>QMap</label>
      </node>
      <node id="18">
        <label>QMatrix4x4</label>
      </node>
      <node id="14">
        <label>QObject</label>
      </node>
      <node id="84">
        <label>QPainter</label>
      </node>
      <node id="11">
        <label>QPoint</label>
      </node>
      <node id="38">
        <label>QPointer</label>
      </node>
      <node id="23">
        <label>QRect</label>
      </node>
      <node id="80">
        <label>QRegion</label>
      </node>
      <node id="21">
        <label>QSize</label>
      </node>
      <node id="44">
        <label>QSocketNotifier</label>
      </node>
      <node id="60">
        <label>QString</label>
      </node>
      <node id="39">
        <label>QTimer</label>
      </node>
      <node id="24">
        <label>QUuid</label>
      </node>
      <node id="12">
        <label>QVariant</label>
      </node>
      <node id="53">
        <label>QVector</label>
      </node>
      <node id="13">
        <label>QVector2D</label>
      </node>
      <node id="85">
        <label>cerrno</label>
      </node>
      <node id="40">
        <label>chrono</label>
      </node>
      <node id="8">
        <label>config-kwin.h</label>
      </node>
      <node id="56">
        <label>drm.h</label>
      </node>
      <node id="86">
        <label>drm_fourcc.h</label>
      </node>
      <node id="43">
        <label>epoxy/egl.h</label>
      </node>
      <node id="75">
        <label>expected</label>
      </node>
      <node id="70">
        <label>fstream</label>
      </node>
      <node id="5">
        <label>kwin_export.h</label>
      </node>
      <node id="87">
        <label>libdrm/drm_mode.h</label>
      </node>
      <node id="30">
        <label>memory</label>
      </node>
      <node id="88">
        <label>moc_drm_output.cpp</label>
      </node>
      <node id="17">
        <label>optional</label>
      </node>
      <node id="72">
        <label>qobject.h</label>
      </node>
      <node id="36">
        <label>qobjectdefs.h</label>
      </node>
      <node id="57">
        <label>span</label>
      </node>
      <node id="48">
        <label>stdint.h</label>
      </node>
      <node id="45">
        <label>sys/types.h</label>
      </node>
      <node id="82">
        <label>sys/utsname.h</label>
      </node>
      <node id="55">
        <label>tuple</label>
      </node>
      <node id="64">
        <label>utility</label>
      </node>
      <node id="27">
        <label>vector</label>
      </node>
      <node id="31">
        <label>xf86drm.h</label>
      </node>
      <node id="28">
        <label>xf86drmMode.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2015<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__output_8h" kindref="compound">drm_output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__backend_8h" kindref="compound">drm_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__connector_8h" kindref="compound">drm_connector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__crtc_8h" kindref="compound">drm_crtc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__gpu_8h" kindref="compound">drm_gpu.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__pipeline_8h" kindref="compound">drm_pipeline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="brightnessdevice_8h" kindref="compound">core/brightnessdevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colortransformation_8h" kindref="compound">core/colortransformation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="iccprofile_8h" kindref="compound">core/iccprofile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputconfiguration_8h" kindref="compound">core/outputconfiguration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderbackend_8h" kindref="compound">core/renderbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderloop_8h" kindref="compound">core/renderloop.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderloop__p_8h" kindref="compound">core/renderloop_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="session_8h" kindref="compound">core/session.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__layer_8h" kindref="compound">drm_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drm__logging_8h" kindref="compound">drm_logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel_8h" kindref="compound">utils/kernel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QCryptographicHash&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QMatrix4x4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPainter&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>c++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cerrno&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>drm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drm_fourcc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libdrm/drm_mode.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xf86drm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_disableTripleBufferingSet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_disableTripleBuffering<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_DRM_DISABLE_TRIPLE_BUFFERING&quot;</highlight><highlight class="normal">,<sp/>&amp;s_disableTripleBufferingSet)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_k_win_1_1_drm_output_1a23b323af5a2e35735fa1dde3fd2d49b3" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_output_1a23b323af5a2e35735fa1dde3fd2d49b3" kindref="member">DrmOutput::DrmOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;DrmConnector&gt;<sp/>&amp;conn,<sp/><ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref><sp/>*<ref refid="class_k_win_1_1_drm_output_1a735814a691bf95de5a566cc0b70d4c56" kindref="member">pipeline</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_gpu(conn-&gt;gpu())</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_pipeline(<ref refid="class_k_win_1_1_drm_output_1a735814a691bf95de5a566cc0b70d4c56" kindref="member">pipeline</ref>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_connector(conn)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;setOutput(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_gpu-&gt;atomicModeSetting()<sp/>&amp;&amp;<sp/>((!s_disableTripleBufferingSet<sp/>&amp;&amp;<sp/>!m_gpu-&gt;isNVidia())<sp/>||<sp/>(s_disableTripleBufferingSet<sp/>&amp;&amp;<sp/>!s_disableTripleBuffering)))<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_renderLoop-&gt;setMaxPendingFrameCount(2);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_edid" kindref="compound">Edid</ref><sp/>*<ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref><sp/>=<sp/>m_connector-&gt;edid();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" kindref="member">setInformation</ref>(<ref refid="struct_k_win_1_1_output_1_1_information" kindref="compound">Information</ref>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/>m_connector-&gt;connectorName(),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.manufacturer<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>-&gt;manufacturerString(),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.model<sp/>=<sp/>m_connector-&gt;modelName(),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.serialNumber<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>-&gt;serialNumber(),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.eisaId<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>-&gt;eisaId(),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSize<sp/>=<sp/>m_connector-&gt;physicalSize(),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>*<ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.subPixel<sp/>=<sp/>m_connector-&gt;subpixel(),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.capabilities<sp/>=<sp/>computeCapabilities(),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.panelOrientation<sp/>=<sp/>m_connector-&gt;panelOrientation.isValid()<sp/>?<sp/><ref refid="class_k_win_1_1_drm_connector_1add86b4a6d1d3b13250263a7a023a0929" kindref="member">DrmConnector::toKWinTransform</ref>(m_connector-&gt;panelOrientation.enumValue())<sp/>:<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Normal</ref>,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/>m_connector-&gt;isInternal(),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.nonDesktop<sp/>=<sp/>m_connector-&gt;isNonDesktop(),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>m_connector-&gt;mstPath(),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.maxPeakBrightness<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>-&gt;desiredMaxLuminance(),</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.maxAverageBrightness<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>-&gt;desiredMaxFrameAverageLuminance(),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.minBrightness<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>-&gt;desiredMinLuminance(),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_output_1a3da8ac4978495b21e36c80c92f8ecfaa" kindref="member">updateConnectorProperties</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>m_turnOffTimer.setSingleShot(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>m_turnOffTimer.setInterval(<ref refid="class_k_win_1_1_output_1a7f6c9d10afb24eb2bb5183cb5dcbe61c" kindref="member">dimAnimationTime</ref>());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(&amp;m_turnOffTimer,<sp/>&amp;QTimer::timeout,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!setDrmDpmsMode(<ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1ad15305d7a4e34e02489c74a5ef542f36" kindref="member">DpmsMode::Off</ref>))<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>of<sp/>failure,<sp/>undo<sp/>aboutToTurnOff()<sp/>from<sp/>setDpmsMode()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_1ade80d75bdff0b3a8d98dc9b63f2ad179" kindref="member">wakeUp</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sleepInhibitor.reset();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_k_win_1_1_drm_output_1a673ef41baba3e76f4c7d40f7437e0490" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1a673ef41baba3e76f4c7d40f7437e0490" kindref="member">DrmOutput::addLeaseObjects</ref>(QList&lt;uint32_t&gt;<sp/>&amp;objectList)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pipeline-&gt;crtc())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>lease<sp/>connector:<sp/>No<sp/>suitable<sp/>crtc<sp/>available&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;adding<sp/>connector&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_pipeline-&gt;connector()-&gt;id()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;to<sp/>lease&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>objectList<sp/>&lt;&lt;<sp/>m_pipeline-&gt;connector()-&gt;id();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>objectList<sp/>&lt;&lt;<sp/>m_pipeline-&gt;crtc()-&gt;id();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pipeline-&gt;crtc()-&gt;primaryPlane())<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectList<sp/>&lt;&lt;<sp/>m_pipeline-&gt;crtc()-&gt;primaryPlane()-&gt;id();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_k_win_1_1_drm_output_1aff14ff632ab453c3f9631d73b5799ccf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1aff14ff632ab453c3f9631d73b5799ccf" kindref="member">DrmOutput::leased</ref>(<ref refid="class_k_win_1_1_drm_lease" kindref="compound">DrmLease</ref><sp/>*<ref refid="class_k_win_1_1_drm_output_1abdc19a0be12ee192467510247f438b78" kindref="member">lease</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lease<sp/>=<sp/><ref refid="class_k_win_1_1_drm_output_1abdc19a0be12ee192467510247f438b78" kindref="member">lease</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_k_win_1_1_drm_output_1a337c3a93d37ac90393a794416d2c9af3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1a337c3a93d37ac90393a794416d2c9af3" kindref="member">DrmOutput::leaseEnded</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ended<sp/>lease<sp/>for<sp/>connector&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_pipeline-&gt;connector()-&gt;id();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lease<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_k_win_1_1_drm_output_1abdc19a0be12ee192467510247f438b78" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_lease" kindref="compound">DrmLease</ref><sp/>*<ref refid="class_k_win_1_1_drm_output_1abdc19a0be12ee192467510247f438b78" kindref="member">DrmOutput::lease</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="113"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lease;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_k_win_1_1_drm_output_1afdb2fa16d424cc39bd1de0285c4ac4b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1afdb2fa16d424cc39bd1de0285c4ac4b0" kindref="member">DrmOutput::shouldDisableCursorPlane</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="118"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>kernel<sp/>rejects<sp/>async<sp/>commits<sp/>that<sp/>change<sp/>anything<sp/>but<sp/>the<sp/>primary<sp/>plane<sp/>FB_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>disables<sp/>the<sp/>hardware<sp/>cursor,<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>interfere<sp/>with<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_desiredPresentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a24aa4117da86c41684ad25742832dfa6" kindref="member">PresentationMode::Async</ref><sp/>||<sp/>m_desiredPresentationMode<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>m_pipeline-&gt;amdgpuVrrWorkaroundActive();</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_k_win_1_1_drm_output_1a9d0904c953bdbeb1152547cc3b69becd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1a9d0904c953bdbeb1152547cc3b69becd" kindref="member">DrmOutput::updateCursorLayer</ref>(std::optional&lt;std::chrono::nanoseconds&gt;<sp/>allowedVrrDelay)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pipeline-&gt;gpu()-&gt;atomicModeSetting()<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_drm_output_1afdb2fa16d424cc39bd1de0285c4ac4b0" kindref="member">shouldDisableCursorPlane</ref>()<sp/>&amp;&amp;<sp/>m_pipeline-&gt;cursorLayer()<sp/>&amp;&amp;<sp/>m_pipeline-&gt;cursorLayer()-&gt;isEnabled())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pipeline-&gt;updateCursor(allowedVrrDelay);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">QList&lt;std::shared_ptr&lt;OutputMode&gt;&gt;<sp/>DrmOutput::getModes()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="134"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>drmModes<sp/>=<sp/>m_pipeline-&gt;<ref refid="class_k_win_1_1_drm_pipeline_1a0a1be2bd5b198c9e965f5a20dc4dcb05" kindref="member">connector</ref>()-&gt;<ref refid="class_k_win_1_1_drm_connector_1ae65120d663d5583e69cbc6c826bd33c8" kindref="member">modes</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;std::shared_ptr&lt;OutputMode&gt;&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.reserve(drmModes.count());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;drmMode<sp/>:<sp/>drmModes)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.append(drmMode);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrmOutput::setDpmsMode(DpmsMode<sp/>mode)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/><ref refid="class_k_win_1_1_output_1af206c9aa8a7591fbcfe7e9aaeb9ce57e" kindref="member">dpmsMode</ref>())<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1ad15305d7a4e34e02489c74a5ef542f36" kindref="member">DpmsMode::Off</ref>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_turnOffTimer.isActive())<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_output_1a7d807dad8d601f7880a32b50ef66aaf0" kindref="member">updateDpmsMode</ref>(<ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1ad6aaff92576b8b0f01acf319e60d60b6" kindref="member">DpmsMode::AboutToTurnOff</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_1ac3b7a29fe56366ce6b96f3e6609ca455" kindref="member">aboutToTurnOff</ref>(std::chrono::milliseconds(m_turnOffTimer.interval()));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_turnOffTimer.start();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sleepInhibitor<sp/>=<sp/>m_gpu-&gt;platform()-&gt;session()-&gt;delaySleep(</highlight><highlight class="stringliteral">&quot;dpms<sp/>animation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_turnOffTimer.isActive())<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_output_1a7d807dad8d601f7880a32b50ef66aaf0" kindref="member">updateDpmsMode</ref>(mode);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_turnOffTimer.stop();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_1ade80d75bdff0b3a8d98dc9b63f2ad179" kindref="member">wakeUp</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setDrmDpmsMode(mode))<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_1ade80d75bdff0b3a8d98dc9b63f2ad179" kindref="member">wakeUp</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sleepInhibitor.reset();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DrmOutput::setDrmDpmsMode(DpmsMode<sp/>mode)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_output_1ae3ba33a8ace198be4ba398ca4c691689" kindref="member">isEnabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active<sp/>=<sp/>mode<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1a521c36a31c2762741cf0f8890cbe05e3" kindref="member">DpmsMode::On</ref><sp/>||<sp/>mode<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1ad6aaff92576b8b0f01acf319e60d60b6" kindref="member">DpmsMode::AboutToTurnOff</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isActive<sp/>=<sp/><ref refid="class_k_win_1_1_output_1af206c9aa8a7591fbcfe7e9aaeb9ce57e" kindref="member">dpmsMode</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1a521c36a31c2762741cf0f8890cbe05e3" kindref="member">DpmsMode::On</ref><sp/>||<sp/><ref refid="class_k_win_1_1_output_1af206c9aa8a7591fbcfe7e9aaeb9ce57e" kindref="member">dpmsMode</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1ad6aaff92576b8b0f01acf319e60d60b6" kindref="member">DpmsMode::AboutToTurnOff</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(active<sp/>==<sp/>isActive)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_output_1a7d807dad8d601f7880a32b50ef66aaf0" kindref="member">updateDpmsMode</ref>(mode);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;setActive(active);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1ad2120a27a0a06b86f4b03cd6c912b430" kindref="member">DrmPipeline::commitPipelines</ref>({m_pipeline},<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca4cc63495694df017edaa8cca4a578e3f" kindref="member">DrmPipeline::CommitMode::TestAllowModeset</ref>)<sp/>==<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmPipeline::Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;applyPendingChanges();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_output_1a7d807dad8d601f7880a32b50ef66aaf0" kindref="member">updateDpmsMode</ref>(mode);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(active)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_abstract_output_1acac3691c1006e96118e7e061176321cd" kindref="member">m_renderLoop</ref>-&gt;uninhibit();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_abstract_output_1acac3691c1006e96118e7e061176321cd" kindref="member">m_renderLoop</ref>-&gt;scheduleRepaint();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-set<sp/>KMS<sp/>color<sp/>pipeline<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tryKmsColorOffloading();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_abstract_output_1acac3691c1006e96118e7e061176321cd" kindref="member">m_renderLoop</ref>-&gt;inhibit();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>renderloop<sp/>inhibited,<sp/>there<sp/>won&apos;t<sp/>be<sp/>a<sp/>new<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>trigger<sp/>this<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gpu-&gt;maybeModeset(m_pipeline,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_DRM)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>dpms<sp/>mode<sp/>failed!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;revertPendingChanges();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="namespace_k_win_1a6754d07a114cd8f364e86e4fe5ad53c5" refkind="member"><highlight class="normal">DrmPlane::Transformations<sp/><ref refid="namespace_k_win_1a6754d07a114cd8f364e86e4fe5ad53c5" kindref="member">outputToPlaneTransform</ref>(<ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/>transform)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">PlaneTrans<sp/>=<sp/><ref refid="class_k_win_1_1_drm_plane_1acac567f6431e9bfcabfe8d309166c9eb" kindref="member">DrmPlane::Transformation</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(transform.<ref refid="class_k_win_1_1_output_transform_1a616973bbf05f161040b6cfbaec44f0a7" kindref="member">kind</ref>())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Normal</ref>:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PlaneTrans::Rotate0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a99ce33d2be6b6fc0b62f75c3cf2e0d92" kindref="member">OutputTransform::FlipX</ref>:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PlaneTrans::ReflectX<sp/>|<sp/>PlaneTrans::Rotate0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Rotate90</ref>:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PlaneTrans::Rotate90;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7afc73240de152f39a98729840eec175eb" kindref="member">OutputTransform::FlipX90</ref>:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PlaneTrans::ReflectX<sp/>|<sp/>PlaneTrans::Rotate90;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a81855b733eee5226c36b414b06c62d0d" kindref="member">OutputTransform::Rotate180</ref>:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PlaneTrans::Rotate180;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3e8998b4b9987dd309ca4687e8c34703" kindref="member">OutputTransform::FlipX180</ref>:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PlaneTrans::ReflectX<sp/>|<sp/>PlaneTrans::Rotate180;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a9516f7c7bb3dd6677e50c6bc4bb18722" kindref="member">OutputTransform::Rotate270</ref>:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PlaneTrans::Rotate270;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a37f341a971fe7820b815c75c39d24b31" kindref="member">OutputTransform::FlipX270</ref>:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PlaneTrans::ReflectX<sp/>|<sp/>PlaneTrans::Rotate270;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_UNREACHABLE();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="class_k_win_1_1_drm_output_1a3da8ac4978495b21e36c80c92f8ecfaa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1a3da8ac4978495b21e36c80c92f8ecfaa" kindref="member">DrmOutput::updateConnectorProperties</ref>()</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>updateInformation();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/>next<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c4a6865c59d30418b88eea85d752ebd" kindref="member">modes</ref><sp/>=<sp/>getModes();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>mode<sp/>needs<sp/>to<sp/>be<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref><sp/>=<sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c4a6865c59d30418b88eea85d752ebd" kindref="member">modes</ref>.constFirst();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c4a6865c59d30418b88eea85d752ebd" kindref="member">modes</ref>.contains(next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref>))<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref>-&gt;setRemoved();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c4a6865c59d30418b88eea85d752ebd" kindref="member">modes</ref>.push_front(next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(next);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_allowColorspaceIntel<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_DRM_ALLOW_INTEL_COLORSPACE&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s_allowColorspaceNVidia<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_DRM_ALLOW_NVIDIA_COLORSPACE&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">Output::Capabilities<sp/>DrmOutput::computeCapabilities()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="250"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>Capabilities<sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba1ff6c6a5c838a0a469f7399750739d77" kindref="member">Capability::Dpms</ref><sp/>|<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba322ae772348bc17fc5df99671b1eddd5" kindref="member">Capability::IccProfile</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;overscan.isValid()<sp/>||<sp/>m_connector-&gt;underscan.isValid())<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>|=<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba6eacaa4297544d969196ada558d13d48" kindref="member">Capability::Overscan</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;vrrCapable.isValid()<sp/>&amp;&amp;<sp/>m_connector-&gt;vrrCapable.value())<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>|=<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba3a394d060d89a636b17ed1b0245e451e" kindref="member">Capability::Vrr</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_gpu-&gt;asyncPageflipSupported())<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>|=<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1ababc97e17938444d61093d256d32a62342" kindref="member">Capability::Tearing</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;broadcastRGB.isValid())<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>|=<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba7f8846e7bd3db90c8f9ad960057cf88c" kindref="member">Capability::RgbRange</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;colorspace.isValid()<sp/>&amp;&amp;<sp/>(m_connector-&gt;colorspace.hasEnum(<ref refid="class_k_win_1_1_drm_connector_1a0f6c1df77081a8760cac70cce2e2d8d7afe4a585d94741421927ee1ed38e64fa1" kindref="member">DrmConnector::Colorspace::BT2020_RGB</ref>)<sp/>||<sp/>m_connector-&gt;colorspace.hasEnum(<ref refid="class_k_win_1_1_drm_connector_1a0f6c1df77081a8760cac70cce2e2d8d7acf418952f597e2db7e7bb7a430453cda" kindref="member">DrmConnector::Colorspace::BT2020_YCC</ref>))<sp/>&amp;&amp;<sp/>m_connector-&gt;edid()-&gt;supportsBT2020())<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowColorspace<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_gpu-&gt;isI915())<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowColorspace<sp/>&amp;=<sp/>s_allowColorspaceIntel<sp/>||<sp/>linuxKernelVersion()<sp/>&gt;=<sp/>Version(6,<sp/>11);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_gpu-&gt;isNVidia())<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowColorspace<sp/>&amp;=<sp/>s_allowColorspaceNVidia<sp/>||<sp/>m_gpu-&gt;nvidiaDriverVersion()<sp/>&gt;=<sp/>Version(565,<sp/>57,<sp/>1);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allowColorspace)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>|=<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba49f9141759924af3a3ce27fda67567f4" kindref="member">Capability::WideColorGamut</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;hdrMetadata.isValid()<sp/>&amp;&amp;<sp/>m_connector-&gt;edid()-&gt;supportsPQ()<sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>&amp;<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba49f9141759924af3a3ce27fda67567f4" kindref="member">Capability::WideColorGamut</ref>))<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>|=<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abaa50b1086d53490c37d64866a7e0e19bc" kindref="member">Capability::HighDynamicRange</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;isInternal())<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>only<sp/>set<sp/>this<sp/>if<sp/>an<sp/>orientation<sp/>sensor<sp/>is<sp/>available?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>|=<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abaaf4ca6e0ec410aea5f5456336daf7685" kindref="member">Capability::AutoRotation</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.highDynamicRange<sp/>||<sp/><ref refid="class_k_win_1_1_output_1ac236c1f3abd3fd913682c0ae7ca10ef0" kindref="member">m_brightnessDevice</ref><sp/>||<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.allowSdrSoftwareBrightness)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>|=<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abaea7591eb886897c4205884f6b868ee37" kindref="member">Capability::BrightnessControl</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_connector-&gt;edid()-&gt;isValid()<sp/>&amp;&amp;<sp/>m_connector-&gt;edid()-&gt;colorimetry().has_value())<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref><sp/>|=<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abace26d0fe857fe87595eb5d0ce0ac6bfa" kindref="member">Capability::BuiltInColorProfile</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrmOutput::updateInformation()</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>all<sp/>changes<sp/>are<sp/>currently<sp/>handled<sp/>by<sp/>the<sp/>rest<sp/>of<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>limit<sp/>the<sp/>changes<sp/>to<sp/>what&apos;s<sp/>verified<sp/>to<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Edid<sp/>*<ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref><sp/>=<sp/>m_connector-&gt;edid();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_information" kindref="compound">Information</ref><sp/>nextInfo<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ad75806b23fa7bd8bfacd2bb667d8d542" kindref="member">m_information</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>nextInfo.capabilities<sp/>=<sp/>computeCapabilities();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>nextInfo.maxPeakBrightness<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>-&gt;desiredMaxLuminance();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>nextInfo.maxAverageBrightness<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>-&gt;desiredMaxFrameAverageLuminance();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>nextInfo.minBrightness<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" kindref="member">edid</ref>-&gt;desiredMinLuminance();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" kindref="member">setInformation</ref>(nextInfo);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="class_k_win_1_1_drm_output_1a7d807dad8d601f7880a32b50ef66aaf0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1a7d807dad8d601f7880a32b50ef66aaf0" kindref="member">DrmOutput::updateDpmsMode</ref>(<ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" kindref="member">DpmsMode</ref><sp/><ref refid="class_k_win_1_1_output_1af206c9aa8a7591fbcfe7e9aaeb9ce57e" kindref="member">dpmsMode</ref>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/>next<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1ab5a453ceaaed63e8f706c6d48a471c99" kindref="member">dpmsMode</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_1af206c9aa8a7591fbcfe7e9aaeb9ce57e" kindref="member">dpmsMode</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(next);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_k_win_1_1_drm_output_1a29e4f0c3251b4bbc3f84584c4172e483" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1a29e4f0c3251b4bbc3f84584c4172e483" kindref="member">DrmOutput::present</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>m_desiredPresentationMode<sp/>=<sp/>frame-&gt;presentationMode();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needsModeset<sp/>=<sp/>m_gpu-&gt;needsModeset();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needsModeset)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setPresentationMode(<ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a98b06ef30caa386be0f897d0e5c5a135" kindref="member">PresentationMode::VSync</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setContentType(<ref refid="class_k_win_1_1_drm_connector_1ac103a1aa529fa1efb645f6e589046cc0ad334dfcea59127bedfcdbe0a3ee7f494" kindref="member">DrmConnector::DrmContentType::Graphics</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;maybeModeset(frame);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setPresentationMode(frame-&gt;presentationMode());</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pipeline-&gt;cursorLayer()-&gt;isEnabled())<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>cursor<sp/>plane<sp/>needs<sp/>to<sp/>be<sp/>disabled<sp/>before<sp/>we<sp/>enable<sp/>tearing;<sp/>see<sp/>DrmOutput::updateCursorLayer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame-&gt;presentationMode()<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setPresentationMode(<ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a21ae134702d2a8b0953846e2e4ee9e95" kindref="member">PresentationMode::AdaptiveSync</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame-&gt;presentationMode()<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a24aa4117da86c41684ad25742832dfa6" kindref="member">PresentationMode::Async</ref>)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setPresentationMode(<ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a98b06ef30caa386be0f897d0e5c5a135" kindref="member">PresentationMode::VSync</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5b" kindref="member">DrmPipeline::Error</ref><sp/>err<sp/>=<sp/>m_pipeline-&gt;present(frame);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmPipeline::Error::None</ref><sp/>&amp;&amp;<sp/>frame-&gt;presentationMode()<sp/>==<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767abe8b04736227cf3f2ab88320638e9505" kindref="member">PresentationMode::AdaptiveAsync</ref>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tearing<sp/>can<sp/>fail<sp/>in<sp/>various<sp/>circumstances,<sp/>but<sp/>vrr<sp/>shouldn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setPresentationMode(<ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a21ae134702d2a8b0953846e2e4ee9e95" kindref="member">PresentationMode::AdaptiveSync</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>m_pipeline-&gt;present(frame);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmPipeline::Error::None</ref><sp/>&amp;&amp;<sp/>frame-&gt;presentationMode()<sp/>!=<sp/><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a98b06ef30caa386be0f897d0e5c5a135" kindref="member">PresentationMode::VSync</ref>)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>retry<sp/>with<sp/>the<sp/>most<sp/>basic<sp/>presentation<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setPresentationMode(<ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a98b06ef30caa386be0f897d0e5c5a135" kindref="member">PresentationMode::VSync</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>m_pipeline-&gt;present(frame);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>err<sp/>==<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmPipeline::Error::None</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_abstract_output_1acac3691c1006e96118e7e061176321cd" kindref="member">m_renderLoop</ref>-&gt;setPresentationMode(m_pipeline-&gt;presentationMode());</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_1a1a63ecbdeebcded91a913d212ed61c37" kindref="member">outputChange</ref>(frame-&gt;damage());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame-&gt;brightness()<sp/>!=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.currentBrightness<sp/>||<sp/>(frame-&gt;artificialHdrHeadroom()<sp/>&amp;&amp;<sp/>frame-&gt;artificialHdrHeadroom()<sp/>!=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.artificialHdrHeadroom))<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateBrightness(frame-&gt;brightness().value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.currentBrightness.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.brightnessSetting)),<sp/>frame-&gt;artificialHdrHeadroom().value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.artificialHdrHeadroom));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="class_k_win_1_1_drm_output_1aefd18fdfb9bbcf129f20a64b63687ecd" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_connector" kindref="compound">DrmConnector</ref><sp/>*<ref refid="class_k_win_1_1_drm_output_1aefd18fdfb9bbcf129f20a64b63687ecd" kindref="member">DrmOutput::connector</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="356"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_connector.get();</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="class_k_win_1_1_drm_output_1a735814a691bf95de5a566cc0b70d4c56" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref><sp/>*<ref refid="class_k_win_1_1_drm_output_1a735814a691bf95de5a566cc0b70d4c56" kindref="member">DrmOutput::pipeline</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="361"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pipeline;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="class_k_win_1_1_drm_output_1a0fa117ef60e93a9cffe0585e459c5669" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1a0fa117ef60e93a9cffe0585e459c5669" kindref="member">DrmOutput::queueChanges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputChangeSet&gt;<sp/>&amp;props)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>props-&gt;<ref refid="class_k_win_1_1_drm_pipeline_1ae307f58fb2fca752e89e3c28a679f78d" kindref="member">mode</ref>.value_or(<ref refid="class_k_win_1_1_output_1a04418b1957d886a4a01ccc73eb5c8fca" kindref="member">currentMode</ref>()).lock();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mode)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bt2020<sp/>=<sp/>props-&gt;wideColorGamut.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.wideColorGamut)<sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref>()<sp/>&amp;<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba49f9141759924af3a3ce27fda67567f4" kindref="member">Capability::WideColorGamut</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hdr<sp/>=<sp/>props-&gt;highDynamicRange.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.highDynamicRange)<sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref>()<sp/>&amp;<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abaa50b1086d53490c37d64866a7e0e19bc" kindref="member">Capability::HighDynamicRange</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;setMode(std::static_pointer_cast&lt;DrmConnectorMode&gt;(mode));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;setOverscan(props-&gt;overscan.value_or(m_pipeline-&gt;overscan()));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;setRgbRange(props-&gt;rgbRange.value_or(m_pipeline-&gt;rgbRange()));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;setEnable(props-&gt;enabled.value_or(m_pipeline-&gt;enabled()));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;setHighDynamicRange(hdr);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;setWideColorGamut(bt2020);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>migrate<sp/>this<sp/>env<sp/>var<sp/>to<sp/>a<sp/>proper<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preferreedColorDepthIsSet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>preferred<sp/>=<sp/>qEnvironmentVariableIntValue(</highlight><highlight class="stringliteral">&quot;KWIN_DRM_PREFER_COLOR_DEPTH&quot;</highlight><highlight class="normal">,<sp/>&amp;preferreedColorDepthIsSet);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preferreedColorDepthIsSet)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setMaxBpc(preferred<sp/>/<sp/>3);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(props-&gt;colorPowerTradeoff.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.colorPowerTradeoff)<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198a46f9df4006ba6fcb93a19323bb2d45e9" kindref="member">ColorPowerTradeoff::PreferAccuracy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setMaxBpc(m_connector-&gt;mstPath().isEmpty()<sp/>?<sp/>16<sp/>:<sp/>8);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setMaxBpc(m_connector-&gt;mstPath().isEmpty()<sp/>?<sp/>10<sp/>:<sp/>8);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bt2020<sp/>||<sp/>hdr<sp/>||<sp/>props-&gt;colorProfileSource.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.colorProfileSource)<sp/>!=<sp/><ref refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94ab6b8d73d401b7611fac37ab11898f598" kindref="member">ColorProfileSource::ICC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ICC<sp/>profiles<sp/>don&apos;t<sp/>support<sp/>HDR<sp/>(yet)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setIccProfile(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setIccProfile(props-&gt;iccProfile.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.iccProfile));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>color<sp/>pipeline<sp/>for<sp/>the<sp/>atomic<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>it<sp/>could<sp/>potentially<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_gpu-&gt;atomicModeSetting())<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setCrtcColorPipeline(<ref refid="class_k_win_1_1_color_pipeline" kindref="compound">ColorPipeline</ref>{});</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QVector3D<sp/>adaptChannelFactors(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;originalColor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;sRGBchannelFactors)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>QVector3D<sp/>adaptedChannelFactors<sp/>=<sp/><ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref>.containerColorimetry().relativeColorimetricTo(originalColor.<ref refid="class_k_win_1_1_color_description_1a078edcae56e57ca288e047c38d6a1b0d" kindref="member">containerColorimetry</ref>())<sp/>*<sp/>sRGBchannelFactors;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>none<sp/>of<sp/>the<sp/>values<sp/>reach<sp/>zero,<sp/>otherwise<sp/>the<sp/>white<sp/>point<sp/>might<sp/>end<sp/>up<sp/>on<sp/>or<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>edges<sp/>of<sp/>the<sp/>gamut,<sp/>which<sp/>leads<sp/>to<sp/>terrible<sp/>glitches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>adaptedChannelFactors.setX(std::max(adaptedChannelFactors.x(),<sp/>0.01f));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>adaptedChannelFactors.setY(std::max(adaptedChannelFactors.y(),<sp/>0.01f));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>adaptedChannelFactors.setZ(std::max(adaptedChannelFactors.z(),<sp/>0.01f));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>adaptedChannelFactors;</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ColorDescription<sp/>applyNightLight(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColorDescription<sp/>&amp;originalColor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;sRGBchannelFactors)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>adapted<sp/>=<sp/>adaptChannelFactors(originalColor,<sp/>sRGBchannelFactors);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>white<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>includes<sp/>the<sp/>maximum<sp/>brightness<sp/>we<sp/>can<sp/>do<sp/>without<sp/>clipping<sp/>any<sp/>color<sp/>channel<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xyY<sp/>newWhite<sp/>=<sp/><ref refid="struct_k_win_1_1_x_y_z_1ae91c883816b868d587e5c5fbff8ed9e4" kindref="member">XYZ::fromVector</ref>(originalColor.containerColorimetry().toXYZ()<sp/>*<sp/>adapted).<ref refid="struct_k_win_1_1_x_y_z_1a6f6f55a638f620caf33d292e5be201fd" kindref="member">toxyY</ref>();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>originalColor.withWhitepoint(newWhite).dimmed(newWhite.Y);</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>DrmOutput::createColorDescription(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputChangeSet&gt;<sp/>&amp;props,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightness)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="425"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>colorSource<sp/>=<sp/>props-&gt;colorProfileSource.value_or(<ref refid="class_k_win_1_1_output_1a4fac789216029b4362ef31480b1e49b8" kindref="member">colorProfileSource</ref>());</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>effectiveHdr<sp/>=<sp/>props-&gt;highDynamicRange.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.highDynamicRange)<sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref>()<sp/>&amp;<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abaa50b1086d53490c37d64866a7e0e19bc" kindref="member">Capability::HighDynamicRange</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>effectiveWcg<sp/>=<sp/>props-&gt;wideColorGamut.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.wideColorGamut)<sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref>()<sp/>&amp;<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba49f9141759924af3a3ce27fda67567f4" kindref="member">Capability::WideColorGamut</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a1d05286dd7119bb3d2cf4d1497d08a4e" kindref="member">sdrGamutWideness</ref><sp/>=<sp/>props-&gt;sdrGamutWideness.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.sdrGamutWideness);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1ac9b10f45492af10851edba805f3d9768" kindref="member">iccProfile</ref><sp/>=<sp/>props-&gt;iccProfile.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.iccProfile);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colorSource<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94ab6b8d73d401b7611fac37ab11898f598" kindref="member">ColorProfileSource::ICC</ref><sp/>&amp;&amp;<sp/>!effectiveHdr<sp/>&amp;&amp;<sp/>!effectiveWcg<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_output_1ac9b10f45492af10851edba805f3d9768" kindref="member">iccProfile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a41b6d37e945be6ad810c211003b31104" kindref="member">minBrightness</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac9b10f45492af10851edba805f3d9768" kindref="member">iccProfile</ref>-&gt;minBrightness().value_or(0);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxBrightness<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac9b10f45492af10851edba805f3d9768" kindref="member">iccProfile</ref>-&gt;maxBrightness().value_or(200);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdrColor<sp/>=<sp/><ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref>.<ref refid="class_k_win_1_1_colorimetry_1a298126a235c07aa8ca700b197dcaf135" kindref="member">interpolateGamutTo</ref>(<ref refid="class_k_win_1_1_output_1ac9b10f45492af10851edba805f3d9768" kindref="member">iccProfile</ref>-&gt;colorimetry(),<sp/><ref refid="class_k_win_1_1_output_1a1d05286dd7119bb3d2cf4d1497d08a4e" kindref="member">sdrGamutWideness</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1aab165586f8dd37ca8f53de7898b51e03" kindref="member">allowSdrSoftwareBrightness</ref><sp/>=<sp/>props-&gt;allowSdrSoftwareBrightness.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.allowSdrSoftwareBrightness);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightnessFactor<sp/>=<sp/>(!<ref refid="class_k_win_1_1_output_1ac236c1f3abd3fd913682c0ae7ca10ef0" kindref="member">m_brightnessDevice</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_output_1aab165586f8dd37ca8f53de7898b51e03" kindref="member">allowSdrSoftwareBrightness</ref>)<sp/>?<sp/>brightness<sp/>:<sp/>1.0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>effectiveReferenceLuminance<sp/>=<sp/>5<sp/>+<sp/>(maxBrightness<sp/>-<sp/>5)<sp/>*<sp/>brightnessFactor;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ColorDescription(<ref refid="class_k_win_1_1_output_1ac9b10f45492af10851edba805f3d9768" kindref="member">iccProfile</ref>-&gt;colorimetry(),<sp/>TransferFunction(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>,<sp/>0,<sp/>maxBrightness),<sp/>effectiveReferenceLuminance,<sp/><ref refid="class_k_win_1_1_output_1a41b6d37e945be6ad810c211003b31104" kindref="member">minBrightness</ref>,<sp/>maxBrightness,<sp/>maxBrightness,<sp/><ref refid="class_k_win_1_1_output_1ac9b10f45492af10851edba805f3d9768" kindref="member">iccProfile</ref>-&gt;colorimetry(),<sp/>sdrColor);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Colorimetry<sp/>nativeColorimetry<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ad75806b23fa7bd8bfacd2bb667d8d542" kindref="member">m_information</ref>.edid.colorimetry().value_or(<ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Colorimetry<sp/>containerColorimetry<sp/>=<sp/>effectiveWcg<sp/>?<sp/><ref refid="class_k_win_1_1_colorimetry_1a99c05e3a03117057e2bb1019b9861acb" kindref="member">Colorimetry::BT2020</ref><sp/>:<sp/>(colorSource<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94a6d75ca1747b97e77bed1d83ff47aa92c" kindref="member">ColorProfileSource::EDID</ref><sp/>?<sp/>nativeColorimetry<sp/>:<sp/><ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Colorimetry<sp/>masteringColorimetry<sp/>=<sp/>(effectiveWcg<sp/>||<sp/>colorSource<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94a6d75ca1747b97e77bed1d83ff47aa92c" kindref="member">ColorProfileSource::EDID</ref>)<sp/>?<sp/>nativeColorimetry<sp/>:<sp/>Colorimetry::<ref refid="namespace_k_win_1aeedd73688ef359d71935cf7d75d516c9a0b69475c5783f10c0be13d36825fc3b9" kindref="member">BT709</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Colorimetry<sp/>sdrColorimetry<sp/>=<sp/>(effectiveWcg<sp/>||<sp/>colorSource<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94a6d75ca1747b97e77bed1d83ff47aa92c" kindref="member">ColorProfileSource::EDID</ref>)<sp/>?<sp/><ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref>.interpolateGamutTo(nativeColorimetry,<sp/><ref refid="class_k_win_1_1_output_1a1d05286dd7119bb3d2cf4d1497d08a4e" kindref="member">sdrGamutWideness</ref>)<sp/>:<sp/><ref refid="class_k_win_1_1_colorimetry_1abdec0c7f99cb7af5dd75fdaadfff4297" kindref="member">Colorimetry::BT709</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>the<sp/>EDID<sp/>can<sp/>contain<sp/>a<sp/>gamma<sp/>value,<sp/>use<sp/>that<sp/>when<sp/>available<sp/>and<sp/>colorSource<sp/>==<sp/>ColorProfileSource::EDID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a8550a6db203735694a816476d3c2f330" kindref="member">maxAverageBrightness</ref><sp/>=<sp/>effectiveHdr<sp/>?<sp/>props-&gt;maxAverageBrightnessOverride.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.maxAverageBrightnessOverride).value_or(m_connector-&gt;edid()-&gt;desiredMaxFrameAverageLuminance().value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.referenceLuminance))<sp/>:<sp/>200;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a904f72b9faedcf2df3319d94a3ec5840" kindref="member">maxPeakBrightness</ref><sp/>=<sp/>effectiveHdr<sp/>?<sp/>props-&gt;maxPeakBrightnessOverride.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.maxPeakBrightnessOverride).value_or(m_connector-&gt;edid()-&gt;desiredMaxLuminance().value_or(800))<sp/>:<sp/>200<sp/>*<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.artificialHdrHeadroom;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a3618863de6836ef810b3429b89095977" kindref="member">referenceLuminance</ref><sp/>=<sp/>effectiveHdr<sp/>?<sp/>props-&gt;referenceLuminance.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.referenceLuminance)<sp/>:<sp/>200;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transferFunction<sp/>=<sp/>TransferFunction{effectiveHdr<sp/>?<sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref><sp/>:<sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>}.relativeScaledTo(<ref refid="class_k_win_1_1_output_1a3618863de6836ef810b3429b89095977" kindref="member">referenceLuminance</ref><sp/>*<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.artificialHdrHeadroom);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HDR<sp/>screens<sp/>are<sp/>weird,<sp/>sending<sp/>them<sp/>the<sp/>min.<sp/>luminance<sp/>from<sp/>the<sp/>EDID<sp/>does<sp/>*not*<sp/>make<sp/>all<sp/>of<sp/>them<sp/>present<sp/>the<sp/>darkest<sp/>luminance<sp/>the<sp/>display<sp/>can<sp/>show</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>work<sp/>around<sp/>that,<sp/>(unless<sp/>overridden<sp/>by<sp/>the<sp/>user),<sp/>assume<sp/>the<sp/>min.<sp/>luminance<sp/>of<sp/>the<sp/>transfer<sp/>function<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1a41b6d37e945be6ad810c211003b31104" kindref="member">minBrightness</ref><sp/>=<sp/>effectiveHdr<sp/>?<sp/>props-&gt;minBrightnessOverride.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.minBrightnessOverride).value_or(<ref refid="class_k_win_1_1_transfer_function_1a0e7d3963e02c925e06a9d6b9a6721ac3" kindref="member">TransferFunction::defaultMinLuminanceFor</ref>(<ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13a326f23a55a0039ee6a7130470b8b8779" kindref="member">TransferFunction::PerceptualQuantizer</ref>))<sp/>:<sp/>transferFunction.minLuminance;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1aab165586f8dd37ca8f53de7898b51e03" kindref="member">allowSdrSoftwareBrightness</ref><sp/>=<sp/>props-&gt;allowSdrSoftwareBrightness.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.allowSdrSoftwareBrightness);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightnessFactor<sp/>=<sp/>(!<ref refid="class_k_win_1_1_output_1ac236c1f3abd3fd913682c0ae7ca10ef0" kindref="member">m_brightnessDevice</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_output_1aab165586f8dd37ca8f53de7898b51e03" kindref="member">allowSdrSoftwareBrightness</ref>)<sp/>||<sp/>effectiveHdr<sp/>?<sp/>brightness<sp/>:<sp/>1.0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>effectiveReferenceLuminance<sp/>=<sp/>5<sp/>+<sp/>(<ref refid="class_k_win_1_1_output_1a3618863de6836ef810b3429b89095977" kindref="member">referenceLuminance</ref><sp/>-<sp/>5)<sp/>*<sp/>brightnessFactor;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ColorDescription(containerColorimetry,<sp/>transferFunction,<sp/>effectiveReferenceLuminance,<sp/><ref refid="class_k_win_1_1_output_1a41b6d37e945be6ad810c211003b31104" kindref="member">minBrightness</ref>,<sp/><ref refid="class_k_win_1_1_output_1a8550a6db203735694a816476d3c2f330" kindref="member">maxAverageBrightness</ref>,<sp/><ref refid="class_k_win_1_1_output_1a904f72b9faedcf2df3319d94a3ec5840" kindref="member">maxPeakBrightness</ref>,<sp/>masteringColorimetry,<sp/>sdrColorimetry);</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="class_k_win_1_1_drm_output_1affc658c99341a950261f46029dd27851" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1affc658c99341a950261f46029dd27851" kindref="member">DrmOutput::applyQueuedChanges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputChangeSet&gt;<sp/>&amp;props)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_connector-&gt;isConnected())<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_1a8c730a9077f5d0a5e34a5d4a167ab2ae" kindref="member">aboutToChange</ref>(props.get());</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;applyPendingChanges();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/>next<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a8dd139e018f150bbffe973e87e0ac866" kindref="member">enabled</ref><sp/>=<sp/>props-&gt;enabled.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.enabled)<sp/>&amp;&amp;<sp/>m_pipeline-&gt;crtc();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1ad44bdf3839770ade88ea8448e47b4de6" kindref="member">position</ref><sp/>=<sp/>props-&gt;pos.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.position);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a311cbe404d7e2ebb0124570d83fb8293" kindref="member">scale</ref><sp/>=<sp/>props-&gt;scale.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.scale);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1abe4125625182e4010189ccc27a5567c1" kindref="member">transform</ref><sp/>=<sp/>props-&gt;transform.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.transform);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1aaf058acb9949b543f32963ec377efb2f" kindref="member">manualTransform</ref><sp/>=<sp/>props-&gt;manualTransform.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.manualTransform);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a1c3de767ae988454ed31a89bc46fa0a6" kindref="member">currentMode</ref><sp/>=<sp/>m_pipeline-&gt;mode();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a60e795194d0fe04a5108a79e45b5fcca" kindref="member">overscan</ref><sp/>=<sp/>m_pipeline-&gt;overscan();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1ad41660908a926680ed331915a123bc6d" kindref="member">rgbRange</ref><sp/>=<sp/>m_pipeline-&gt;rgbRange();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a6a55a883f2a2f0d08648a4e631524fd9" kindref="member">highDynamicRange</ref><sp/>=<sp/>props-&gt;highDynamicRange.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.highDynamicRange);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a93a6aeea007c51983c5b1e010760015e" kindref="member">referenceLuminance</ref><sp/>=<sp/>props-&gt;referenceLuminance.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.referenceLuminance);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a6a55bc39d749a9c246c5ea66ba17b853" kindref="member">wideColorGamut</ref><sp/>=<sp/>props-&gt;wideColorGamut.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.wideColorGamut);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1af0e26de084391ef7c1bad79809693760" kindref="member">autoRotatePolicy</ref><sp/>=<sp/>props-&gt;autoRotationPolicy.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.autoRotatePolicy);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1af40930fb22f71adafd6c116636590d6a" kindref="member">maxPeakBrightnessOverride</ref><sp/>=<sp/>props-&gt;maxPeakBrightnessOverride.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.maxPeakBrightnessOverride);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1ab2d950742339e733b00f7bd91b6cae7e" kindref="member">maxAverageBrightnessOverride</ref><sp/>=<sp/>props-&gt;maxAverageBrightnessOverride.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.maxAverageBrightnessOverride);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1abe49e0f58e8013fb2bd109ba398c4695" kindref="member">minBrightnessOverride</ref><sp/>=<sp/>props-&gt;minBrightnessOverride.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.minBrightnessOverride);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a5260aa559ec4916d90b22b790a5a4cdc" kindref="member">sdrGamutWideness</ref><sp/>=<sp/>props-&gt;sdrGamutWideness.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.sdrGamutWideness);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a775331c79ea1d70869969689f2fd5290" kindref="member">iccProfilePath</ref><sp/>=<sp/>props-&gt;iccProfilePath.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.iccProfilePath);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1ab18733b6f18feb4392e948d58eadf434" kindref="member">iccProfile</ref><sp/>=<sp/>props-&gt;iccProfile.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.iccProfile);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a7a5cefa75cceaa2b1dcd0fa8202e10ef" kindref="member">originalColorDescription</ref><sp/>=<sp/>createColorDescription(props,<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.currentBrightness.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.brightnessSetting));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1aaa9e964c06012ae48632608740adfd87" kindref="member">colorDescription</ref><sp/>=<sp/>applyNightLight(next.<ref refid="struct_k_win_1_1_output_1_1_state_1a7a5cefa75cceaa2b1dcd0fa8202e10ef" kindref="member">originalColorDescription</ref>,<sp/>m_sRgbChannelFactors);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1aabb9361eccd22de2317be126fbffc371" kindref="member">vrrPolicy</ref><sp/>=<sp/>props-&gt;vrrPolicy.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.vrrPolicy);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1aa2c59cc502347561a9592654db0b2165" kindref="member">colorProfileSource</ref><sp/>=<sp/>props-&gt;colorProfileSource.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.colorProfileSource);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1aec970e2d1cb7918e5f7eabe2539a007e" kindref="member">brightnessSetting</ref><sp/>=<sp/>props-&gt;brightness.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.brightnessSetting);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a4dca3602fe13143ec39621212ae9e811" kindref="member">desiredModeSize</ref><sp/>=<sp/>props-&gt;desiredModeSize.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.desiredModeSize);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1ace8f21e533d93dd6c85131dd370c93f0" kindref="member">desiredModeRefreshRate</ref><sp/>=<sp/>props-&gt;desiredModeRefreshRate.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.desiredModeRefreshRate);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a308c61d7ccfbab506fa226ee1817d545" kindref="member">allowSdrSoftwareBrightness</ref><sp/>=<sp/>props-&gt;allowSdrSoftwareBrightness.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.allowSdrSoftwareBrightness);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a7eea8e80fc33a2d0e7f5551c602f87c6" kindref="member">colorPowerTradeoff</ref><sp/>=<sp/>props-&gt;colorPowerTradeoff.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.colorPowerTradeoff);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a8165e05f2b2fe7fcd382c4053332d174" kindref="member">dimming</ref><sp/>=<sp/>props-&gt;dimming.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.dimming);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(next);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allowSdrSoftwareBrightness<sp/>might<sp/>change<sp/>our<sp/>capabilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_information" kindref="compound">Information</ref><sp/>newInfo<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ad75806b23fa7bd8bfacd2bb667d8d542" kindref="member">m_information</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>newInfo.<ref refid="struct_k_win_1_1_output_1_1_information_1a47fcef1d35571d03c2fda48ddecaf007" kindref="member">capabilities</ref><sp/>=<sp/>computeCapabilities();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" kindref="member">setInformation</ref>(newInfo);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_output_1ae3ba33a8ace198be4ba398ca4c691689" kindref="member">isEnabled</ref>()<sp/>&amp;&amp;<sp/>m_pipeline-&gt;needsModeset())<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gpu-&gt;maybeModeset(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_abstract_output_1acac3691c1006e96118e7e061176321cd" kindref="member">m_renderLoop</ref>-&gt;setRefreshRate(<ref refid="class_k_win_1_1_output_1a3e1d2698295c7897ca32593d1022449d" kindref="member">refreshRate</ref>());</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>tryKmsColorOffloading();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_output_1ac335ddfb48aa5f028a80cca1c07a3aad" kindref="member">changed</ref>();</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrmOutput::setBrightnessDevice(<ref refid="class_k_win_1_1_brightness_device" kindref="compound">BrightnessDevice</ref><sp/>*device)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a0f89221e8f4fa1f7edbdc7d873e687b7" kindref="member">Output::setBrightnessDevice</ref>(device);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.<ref refid="struct_k_win_1_1_output_1_1_state_1a308c61d7ccfbab506fa226ee1817d545" kindref="member">allowSdrSoftwareBrightness</ref><sp/>&amp;&amp;<sp/>device-&gt;<ref refid="class_k_win_1_1_brightness_device_1a400e219f7885c64fd61d1f448483be1f" kindref="member">observedBrightness</ref>().has_value())<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adopt<sp/>the<sp/>screen&apos;s<sp/>initial<sp/>brightness<sp/>value<sp/>if<sp/>this<sp/>brightness<sp/>device<sp/>is<sp/>seen<sp/>for<sp/>the<sp/>first<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can&apos;t<sp/>be<sp/>done<sp/>in<sp/>output<sp/>configuration<sp/>store<sp/>as<sp/>we&apos;re<sp/>not<sp/>necessarily<sp/>aware<sp/>of<sp/>the<sp/>brightness<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>that<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>State<sp/>next<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a3562081235e62c77064c86883ae44389" kindref="member">currentBrightness</ref><sp/>=<sp/>device-&gt;<ref refid="class_k_win_1_1_brightness_device_1a400e219f7885c64fd61d1f448483be1f" kindref="member">observedBrightness</ref>();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next.brightnessSetting<sp/>=<sp/>*next.currentBrightness;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(next);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>updateBrightness(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.<ref refid="struct_k_win_1_1_output_1_1_state_1a3562081235e62c77064c86883ae44389" kindref="member">currentBrightness</ref>.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.<ref refid="struct_k_win_1_1_output_1_1_state_1aec970e2d1cb7918e5f7eabe2539a007e" kindref="member">brightnessSetting</ref>),<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.<ref refid="struct_k_win_1_1_output_1_1_state_1adf9b71934b310f30977581788081f3f3" kindref="member">artificialHdrHeadroom</ref>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrmOutput::updateBrightness(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newBrightness,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newArtificialHdrHeadroom)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_1ac236c1f3abd3fd913682c0ae7ca10ef0" kindref="member">m_brightnessDevice</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.highDynamicRange)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minLuminance<sp/>=<sp/>0.04;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>effectiveBrightness<sp/>=<sp/>(minLuminance<sp/>+<sp/>newBrightness)<sp/>*<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.artificialHdrHeadroom<sp/>-<sp/>minLuminance;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1ac236c1f3abd3fd913682c0ae7ca10ef0" kindref="member">m_brightnessDevice</ref>-&gt;setBrightness(effectiveBrightness);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/>next<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>next.originalColorDescription<sp/>=<sp/>createColorDescription(std::make_shared&lt;OutputChangeSet&gt;(),<sp/>newBrightness);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>next.colorDescription<sp/>=<sp/>applyNightLight(next.originalColorDescription,<sp/>m_sRgbChannelFactors);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>next.currentBrightness<sp/>=<sp/>newBrightness;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>next.artificialHdrHeadroom<sp/>=<sp/>newArtificialHdrHeadroom;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(next);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>tryKmsColorOffloading();</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="class_k_win_1_1_drm_output_1a88d34182a5cfb95a6eb4f655d4d1de58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1a88d34182a5cfb95a6eb4f655d4d1de58" kindref="member">DrmOutput::revertQueuedChanges</ref>()</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;revertPendingChanges();</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="class_k_win_1_1_drm_output_1a2178f29dcb0317e91115d312c515a5a5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_output_layer" kindref="compound">DrmOutputLayer</ref><sp/>*<ref refid="class_k_win_1_1_drm_output_1a2178f29dcb0317e91115d312c515a5a5" kindref="member">DrmOutput::primaryLayer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="553"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pipeline-&gt;primaryLayer();</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="class_k_win_1_1_drm_output_1ac5341791d1a0a7e9e07cead78d42ef50" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drm_output_layer" kindref="compound">DrmOutputLayer</ref><sp/>*<ref refid="class_k_win_1_1_drm_output_1ac5341791d1a0a7e9e07cead78d42ef50" kindref="member">DrmOutput::cursorLayer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="558"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pipeline-&gt;cursorLayer();</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="class_k_win_1_1_drm_output_1a0712b60ab01273ae49cd9509b1b81675" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1a0712b60ab01273ae49cd9509b1b81675" kindref="member">DrmOutput::setChannelFactors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector3D<sp/>&amp;rgb)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rgb<sp/>!=<sp/>m_sRgbChannelFactors)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sRgbChannelFactors<sp/>=<sp/>rgb;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/>next<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a7a5cefa75cceaa2b1dcd0fa8202e10ef" kindref="member">originalColorDescription</ref><sp/>=<sp/>createColorDescription(std::make_shared&lt;OutputChangeSet&gt;(),<sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1a3562081235e62c77064c86883ae44389" kindref="member">currentBrightness</ref>.value_or(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.brightnessSetting));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next.<ref refid="struct_k_win_1_1_output_1_1_state_1aaa9e964c06012ae48632608740adfd87" kindref="member">colorDescription</ref><sp/>=<sp/>applyNightLight(next.<ref refid="struct_k_win_1_1_output_1_1_state_1a7a5cefa75cceaa2b1dcd0fa8202e10ef" kindref="member">originalColorDescription</ref>,<sp/>m_sRgbChannelFactors);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(next);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tryKmsColorOffloading();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrmOutput::tryKmsColorOffloading()</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13" kindref="member">TransferFunction::Type</ref><sp/>blendingSpace<sp/>=<sp/><ref refid="class_k_win_1_1_transfer_function_1af52e6a1609afb57e5738028613f90c13ae809a455a728cde52948f87802939016" kindref="member">TransferFunction::gamma22</ref>;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxLuminance<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" kindref="member">colorDescription</ref>().<ref refid="class_k_win_1_1_color_description_1af5ee8e0ffe6d82b52bf658bab9f7c6de" kindref="member">maxHdrLuminance</ref>().value_or(<ref refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" kindref="member">colorDescription</ref>().<ref refid="class_k_win_1_1_output_1a3618863de6836ef810b3429b89095977" kindref="member">referenceLuminance</ref>());</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>setBlendingColorDescription(<ref refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" kindref="member">colorDescription</ref>().transferFunction().<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>==<sp/>blendingSpace<sp/>?<sp/><ref refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" kindref="member">colorDescription</ref>()<sp/>:<sp/><ref refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" kindref="member">colorDescription</ref>().withTransferFunction(<ref refid="class_k_win_1_1_transfer_function" kindref="compound">TransferFunction</ref>(blendingSpace,<sp/>0,<sp/>maxLuminance)));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>use<sp/>the<sp/>original<sp/>color<sp/>description<sp/>without<sp/>modifications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>that<sp/>would<sp/>un-do<sp/>any<sp/>brightness<sp/>adjustments<sp/>we<sp/>did<sp/>for<sp/>night<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>we<sp/>also<sp/>can&apos;t<sp/>use<sp/>ColorDescription::dimmed,<sp/>as<sp/>we<sp/>must<sp/>avoid<sp/>clipping<sp/>to<sp/>this<sp/>luminance!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>encoding<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.<ref refid="struct_k_win_1_1_output_1_1_state_1a7a5cefa75cceaa2b1dcd0fa8202e10ef" kindref="member">originalColorDescription</ref>.<ref refid="class_k_win_1_1_color_description_1aa3c18d418099e86722b4ccf4deae45f1" kindref="member">withReference</ref>(<ref refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" kindref="member">colorDescription</ref>().<ref refid="class_k_win_1_1_output_1a3618863de6836ef810b3429b89095977" kindref="member">referenceLuminance</ref>());</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>absolute<sp/>colorimetric<sp/>to<sp/>preserve<sp/>the<sp/>whitepoint<sp/>adjustments<sp/>made<sp/>during<sp/>compositing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_color_pipeline" kindref="compound">ColorPipeline</ref><sp/>colorPipeline<sp/>=<sp/><ref refid="class_k_win_1_1_color_pipeline_1aa4347025990236c558ca27733ca10fa9" kindref="member">ColorPipeline::create</ref>(m_blendingColorDescription,<sp/>encoding,<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9af225099195868c86e68340788085dd9a" kindref="member">RenderingIntent::AbsoluteColorimetric</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hdr<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.<ref refid="struct_k_win_1_1_output_1_1_state_1a6a55a883f2a2f0d08648a4e631524fd9" kindref="member">highDynamicRange</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref>()<sp/>&amp;<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1abaa50b1086d53490c37d64866a7e0e19bc" kindref="member">Capability::HighDynamicRange</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wcg<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.<ref refid="struct_k_win_1_1_output_1_1_state_1a6a55bc39d749a9c246c5ea66ba17b853" kindref="member">wideColorGamut</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" kindref="member">capabilities</ref>()<sp/>&amp;<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba49f9141759924af3a3ce27fda67567f4" kindref="member">Capability::WideColorGamut</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usesICC<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.<ref refid="struct_k_win_1_1_output_1_1_state_1aa2c59cc502347561a9592654db0b2165" kindref="member">colorProfileSource</ref><sp/>==<sp/><ref refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94ab6b8d73d401b7611fac37ab11898f598" kindref="member">ColorProfileSource::ICC</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.<ref refid="struct_k_win_1_1_output_1_1_state_1ab18733b6f18feb4392e948d58eadf434" kindref="member">iccProfile</ref><sp/>&amp;&amp;<sp/>!hdr<sp/>&amp;&amp;<sp/>!wcg;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_1ae6e9082834c517e3df5509cb82217ac9" kindref="member">colorPowerTradeoff</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198a46f9df4006ba6fcb93a19323bb2d45e9" kindref="member">ColorPowerTradeoff::PreferAccuracy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setScanoutColorDescription(encoding);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;<ref refid="class_k_win_1_1_drm_pipeline_1a2eb009faa45f6945276ffbdfceb899db" kindref="member">setCrtcColorPipeline</ref>(<ref refid="class_k_win_1_1_color_pipeline" kindref="compound">ColorPipeline</ref>{});</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;<ref refid="class_k_win_1_1_drm_pipeline_1a90b0a1bbf427a54f251ce1919183637f" kindref="member">applyPendingChanges</ref>();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_needsShadowBuffer<sp/>=<sp/>usesICC</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" kindref="member">colorDescription</ref>().<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref><sp/>!=<sp/>blendingSpace</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!colorPipeline.<ref refid="class_k_win_1_1_color_pipeline_1a8cbbe19361783f5809ea8a6511a1ed18" kindref="member">isIdentity</ref>();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pipeline-&gt;activePending()<sp/>||<sp/>!<ref refid="class_k_win_1_1_drm_output_1a2178f29dcb0317e91115d312c515a5a5" kindref="member">primaryLayer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usesICC)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorPipeline.<ref refid="class_k_win_1_1_color_pipeline_1a19886bf5733f4b91578fc0a9adea657d" kindref="member">addTransferFunction</ref>(encoding.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>());</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorPipeline.<ref refid="class_k_win_1_1_color_pipeline_1af2cf9448e1f66763a20ef4feadae8d76" kindref="member">addMultiplier</ref>(1.0<sp/>/<sp/>encoding.<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a3c5c23bd4c36320392fdcfb24057a821" kindref="member">maxLuminance</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorPipeline.<ref refid="class_k_win_1_1_color_pipeline_1a71f3dacf8c3534d493eae8adbec15cf4" kindref="member">add1DLUT</ref>(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.iccProfile-&gt;inverseTransferFunction());</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.iccProfile-&gt;vcgt())<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorPipeline.<ref refid="class_k_win_1_1_color_pipeline_1a71f3dacf8c3534d493eae8adbec15cf4" kindref="member">add1DLUT</ref>(<ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>.iccProfile-&gt;vcgt());</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;setCrtcColorPipeline(colorPipeline);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1ad2120a27a0a06b86f4b03cd6c912b430" kindref="member">DrmPipeline::commitPipelines</ref>({m_pipeline},<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca0cbc6611f5540bd0809a388dc95a615b" kindref="member">DrmPipeline::CommitMode::Test</ref>)<sp/>==<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmPipeline::Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;applyPendingChanges();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setScanoutColorDescription(m_blendingColorDescription);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_needsShadowBuffer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" kindref="member">colorDescription</ref>().transferFunction().<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref><sp/>==<sp/>blendingSpace<sp/>&amp;&amp;<sp/>!usesICC)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>falling<sp/>back<sp/>to<sp/>applying<sp/>night<sp/>light<sp/>in<sp/>non-linear<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>isn&apos;t<sp/>technically<sp/>correct,<sp/>but<sp/>the<sp/>difference<sp/>is<sp/>quite<sp/>small<sp/>and<sp/>not<sp/>worth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>losing<sp/>a<sp/>lot<sp/>of<sp/>performance<sp/>and<sp/>battery<sp/>life<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColorPipeline<sp/>simplerPipeline;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simplerPipeline.addMatrix(m_blendingColorDescription.toOther(encoding,<sp/><ref refid="namespace_k_win_1a72b8a93022757874f9e6f85fcf9bc4e9af225099195868c86e68340788085dd9a" kindref="member">RenderingIntent::AbsoluteColorimetric</ref>),<sp/>colorPipeline.<ref refid="class_k_win_1_1_color_pipeline_1a9ada03775ee6379cdfea60744e1bfb85" kindref="member">currentOutputRange</ref>());</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;setCrtcColorPipeline(colorPipeline);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_pipeline_1ad2120a27a0a06b86f4b03cd6c912b430" kindref="member">DrmPipeline::commitPipelines</ref>({m_pipeline},<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a4a67a1165446e6f480dc766f26a4894ca0cbc6611f5540bd0809a388dc95a615b" kindref="member">DrmPipeline::CommitMode::Test</ref>)<sp/>==<sp/><ref refid="class_k_win_1_1_drm_pipeline_1a7337b8e75c27725909108cd28f0b9c5ba6adf97f83acf6453d4a6a4b1070f3754" kindref="member">DrmPipeline::Error::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pipeline-&gt;applyPendingChanges();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setScanoutColorDescription(m_blendingColorDescription);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_needsShadowBuffer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>back<sp/>to<sp/>using<sp/>a<sp/>shadow<sp/>buffer<sp/>for<sp/>doing<sp/>blending<sp/>in<sp/>gamma<sp/>2.2<sp/>and/or<sp/>night<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;setCrtcColorPipeline(ColorPipeline{});</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pipeline-&gt;applyPendingChanges();</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>setScanoutColorDescription(encoding);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>m_needsShadowBuffer<sp/>=<sp/>usesICC</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" kindref="member">colorDescription</ref>().<ref refid="class_k_win_1_1_color_description_1a742286b76df2ae57b339e18a921acd19" kindref="member">transferFunction</ref>().<ref refid="class_k_win_1_1_transfer_function_1a137dbd6906fcbd99032b40e3c37935f2" kindref="member">type</ref><sp/>!=<sp/>blendingSpace</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!colorPipeline.<ref refid="class_k_win_1_1_color_pipeline_1a8cbbe19361783f5809ea8a6511a1ed18" kindref="member">isIdentity</ref>();</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrmOutput::setScanoutColorDescription(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;description)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_scanoutColorDescription<sp/>!=<sp/><ref refid="class_k_win_1_1_output_1a20fea699e81a6dc5c6b5429d2778f7fd" kindref="member">description</ref>)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scanoutColorDescription<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a20fea699e81a6dc5c6b5429d2778f7fd" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_output_1a2178f29dcb0317e91115d312c515a5a5" kindref="member">primaryLayer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_output_1a2178f29dcb0317e91115d312c515a5a5" kindref="member">primaryLayer</ref>()-&gt;<ref refid="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" kindref="member">addRepaint</ref>(<ref refid="namespace_k_win_1a0655524c1f1ba8dbb2cf16a1e4b9bb97" kindref="member">infiniteRegion</ref>());</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_output_1ac5341791d1a0a7e9e07cead78d42ef50" kindref="member">cursorLayer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_output_1ac5341791d1a0a7e9e07cead78d42ef50" kindref="member">cursorLayer</ref>()-&gt;<ref refid="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" kindref="member">addRepaint</ref>(<ref refid="namespace_k_win_1a0655524c1f1ba8dbb2cf16a1e4b9bb97" kindref="member">infiniteRegion</ref>());</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrmOutput::setBlendingColorDescription(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;description)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_blendingColorDescription<sp/>!=<sp/><ref refid="class_k_win_1_1_output_1a20fea699e81a6dc5c6b5429d2778f7fd" kindref="member">description</ref>)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_blendingColorDescription<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a20fea699e81a6dc5c6b5429d2778f7fd" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_output_1a2178f29dcb0317e91115d312c515a5a5" kindref="member">primaryLayer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_output_1a2178f29dcb0317e91115d312c515a5a5" kindref="member">primaryLayer</ref>()-&gt;<ref refid="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" kindref="member">addRepaint</ref>(<ref refid="namespace_k_win_1a0655524c1f1ba8dbb2cf16a1e4b9bb97" kindref="member">infiniteRegion</ref>());</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_drm_output_1ac5341791d1a0a7e9e07cead78d42ef50" kindref="member">cursorLayer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_drm_output_1ac5341791d1a0a7e9e07cead78d42ef50" kindref="member">cursorLayer</ref>()-&gt;<ref refid="class_k_win_1_1_output_layer_1a2f2b3779acdac137f313af1b1d19aa57" kindref="member">addRepaint</ref>(<ref refid="namespace_k_win_1a0655524c1f1ba8dbb2cf16a1e4b9bb97" kindref="member">infiniteRegion</ref>());</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="class_k_win_1_1_drm_output_1a4bd94eb378d3f3e23914ad1545746f2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_drm_output_1a4bd94eb378d3f3e23914ad1545746f2f" kindref="member">DrmOutput::needsShadowBuffer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="669"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_needsShadowBuffer;</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="class_k_win_1_1_drm_output_1a9e58ff9b44eb0bfa9ed28f026eeef697" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;<ref refid="class_k_win_1_1_drm_output_1a9e58ff9b44eb0bfa9ed28f026eeef697" kindref="member">DrmOutput::scanoutColorDescription</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="674"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_scanoutColorDescription;</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="class_k_win_1_1_drm_output_1a204afbeb90ebe7d6114faccfddb8c97b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref><sp/>&amp;<ref refid="class_k_win_1_1_drm_output_1a204afbeb90ebe7d6114faccfddb8c97b" kindref="member">DrmOutput::blendingColorDescription</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="679"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_blendingColorDescription;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_drm_output.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/drm/drm_output.cpp"/>
  </compounddef>
</doxygen>
