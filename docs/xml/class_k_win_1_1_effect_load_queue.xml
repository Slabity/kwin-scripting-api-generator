<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_effect_load_queue" kind="class" language="C++" prot="public">
    <compoundname>KWin::EffectLoadQueue</compoundname>
    <basecompoundref refid="class_k_win_1_1_abstract_effect_load_queue" prot="public" virt="non-virtual">KWin::AbstractEffectLoadQueue</basecompoundref>
    <includes refid="effectloader_8h" local="no">effectloader.h</includes>
    <templateparamlist>
      <param>
        <type>typename Loader</type>
      </param>
      <param>
        <type>typename QueueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_effect_load_queue_1a41f0f581101526994b129cb1d6b712dd" prot="private" static="no" mutable="no">
        <type>Loader *</type>
        <definition>Loader* KWin::EffectLoadQueue&lt; Loader, QueueType &gt;::m_effectLoader</definition>
        <argsstring></argsstring>
        <name>m_effectLoader</name>
        <qualifiedname>KWin::EffectLoadQueue::m_effectLoader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectloader.h" line="266" column="12" bodyfile="kwin/src/effect/effectloader.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_effect_load_queue_1a6058d2966dccb5a846e655d08db47caf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::EffectLoadQueue&lt; Loader, QueueType &gt;::m_dequeueScheduled</definition>
        <argsstring></argsstring>
        <name>m_dequeueScheduled</name>
        <qualifiedname>KWin::EffectLoadQueue::m_dequeueScheduled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectloader.h" line="267" column="10" bodyfile="kwin/src/effect/effectloader.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_effect_load_queue_1a5862a22992c59de7df3611634a56cc51" prot="private" static="no" mutable="no">
        <type>QQueue&lt; QPair&lt; QueueType, LoadEffectFlags &gt; &gt;</type>
        <definition>QQueue&lt;QPair&lt;QueueType, LoadEffectFlags&gt; &gt; KWin::EffectLoadQueue&lt; Loader, QueueType &gt;::m_queue</definition>
        <argsstring></argsstring>
        <name>m_queue</name>
        <qualifiedname>KWin::EffectLoadQueue::m_queue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectloader.h" line="268" column="12" bodyfile="kwin/src/effect/effectloader.h" bodystart="268" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_effect_load_queue_1af55a5312602f522a5d23cfa0d1e753e0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::EffectLoadQueue&lt; Loader, QueueType &gt;::EffectLoadQueue</definition>
        <argsstring>(Loader *parent)</argsstring>
        <name>EffectLoadQueue</name>
        <qualifiedname>KWin::EffectLoadQueue::EffectLoadQueue</qualifiedname>
        <param>
          <type>Loader *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectloader.h" line="228" column="14" bodyfile="kwin/src/effect/effectloader.h" bodystart="228" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effect_load_queue_1ac4aa5ad8fb623454337ebef16d07d8e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::EffectLoadQueue&lt; Loader, QueueType &gt;::enqueue</definition>
        <argsstring>(const QPair&lt; QueueType, LoadEffectFlags &gt; value)</argsstring>
        <name>enqueue</name>
        <qualifiedname>KWin::EffectLoadQueue::enqueue</qualifiedname>
        <param>
          <type>const QPair&lt; QueueType, LoadEffectFlags &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectloader.h" line="234" column="10" bodyfile="kwin/src/effect/effectloader.h" bodystart="234" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_effect_load_queue_1a67ab393868a245d88556f44be083eb6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::EffectLoadQueue&lt; Loader, QueueType &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>KWin::EffectLoadQueue::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectloader.h" line="239" column="10" bodyfile="kwin/src/effect/effectloader.h" bodystart="239" bodyend="243"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_effect_load_queue_1aa441537495b823f4acf9c1d4e565f686" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void KWin::EffectLoadQueue&lt; Loader, QueueType &gt;::dequeue</definition>
        <argsstring>() override</argsstring>
        <name>dequeue</name>
        <qualifiedname>KWin::EffectLoadQueue::dequeue</qualifiedname>
        <reimplements refid="class_k_win_1_1_abstract_effect_load_queue_1acb42642094c5acfc86625064d9e09cdc">dequeue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectloader.h" line="246" column="10" bodyfile="kwin/src/effect/effectloader.h" bodystart="246" bodyend="255"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_effect_load_queue_1a59e3d05488f555a141721715cdeacd5a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::EffectLoadQueue&lt; Loader, QueueType &gt;::scheduleDequeue</definition>
        <argsstring>()</argsstring>
        <name>scheduleDequeue</name>
        <qualifiedname>KWin::EffectLoadQueue::scheduleDequeue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/effect/effectloader.h" line="258" column="10" bodyfile="kwin/src/effect/effectloader.h" bodystart="258" bodyend="265"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::AbstractEffectLoadQueue</label>
        <link refid="class_k_win_1_1_abstract_effect_load_queue"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::EffectLoadQueue&lt; Loader, QueueType &gt;</label>
        <link refid="class_k_win_1_1_effect_load_queue"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::AbstractEffectLoadQueue</label>
        <link refid="class_k_win_1_1_abstract_effect_load_queue"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::EffectLoadQueue&lt; Loader, QueueType &gt;</label>
        <link refid="class_k_win_1_1_effect_load_queue"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/effect/effectloader.h" line="225" column="1" bodyfile="kwin/src/effect/effectloader.h" bodystart="226" bodyend="269"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_abstract_effect_load_queue_1aab40f7a13bde7d8f49b130bb75042e48" prot="public" virt="non-virtual"><scope>KWin::EffectLoadQueue</scope><name>AbstractEffectLoadQueue</name></member>
      <member refid="class_k_win_1_1_effect_load_queue_1a67ab393868a245d88556f44be083eb6f" prot="public" virt="non-virtual"><scope>KWin::EffectLoadQueue</scope><name>clear</name></member>
      <member refid="class_k_win_1_1_effect_load_queue_1aa441537495b823f4acf9c1d4e565f686" prot="protected" virt="virtual"><scope>KWin::EffectLoadQueue</scope><name>dequeue</name></member>
      <member refid="class_k_win_1_1_effect_load_queue_1af55a5312602f522a5d23cfa0d1e753e0" prot="public" virt="non-virtual"><scope>KWin::EffectLoadQueue</scope><name>EffectLoadQueue</name></member>
      <member refid="class_k_win_1_1_effect_load_queue_1ac4aa5ad8fb623454337ebef16d07d8e4" prot="public" virt="non-virtual"><scope>KWin::EffectLoadQueue</scope><name>enqueue</name></member>
      <member refid="class_k_win_1_1_effect_load_queue_1a6058d2966dccb5a846e655d08db47caf" prot="private" virt="non-virtual"><scope>KWin::EffectLoadQueue</scope><name>m_dequeueScheduled</name></member>
      <member refid="class_k_win_1_1_effect_load_queue_1a41f0f581101526994b129cb1d6b712dd" prot="private" virt="non-virtual"><scope>KWin::EffectLoadQueue</scope><name>m_effectLoader</name></member>
      <member refid="class_k_win_1_1_effect_load_queue_1a5862a22992c59de7df3611634a56cc51" prot="private" virt="non-virtual"><scope>KWin::EffectLoadQueue</scope><name>m_queue</name></member>
      <member refid="class_k_win_1_1_effect_load_queue_1a59e3d05488f555a141721715cdeacd5a" prot="private" virt="non-virtual"><scope>KWin::EffectLoadQueue</scope><name>scheduleDequeue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
