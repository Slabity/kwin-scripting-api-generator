<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_damage_journal" kind="class" language="C++" prot="public">
    <compoundname>KWin::DamageJournal</compoundname>
    <includes refid="damagejournal_8h" local="no">damagejournal.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_damage_journal_1a0747a05a435bbbae69721026ec950520" prot="private" static="no" mutable="no">
        <type>QList&lt; QRegion &gt;</type>
        <definition>QList&lt;QRegion&gt; KWin::DamageJournal::m_log</definition>
        <argsstring></argsstring>
        <name>m_log</name>
        <qualifiedname>KWin::DamageJournal::m_log</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/damagejournal.h" line="85" column="11" bodyfile="kwin/src/utils/damagejournal.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_damage_journal_1a0b906f58f89041668982a67834fd4337" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::DamageJournal::m_capacity</definition>
        <argsstring></argsstring>
        <name>m_capacity</name>
        <qualifiedname>KWin::DamageJournal::m_capacity</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/damagejournal.h" line="86" column="9" bodyfile="kwin/src/utils/damagejournal.h" bodystart="86" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_damage_journal_1acf0c38531eb54f0f6be6854eea9347f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::DamageJournal::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <qualifiedname>KWin::DamageJournal::capacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the maximum number of damage regions that can be stored in the journal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/damagejournal.h" line="26" column="9" bodyfile="kwin/src/utils/damagejournal.h" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_damage_journal_1a1affcec938ce21596962e3c67f446ca1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DamageJournal::setCapacity</definition>
        <argsstring>(int capacity)</argsstring>
        <name>setCapacity</name>
        <qualifiedname>KWin::DamageJournal::setCapacity</qualifiedname>
        <param>
          <type>int</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the maximum number of damage regions that can be stored in the journal to <emphasis>capacity</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/damagejournal.h" line="35" column="10" bodyfile="kwin/src/utils/damagejournal.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_damage_journal_1a37e2ee7621a6f86250821ad7a8abbc97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DamageJournal::add</definition>
        <argsstring>(const QRegion &amp;region)</argsstring>
        <name>add</name>
        <qualifiedname>KWin::DamageJournal::add</qualifiedname>
        <param>
          <type>const QRegion &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the specified <emphasis>region</emphasis> to the journal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/damagejournal.h" line="43" column="10" bodyfile="kwin/src/utils/damagejournal.h" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_damage_journal_1ab81928cd51983c4820d07f0daf9caa0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DamageJournal::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>KWin::DamageJournal::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears the damage journal. Typically, one would want to clear the damage journal if a buffer swap fails for some reason. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/damagejournal.h" line="55" column="10" bodyfile="kwin/src/utils/damagejournal.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_damage_journal_1a5b9964baed642f6247ce6f8d5ee057fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QRegion</type>
        <definition>QRegion KWin::DamageJournal::accumulate</definition>
        <argsstring>(int bufferAge, const QRegion &amp;fallback=QRegion()) const</argsstring>
        <name>accumulate</name>
        <qualifiedname>KWin::DamageJournal::accumulate</qualifiedname>
        <param>
          <type>int</type>
          <declname>bufferAge</declname>
        </param>
        <param>
          <type>const QRegion &amp;</type>
          <declname>fallback</declname>
          <defval>QRegion()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accumulates the damage regions in the log up to the specified <emphasis>bufferAge</emphasis>.</para>
<para>If the specified buffer age value refers to a damage region older than the last one in the journal, <emphasis>fallback</emphasis> will be returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/damagejournal.h" line="66" column="13" bodyfile="kwin/src/utils/damagejournal.h" bodystart="66" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_damage_journal_1a9692f5385be738834dff701aac4991ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QRegion</type>
        <definition>QRegion KWin::DamageJournal::lastDamage</definition>
        <argsstring>() const</argsstring>
        <name>lastDamage</name>
        <qualifiedname>KWin::DamageJournal::lastDamage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/damagejournal.h" line="79" column="13" bodyfile="kwin/src/utils/damagejournal.h" bodystart="79" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_damage_journal" kindref="compound">DamageJournal</ref> class is a helper that tracks last N damage regions. </para>
    </detaileddescription>
    <location file="kwin/src/utils/damagejournal.h" line="20" column="1" bodyfile="kwin/src/utils/damagejournal.h" bodystart="21" bodyend="87"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_damage_journal_1a5b9964baed642f6247ce6f8d5ee057fb" prot="public" virt="non-virtual"><scope>KWin::DamageJournal</scope><name>accumulate</name></member>
      <member refid="class_k_win_1_1_damage_journal_1a37e2ee7621a6f86250821ad7a8abbc97" prot="public" virt="non-virtual"><scope>KWin::DamageJournal</scope><name>add</name></member>
      <member refid="class_k_win_1_1_damage_journal_1acf0c38531eb54f0f6be6854eea9347f7" prot="public" virt="non-virtual"><scope>KWin::DamageJournal</scope><name>capacity</name></member>
      <member refid="class_k_win_1_1_damage_journal_1ab81928cd51983c4820d07f0daf9caa0d" prot="public" virt="non-virtual"><scope>KWin::DamageJournal</scope><name>clear</name></member>
      <member refid="class_k_win_1_1_damage_journal_1a9692f5385be738834dff701aac4991ea" prot="public" virt="non-virtual"><scope>KWin::DamageJournal</scope><name>lastDamage</name></member>
      <member refid="class_k_win_1_1_damage_journal_1a0b906f58f89041668982a67834fd4337" prot="private" virt="non-virtual"><scope>KWin::DamageJournal</scope><name>m_capacity</name></member>
      <member refid="class_k_win_1_1_damage_journal_1a0747a05a435bbbae69721026ec950520" prot="private" virt="non-virtual"><scope>KWin::DamageJournal</scope><name>m_log</name></member>
      <member refid="class_k_win_1_1_damage_journal_1a1affcec938ce21596962e3c67f446ca1" prot="public" virt="non-virtual"><scope>KWin::DamageJournal</scope><name>setCapacity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
