<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="filtered__display_8cpp" kind="file" language="C++">
    <compoundname>filtered_display.cpp</compoundname>
    <includes refid="filtered__display_8h" local="yes">filtered_display.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes local="no">wayland-server.h</includes>
    <includes local="no">QByteArray</includes>
    <includes local="yes">moc_filtered_display.cpp</includes>
    <incdepgraph>
      <node id="3">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/filtered_display.cpp</label>
        <link refid="filtered__display_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>filtered_display.h</label>
        <link refid="filtered__display_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>QByteArray</label>
      </node>
      <node id="5">
        <label>QList</label>
      </node>
      <node id="6">
        <label>QObject</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="9">
        <label>moc_filtered_display.cpp</label>
      </node>
      <node id="7">
        <label>wayland-server.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_filtered_display_private" prot="public">KWin::FilteredDisplayPrivate</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2017<sp/>David<sp/>Edmundson<sp/>&lt;davidedmundson@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filtered__display_8h" kindref="compound">filtered_display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wayland-server.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QByteArray&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16" refid="class_k_win_1_1_filtered_display_private" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_filtered_display_private_1af1ede8bd85cb76addf28d0910f068058" kindref="member">FilteredDisplayPrivate</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_filtered_display_private_1af1ede8bd85cb76addf28d0910f068058" kindref="member">FilteredDisplayPrivate</ref>(<ref refid="class_k_win_1_1_filtered_display" kindref="compound">FilteredDisplay</ref><sp/>*_q);</highlight></codeline>
<codeline lineno="20" refid="class_k_win_1_1_filtered_display_private_1a2d1e4872b13b1ec346de8708b03f5944" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_filtered_display" kindref="compound">FilteredDisplay</ref><sp/>*<ref refid="class_k_win_1_1_filtered_display_private_1a2d1e4872b13b1ec346de8708b03f5944" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="21" refid="class_k_win_1_1_filtered_display_private_1a7d512cd5c69184729b889b9fac6e0657" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_filtered_display_private_1a7d512cd5c69184729b889b9fac6e0657" kindref="member">globalFilterCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wl_client<sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wl_global<sp/>*global,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_k_win_1_1_filtered_display_private_1af1ede8bd85cb76addf28d0910f068058" kindref="member">FilteredDisplayPrivate</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clientConnection<sp/>=<sp/>t-&gt;q-&gt;getConnection(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">wl_client<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(client));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">interface<sp/></highlight><highlight class="normal">=<sp/>wl_global_get_interface(global);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>QByteArray::fromRawData(interface-&gt;name,<sp/>strlen(interface-&gt;name));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t-&gt;q-&gt;allowInterface(clientConnection,<sp/>name);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_k_win_1_1_filtered_display_private_1af1ede8bd85cb76addf28d0910f068058" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_filtered_display_private_1af1ede8bd85cb76addf28d0910f068058" kindref="member">FilteredDisplayPrivate::FilteredDisplayPrivate</ref>(<ref refid="class_k_win_1_1_filtered_display" kindref="compound">FilteredDisplay</ref><sp/>*_q)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_filtered_display_private_1a2d1e4872b13b1ec346de8708b03f5944" kindref="member">q</ref>(_q)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_k_win_1_1_filtered_display_1a9fe1a40add12e705ea5c68883528a2ff" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_filtered_display_1a9fe1a40add12e705ea5c68883528a2ff" kindref="member">FilteredDisplay::FilteredDisplay</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_display_1abec28e9c667dfa4485597aaeebb07129" kindref="member">Display</ref>(parent)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_filtered_display_private" kindref="compound">FilteredDisplayPrivate</ref>(this))</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_k_win_1_1_display_1a923ef782d0c9b5b8d0afed92c506d11c" kindref="member">Display::runningChanged</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_display_1a0242f5e4216de825ed68f34f5d78820f" kindref="member">running</ref>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_k_win_1_1_display_1a0242f5e4216de825ed68f34f5d78820f" kindref="member">running</ref>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wl_display_set_global_filter(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_k_win_1_1_filtered_display_private_1a7d512cd5c69184729b889b9fac6e0657" kindref="member">FilteredDisplayPrivate::globalFilterCallback</ref>,<sp/>d.get());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_k_win_1_1_filtered_display_1aa8d25de1f330eeaa605a30e699c34606" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_filtered_display_1aa8d25de1f330eeaa605a30e699c34606" kindref="member">FilteredDisplay::~FilteredDisplay</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_filtered_display.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/filtered_display.cpp"/>
  </compounddef>
</doxygen>
