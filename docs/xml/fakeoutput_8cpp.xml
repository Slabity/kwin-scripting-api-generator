<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="fakeoutput_8cpp" kind="file" language="C++">
    <compoundname>fakeoutput.cpp</compoundname>
    <includes refid="fakeoutput_8h" local="yes">fakeoutput.h</includes>
    <includes local="yes">moc_fakeoutput.cpp</includes>
    <incdepgraph>
      <node id="15">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/tests/fakeoutput.cpp</label>
        <link refid="fakeoutput_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fakeoutput.h</label>
        <link refid="fakeoutput_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>QByteArray</label>
      </node>
      <node id="8">
        <label>QCoreApplication</label>
      </node>
      <node id="21">
        <label>QDebug</label>
      </node>
      <node id="9">
        <label>QImage</label>
      </node>
      <node id="19">
        <label>QList</label>
      </node>
      <node id="17">
        <label>QMatrix4x4</label>
      </node>
      <node id="13">
        <label>QObject</label>
      </node>
      <node id="10">
        <label>QPoint</label>
      </node>
      <node id="22">
        <label>QRect</label>
      </node>
      <node id="20">
        <label>QSize</label>
      </node>
      <node id="23">
        <label>QUuid</label>
      </node>
      <node id="11">
        <label>QVariant</label>
      </node>
      <node id="12">
        <label>QVector2D</label>
      </node>
      <node id="7">
        <label>config-kwin.h</label>
      </node>
      <node id="4">
        <label>kwin_export.h</label>
      </node>
      <node id="24">
        <label>moc_fakeoutput.cpp</label>
      </node>
      <node id="16">
        <label>optional</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2022<sp/>Xaver<sp/>Hugl<sp/>&lt;xaver.hugl@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fakeoutput_8h" kindref="compound">fakeoutput.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_fake_output_1a12d70a7d47745e3df96ed0ce740410ac" refkind="member"><highlight class="normal"><ref refid="class_fake_output_1a12d70a7d47745e3df96ed0ce740410ac" kindref="member">FakeOutput::FakeOutput</ref>()</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fake_output_1a0091186a88db3035208a9557861dfa6d" kindref="member">setMode</ref>(QSize(1024,<sp/>720),<sp/>60000);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_fake_output_1a0d040a2c7667ea8e6fb6577854da4334" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_render_loop" kindref="compound">KWin::RenderLoop</ref><sp/>*<ref refid="class_fake_output_1a0d040a2c7667ea8e6fb6577854da4334" kindref="member">FakeOutput::renderLoop</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_fake_output_1a0091186a88db3035208a9557861dfa6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a0091186a88db3035208a9557861dfa6d" kindref="member">FakeOutput::setMode</ref>(QSize<sp/>size,<sp/>uint32_t<sp/><ref refid="class_k_win_1_1_output_1a3e1d2698295c7897ca32593d1022449d" kindref="member">refreshRate</ref>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>std::make_shared&lt;KWin::OutputMode&gt;(size,<sp/><ref refid="class_k_win_1_1_output_1a3e1d2698295c7897ca32593d1022449d" kindref="member">refreshRate</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/><ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref>.modes<sp/>=<sp/>{mode};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref>.currentMode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(<ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_fake_output_1a4336bd346b9d433661c435ebf7b42fe3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a4336bd346b9d433661c435ebf7b42fe3" kindref="member">FakeOutput::setTransform</ref>(<ref refid="class_k_win_1_1_output_transform" kindref="compound">KWin::OutputTransform</ref><sp/><ref refid="class_k_win_1_1_output_1a66b40f1d46629cf20190d6f23224966f" kindref="member">transform</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/><ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref>.transform<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a66b40f1d46629cf20190d6f23224966f" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(<ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_fake_output_1af3ed3f92b38918a26383c5132b039fc4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1af3ed3f92b38918a26383c5132b039fc4" kindref="member">FakeOutput::moveTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;pos)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/><ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref>.position<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(<ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_fake_output_1aeb8490fd57ab0d556bcd63be17458611" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1aeb8490fd57ab0d556bcd63be17458611" kindref="member">FakeOutput::setScale</ref>(qreal<sp/><ref refid="class_k_win_1_1_output_1a26b1c3dcc612487192f4f23d11bc72b0" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_state" kindref="compound">State</ref><sp/><ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" kindref="member">m_state</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref>.scale<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a26b1c3dcc612487192f4f23d11bc72b0" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" kindref="member">setState</ref>(<ref refid="x11keyread_8cpp_1a0db44bec6a2ebf1a0cc819b5c9191cee" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_fake_output_1a65aeaf74fc589b6b273cf21580292d42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a65aeaf74fc589b6b273cf21580292d42" kindref="member">FakeOutput::setSubPixel</ref>(<ref refid="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925" kindref="member">SubPixel</ref><sp/><ref refid="class_k_win_1_1_output_1a80f4870d37e9b765e2c56091d1844ee1" kindref="member">subPixel</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" kindref="member">setInformation</ref>({</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.subPixel<sp/>=<sp/><ref refid="class_k_win_1_1_output_1a80f4870d37e9b765e2c56091d1844ee1" kindref="member">subPixel</ref>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_fake_output_1a42a35ca4d2cf07ec37c5b4d6fc761054" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a42a35ca4d2cf07ec37c5b4d6fc761054" kindref="member">FakeOutput::setDpmsSupported</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>supported)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" kindref="member">setInformation</ref>({</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.capabilities<sp/>=<sp/>supported<sp/>?<sp/><ref refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1aba1ff6c6a5c838a0a469f7399750739d77" kindref="member">Capability::Dpms</ref><sp/>:<sp/>Capabilities(),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_fake_output_1a4595c11f7858772aebd387f992d5414d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a4595c11f7858772aebd387f992d5414d" kindref="member">FakeOutput::setPhysicalSize</ref>(QSize<sp/>size)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" kindref="member">setInformation</ref>({</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSize<sp/>=<sp/>size,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_fake_output_1ab6a82f1b78c627d812a83c1252d92a0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1ab6a82f1b78c627d812a83c1252d92a0d" kindref="member">FakeOutput::setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_output_1ad56a9a779a9bbe7149428a1aa42abeee" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_information" kindref="compound">Information</ref><sp/>info<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ad75806b23fa7bd8bfacd2bb667d8d542" kindref="member">m_information</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="struct_k_win_1_1_output_1_1_information_1a73ee6286e140168ed21e87b2429880ae" kindref="member">name</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_1ad56a9a779a9bbe7149428a1aa42abeee" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" kindref="member">setInformation</ref>(info);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_fake_output_1a5cd444c1837befacc5e16135ee5b952d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1a5cd444c1837befacc5e16135ee5b952d" kindref="member">FakeOutput::setManufacturer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_output_1a18af9cd1a90948e0375eac86b7665368" kindref="member">manufacturer</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_information" kindref="compound">Information</ref><sp/>info<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ad75806b23fa7bd8bfacd2bb667d8d542" kindref="member">m_information</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="struct_k_win_1_1_output_1_1_information_1a380de1482375fc54a9cf93196187f714" kindref="member">manufacturer</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_1a18af9cd1a90948e0375eac86b7665368" kindref="member">manufacturer</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" kindref="member">setInformation</ref>(info);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_fake_output_1ad4488f4d157f2e3bcc34ed27f692198e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fake_output_1ad4488f4d157f2e3bcc34ed27f692198e" kindref="member">FakeOutput::setModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_output_1a41f6de69b05a8be304049fdee6917eb9" kindref="member">model</ref>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_output_1_1_information" kindref="compound">Information</ref><sp/>info<sp/>=<sp/><ref refid="class_k_win_1_1_output_1ad75806b23fa7bd8bfacd2bb667d8d542" kindref="member">m_information</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="struct_k_win_1_1_output_1_1_information_1a684c25b9d765094f06511bca26898681" kindref="member">model</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_1a41f6de69b05a8be304049fdee6917eb9" kindref="member">model</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" kindref="member">setInformation</ref>(info);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_fakeoutput.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/tests/fakeoutput.cpp"/>
  </compounddef>
</doxygen>
