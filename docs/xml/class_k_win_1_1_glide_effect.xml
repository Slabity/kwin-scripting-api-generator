<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_glide_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::GlideEffect</compoundname>
    <basecompoundref refid="class_k_win_1_1_offscreen_effect" prot="public" virt="non-virtual">KWin::OffscreenEffect</basecompoundref>
    <includes refid="glide_8h" local="no">glide.h</includes>
    <innerclass refid="struct_k_win_1_1_glide_effect_1_1_glide_params" prot="private">KWin::GlideEffect::GlideParams</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cf" prot="public" static="no" strong="no">
        <type></type>
        <name>RotationEdge</name>
        <qualifiedname>KWin::GlideEffect::RotationEdge</qualifiedname>
        <enumvalue id="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cfa2c2bb864d076a31915f392f9cf535571" prot="public">
          <name>Top</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cfa949cea9e2dd24a19b9be02e006a7689b" prot="public">
          <name>Right</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cfa45634c8b9f44d59d058cdb441cf61ece" prot="public">
          <name>Bottom</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cfa3fcea082a4a0d39536b45b10d7df09f6" prot="public">
          <name>Left</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="58" column="5" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="58" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_glide_effect_1a24447ec76b465776083b0615b3c04c97" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int KWin::GlideEffect::duration</definition>
        <argsstring></argsstring>
        <name>duration</name>
        <qualifiedname>KWin::GlideEffect::duration</qualifiedname>
        <read>duration</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="36" column="5" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_glide_effect_1afd073cfa8f5d4896d7a7c7ec51e60554" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cf" kindref="member">RotationEdge</ref></type>
        <definition>RotationEdge KWin::GlideEffect::inRotationEdge</definition>
        <argsstring></argsstring>
        <name>inRotationEdge</name>
        <qualifiedname>KWin::GlideEffect::inRotationEdge</qualifiedname>
        <read>inRotationEdge</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="37" column="5" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_glide_effect_1aa7a13a55de9344cc79a0db80ceea3509" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::inRotationAngle</definition>
        <argsstring></argsstring>
        <name>inRotationAngle</name>
        <qualifiedname>KWin::GlideEffect::inRotationAngle</qualifiedname>
        <read>inRotationAngle</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="38" column="5" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_glide_effect_1a8c62ea05131e5e91ddc79916930c3435" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::inDistance</definition>
        <argsstring></argsstring>
        <name>inDistance</name>
        <qualifiedname>KWin::GlideEffect::inDistance</qualifiedname>
        <read>inDistance</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="39" column="5" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_glide_effect_1aadfffb4bbd7d212e157c6d48250c6e56" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::inOpacity</definition>
        <argsstring></argsstring>
        <name>inOpacity</name>
        <qualifiedname>KWin::GlideEffect::inOpacity</qualifiedname>
        <read>inOpacity</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="40" column="5" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_glide_effect_1adc0dc9fe30797f935fb51a915fa14eef" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cf" kindref="member">RotationEdge</ref></type>
        <definition>RotationEdge KWin::GlideEffect::outRotationEdge</definition>
        <argsstring></argsstring>
        <name>outRotationEdge</name>
        <qualifiedname>KWin::GlideEffect::outRotationEdge</qualifiedname>
        <read>outRotationEdge</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="41" column="5" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_glide_effect_1a26d27c5db70c32f79887054fa4e29e6e" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::outRotationAngle</definition>
        <argsstring></argsstring>
        <name>outRotationAngle</name>
        <qualifiedname>KWin::GlideEffect::outRotationAngle</qualifiedname>
        <read>outRotationAngle</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="42" column="5" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_glide_effect_1a67efab340677417dafef73ad0139987b" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::outDistance</definition>
        <argsstring></argsstring>
        <name>outDistance</name>
        <qualifiedname>KWin::GlideEffect::outDistance</qualifiedname>
        <read>outDistance</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="43" column="5" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_glide_effect_1a02b2e4c76b8ba0759ffc4035b77cf742" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::outOpacity</definition>
        <argsstring></argsstring>
        <name>outOpacity</name>
        <qualifiedname>KWin::GlideEffect::outOpacity</qualifiedname>
        <read>outOpacity</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="44" column="5" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_glide_effect_1a8b8c026f5c6e1cce54dcb8194514d0cd" prot="private" static="no" mutable="no">
        <type>std::chrono::milliseconds</type>
        <definition>std::chrono::milliseconds KWin::GlideEffect::m_duration</definition>
        <argsstring></argsstring>
        <name>m_duration</name>
        <qualifiedname>KWin::GlideEffect::m_duration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="88" column="31" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_glide_effect_1ac801b1d0de21ff298064a4a6be2ac12f" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *, <ref refid="struct_k_win_1_1_glide_animation" kindref="compound">GlideAnimation</ref> &gt;</type>
        <definition>std::unordered_map&lt;EffectWindow *, GlideAnimation&gt; KWin::GlideEffect::m_animations</definition>
        <argsstring></argsstring>
        <name>m_animations</name>
        <qualifiedname>KWin::GlideEffect::m_animations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="89" column="24" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_glide_effect_1a4dfe13b4ab4b44ff53ce2acd99caf94e" prot="private" static="no" mutable="no">
        <type>GlideParams</type>
        <definition>GlideParams KWin::GlideEffect::m_inParams</definition>
        <argsstring></argsstring>
        <name>m_inParams</name>
        <qualifiedname>KWin::GlideEffect::m_inParams</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="101" column="17" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_glide_effect_1a697f9f42cbd9eaf03d052e177e879fa1" prot="private" static="no" mutable="no">
        <type>GlideParams</type>
        <definition>GlideParams KWin::GlideEffect::m_outParams</definition>
        <argsstring></argsstring>
        <name>m_outParams</name>
        <qualifiedname>KWin::GlideEffect::m_outParams</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="102" column="17" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="102" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a733da7279a2ab7c7b1ad71cfe51e0caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::GlideEffect::GlideEffect</definition>
        <argsstring>()</argsstring>
        <name>GlideEffect</name>
        <qualifiedname>KWin::GlideEffect::GlideEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="47" column="5" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="45" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a3d5c7ff4a0feb84d3213984f7a174c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::GlideEffect::~GlideEffect</definition>
        <argsstring>() override</argsstring>
        <name>~GlideEffect</name>
        <qualifiedname>KWin::GlideEffect::~GlideEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="48" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a39b90f1fc9d832c4140ec58737995793" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::GlideEffect::reconfigure</definition>
        <argsstring>(ReconfigureFlags flags) override</argsstring>
        <name>reconfigure</name>
        <qualifiedname>KWin::GlideEffect::reconfigure</qualifiedname>
        <reimplements refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d">reconfigure</reimplements>
        <param>
          <type>ReconfigureFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when configuration changes (either the effect&apos;s or <ref refid="namespace_k_win" kindref="compound">KWin</ref>&apos;s global).</para>
<para>In OpenGL based compositing, the frameworks ensures that the context is current when the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> is reconfigured. If this method is called from within the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> it is required to ensure that the context is current if the implementation does OpenGL calls. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="50" column="10" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="57" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a991e31a8720b20c40d0434397e4466c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::GlideEffect::prePaintWindow</definition>
        <argsstring>(EffectWindow *w, WindowPrePaintData &amp;data, std::chrono::milliseconds presentTime) override</argsstring>
        <name>prePaintWindow</name>
        <qualifiedname>KWin::GlideEffect::prePaintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga2832c7831c0f49f9f5cf0267ffc53672">prePaintWindow</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_pre_paint_data" kindref="compound">WindowPrePaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>presentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called for every window before the actual paint pass In this method you can: <itemizedlist>
<listitem><para>enable or disable painting of the window (e.g. enable paiting of minimized window) </para>
</listitem>
<listitem><para>set window to be painted with translucency </para>
</listitem>
<listitem><para>set window to be transformed </para>
</listitem>
<listitem><para>request the window to be divided into multiple parts</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked.</para>
<para><emphasis>presentTime</emphasis> specifies the expected monotonic time when the rendered frame will be displayed on the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="51" column="10" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="79" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1aef5e4608ef83a59e3257fcf3dfa528ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::GlideEffect::postPaintWindow</definition>
        <argsstring>(EffectWindow *w) override</argsstring>
        <name>postPaintWindow</name>
        <qualifiedname>KWin::GlideEffect::postPaintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga9b7cf82c6f74331cffabb06c63ef914c">postPaintWindow</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called for every window after all painting has been finished. In this method you can: <itemizedlist>
<listitem><para>schedule next repaint for individual window(s) in case of animations You shouldn&apos;t paint anything here.</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="52" column="10" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="161" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a46716131aaa19825ce7c30e722e93c80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::GlideEffect::isActive</definition>
        <argsstring>() const override</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::GlideEffect::isActive</qualifiedname>
        <reimplements refid="group__kwineffects_1ga596b6c0ed146b97b293f5db5f27fc40f">isActive</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrite this method to indicate whether your effect will be doing something in the next frame to be rendered. If the method returns <computeroutput>false</computeroutput> the effect will be excluded from the chained methods in the next rendered frame.</para>
<para>This method is called always directly before the paint loop begins. So it is totally fine to e.g. react on a window event, issue a repaint to trigger an animation and change a flag to indicate that this method returns <computeroutput>true</computeroutput>.</para>
<para>As the method is called each frame, you should not perform complex calculations. Best use just a boolean flag.</para>
<para>The default implementation of this method returns <computeroutput>true</computeroutput>. <simplesect kind="since"><para>4.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="53" column="10" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1add9b7899a07d20c6aeb8c13268c2f559" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int KWin::GlideEffect::requestedEffectChainPosition</definition>
        <argsstring>() const override</argsstring>
        <name>requestedEffectChainPosition</name>
        <qualifiedname>KWin::GlideEffect::requestedEffectChainPosition</qualifiedname>
        <reimplements refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a">requestedEffectChainPosition</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reimplement this method to indicate where in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> chain the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> should be placed.</para>
<para>A low number indicates early chain position, thus before other Effects got called, a high number indicates a late position. The returned number should be in the interval [0, 100]. The default value is 0.</para>
<para>In KWin4 this information was provided in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref>&apos;s desktop file as property X-KDE-Ordering. In the case of Scripted Effects this property is still used.</para>
<para><simplesect kind="since"><para>5.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="54" column="9" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a7d44fd72897535ba19e79f9b597ee6c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::GlideEffect::duration</definition>
        <argsstring>() const</argsstring>
        <name>duration</name>
        <qualifiedname>KWin::GlideEffect::duration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="66" column="9" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a76e46f066332ce75456192fe5e215f15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cf" kindref="member">RotationEdge</ref></type>
        <definition>GlideEffect::RotationEdge KWin::GlideEffect::inRotationEdge</definition>
        <argsstring>() const</argsstring>
        <name>inRotationEdge</name>
        <qualifiedname>KWin::GlideEffect::inRotationEdge</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="67" column="18" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a3b23de7d934dea69abdad0abedf41806" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::inRotationAngle</definition>
        <argsstring>() const</argsstring>
        <name>inRotationAngle</name>
        <qualifiedname>KWin::GlideEffect::inRotationAngle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="68" column="11" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a9f5f792e076145c38e0c468d9a609e8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::inDistance</definition>
        <argsstring>() const</argsstring>
        <name>inDistance</name>
        <qualifiedname>KWin::GlideEffect::inDistance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="69" column="11" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1abda098d13961a69963fe90fe5340d29f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::inOpacity</definition>
        <argsstring>() const</argsstring>
        <name>inOpacity</name>
        <qualifiedname>KWin::GlideEffect::inOpacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="70" column="11" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1af8f77053ef20201cbc05d41dfc5c8002" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cf" kindref="member">RotationEdge</ref></type>
        <definition>GlideEffect::RotationEdge KWin::GlideEffect::outRotationEdge</definition>
        <argsstring>() const</argsstring>
        <name>outRotationEdge</name>
        <qualifiedname>KWin::GlideEffect::outRotationEdge</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="71" column="18" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1ae2344e91691a9ac735ccd04fb4b42a2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::outRotationAngle</definition>
        <argsstring>() const</argsstring>
        <name>outRotationAngle</name>
        <qualifiedname>KWin::GlideEffect::outRotationAngle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="72" column="11" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1ae02b70c0334936a6f739fa7ddba4d84a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::outDistance</definition>
        <argsstring>() const</argsstring>
        <name>outDistance</name>
        <qualifiedname>KWin::GlideEffect::outDistance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="73" column="11" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a692f736daa655fb7e6db55ee901bca54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::GlideEffect::outOpacity</definition>
        <argsstring>() const</argsstring>
        <name>outOpacity</name>
        <qualifiedname>KWin::GlideEffect::outOpacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="74" column="11" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a914b2eae5794f410c84b7655d130ffd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::GlideEffect::blocksDirectScanout</definition>
        <argsstring>() const override</argsstring>
        <name>blocksDirectScanout</name>
        <qualifiedname>KWin::GlideEffect::blocksDirectScanout</qualifiedname>
        <reimplements refid="group__kwineffects_1ga7cf8035c970fcde177e3038d79015289">blocksDirectScanout</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>overwrite this method to return false if your effect does not need to be drawn over opaque fullscreen windows </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="75" column="10" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="306" bodyend="309"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1abf055da9818abbd167e4f47d6d3b60a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::GlideEffect::supported</definition>
        <argsstring>()</argsstring>
        <name>supported</name>
        <qualifiedname>KWin::GlideEffect::supported</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="56" column="17" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="182" bodyend="186"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1a453aeeb243a89f0c46eb247f1639b903" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::GlideEffect::apply</definition>
        <argsstring>(EffectWindow *window, int mask, WindowPaintData &amp;data, WindowQuadList &amp;quads) override</argsstring>
        <name>apply</name>
        <qualifiedname>KWin::GlideEffect::apply</qualifiedname>
        <reimplements refid="class_k_win_1_1_offscreen_effect_1a770fb27f108f87402051ca3f320092b2">apply</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref> &amp;</type>
          <declname>quads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override this function to transform the window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="78" column="10" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="90" bodyend="159"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_glide_effect_1ae842d9fb783c8a354e693b5f81e927e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::GlideEffect::windowAdded</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>windowAdded</name>
        <qualifiedname>KWin::GlideEffect::windowAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="81" column="10" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="188" bodyend="218"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_glide_effect_1ab9aa09714e28b7223ba601923b45a8f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::GlideEffect::windowClosed</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>windowClosed</name>
        <qualifiedname>KWin::GlideEffect::windowClosed</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="82" column="10" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="220" bodyend="246"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_glide_effect_1abed73823cd99fef7d4736c17b5db5588" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::GlideEffect::windowDataChanged</definition>
        <argsstring>(EffectWindow *w, int role)</argsstring>
        <name>windowDataChanged</name>
        <qualifiedname>KWin::GlideEffect::windowDataChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>role</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="83" column="10" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="248" bodyend="263"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_glide_effect_1aa701779ccf44a25b43da313a3f0d7ed6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::GlideEffect::isGlideWindow</definition>
        <argsstring>(EffectWindow *w) const</argsstring>
        <name>isGlideWindow</name>
        <qualifiedname>KWin::GlideEffect::isGlideWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/glide/glide.h" line="86" column="10" bodyfile="kwin/src/plugins/glide/glide.cpp" bodystart="265" bodyend="304"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::GlideEffect</label>
        <link refid="class_k_win_1_1_glide_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::OffscreenEffect</label>
        <link refid="class_k_win_1_1_offscreen_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::GlideEffect</label>
        <link refid="class_k_win_1_1_glide_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::OffscreenEffect</label>
        <link refid="class_k_win_1_1_offscreen_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/glide/glide.h" line="33" column="1" bodyfile="kwin/src/plugins/glide/glide.h" bodystart="34" bodyend="103"/>
    <listofallmembers>
      <member refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga3a167fe6d9c46376ed46db13caf2d135" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga0ba05f1463195d0f92ea1dd3396a5d16" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>animationTime</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a453aeeb243a89f0c46eb247f1639b903" prot="protected" virt="virtual"><scope>KWin::GlideEffect</scope><name>apply</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a914b2eae5794f410c84b7655d130ffd5" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>blocksDirectScanout</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea67d120ab5ce1dc424476e63c132af6c1" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>Blur</name></member>
      <member refid="group__kwineffects_1gab8a94f591b743b59b7285911e641e7d5" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>borderActivated</name></member>
      <member refid="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cfa45634c8b9f44d59d058cdb441cf61ece" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>Bottom</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aead805f717a48c23959a1e9ecd7722d15d" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>Contrast</name></member>
      <member refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>cursorPos</name></member>
      <member refid="group__kwineffects_1ga0c159e00c3a51ca733bea49cf8d52691" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>debug</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a0a6ba121aa03a17457d3080054ef1615" prot="protected" virt="virtual"><scope>KWin::GlideEffect</scope><name>drawWindow</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a24447ec76b465776083b0615b3c04c97" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>duration</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a7d44fd72897535ba19e79f9b597ee6c3" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>duration</name></member>
      <member refid="group__kwineffects_1ga7bd8262f4cb2c5c3090c748eb388ad7e" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>Effect</name></member>
      <member refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>Feature</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a733da7279a2ab7c7b1ad71cfe51e0caa" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>GlideEffect</name></member>
      <member refid="group__kwineffects_1gab5e0581ae4b2dffe8014ff5cf6c21158" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>grabbedKeyboardEvent</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>HighlightWindows</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a8c62ea05131e5e91ddc79916930c3435" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>inDistance</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a9f5f792e076145c38e0c468d9a609e8f" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>inDistance</name></member>
      <member refid="class_k_win_1_1_glide_effect_1aadfffb4bbd7d212e157c6d48250c6e56" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>inOpacity</name></member>
      <member refid="class_k_win_1_1_glide_effect_1abda098d13961a69963fe90fe5340d29f" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>inOpacity</name></member>
      <member refid="class_k_win_1_1_glide_effect_1aa7a13a55de9344cc79a0db80ceea3509" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>inRotationAngle</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a3b23de7d934dea69abdad0abedf41806" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>inRotationAngle</name></member>
      <member refid="class_k_win_1_1_glide_effect_1afd073cfa8f5d4896d7a7c7ec51e60554" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>inRotationEdge</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a76e46f066332ce75456192fe5e215f15" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>inRotationEdge</name></member>
      <member refid="group__kwineffects_1ga7b0ecb57667179e95c188f0ee7416d00" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>interpolate</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a46716131aaa19825ce7c30e722e93c80" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_glide_effect_1aa701779ccf44a25b43da313a3f0d7ed6" prot="private" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>isGlideWindow</name></member>
      <member refid="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cfa3fcea082a4a0d39536b45b10d7df09f6" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>Left</name></member>
      <member refid="class_k_win_1_1_glide_effect_1ac801b1d0de21ff298064a4a6be2ac12f" prot="private" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>m_animations</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a8b8c026f5c6e1cce54dcb8194514d0cd" prot="private" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>m_duration</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a4dfe13b4ab4b44ff53ce2acd99caf94e" prot="private" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>m_inParams</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a697f9f42cbd9eaf03d052e177e879fa1" prot="private" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>m_outParams</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea170229312ed2ec0e446ee89ba7f6b6ca" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>Nothing</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ac2af5bb9d718ff03474cdd2d6715a055" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>OffscreenEffect</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a67efab340677417dafef73ad0139987b" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>outDistance</name></member>
      <member refid="class_k_win_1_1_glide_effect_1ae02b70c0334936a6f739fa7ddba4d84a" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>outDistance</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a02b2e4c76b8ba0759ffc4035b77cf742" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>outOpacity</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a692f736daa655fb7e6db55ee901bca54" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>outOpacity</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a26d27c5db70c32f79887054fa4e29e6e" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>outRotationAngle</name></member>
      <member refid="class_k_win_1_1_glide_effect_1ae2344e91691a9ac735ccd04fb4b42a2e" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>outRotationAngle</name></member>
      <member refid="class_k_win_1_1_glide_effect_1adc0dc9fe30797f935fb51a915fa14eef" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>outRotationEdge</name></member>
      <member refid="class_k_win_1_1_glide_effect_1af8f77053ef20201cbc05d41dfc5c8002" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>outRotationEdge</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dab0de2932c45bde6df3de10d00dbd6fcd" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>PAINT_SCREEN_BACKGROUND_FIRST</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da43acbfc913cae9eb3c363aeb0524f18f" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>PAINT_SCREEN_REGION</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>PAINT_SCREEN_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da124dd798e5f793087e81da77e11a9b1e" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>PAINT_SCREEN_WITH_TRANSFORMED_WINDOWS</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac606d3dcf2dd150234f71c4c39083c7d" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>PAINT_WINDOW_OPAQUE</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da684bb6c6c278b900b6d0c889e79233b8" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>PAINT_WINDOW_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac7237bf4bb4d6ea6d6fb1215db19b45e" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>PAINT_WINDOW_TRANSLUCENT</name></member>
      <member refid="group__kwineffects_1ga44ee94161446ce6fb2502376af6515a8" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>paintScreen</name></member>
      <member refid="group__kwineffects_1ga0f0292db2bf016a0843ef7cc06219378" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>paintWindow</name></member>
      <member refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>perform</name></member>
      <member refid="group__kwineffects_1ga10021cf9704c00d60beae284d53846e2" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>postPaintScreen</name></member>
      <member refid="class_k_win_1_1_glide_effect_1aef5e4608ef83a59e3257fcf3dfa528ee" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>postPaintWindow</name></member>
      <member refid="group__kwineffects_1ga2edc1b757e36bb6bcbbacde454dfc05c" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>prePaintScreen</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a991e31a8720b20c40d0434397e4466c8" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>prePaintWindow</name></member>
      <member refid="group__kwineffects_1ga30fc2cbbdd90f95568a9e350f34bf2b7" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>provides</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a39b90f1fc9d832c4140ec58737995793" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>reconfigure</name></member>
      <member refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>ReconfigureAll</name></member>
      <member refid="group__kwineffects_1ga4aebd7d0f695e37678debaa118fa92dc" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>ReconfigureFlag</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a6f9911e49dbaf73975c2f238937930be" prot="protected" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>redirect</name></member>
      <member refid="class_k_win_1_1_glide_effect_1add9b7899a07d20c6aeb8c13268c2f559" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>requestedEffectChainPosition</name></member>
      <member refid="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cfa949cea9e2dd24a19b9be02e006a7689b" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>Right</name></member>
      <member refid="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cf" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>RotationEdge</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea592ea0de7a4d658a1ef9bbb48b18e15a" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>ScreenInversion</name></member>
      <member refid="group__kwineffects_1ga1efc42cd9be15e8200c6e55f6bf47cb8" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>setPositionTransformations</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ae98f808ad3750003d4a1f7f24fa284a5" prot="protected" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>setShader</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ae390a8c07620d899b467b6c919901649" prot="protected" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>setVertexSnappingMode</name></member>
      <member refid="class_k_win_1_1_glide_effect_1abf055da9818abbd167e4f47d6d3b60a2" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>supported</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea19036d413806c53978a3234e7eb197c4" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>SystemBell</name></member>
      <member refid="group__kwineffects_1ga2d22a8f0b8a4d81615dff67dc1ef970f" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>tabletPadButtonEvent</name></member>
      <member refid="group__kwineffects_1gaa084e5a45597f5775213715eb5506f63" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>tabletPadRingEvent</name></member>
      <member refid="group__kwineffects_1ga4998fb0983bd97163935cad2c4dedd76" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>tabletPadStripEvent</name></member>
      <member refid="group__kwineffects_1ga1d4ae01f5935ea887a12018d59191cbf" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>tabletToolAxis</name></member>
      <member refid="group__kwineffects_1ga7a984d7d83dfa97962b8404301c6aba9" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>tabletToolButtonEvent</name></member>
      <member refid="group__kwineffects_1ga4ed77506be381680bf664dbc8c20e036" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>tabletToolProximity</name></member>
      <member refid="group__kwineffects_1gaf16e9ca42cceb738fb859d1a1a462548" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>tabletToolTip</name></member>
      <member refid="class_k_win_1_1_glide_effect_1aa6bd9e7cc157e62e51eb3835131477cfa2c2bb864d076a31915f392f9cf535571" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>Top</name></member>
      <member refid="group__kwineffects_1gaa31554949bc00085e6380b50be16138e" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>touchCancel</name></member>
      <member refid="group__kwineffects_1ga315fd305e7570f41e7bce7db6812381f" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>touchDown</name></member>
      <member refid="group__kwineffects_1ga54d00a9e05b5d4597db40c2f5b1d36de" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>touchMotion</name></member>
      <member refid="group__kwineffects_1gaf3871967d6199eb7c87621bc75b925bb" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a503d5105f32353e6a0046b8a0ea91b22" prot="protected" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>unredirect</name></member>
      <member refid="class_k_win_1_1_glide_effect_1ae842d9fb783c8a354e693b5f81e927e8" prot="private" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>windowAdded</name></member>
      <member refid="class_k_win_1_1_glide_effect_1ab9aa09714e28b7223ba601923b45a8f1" prot="private" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>windowClosed</name></member>
      <member refid="class_k_win_1_1_glide_effect_1abed73823cd99fef7d4736c17b5db5588" prot="private" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>windowDataChanged</name></member>
      <member refid="group__kwineffects_1ga7b142933c38cb9b4a433b768b266e7cb" prot="public" virt="virtual"><scope>KWin::GlideEffect</scope><name>windowInputMouseEvent</name></member>
      <member refid="group__kwineffects_1ga50174eb0169aebceb78ebd5aff71c481" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>~Effect</name></member>
      <member refid="class_k_win_1_1_glide_effect_1a3d5c7ff4a0feb84d3213984f7a174c9e" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>~GlideEffect</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ac913e0092c54576890821b0bcb3e7033" prot="public" virt="non-virtual"><scope>KWin::GlideEffect</scope><name>~OffscreenEffect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
