<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespace_k_win_1_1_k_screen_integration" kind="namespace" language="C++">
    <compoundname>KWin::KScreenIntegration</compoundname>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_k_win_1_1_k_screen_integration_1ab4d930cee4b5216d0017ee0f76fe3f2f" prot="public" static="no" strong="no">
        <type></type>
        <name>Rotation</name>
        <qualifiedname>KWin::KScreenIntegration::Rotation</qualifiedname>
        <enumvalue id="namespace_k_win_1_1_k_screen_integration_1ab4d930cee4b5216d0017ee0f76fe3f2fa2a27cac7850401842e2189cca80c5c65" prot="public">
          <name>None</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_k_win_1_1_k_screen_integration_1ab4d930cee4b5216d0017ee0f76fe3f2faeb7077eac0e4b3ec87c88e72210c64d3" prot="public">
          <name>Left</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_k_win_1_1_k_screen_integration_1ab4d930cee4b5216d0017ee0f76fe3f2fa90dc10eb603b8657d5ae11798d81f01e" prot="public">
          <name>Inverted</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_k_win_1_1_k_screen_integration_1ab4d930cee4b5216d0017ee0f76fe3f2fa417c95524924c2be5072c2d15c805142" prot="public">
          <name>Right</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>See KScreen::Output::Rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/kscreenintegration.cpp" line="144" column="1" bodyfile="kwin/src/kscreenintegration.cpp" bodystart="144" bodyend="149"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_k_win_1_1_k_screen_integration_1ac2522f8ef766f9cf920e6a42addf07ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>static QString KWin::KScreenIntegration::outputHash</definition>
        <argsstring>(Output *output)</argsstring>
        <name>outputHash</name>
        <qualifiedname>KWin::KScreenIntegration::outputHash</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>See KScreen::Output::hashMd5. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/kscreenintegration.cpp" line="28" column="16" bodyfile="kwin/src/kscreenintegration.cpp" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_k_screen_integration_1a0c3c1a310b94fc1117b584b3caf536b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::KScreenIntegration::connectedOutputsHash</definition>
        <argsstring>(const QList&lt; Output * &gt; &amp;outputs, bool isLidClosed)</argsstring>
        <name>connectedOutputsHash</name>
        <qualifiedname>KWin::KScreenIntegration::connectedOutputsHash</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isLidClosed</declname>
        </param>
        <briefdescription>
<para>See KScreen::Config::connectedOutputsHash in libkscreen. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/kscreenintegration.cpp" line="38" column="9" bodyfile="kwin/src/kscreenintegration.cpp" bodystart="38" bodyend="54" declfile="kwin/src/kscreenintegration.h" declline="21" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_k_screen_integration_1a9401572e53645c5f7d91b84873918449" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QHash&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *, QJsonObject &gt;</type>
        <definition>static QHash&lt; Output *, QJsonObject &gt; KWin::KScreenIntegration::outputsConfig</definition>
        <argsstring>(const QList&lt; Output * &gt; &amp;outputs, const QString &amp;hash)</argsstring>
        <name>outputsConfig</name>
        <qualifiedname>KWin::KScreenIntegration::outputsConfig</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/kscreenintegration.cpp" line="56" column="14" bodyfile="kwin/src/kscreenintegration.cpp" bodystart="56" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_k_screen_integration_1a370aac2d3061829e94a9ed74130f4c40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; QJsonObject &gt;</type>
        <definition>static std::optional&lt; QJsonObject &gt; KWin::KScreenIntegration::globalOutputConfig</definition>
        <argsstring>(Output *output)</argsstring>
        <name>globalOutputConfig</name>
        <qualifiedname>KWin::KScreenIntegration::globalOutputConfig</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/kscreenintegration.cpp" line="117" column="22" bodyfile="kwin/src/kscreenintegration.cpp" bodystart="117" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_k_screen_integration_1ad79aec49eaf165f14d778b4fd742710f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref></type>
        <definition>OutputTransform KWin::KScreenIntegration::toKWinTransform</definition>
        <argsstring>(int rotation)</argsstring>
        <name>toKWinTransform</name>
        <qualifiedname>KWin::KScreenIntegration::toKWinTransform</qualifiedname>
        <param>
          <type>int</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/kscreenintegration.cpp" line="151" column="17" bodyfile="kwin/src/kscreenintegration.cpp" bodystart="151" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_k_screen_integration_1ad1607ab76e0e21ec0907e50666654404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_mode" kindref="compound">OutputMode</ref> &gt;</type>
        <definition>std::shared_ptr&lt; OutputMode &gt; KWin::KScreenIntegration::parseMode</definition>
        <argsstring>(Output *output, const QJsonObject &amp;modeInfo)</argsstring>
        <name>parseMode</name>
        <qualifiedname>KWin::KScreenIntegration::parseMode</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const QJsonObject &amp;</type>
          <declname>modeInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/kscreenintegration.cpp" line="167" column="17" bodyfile="kwin/src/kscreenintegration.cpp" bodystart="167" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_k_screen_integration_1af71ae8f42844485f1bbb39b80ee4f4ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::pair&lt; <ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref>, QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &gt; &gt;</type>
        <definition>std::optional&lt; std::pair&lt; OutputConfiguration, QList&lt; Output * &gt; &gt; &gt; KWin::KScreenIntegration::readOutputConfig</definition>
        <argsstring>(const QList&lt; Output * &gt; &amp;outputs, const QString &amp;hash)</argsstring>
        <name>readOutputConfig</name>
        <qualifiedname>KWin::KScreenIntegration::readOutputConfig</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/kscreenintegration.cpp" line="180" column="15" bodyfile="kwin/src/kscreenintegration.cpp" bodystart="180" bodyend="285" declfile="kwin/src/kscreenintegration.h" declline="22" declcolumn="15"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/kscreenintegration.cpp" line="25" column="1"/>
  </compounddef>
</doxygen>
