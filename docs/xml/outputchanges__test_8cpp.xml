<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="outputchanges__test_8cpp" kind="file" language="C++">
    <compoundname>outputchanges_test.cpp</compoundname>
    <includes refid="kwin__wayland__test_8h" local="yes">kwin_wayland_test.h</includes>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes refid="outputbackend_8h" local="yes">core/outputbackend.h</includes>
    <includes refid="outputconfiguration_8h" local="yes">core/outputconfiguration.h</includes>
    <includes refid="outputconfigurationstore_8h" local="yes">outputconfigurationstore.h</includes>
    <includes refid="pointer__input_8h" local="yes">pointer_input.h</includes>
    <includes refid="tilemanager_8h" local="yes">tiles/tilemanager.h</includes>
    <includes refid="wayland__server_8h" local="yes">wayland_server.h</includes>
    <includes local="yes">window.h</includes>
    <includes refid="workspace_8h" local="yes">workspace.h</includes>
    <includes refid="x11window_8h" local="yes">x11window.h</includes>
    <includes local="no">KWayland/Client/surface.h</includes>
    <includes local="no">QOrientationSensor</includes>
    <includes local="no">netwm.h</includes>
    <includes local="no">xcb/xcb_icccm.h</includes>
    <includes local="no">ranges</includes>
    <includes local="yes">outputchanges_test.moc</includes>
    <incdepgraph>
      <node id="2">
        <label>kwin_wayland_test.h</label>
        <link refid="kwin__wayland__test_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/autotests/integration/outputchanges_test.cpp</label>
        <link refid="outputchanges__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>core/outputbackend.h</label>
        <link refid="outputbackend_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>core/outputconfiguration.h</label>
        <link refid="outputconfiguration_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>cursor.h</label>
        <link refid="cursor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>effect/xcb.h</label>
        <link refid="xcb_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>input.h</label>
        <link refid="input_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>options.h</label>
        <link refid="options_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>outputconfigurationstore.h</label>
        <link refid="outputconfigurationstore_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>pointer_input.h</label>
        <link refid="pointer__input_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>rules.h</label>
        <link refid="rules_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>scripting/tilemodel.h</label>
        <link refid="tilemodel_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>sm.h</label>
        <link refid="sm_8h"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>customtile.h</label>
        <link refid="customtile_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>quicktile.h</label>
        <link refid="quicktile_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>tiles/tile.h</label>
        <link refid="tile_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>tiles/tilemanager.h</label>
        <link refid="tilemanager_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>utils/c_ptr.h</label>
        <link refid="c__ptr_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>utils/cursortheme.h</label>
        <link refid="cursortheme_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>utils/xcbutils.h</label>
        <link refid="xcbutils_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>wayland_server.h</label>
        <link refid="wayland__server_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>window.h</label>
        <link refid="window_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>workspace.h</label>
        <link refid="workspace_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>x11window.h</label>
        <link refid="x11window_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>KConfigGroup</label>
      </node>
      <node id="60">
        <label>KConfigWatcher</label>
      </node>
      <node id="56">
        <label>KSharedConfig</label>
      </node>
      <node id="17">
        <label>KWayland/Client/surface.h</label>
      </node>
      <node id="112">
        <label>NETWM</label>
      </node>
      <node id="79">
        <label>QAbstractItemModel</label>
      </node>
      <node id="86">
        <label>QAbstractNativeEventFilter</label>
      </node>
      <node id="87">
        <label>QApplication</label>
      </node>
      <node id="40">
        <label>QByteArray</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="90">
        <label>QDBusContext</label>
      </node>
      <node id="91">
        <label>QDataStream</label>
      </node>
      <node id="43">
        <label>QDebug</label>
      </node>
      <node id="66">
        <label>QElapsedTimer</label>
      </node>
      <node id="109">
        <label>QFlags</label>
      </node>
      <node id="99">
        <label>QGuiApplication</label>
      </node>
      <node id="55">
        <label>QHash</label>
      </node>
      <node id="107">
        <label>QIcon</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="80">
        <label>QJsonValue</label>
      </node>
      <node id="108">
        <label>QKeySequence</label>
      </node>
      <node id="41">
        <label>QList</label>
      </node>
      <node id="76">
        <label>QLoggingCategory</label>
      </node>
      <node id="39">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="115">
        <label>QOrientationSensor</label>
      </node>
      <node id="110">
        <label>QPixmap</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="67">
        <label>QPointF</label>
      </node>
      <node id="59">
        <label>QPointer</label>
      </node>
      <node id="88">
        <label>QProcessEnvironment</label>
      </node>
      <node id="44">
        <label>QRect</label>
      </node>
      <node id="78">
        <label>QRectF</label>
      </node>
      <node id="101">
        <label>QRegion</label>
      </node>
      <node id="61">
        <label>QSet</label>
      </node>
      <node id="64">
        <label>QSharedDataPointer</label>
      </node>
      <node id="15">
        <label>QSignalSpy</label>
      </node>
      <node id="42">
        <label>QSize</label>
      </node>
      <node id="75">
        <label>QString</label>
      </node>
      <node id="92">
        <label>QStringList</label>
      </node>
      <node id="16">
        <label>QTest</label>
      </node>
      <node id="93">
        <label>QTimer</label>
      </node>
      <node id="45">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="111">
        <label>QWindow</label>
      </node>
      <node id="65">
        <label>chrono</label>
      </node>
      <node id="77">
        <label>climits</label>
      </node>
      <node id="5">
        <label>config-kwin.h</label>
      </node>
      <node id="47">
        <label>epoxy/egl.h</label>
      </node>
      <node id="62">
        <label>functional</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="13">
        <label>main.h</label>
      </node>
      <node id="48">
        <label>memory</label>
      </node>
      <node id="116">
        <label>netwm.h</label>
      </node>
      <node id="95">
        <label>netwm_def.h</label>
      </node>
      <node id="18">
        <label>optional</label>
      </node>
      <node id="119">
        <label>outputchanges_test.moc</label>
      </node>
      <node id="19">
        <label>qwayland-color-management-v1.h</label>
      </node>
      <node id="20">
        <label>qwayland-cursor-shape-v1.h</label>
      </node>
      <node id="21">
        <label>qwayland-fake-input.h</label>
      </node>
      <node id="22">
        <label>qwayland-fractional-scale-v1.h</label>
      </node>
      <node id="23">
        <label>qwayland-idle-inhibit-unstable-v1.h</label>
      </node>
      <node id="24">
        <label>qwayland-input-method-unstable-v1.h</label>
      </node>
      <node id="25">
        <label>qwayland-kde-output-device-v2.h</label>
      </node>
      <node id="26">
        <label>qwayland-kde-output-management-v2.h</label>
      </node>
      <node id="27">
        <label>qwayland-kde-screen-edge-v1.h</label>
      </node>
      <node id="28">
        <label>qwayland-security-context-v1.h</label>
      </node>
      <node id="29">
        <label>qwayland-text-input-unstable-v3.h</label>
      </node>
      <node id="30">
        <label>qwayland-wlr-layer-shell-unstable-v1.h</label>
      </node>
      <node id="31">
        <label>qwayland-xdg-decoration-unstable-v1.h</label>
      </node>
      <node id="32">
        <label>qwayland-xdg-dialog-v1.h</label>
      </node>
      <node id="33">
        <label>qwayland-xdg-shell.h</label>
      </node>
      <node id="34">
        <label>qwayland-zkde-screencast-unstable-v1.h</label>
      </node>
      <node id="118">
        <label>ranges</label>
      </node>
      <node id="51">
        <label>tuple</label>
      </node>
      <node id="52">
        <label>unordered_map</label>
      </node>
      <node id="72">
        <label>virtualdesktops.h</label>
      </node>
      <node id="14">
        <label>window.h</label>
      </node>
      <node id="102">
        <label>xcb/composite.h</label>
      </node>
      <node id="103">
        <label>xcb/randr.h</label>
      </node>
      <node id="113">
        <label>xcb/res.h</label>
      </node>
      <node id="104">
        <label>xcb/shm.h</label>
      </node>
      <node id="114">
        <label>xcb/sync.h</label>
      </node>
      <node id="57">
        <label>xcb/xcb.h</label>
      </node>
      <node id="117">
        <label>xcb/xcb_icccm.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_win_1_1_lid_switch" prot="public">KWin::LidSwitch</innerclass>
    <innerclass refid="class_k_win_1_1_output_changes_test" prot="public">KWin::OutputChangesTest</innerclass>
    <innerclass refid="struct_k_win_1_1_identification_data" prot="public">KWin::IdentificationData</innerclass>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kwin__wayland__test_8h" kindref="compound">kwin_wayland_test.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputbackend_8h" kindref="compound">core/outputbackend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputconfiguration_8h" kindref="compound">core/outputconfiguration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="outputconfigurationstore_8h" kindref="compound">outputconfigurationstore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__input_8h" kindref="compound">pointer_input.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tilemanager_8h" kindref="compound">tiles/tilemanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland__server_8h" kindref="compound">wayland_server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workspace_8h" kindref="compound">workspace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="x11window_8h" kindref="compound">x11window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/surface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QOrientationSensor&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netwm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xcb/xcb_icccm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ranges&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>s_socketName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;wayland_test_output_changes-0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361" kindref="member">DeviceType</ref><sp/>{</highlight></codeline>
<codeline lineno="35" refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" kindref="member">Desktop</ref>,</highlight></codeline>
<codeline lineno="36" refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a146bdebb324a64d327b1dde22a07d0bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a146bdebb324a64d327b1dde22a07d0bd" kindref="member">Laptop</ref>,</highlight></codeline>
<codeline lineno="37" refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361abcc254b55c4a1babdf1dcb82c207506b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361abcc254b55c4a1babdf1dcb82c207506b" kindref="member">Phone</ref>,</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_k_win_1_1_lid_switch" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_lid_switch_1abcd23b59124830d66747f6ff951d5ae6" kindref="member">LidSwitch</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_1aa28bcff91a76e7c2b405dc6cc895cde6" kindref="member">InputDevice</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="class_k_win_1_1_lid_switch_1abcd23b59124830d66747f6ff951d5ae6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1abcd23b59124830d66747f6ff951d5ae6" kindref="member">LidSwitch</ref>(QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_input_device_1aa28bcff91a76e7c2b405dc6cc895cde6" kindref="member">InputDevice</ref>(parent)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_k_win_1_1_lid_switch_1ac95308d2225408550b8f5f47720a29ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_lid_switch_1ac95308d2225408550b8f5f47720a29ec" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="51"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;lid<sp/>switch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_k_win_1_1_lid_switch_1a01c1b687e3f25c164b5b3dc42a34fa6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1a01c1b687e3f25c164b5b3dc42a34fa6b" kindref="member">isEnabled</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59" refid="class_k_win_1_1_lid_switch_1a2e0f39539d3d3f6e6ca5ac0f4f50841e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1a2e0f39539d3d3f6e6ca5ac0f4f50841e" kindref="member">setEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="60"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_k_win_1_1_lid_switch_1abea9844cf405a6e1e3cfb2adfcc1f65b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1abea9844cf405a6e1e3cfb2adfcc1f65b" kindref="member">isKeyboard</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="64"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67" refid="class_k_win_1_1_lid_switch_1a719cee143aad99d906db06855fa1c541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1a719cee143aad99d906db06855fa1c541" kindref="member">isPointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71" refid="class_k_win_1_1_lid_switch_1a1ea3367f3e1f9f9df0ab0cba030fb9d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1a1ea3367f3e1f9f9df0ab0cba030fb9d9" kindref="member">isTouchpad</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75" refid="class_k_win_1_1_lid_switch_1a551b900b09a19917cbcf94c45e493211" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1a551b900b09a19917cbcf94c45e493211" kindref="member">isTouch</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79" refid="class_k_win_1_1_lid_switch_1a284e73f9b4ff5177f61fb986179d442d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1a284e73f9b4ff5177f61fb986179d442d" kindref="member">isTabletTool</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="80"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83" refid="class_k_win_1_1_lid_switch_1a1d4c2d38832338e1e650232a944b6df1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1a1d4c2d38832338e1e650232a944b6df1" kindref="member">isTabletPad</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="84"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87" refid="class_k_win_1_1_lid_switch_1ad334a0a6c2bda88ccb7627d8a9c78fd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1ad334a0a6c2bda88ccb7627d8a9c78fd8" kindref="member">isTabletModeSwitch</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="88"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91" refid="class_k_win_1_1_lid_switch_1ad2f7c16c3d95dc761e18d41e9af86dc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_lid_switch_1ad2f7c16c3d95dc761e18d41e9af86dc6" kindref="member">isLidSwitch</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_k_win_1_1_output_changes_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_output_changes_test" kindref="compound">OutputChangesTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Q_SLOTS:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initTestCase();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanup();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testWindowSticksToOutputAfterOutputIsDisabled();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testWindowSticksToOutputAfterAnotherOutputIsDisabled();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testWindowSticksToOutputAfterOutputIsMoved();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testWindowSticksToOutputAfterOutputsAreSwappedLeftToRight();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testWindowSticksToOutputAfterOutputsAreSwappedRightToLeft();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testWindowRestoredAfterEnablingOutput();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMaximizedWindowRestoredAfterEnablingOutput();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testFullScreenWindowRestoredAfterEnablingOutput();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testQuickTiledWindowRestoredAfterEnablingOutput();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testQuickTileUntileWindowRestoredAfterEnablingOutput();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testCustomTiledWindowRestoredAfterEnablingOutput_data();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testCustomTiledWindowRestoredAfterEnablingOutput();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testWindowRestoredAfterChangingScale();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMaximizeStateRestoredAfterEnablingOutput_data();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMaximizeStateRestoredAfterEnablingOutput();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testInvalidGeometryRestoreAfterEnablingOutput();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMaximizedWindowDoesntDisappear_data();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMaximizedWindowDoesntDisappear();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testXwaylandScaleChange();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testWindowNotRestoredAfterMovingWindowAndEnablingOutput();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testLaptopLidClosed();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testGenerateConfigs_data();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testGenerateConfigs();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testAutorotate_data();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testAutorotate();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSettingRestoration_data();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSettingRestoration();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSettingRestoration_initialParsingFailure();</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::initTestCase()</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>qRegisterMetaType&lt;Window<sp/>*&gt;();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1a820772eeac71cfe988208d4b4e5764a6" kindref="member">waylandServer</ref>()-&gt;init(s_socketName));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>kwinApp()-&gt;start();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" kindref="member">outputs</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs.count(),<sp/>2);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs[0]-&gt;geometry(),<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputs[1]-&gt;geometry(),<sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::init()</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="namespace_k_win_1_1_test_1a36c6e87757c3c97858c55b650c9d304c" kindref="member">Test::setupWaylandConnection</ref>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1abe694aeb41eaff7b515070ad0c11dba4" kindref="member">setActiveOutput</ref>(QPoint(640,<sp/>512));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a74da9abb10fc4dd9dcf4a0addc46c9bd" kindref="member">pointer</ref>()-&gt;<ref refid="class_k_win_1_1_pointer_input_redirection_1ad863f302cae5e8e1634db3d75a85f69e" kindref="member">warp</ref>(QPoint(640,<sp/>512));</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::cleanup()</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a12755bae9118cb958baf0efbd222d7c8" kindref="member">Test::destroyWaylandConnection</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testWindowSticksToOutputAfterOutputIsDisabled()</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>some<sp/>predefined<sp/>position<sp/>so<sp/>the<sp/>test<sp/>is<sp/>more<sp/>robust.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPoint(42,<sp/>67));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRect(42,<sp/>67,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>output<sp/>where<sp/>the<sp/>window<sp/>is<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[0]);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>sent<sp/>to<sp/>the<sp/>second<sp/>output,<sp/>which<sp/>is<sp/>at<sp/>(1280,<sp/>0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRect(1280<sp/>+<sp/>42,<sp/>0<sp/>+<sp/>67,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testWindowSticksToOutputAfterAnotherOutputIsDisabled()</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>second<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPoint(1280<sp/>+<sp/>42,<sp/>67));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRect(1280<sp/>+<sp/>42,<sp/>67,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>first<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[0]);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;pos<sp/>=<sp/>QPoint(0,<sp/>0);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>position<sp/>of<sp/>the<sp/>window<sp/>relative<sp/>to<sp/>its<sp/>output<sp/>should<sp/>remain<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRect(42,<sp/>67,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testWindowSticksToOutputAfterOutputIsMoved()</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>some<sp/>predefined<sp/>position<sp/>so<sp/>the<sp/>test<sp/>is<sp/>more<sp/>robust.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPoint(42,<sp/>67));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRect(42,<sp/>67,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>first<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[0]);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;pos<sp/>=<sp/>QPoint(-10,<sp/>20);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>position<sp/>of<sp/>the<sp/>window<sp/>relative<sp/>to<sp/>its<sp/>output<sp/>should<sp/>remain<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRect(-10<sp/>+<sp/>42,<sp/>20<sp/>+<sp/>67,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testWindowSticksToOutputAfterOutputsAreSwappedLeftToRight()</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>window<sp/>placed<sp/>on<sp/>the<sp/>left<sp/>monitor<sp/>sticks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>that<sp/>monitor<sp/>even<sp/>after<sp/>the<sp/>monitors<sp/>are<sp/>swapped<sp/>horizontally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>left<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPointF(0,<sp/>0));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(0,<sp/>0,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>outputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet1<sp/>=<sp/>config.changeSet(outputs[0]);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet1-&gt;pos<sp/>=<sp/>QPoint(1280,<sp/>0);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet2<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet2-&gt;pos<sp/>=<sp/>QPoint(0,<sp/>0);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>should<sp/>be<sp/>still<sp/>on<sp/>its<sp/>original<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testWindowSticksToOutputAfterOutputsAreSwappedRightToLeft()</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>window<sp/>placed<sp/>on<sp/>the<sp/>right<sp/>monitor<sp/>sticks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>that<sp/>monitor<sp/>even<sp/>after<sp/>the<sp/>monitors<sp/>are<sp/>swapped<sp/>horizontally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>right<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPointF(1280,<sp/>0));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>outputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet1<sp/>=<sp/>config.changeSet(outputs[0]);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet1-&gt;pos<sp/>=<sp/>QPoint(1280,<sp/>0);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet2<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet2-&gt;pos<sp/>=<sp/>QPoint(0,<sp/>0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>should<sp/>be<sp/>still<sp/>on<sp/>its<sp/>original<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(0,<sp/>0,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testWindowRestoredAfterEnablingOutput()</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>back<sp/>to<sp/>its<sp/>original<sp/>output<sp/>when<sp/>it&apos;s<sp/>hotplugged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>right<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPointF(1280<sp/>+<sp/>50,<sp/>100));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>right<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config1.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config1);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>the<sp/>left<sp/>monitor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>monitor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config2;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config2.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config2);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>back<sp/>to<sp/>the<sp/>right<sp/>monitor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testWindowNotRestoredAfterMovingWindowAndEnablingOutput()</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>window<sp/>won&apos;t<sp/>be<sp/>moved<sp/>to<sp/>its<sp/>original<sp/>output<sp/>when<sp/>it&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hotplugged<sp/>because<sp/>the<sp/>window<sp/>was<sp/>moved<sp/>manually<sp/>by<sp/>the<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>right<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPointF(1280<sp/>+<sp/>50,<sp/>100));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>right<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config1.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config1);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>the<sp/>left<sp/>monitor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pretend<sp/>that<sp/>the<sp/>user<sp/>moved<sp/>the<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aa6434d76d6ec1bc06d939859517848cc" kindref="member">slotWindowMove</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window-&gt;isInteractiveMove());</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;keyPressEvent(Qt::Key_Right);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;keyPressEvent(Qt::Key_Enter);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(58,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>monitor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config2;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config2.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config2);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>is<sp/>still<sp/>on<sp/>the<sp/>left<sp/>monitor<sp/>because<sp/>user<sp/>manually<sp/>moved<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(58,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testMaximizedWindowRestoredAfterEnablingOutput()</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>maximized<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>its<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>when<sp/>it&apos;s<sp/>re-enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kwin<sp/>will<sp/>send<sp/>a<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>actived<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy(shellSurface.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy(shellSurface-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>right<sp/>monitor<sp/>and<sp/>make<sp/>it<sp/>maximized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPointF(1280<sp/>+<sp/>50,<sp/>100));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;maximize(<ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>QSize(1280,<sp/>1024));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>QSize(1280,<sp/>1024),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>right<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config1;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config1.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config1);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>the<sp/>left<sp/>monitor,<sp/>the<sp/>geometry<sp/>restore<sp/>will<sp/>be<sp/>updated<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(0,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>QRectF(0,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>QRectF(50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>monitor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config2;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config2.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config2);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>back<sp/>to<sp/>the<sp/>right<sp/>monitor,<sp/>the<sp/>geometry<sp/>restore<sp/>will<sp/>be<sp/>updated<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testFullScreenWindowRestoredAfterEnablingOutput()</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>fullscreen<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>its<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>when<sp/>it&apos;s<sp/>re-enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kwin<sp/>will<sp/>send<sp/>a<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>actived<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy(shellSurface.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy(shellSurface-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>right<sp/>monitor<sp/>and<sp/>make<sp/>it<sp/>fullscreen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPointF(1280<sp/>+<sp/>50,<sp/>100));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setFullScreen(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>QSize(1280,<sp/>1024));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>QSize(1280,<sp/>1024),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;isFullScreen(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;isRequestedFullScreen(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;fullscreenGeometryRestore(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>right<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config1;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config1.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config1);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>the<sp/>left<sp/>monitor,<sp/>the<sp/>geometry<sp/>restore<sp/>will<sp/>be<sp/>updated<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(0,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>QRectF(0,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;isFullScreen(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;isRequestedFullScreen(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;fullscreenGeometryRestore(),<sp/>QRectF(50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>monitor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config2;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config2.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config2);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>back<sp/>to<sp/>the<sp/>right<sp/>monitor,<sp/>the<sp/>geometry<sp/>restore<sp/>will<sp/>be<sp/>updated<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;isFullScreen(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;isRequestedFullScreen(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;fullscreenGeometryRestore(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testQuickTiledWindowRestoredAfterEnablingOutput()</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>quick<sp/>tiled<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>original<sp/>output<sp/>and<sp/>tile<sp/>when<sp/>the<sp/>output<sp/>is<sp/>re-enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kwin<sp/>will<sp/>send<sp/>a<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>actived<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy(shellSurface.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy(shellSurface-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>tileChangedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1a69b6dd1515f1491903ce82938e7973e6" kindref="member">Window::tileChanged</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>right<sp/>monitor<sp/>and<sp/>tile<sp/>it<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPointF(1280<sp/>+<sp/>50,<sp/>100));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setQuickTileModeAtCurrentPosition(<ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa92b09c7c48c520c3c55e497875da437c" kindref="member">QuickTileFlag::Right</ref>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>QSize(1280<sp/>/<sp/>2,<sp/>1024));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>QSize(1280<sp/>/<sp/>2,<sp/>1024),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>rightQuickTileGeomScreen2<sp/>=<sp/>QRectF(1280<sp/>+<sp/>1280<sp/>/<sp/>2,<sp/>0,<sp/>1280<sp/>/<sp/>2,<sp/>1024);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>rightQuickTileGeomScreen1<sp/>=<sp/>QRectF(1280<sp/>/<sp/>2,<sp/>0,<sp/>1280<sp/>/<sp/>2,<sp/>1024);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>rightQuickTileGeomScreen2);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>rightQuickTileGeomScreen2);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;quickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa92b09c7c48c520c3c55e497875da437c" kindref="member">QuickTileFlag::Right</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedQuickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa92b09c7c48c520c3c55e497875da437c" kindref="member">QuickTileFlag::Right</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>right<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config1;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config1.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config1);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>QSize(1280<sp/>/<sp/>2,<sp/>1024));</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>QSize(1280<sp/>/<sp/>2,<sp/>1024),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>the<sp/>left<sp/>monitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(tileChangedSpy.wait());</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>qWarning()<sp/>&lt;&lt;<sp/>window-&gt;requestedTile()-&gt;windowGeometry();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>rightQuickTileGeomScreen1);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>rightQuickTileGeomScreen1);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>monitor<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config2;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config2.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config2);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>QSize(1280<sp/>/<sp/>2,<sp/>1024),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(tileChangedSpy.wait());</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>back<sp/>to<sp/>the<sp/>right<sp/>monitor,<sp/>and<sp/>put<sp/>in<sp/>the<sp/>correct<sp/>tile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>rightQuickTileGeomScreen2);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>rightQuickTileGeomScreen2);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;quickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa92b09c7c48c520c3c55e497875da437c" kindref="member">QuickTileFlag::Right</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedQuickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa92b09c7c48c520c3c55e497875da437c" kindref="member">QuickTileFlag::Right</ref>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testQuickTileUntileWindowRestoredAfterEnablingOutput()</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>quick<sp/>tiled<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>original<sp/>output<sp/>and<sp/>tile<sp/>when<sp/>the<sp/>output<sp/>is<sp/>re-enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>if<sp/>the<sp/>window<sp/>changed<sp/>quick<sp/>tile<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>with<sp/>only<sp/>one<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kwin<sp/>will<sp/>send<sp/>a<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>current<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy(shellSurface.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy(shellSurface-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>QSize(100,<sp/>50));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>originalGeometry<sp/>=<sp/>window-&gt;frameGeometry();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>second<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>second<sp/>output<sp/>and<sp/>tile<sp/>it<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPointF(1280<sp/>+<sp/>50,<sp/>100));</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setQuickTileModeAtCurrentPosition(<ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa92b09c7c48c520c3c55e497875da437c" kindref="member">QuickTileFlag::Right</ref>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>QSize(1280<sp/>/<sp/>2,<sp/>1024));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>QSize(1280<sp/>/<sp/>2,<sp/>1024),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>rightQuickTileGeom<sp/>=<sp/>QRectF(1280<sp/>+<sp/>1280<sp/>/<sp/>2,<sp/>0,<sp/>1280<sp/>/<sp/>2,<sp/>1024);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>rightQuickTileGeom);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>rightQuickTileGeom);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;quickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa92b09c7c48c520c3c55e497875da437c" kindref="member">QuickTileFlag::Right</ref>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedQuickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa92b09c7c48c520c3c55e497875da437c" kindref="member">QuickTileFlag::Right</ref>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>second<sp/>output<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>window<sp/>should<sp/>now<sp/>be<sp/>untiled,<sp/>and<sp/>put<sp/>back<sp/>in<sp/>its<sp/>original<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>QSize(100,<sp/>50));</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>originalGeometry);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedQuickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa6adf97f83acf6453d4a6a4b1070f3754" kindref="member">QuickTileFlag::None</ref>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>second<sp/>output<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>window<sp/>should<sp/>now<sp/>be<sp/>put<sp/>back<sp/>into<sp/>the<sp/>tile<sp/>on<sp/>the<sp/>second<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>QSize(1280<sp/>/<sp/>2,<sp/>1024));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>QSize(1280<sp/>/<sp/>2,<sp/>1024),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>rightQuickTileGeom);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>rightQuickTileGeom);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;quickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa92b09c7c48c520c3c55e497875da437c" kindref="member">QuickTileFlag::Right</ref>);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedQuickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa92b09c7c48c520c3c55e497875da437c" kindref="member">QuickTileFlag::Right</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testCustomTiledWindowRestoredAfterEnablingOutput_data()</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tileCount<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1d3b4ba05e0d7a110ab5603096deb4c7" kindref="member">rootTile</ref>(outputs[1])-&gt;<ref refid="class_k_win_1_1_tile_1ae072ac08c54a502107f748c6bfbc12de" kindref="member">childTiles</ref>().size();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;size_t&gt;(</highlight><highlight class="stringliteral">&quot;tileIndex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tileCount;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;tile<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/>i)<sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testCustomTiledWindowRestoredAfterEnablingOutput()</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>custom<sp/>tiled<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>original<sp/>output<sp/>and<sp/>tile<sp/>when<sp/>the<sp/>output<sp/>is<sp/>re-enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>with<sp/>only<sp/>one<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kwin<sp/>will<sp/>send<sp/>a<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>actived<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy(shellSurface.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy(shellSurface-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>originalGeometry<sp/>=<sp/>window-&gt;moveResizeGeometry();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/>tileIndex);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>customTileGeom<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1a1d3b4ba05e0d7a110ab5603096deb4c7" kindref="member">rootTile</ref>(outputs[1])-&gt;<ref refid="class_k_win_1_1_tile_1ae072ac08c54a502107f748c6bfbc12de" kindref="member">childTiles</ref>()[tileIndex]-&gt;windowGeometry();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>right<sp/>monitor<sp/>and<sp/>put<sp/>it<sp/>in<sp/>the<sp/>middle<sp/>tile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(customTileGeom.topLeft()<sp/>+<sp/>QPointF(50,<sp/>50));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>geomBeforeTiling<sp/>=<sp/>window-&gt;moveResizeGeometry();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;setQuickTileModeAtCurrentPosition(<ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa90589c47f06eb971d548591f23c285af" kindref="member">QuickTileFlag::Custom</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>customTileGeom.size().toSize());</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>customTileGeom.size().toSize(),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>customTileGeom);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>customTileGeom);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;quickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa90589c47f06eb971d548591f23c285af" kindref="member">QuickTileFlag::Custom</ref>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedQuickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa90589c47f06eb971d548591f23c285af" kindref="member">QuickTileFlag::Custom</ref>);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>geomBeforeTiling);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>right<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>the<sp/>left<sp/>monitor,<sp/>and<sp/>the<sp/>original<sp/>geometry<sp/>restored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>originalGeometry.size().toSize());</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>originalGeometry.size().toSize(),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>originalGeometry);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>originalGeometry);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;quickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa6adf97f83acf6453d4a6a4b1070f3754" kindref="member">QuickTileFlag::None</ref>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedQuickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa6adf97f83acf6453d4a6a4b1070f3754" kindref="member">QuickTileFlag::None</ref>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>monitor<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>back<sp/>to<sp/>the<sp/>right<sp/>monitor,<sp/>and<sp/>put<sp/>in<sp/>the<sp/>correct<sp/>tile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>customTileGeom.size().toSize());</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>customTileGeom.size().toSize(),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>customTileGeom);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>customTileGeom);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;quickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa90589c47f06eb971d548591f23c285af" kindref="member">QuickTileFlag::Custom</ref>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedQuickTileMode(),<sp/><ref refid="namespace_k_win_1a7d8a57e0b5454d5598726350206b4fdfa90589c47f06eb971d548591f23c285af" kindref="member">QuickTileFlag::Custom</ref>);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>geomBeforeTiling);</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testWindowRestoredAfterChangingScale()</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>a<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>its<sp/>original<sp/>position<sp/>after<sp/>changing<sp/>the<sp/>scale<sp/>of<sp/>an<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs().front();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>bottom<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>originalPosition(output-&gt;geometry().width()<sp/>-<sp/>window-&gt;width(),<sp/>output-&gt;geometry().height()<sp/>-<sp/>window-&gt;height());</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(originalPosition);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;pos(),<sp/>originalPosition);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>output);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>the<sp/>scale<sp/>of<sp/>the<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config1;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config1.changeSet(output);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;scale<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config1);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>still<sp/>be<sp/>in<sp/>the<sp/>monitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;pos(),<sp/>QPointF(output-&gt;geometry().width()<sp/>-<sp/>window-&gt;width(),<sp/>output-&gt;geometry().height()<sp/>-<sp/>window-&gt;height()));</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>output);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>scale<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config2;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config2.changeSet(output);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;scale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config2);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>back<sp/>to<sp/>where<sp/>it<sp/>was<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;pos(),<sp/>originalPosition);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>output);</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testMaximizeStateRestoredAfterEnablingOutput_data()</highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;MaximizeMode&gt;(</highlight><highlight class="stringliteral">&quot;maximizeMode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Vertical<sp/>Maximization&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeMode::MaximizeVertical</ref>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Horizontal<sp/>Maximization&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeMode::MaximizeHorizontal</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Full<sp/>Maximization&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeMode::MaximizeFull</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testMaximizeStateRestoredAfterEnablingOutput()</highlight></codeline>
<codeline lineno="885"><highlight class="normal">{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>the<sp/>window<sp/>state<sp/>will<sp/>get<sp/>restored<sp/>after<sp/>disabling<sp/>and<sp/>enabling<sp/>an<sp/>output,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>if<sp/>its<sp/>maximize<sp/>state<sp/>changed<sp/>in<sp/>the<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref>,<sp/>maximizeMode);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>right<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(100,<sp/>50),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kwin<sp/>will<sp/>send<sp/>a<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>actived<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy(shellSurface.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy(shellSurface-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>originalGeometry<sp/>=<sp/>window-&gt;moveResizeGeometry();</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>right<sp/>monitor<sp/>and<sp/>make<sp/>it<sp/>maximized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(QPointF(1280<sp/>+<sp/>50,<sp/>100));</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;maximize(maximizeMode);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>maximizedGeometry<sp/>=<sp/>window-&gt;moveResizeGeometry();</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>maximizedGeometry);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/>maximizeMode);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/>maximizeMode);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>right<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>its<sp/>prior<sp/>position<sp/>on<sp/>the<sp/>left<sp/>monitor<sp/>and<sp/>unmaximized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>originalGeometry.size().toSize());</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>originalGeometry.size().toSize(),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>originalGeometry);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>originalGeometry);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a53d04d48a6022c3cdf27d735a3b1de29" kindref="member">MaximizeRestore</ref>);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>output<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>back<sp/>to<sp/>the<sp/>right<sp/>monitor,<sp/>maximized<sp/>and<sp/>the<sp/>geometry<sp/>restore<sp/>will<sp/>be<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>maximizedGeometry.size());</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>maximizedGeometry);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>maximizedGeometry);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/>maximizeMode);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/>maximizeMode);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>QRectF(1280<sp/>+<sp/>50,<sp/>100,<sp/>100,<sp/>50));</highlight></codeline>
<codeline lineno="977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testInvalidGeometryRestoreAfterEnablingOutput()</highlight></codeline>
<codeline lineno="980"><highlight class="normal">{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>the<sp/>geometry<sp/>restore<sp/>gets<sp/>restore<sp/>correctly,<sp/>even<sp/>if<sp/>it&apos;s<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>right<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get(),<sp/><ref refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924a77185debc8f1119630b3a59c3384d69d" kindref="member">Test::CreationSetup::CreateOnly</ref>));</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;set_maximized();</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy(shellSurface-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;surface()-&gt;commit(KWayland::Client::Surface::CommitFlag::None);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().first().toUInt());</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(1280,<sp/>1024),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>originalGeometry<sp/>=<sp/>window-&gt;moveResizeGeometry();</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>originalGeometryRestore<sp/>=<sp/>window-&gt;geometryRestore();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>window<sp/>to<sp/>the<sp/>right<sp/>monitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;sendToOutput(outputs[1]);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>surface-&gt;commit(KWayland::Client::Surface::CommitFlag::None);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(outputs[1]-&gt;geometry().contains(window-&gt;geometryRestore().topLeft().toPoint()));</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore().size(),<sp/>QSizeF(0,<sp/>0));</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>rightGeometryRestore<sp/>=<sp/>window-&gt;geometryRestore();</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>right<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy(shellSurface.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy(shellSurface-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>to<sp/>its<sp/>prior<sp/>position<sp/>on<sp/>the<sp/>left<sp/>monitor,<sp/>and<sp/>still<sp/>maximized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>originalGeometry);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>originalGeometry);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(outputs[0]-&gt;geometry().contains(window-&gt;geometryRestore().topLeft().toPoint()));</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>originalGeometryRestore);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>right<sp/>output<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>will<sp/>be<sp/>moved<sp/>back<sp/>to<sp/>the<sp/>right<sp/>monitor,<sp/>maximized<sp/>and<sp/>the<sp/>geometry<sp/>restore<sp/>will<sp/>be<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>outputs[1]-&gt;geometry().size());</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>outputs[1]-&gt;geometry().size(),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;moveResizeGeometry(),<sp/>QRectF(1280,<sp/>0,<sp/>1280,<sp/>1024));</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeFull</ref>);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>rightGeometryRestore);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testMaximizedWindowDoesntDisappear_data()</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;MaximizeMode&gt;(</highlight><highlight class="stringliteral">&quot;maximizeMode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Vertical<sp/>Maximization&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9a21499d1263beb477425205b49fca8ef1" kindref="member">MaximizeMode::MaximizeVertical</ref>;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Horizontal<sp/>Maximization&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9aac06708e540fd3823add3d1fc048876d" kindref="member">MaximizeMode::MaximizeHorizontal</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Full<sp/>Maximization&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9abc602b186700b8c6fb525fe2c828e910" kindref="member">MaximizeMode::MaximizeFull</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testMaximizedWindowDoesntDisappear()</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>verifies<sp/>that<sp/>(vertically,<sp/>horizontally)<sp/>maximized<sp/>windows<sp/>don&apos;t<sp/>get<sp/>placed<sp/>out<sp/>of<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>output<sp/>they&apos;re<sp/>on<sp/>gets<sp/>disabled<sp/>or<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(5120<sp/>/<sp/>3,<sp/>1440,<sp/>2256<sp/>/<sp/>1.3,<sp/>1504<sp/>/<sp/>1.3),</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scale<sp/>=<sp/>1.3,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>5120,<sp/>1440),</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.scale<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1a58aad0d72424cd3d75519560dd43d9b9" kindref="member">MaximizeMode</ref>,<sp/>maximizeMode);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1abe694aeb41eaff7b515070ad0c11dba4" kindref="member">setActiveOutput</ref>(outputs[1]);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>surface(<ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">Test::createSurface</ref>());</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::XdgToplevel&gt;<sp/>shellSurface(<ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">Test::createXdgToplevelSurface</ref>(surface.get()));</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>window<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">Test::renderAndWaitForShown</ref>(surface.get(),<sp/>QSize(500,<sp/>300),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(window);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kwin<sp/>will<sp/>send<sp/>a<sp/>configure<sp/>event<sp/>with<sp/>the<sp/>actived<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>toplevelConfigureRequestedSpy(shellSurface.get(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">Test::XdgToplevel::configureRequested</ref>);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>surfaceConfigureRequestedSpy(shellSurface-&gt;xdgSurface(),<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">Test::XdgSurface::configureRequested</ref>);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;move(outputs[1]-&gt;geometry().topLeft()<sp/>+<sp/>QPoint(3500,<sp/>500));</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>originalGeometry<sp/>=<sp/>window-&gt;frameGeometry();</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(outputs[1]-&gt;geometryF().contains(originalGeometry));</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertically<sp/>maximize<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>frameGeometryChangedSpy(window,<sp/>&amp;<ref refid="class_k_win_1_1_window_1ac20682dc9062e09db6ed01b2cf7c6097" kindref="member">Window::frameGeometryChanged</ref>);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;maximize(maximizeMode);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[1]);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>maximizedGeometry<sp/>=<sp/>window-&gt;moveResizeGeometry();</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>maximizedGeometry);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/>maximizeMode);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/>maximizeMode);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;geometryRestore(),<sp/>originalGeometry);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>top<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet0<sp/>=<sp/>config.changeSet(outputs[0]);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet0-&gt;pos<sp/>=<sp/>QPoint(0,<sp/>0);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[1]);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>window<sp/>should<sp/>be<sp/>moved<sp/>to<sp/>the<sp/>left<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(surfaceConfigureRequestedSpy.wait());</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>shellSurface-&gt;xdgSurface()-&gt;ack_configure(surfaceConfigureRequestedSpy.last().at(0).value&lt;quint32&gt;());</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">Test::render</ref>(surface.get(),<sp/>toplevelConfigureRequestedSpy.last().at(0).value&lt;QSize&gt;(),<sp/>Qt::blue);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(frameGeometryChangedSpy.wait());</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;output(),<sp/>outputs[0]);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(outputs[0]-&gt;geometryF().contains(window-&gt;frameGeometry()));</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(outputs[0]-&gt;geometryF().contains(window-&gt;moveResizeGeometry()));</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;maximizeMode(),<sp/>maximizeMode);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;requestedMaximizeMode(),<sp/>maximizeMode);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testLaptopLidClosed()</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>internal<sp/>=<sp/>outputs.front();</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(internal-&gt;isInternal());</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>external<sp/>=<sp/>outputs.back();</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!external-&gt;isInternal());</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lidSwitch<sp/>=<sp/>std::make_unique&lt;Test::VirtualInputDevice&gt;();</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>lidSwitch-&gt;setLidSwitch(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>lidSwitch-&gt;setName(</highlight><highlight class="stringliteral">&quot;virtual<sp/>lid<sp/>switch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6810724dbe269ec24c28a9abb904e42b" kindref="member">addInputDevice</ref>(lidSwitch.get());</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>1ms;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/>lidSwitch-&gt;switchToggle(<ref refid="namespace_k_win_1abbce8a26ea93b91db7bbdceca2155130ad15305d7a4e34e02489c74a5ef542f36" kindref="member">SwitchState::Off</ref>,<sp/>timestamp++,<sp/>lidSwitch.get());</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(internal-&gt;isEnabled());</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(external-&gt;isEnabled());</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/>lidSwitch-&gt;switchToggle(<ref refid="namespace_k_win_1abbce8a26ea93b91db7bbdceca2155130a521c36a31c2762741cf0f8890cbe05e3" kindref="member">SwitchState::On</ref>,<sp/>timestamp++,<sp/>lidSwitch.get());</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!internal-&gt;isEnabled());</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(external-&gt;isEnabled());</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/>lidSwitch-&gt;switchToggle(<ref refid="namespace_k_win_1abbce8a26ea93b91db7bbdceca2155130ad15305d7a4e34e02489c74a5ef542f36" kindref="member">SwitchState::Off</ref>,<sp/>timestamp++,<sp/>lidSwitch.get());</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(internal-&gt;isEnabled());</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(external-&gt;isEnabled());</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a23b8f0260935a76ae54359f801916716" kindref="member">removeInputDevice</ref>(lidSwitch.get());</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*createX11Window(xcb_connection_t<sp/>*<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;geometry,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(xcb_window_t)&gt;<sp/>setup<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_window_t<sp/>windowId<sp/>=<sp/>xcb_generate_id(<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_create_window(<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>,<sp/>XCB_COPY_FROM_PARENT,<sp/>windowId,<sp/><ref refid="namespace_k_win_1a1c718478bc9788d32a9614c371aa754b" kindref="member">rootWindow</ref>(),</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry.x(),</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry.y(),</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry.width(),</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geometry.height(),</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>XCB_WINDOW_CLASS_INPUT_OUTPUT,<sp/>XCB_COPY_FROM_PARENT,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_size_hints_t<sp/>hints;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;hints,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hints));</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_icccm_size_hints_set_position(&amp;hints,<sp/>1,<sp/>geometry.x(),<sp/>geometry.y());</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_icccm_size_hints_set_size(&amp;hints,<sp/>1,<sp/>geometry.width(),<sp/>geometry.height());</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_icccm_set_wm_normal_hints(<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>,<sp/>windowId,<sp/>&amp;hints);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setup)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup(windowId);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_map_window(<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>,<sp/>windowId);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>xcb_flush(<ref refid="namespace_k_win_1aa7f02d94c7c3eb413790afa48eff03e8" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>QSignalSpy<sp/>windowCreatedSpy(<ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>(),<sp/>&amp;<ref refid="class_k_win_1_1_workspace_1a8f82a0ac5517ddb86629fa3f8243e388" kindref="member">Workspace::windowAdded</ref>);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!windowCreatedSpy.wait())<sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>windowCreatedSpy.last().first().value&lt;<ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref><sp/>*&gt;();</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testXwaylandScaleChange()</highlight></codeline>
<codeline lineno="1226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" kindref="member">outputs</ref>();</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.changeSet(outputs[0])-&gt;scale<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.changeSet(outputs[1])-&gt;scale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(kwinApp()-&gt;xwaylandScale(),<sp/>2);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>Test::XcbConnectionPtr<sp/>c<sp/>=<sp/>Test::createX11Connection();</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(!xcb_connection_has_error(c.get()));</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>X11Window<sp/>*window<sp/>=<sp/>createX11Window(c.get(),<sp/>QRect(0,<sp/>0,<sp/>100,<sp/>200));</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>originalGeometry<sp/>=<sp/>window-&gt;frameGeometry();</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>the<sp/>left<sp/>output<sp/>-&gt;<sp/>window<sp/>gets<sp/>moved<sp/>to<sp/>the<sp/>right<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.changeSet(outputs[0])-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>window<sp/>should<sp/>still<sp/>have<sp/>logical<sp/>size<sp/>of<sp/>100,<sp/>200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(kwinApp()-&gt;xwaylandScale(),<sp/>1);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry().size(),<sp/>originalGeometry.size());</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>the<sp/>left<sp/>output<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.changeSet(outputs[0])-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a8700e164bd811b5f862b944a87bb9b85" kindref="member">workspace</ref>()-&gt;<ref refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" kindref="member">applyOutputConfiguration</ref>(config);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>window<sp/>should<sp/>be<sp/>back<sp/>in<sp/>its<sp/>original<sp/>geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(kwinApp()-&gt;xwaylandScale(),<sp/>2);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(window-&gt;frameGeometry(),<sp/>originalGeometry);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269" refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref><sp/>=<sp/>std::tuple&lt;QSize,<sp/>uint64_t,<sp/>OutputMode::Flags&gt;;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testGenerateConfigs_data()</highlight></codeline>
<codeline lineno="1272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;DeviceType&gt;(</highlight><highlight class="stringliteral">&quot;deviceType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;Test::OutputInfo&gt;(</highlight><highlight class="stringliteral">&quot;outputInfo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;std::tuple&lt;QSize,<sp/>uint64_t,<sp/>OutputMode::Flags&gt;&gt;(</highlight><highlight class="stringliteral">&quot;defaultMode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;defaultScale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;1080p<sp/>27\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" kindref="member">DeviceType::Desktop</ref></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1920,<sp/>1080),</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1920,<sp/>1080),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1920,<sp/>1080),<sp/>60000ul,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;2160p<sp/>27\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" kindref="member">DeviceType::Desktop</ref></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>3840,<sp/>2160),</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>60000ul,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>1.70;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;2160p<sp/>invalid<sp/>size&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" kindref="member">DeviceType::Desktop</ref></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>3840,<sp/>2160),</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(),</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>60000ul,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;2160p<sp/>impossibly<sp/>tiny<sp/>size&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" kindref="member">DeviceType::Desktop</ref></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>3840,<sp/>2160),</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(1,<sp/>1),</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>60000ul,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;1080p<sp/>27\&quot;<sp/>with<sp/>non-preferred<sp/>high<sp/>refresh<sp/>option&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" kindref="member">DeviceType::Desktop</ref></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1920,<sp/>1080),</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1920,<sp/>1080),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>),<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1920,<sp/>1080),<sp/>120000,<sp/>OutputMode::Flags{})},</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1920,<sp/>1080),<sp/>120000ul,<sp/>OutputMode::Flags{})<sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;2160p<sp/>27\&quot;<sp/>with<sp/>30Hz<sp/>preferred<sp/>mode&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" kindref="member">DeviceType::Desktop</ref></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>3840,<sp/>2160),</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>30000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>),<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(2560,<sp/>1440),<sp/>60000,<sp/>OutputMode::Flags{})},</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(2560,<sp/>1440),<sp/>60000ul,<sp/>OutputMode::Flags{})<sp/>&lt;&lt;<sp/>1.15;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;2160p<sp/>27\&quot;<sp/>with<sp/>30Hz<sp/>preferred<sp/>and<sp/>a<sp/>generated<sp/>60Hz<sp/>mode&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" kindref="member">DeviceType::Desktop</ref></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>3840,<sp/>2160),</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>30000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>),<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(2560,<sp/>1440),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0a5c5f06440fcb85cd5c8cfafe32e34b78" kindref="member">OutputMode::Flag::Generated</ref>)},</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>30000ul,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>1.70;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;1440p<sp/>32:9<sp/>49\&quot;<sp/>with<sp/>two<sp/>preferred<sp/>modes&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" kindref="member">DeviceType::Desktop</ref></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>5120,<sp/>1440),</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(1190,<sp/>340),</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>1080),<sp/>120000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>),<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(5120,<sp/>1440),<sp/>120000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(5120,<sp/>1440),<sp/>120000ul,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>1.10;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;2160p<sp/>32:9<sp/>57\&quot;<sp/>with<sp/>non-native<sp/>preferred<sp/>mode&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a2310408a63388fe57e3a4177168a8798" kindref="member">DeviceType::Desktop</ref></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>7680,<sp/>2160),</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(1400,<sp/>400),</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>1080),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>),<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(7680,<sp/>2160),<sp/>120000,<sp/>OutputMode::Flags{})},</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(7680,<sp/>2160),<sp/>120000ul,<sp/>OutputMode::Flags{})<sp/>&lt;&lt;<sp/>1.45;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Framework<sp/>1920p<sp/>13.5\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a146bdebb324a64d327b1dde22a07d0bd" kindref="member">DeviceType::Laptop</ref></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>2880,<sp/>1920),</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(285,<sp/>190),</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(2880,<sp/>1920),<sp/>120000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(2880,<sp/>1920),<sp/>120000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>2.05;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;DELL<sp/>XPS<sp/>13<sp/>1080p<sp/>13\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a146bdebb324a64d327b1dde22a07d0bd" kindref="member">DeviceType::Laptop</ref></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1920,<sp/>1080),</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(293,<sp/>162),</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1920,<sp/>1080),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1920,<sp/>1080),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>1.35;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;DELL<sp/>XPS<sp/>13<sp/>2160p<sp/>13\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a146bdebb324a64d327b1dde22a07d0bd" kindref="member">DeviceType::Laptop</ref></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>3840,<sp/>2160),</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(294,<sp/>165),</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2160),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>2.65;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;ThinkPad<sp/>T14<sp/>2400p<sp/>14\&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a146bdebb324a64d327b1dde22a07d0bd" kindref="member">DeviceType::Laptop</ref></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>3840,<sp/>2400),</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(301,<sp/>188),</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2400),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(3840,<sp/>2400),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>2.60;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;SteamDeck<sp/>OLED&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a146bdebb324a64d327b1dde22a07d0bd" kindref="member">DeviceType::Laptop</ref></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>800,<sp/>1280),</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(100,<sp/>160),</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(800,<sp/>1280),<sp/>90000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.panelOrientation<sp/>=<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Kind::Rotate90</ref>,</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(800,<sp/>1280),<sp/>90000ul,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Pixel<sp/>3a&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361abcc254b55c4a1babdf1dcb82c207506b" kindref="member">DeviceType::Phone</ref></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1080,<sp/>2220),</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(62,<sp/>128),</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1080,<sp/>2220),<sp/>60000,<sp/>OutputMode::Flags{}),<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1080,<sp/>2220),<sp/>120000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1080,<sp/>2220),<sp/>120000ul,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>2.95;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;OnePlus<sp/>6&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361abcc254b55c4a1babdf1dcb82c207506b" kindref="member">DeviceType::Phone</ref></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">Test::OutputInfo</ref>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1080,<sp/>2280),</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(68,<sp/>145),</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1080,<sp/>2280),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1080,<sp/>2280),<sp/>60000ul,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)<sp/>&lt;&lt;<sp/>2.65;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testGenerateConfigs()</highlight></codeline>
<codeline lineno="1441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>previous<sp/>config<sp/>to<sp/>avoid<sp/>clashes<sp/>between<sp/>test<sp/>runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile(QStandardPaths::locate(QStandardPaths::ConfigLocation,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kwinoutputconfig.json&quot;</highlight><highlight class="normal">))).remove();</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>there<sp/>is<sp/>a<sp/>lid<sp/>switch<sp/>input<sp/>device<sp/>is<sp/>not<sp/>a<sp/>totally<sp/>reliable<sp/>way<sp/>to<sp/>determine<sp/>if<sp/>it&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>laptop,<sp/>but<sp/>on<sp/>the<sp/>other<sp/>hand,<sp/>we<sp/>don&apos;t<sp/>have<sp/>any<sp/>other<sp/>better<sp/>hints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361" kindref="member">DeviceType</ref>,<sp/>deviceType);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>LidSwitch<sp/>lidSwitch;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceType<sp/>==<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a146bdebb324a64d327b1dde22a07d0bd" kindref="member">DeviceType::Laptop</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a6810724dbe269ec24c28a9abb904e42b" kindref="member">addInputDevice</ref>(&amp;lidSwitch);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lidSwitchGuard<sp/>=<sp/>qScopeGuard([&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceType<sp/>==<sp/><ref refid="namespace_k_win_1a68ed0f17440d1c1d38ac1ebcf5ad5361a146bdebb324a64d327b1dde22a07d0bd" kindref="member">DeviceType::Laptop</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1abe2e249447d344f266998fdcef93fde0" kindref="member">input</ref>()-&gt;<ref refid="class_k_win_1_1_input_redirection_1a23b8f0260935a76ae54359f801916716" kindref="member">removeInputDevice</ref>(&amp;lidSwitch);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(Test::OutputInfo,<sp/>outputInfo);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({outputInfo});</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfigurationStore<sp/>configs;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>configs.queryConfig(outputs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(cfg.has_value());</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[config,<sp/>order,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>]<sp/>=<sp/>*cfg;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputConfig<sp/>=<sp/>config.constChangeSet(outputs.front());</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>,<sp/>defaultMode);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[modeSize,<sp/>modeRefresh,<sp/>modeFlags]<sp/>=<sp/>defaultMode;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>outputConfig-&gt;mode-&gt;lock();</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(mode);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(mode-&gt;size(),<sp/>modeSize);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(mode-&gt;refreshRate(),<sp/>modeRefresh);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(mode-&gt;flags(),<sp/>modeFlags);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>defaultScale);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(outputConfig-&gt;scale);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(*outputConfig-&gt;scale,<sp/>defaultScale);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testAutorotate_data()</highlight></codeline>
<codeline lineno="1482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;OutputTransform::Kind&gt;(</highlight><highlight class="stringliteral">&quot;panelOrientation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QOrientationReading::Orientation&gt;(</highlight><highlight class="stringliteral">&quot;orientation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;OutputTransform::Kind&gt;(</highlight><highlight class="stringliteral">&quot;expectedRotation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>normal,<sp/>no<sp/>rotation&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::TopUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref>;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>normal,<sp/>rotated<sp/>90°<sp/>right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::LeftUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Kind::Rotate90</ref>;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>normal,<sp/>rotated<sp/>180°&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::TopDown<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a81855b733eee5226c36b414b06c62d0d" kindref="member">OutputTransform::Kind::Rotate180</ref>;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>normal,<sp/>rotated<sp/>90°<sp/>left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::RightUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a9516f7c7bb3dd6677e50c6bc4bb18722" kindref="member">OutputTransform::Kind::Rotate270</ref>;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>left<sp/>up,<sp/>no<sp/>rotation&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Kind::Rotate90</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::TopUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Kind::Rotate90</ref>;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>left<sp/>up,<sp/>rotated<sp/>90°<sp/>right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Kind::Rotate90</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::LeftUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a81855b733eee5226c36b414b06c62d0d" kindref="member">OutputTransform::Kind::Rotate180</ref>;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>left<sp/>up,<sp/>rotated<sp/>180°&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Kind::Rotate90</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::TopDown<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a9516f7c7bb3dd6677e50c6bc4bb18722" kindref="member">OutputTransform::Kind::Rotate270</ref>;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>left<sp/>up,<sp/>rotated<sp/>90°<sp/>left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Kind::Rotate90</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::RightUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref>;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>upside<sp/>down,<sp/>no<sp/>rotation&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a81855b733eee5226c36b414b06c62d0d" kindref="member">OutputTransform::Kind::Rotate180</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::TopUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a81855b733eee5226c36b414b06c62d0d" kindref="member">OutputTransform::Kind::Rotate180</ref>;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>upside<sp/>down,<sp/>rotated<sp/>90°<sp/>right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a81855b733eee5226c36b414b06c62d0d" kindref="member">OutputTransform::Kind::Rotate180</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::LeftUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a9516f7c7bb3dd6677e50c6bc4bb18722" kindref="member">OutputTransform::Kind::Rotate270</ref>;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>upside<sp/>down,<sp/>rotated<sp/>180°&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a81855b733eee5226c36b414b06c62d0d" kindref="member">OutputTransform::Kind::Rotate180</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::TopDown<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref>;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>upside<sp/>down,<sp/>rotated<sp/>90°<sp/>left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a81855b733eee5226c36b414b06c62d0d" kindref="member">OutputTransform::Kind::Rotate180</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::RightUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Kind::Rotate90</ref>;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>right<sp/>up,<sp/>no<sp/>rotation&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a9516f7c7bb3dd6677e50c6bc4bb18722" kindref="member">OutputTransform::Kind::Rotate270</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::TopUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a9516f7c7bb3dd6677e50c6bc4bb18722" kindref="member">OutputTransform::Kind::Rotate270</ref>;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>right<sp/>up,<sp/>rotated<sp/>90°<sp/>right&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a9516f7c7bb3dd6677e50c6bc4bb18722" kindref="member">OutputTransform::Kind::Rotate270</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::LeftUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref>;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>right<sp/>up,<sp/>rotated<sp/>180°&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a9516f7c7bb3dd6677e50c6bc4bb18722" kindref="member">OutputTransform::Kind::Rotate270</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::TopDown<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a1457e6800a3c966efe2e352858ce1814" kindref="member">OutputTransform::Kind::Rotate90</ref>;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;panel<sp/>orientation<sp/>right<sp/>up,<sp/>rotated<sp/>90°<sp/>left&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a9516f7c7bb3dd6677e50c6bc4bb18722" kindref="member">OutputTransform::Kind::Rotate270</ref><sp/>&lt;&lt;<sp/>QOrientationReading::Orientation::RightUp<sp/>&lt;&lt;<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a81855b733eee5226c36b414b06c62d0d" kindref="member">OutputTransform::Kind::Rotate180</ref>;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testAutorotate()</highlight></codeline>
<codeline lineno="1509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>previous<sp/>config<sp/>to<sp/>avoid<sp/>clashes<sp/>between<sp/>test<sp/>runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile(QStandardPaths::locate(QStandardPaths::ConfigLocation,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kwinoutputconfig.json&quot;</highlight><highlight class="normal">))).remove();</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7" kindref="member">OutputTransform::Kind</ref>,<sp/>panelOrientation);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({Test::OutputInfo{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1280,<sp/>1024),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.panelOrientation<sp/>=<sp/>panelOrientation,</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>}});</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QOrientationReading::Orientation,<sp/>orientation);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>QOrientationReading<sp/>sensorReading;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>sensorReading.setOrientation(orientation);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfigurationStore<sp/>configs;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>configs.queryConfig(outputs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;sensorReading,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(cfg.has_value());</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[config,<sp/>order,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>]<sp/>=<sp/>*cfg;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputConfig<sp/>=<sp/>config.constChangeSet(outputs.front());</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputConfig-&gt;autoRotationPolicy,<sp/><ref refid="class_k_win_1_1_output_1ac33fe80a4384201645790e9706b8582bae1d7532addbbe801632ce21fde0e0658" kindref="member">Output::AutoRotationPolicy::InTabletMode</ref>);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(<ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7" kindref="member">OutputTransform::Kind</ref>,<sp/>expectedRotation);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(outputConfig-&gt;transform.has_value());</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(outputConfig-&gt;transform-&gt;kind(),<sp/>expectedRotation);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540" refid="struct_k_win_1_1_identification_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_identification_data" kindref="compound">IdentificationData</ref></highlight></codeline>
<codeline lineno="1541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1542" refid="struct_k_win_1_1_identification_data_1ac5cfded219dfc65e44e0e74e089ccc12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;QString&gt;<sp/><ref refid="struct_k_win_1_1_identification_data_1ac5cfded219dfc65e44e0e74e089ccc12" kindref="member">connectorName</ref>;</highlight></codeline>
<codeline lineno="1543" refid="struct_k_win_1_1_identification_data_1a722215e3ac3b12a4633b58f18b8f03c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/><ref refid="struct_k_win_1_1_identification_data_1a722215e3ac3b12a4633b58f18b8f03c8" kindref="member">edid</ref>;</highlight></codeline>
<codeline lineno="1544" refid="struct_k_win_1_1_identification_data_1a8b55eb6959287e7d6f9719569d304738" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;QByteArray&gt;<sp/><ref refid="struct_k_win_1_1_identification_data_1a8b55eb6959287e7d6f9719569d304738" kindref="member">mstPath</ref>;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testSettingRestoration_data()</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addColumn&lt;QList&lt;IdentificationData&gt;&gt;(</highlight><highlight class="stringliteral">&quot;outputData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>readEdid<sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;path)<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFile<sp/>file(path);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.open(QIODeviceBase::OpenModeFlag::ReadOnly);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file.readAll();</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Same<sp/>EDID<sp/>ID,<sp/>different<sp/>hash&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid2.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Same<sp/>EDID&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;connector1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;connector2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;No<sp/>EDID&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;connector1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>QByteArray{},</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;connector2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>QByteArray{},</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;One<sp/>has<sp/>EDID,<sp/>the<sp/>other<sp/>doesn&apos;t&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;connector1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;connector2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>QByteArray{},</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Same<sp/>EDID,<sp/>no<sp/>connector<sp/>names,<sp/>different<sp/>MST<sp/>paths&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Same<sp/>EDID<sp/>ID,<sp/>different<sp/>hash,<sp/>no<sp/>connector<sp/>names,<sp/>different<sp/>MST<sp/>paths&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid2.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;No<sp/>EDID,<sp/>no<sp/>connector<sp/>names,<sp/>different<sp/>MST<sp/>paths&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>QByteArray{},</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>QByteArray{},</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;One<sp/>EDID,<sp/>the<sp/>other<sp/>not,<sp/>no<sp/>connector<sp/>names,<sp/>different<sp/>MST<sp/>paths&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>QByteArray{},</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;Only<sp/>EDID<sp/>hash,<sp/>no<sp/>connector<sp/>names,<sp/>no<sp/>MST<sp/>path&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;bbbbbbbbbbbbbbbb&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;aaaaaaaaaaaaaaaa&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;One<sp/>EDID<sp/>ID,<sp/>other<sp/>only<sp/>EDID<sp/>hash&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;aaaaaaaaaaaaaaaa&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>QTest::addRow(</highlight><highlight class="stringliteral">&quot;three<sp/>outputs,<sp/>two<sp/>with<sp/>the<sp/>same<sp/>EDID,<sp/>with<sp/>overlapping<sp/>MST<sp/>paths&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>QList{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IdentificationData{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>readEdid(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid2.bin&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testSettingRestoration()</highlight></codeline>
<codeline lineno="1707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>test<sp/>verifies<sp/>that<sp/>we<sp/>restore<sp/>configs<sp/>correctly,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>if<sp/>there&apos;s<sp/>no<sp/>unique<sp/>EDID<sp/>ID<sp/>to<sp/>match<sp/>them<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>previous<sp/>config<sp/>to<sp/>avoid<sp/>clashes<sp/>between<sp/>test<sp/>runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile(QStandardPaths::locate(QStandardPaths::ConfigLocation,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kwinoutputconfig.json&quot;</highlight><highlight class="normal">))).remove();</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>QFETCH(QList&lt;IdentificationData&gt;,<sp/>outputData);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>(outputData<sp/>|<sp/>std::views::transform([](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IdentificationData<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1280,<sp/>1024),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>data.edid,</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edidIdentifierOverride<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>data.connectorName,</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>data.mstPath,</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>})<sp/>|<sp/>std::ranges::to&lt;QList&gt;());</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfigurationStore<sp/>configs;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;std::optional&lt;QPoint&gt;&gt;<sp/>outputPositions;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>configs.queryConfig(outputs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(cfg.has_value());</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[config,<sp/>order,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>]<sp/>=<sp/>*cfg;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>:<sp/>outputs)<sp/>{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;applyChanges(config);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputPositions.push_back(config.constChangeSet(output)-&gt;pos);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>positions<sp/>must<sp/>be<sp/>independent<sp/>of<sp/>the<sp/>order<sp/>of<sp/>outputs<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ranges::reverse(outputs);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>configs.queryConfig(outputs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(cfg.has_value());</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[config,<sp/>order,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>]<sp/>=<sp/>*cfg;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>revertedPositions<sp/>=<sp/>outputPositions<sp/>|<sp/>std::views::reverse;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outputs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(revertedPositions[i],<sp/>config.constChangeSet(outputs[i])-&gt;pos);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>must<sp/>work<sp/>if<sp/>one<sp/>of<sp/>the<sp/>outputs<sp/>is<sp/>removed<sp/>in<sp/>between<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(1280,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1280,<sp/>1024),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>outputData.back().edid,</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edidIdentifierOverride<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>outputData.back().connectorName,</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>outputData.back().mstPath,</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>configs.queryConfig(outputs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[config,<sp/>order,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>]<sp/>=<sp/>*cfg;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs.front()-&gt;applyChanges(config);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>add<sp/>it<sp/>again,<sp/>with<sp/>the<sp/>inverted<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>(outputData<sp/>|<sp/>std::views::reverse<sp/>|<sp/>std::views::transform([](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IdentificationData<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{<ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1280,<sp/>1024),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>)},</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>data.edid,</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edidIdentifierOverride<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>data.connectorName,</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>data.mstPath,</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>})<sp/>|<sp/>std::ranges::to&lt;QList&gt;());</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>configs.queryConfig(outputs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(cfg.has_value());</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[config,<sp/>order,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>]<sp/>=<sp/>*cfg;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>revertedPositions<sp/>=<sp/>outputPositions<sp/>|<sp/>std::views::reverse;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outputs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(revertedPositions[i],<sp/>config.constChangeSet(outputs[i])-&gt;pos);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputChangesTest::testSettingRestoration_initialParsingFailure()</highlight></codeline>
<codeline lineno="1802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>test<sp/>checks<sp/>that<sp/>when<sp/>libdisplay-info<sp/>fails<sp/>to<sp/>parse<sp/>an<sp/>EDID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>gets<sp/>fixed<sp/>later,<sp/>we<sp/>still<sp/>pick<sp/>the<sp/>same<sp/>settings<sp/>as<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>previous<sp/>config<sp/>to<sp/>avoid<sp/>clashes<sp/>between<sp/>test<sp/>runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile(QStandardPaths::locate(QStandardPaths::ConfigLocation,<sp/>QStringLiteral(</highlight><highlight class="stringliteral">&quot;kwinoutputconfig.json&quot;</highlight><highlight class="normal">))).remove();</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>file(QFINDTESTDATA(</highlight><highlight class="stringliteral">&quot;data/same<sp/>serial<sp/>number/edid.bin&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/>file.open(QIODeviceBase::OpenModeFlag::ReadOnly);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>edid<sp/>=<sp/>file.readAll();</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first,<sp/>libdisplay-info<sp/>failed<sp/>to<sp/>parse<sp/>the<sp/>EDID<sp/>and<sp/>we<sp/>don&apos;t<sp/>have<sp/>an<sp/>EDID<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>this<sp/>uses<sp/>two<sp/>displays<sp/>with<sp/>the<sp/>same<sp/>EDID,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>additionally<sp/>test<sp/>the<sp/>case<sp/>when<sp/>EDID<sp/>ID<sp/>isn&apos;t<sp/>unique<sp/>when<sp/>this<sp/>happens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1280,<sp/>1024),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>),</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(640,<sp/>480),<sp/>60000,<sp/>OutputMode::Flags{}),</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>edid,</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edidIdentifierOverride<sp/>=<sp/>QByteArray(),</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1280,<sp/>1024),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>),</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(640,<sp/>480),<sp/>60000,<sp/>OutputMode::Flags{}),</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>edid,</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edidIdentifierOverride<sp/>=<sp/>QByteArray(),</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputConfigurationStore<sp/>configs;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>query<sp/>the<sp/>generated<sp/>config,<sp/>like<sp/>KWin<sp/>normally<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>configs.queryConfig(outputs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(cfg.has_value());</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[config,<sp/>order,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>]<sp/>=<sp/>*cfg;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs.front()-&gt;applyChanges(config);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(config.constChangeSet(outputs[0])-&gt;desiredModeSize.value(),<sp/>QSize(1280,<sp/>1024));</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>the<sp/>mode,<sp/>so<sp/>that<sp/>we<sp/>know<sp/>if<sp/>a<sp/>new<sp/>config<sp/>entry<sp/>was<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputConfiguration<sp/>config;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>changeSet<sp/>=<sp/>config.changeSet(outputs[0]);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;mode<sp/>=<sp/>outputs[0]-&gt;modes()[1];</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;desiredModeSize<sp/>=<sp/>QSize(640,<sp/>480);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeSet-&gt;desiredModeRefreshRate<sp/>=<sp/>60000;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs.front()-&gt;applyChanges(config);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configs.storeConfig(outputs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>config,<sp/>outputs);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verify<sp/>that<sp/>querying<sp/>the<sp/>config<sp/>also<sp/>shows<sp/>the<sp/>changed<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>things<sp/>could<sp/>already<sp/>go<sp/>wrong<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>configs.queryConfig(outputs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(cfg.has_value());</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[config,<sp/>order,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>]<sp/>=<sp/>*cfg;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>,<sp/><ref refid="class_k_win_1_1_output_configuration_store_1a8481f7c9645ddde31a284378bb580d5da0022667e8ec30cacbd6ba784899fb9fe" kindref="member">OutputConfigurationStore::ConfigType::Preexisting</ref>);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs.front()-&gt;applyChanges(config);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(config.constChangeSet(outputs[0])-&gt;desiredModeSize.value(),<sp/>QSize(640,<sp/>480));</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>libdisplay-info<sp/>was<sp/>updated,<sp/>and<sp/>we<sp/>have<sp/>an<sp/>EDID<sp/>ID<sp/>for<sp/>the<sp/>same<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">Test::setOutputConfig</ref>({</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1280,<sp/>1024),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>),</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(640,<sp/>480),<sp/>60000,<sp/>OutputMode::Flags{}),</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>edid,</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edidIdentifierOverride<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-1&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test::OutputInfo{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.geometry<sp/>=<sp/>QRect(0,<sp/>0,<sp/>1280,<sp/>1024),</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.internal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.physicalSizeInMM<sp/>=<sp/>QSize(598,<sp/>336),</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.modes<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(1280,<sp/>1024),<sp/>60000,<sp/><ref refid="class_k_win_1_1_output_mode_1aeb19b3f8a3ef0f635764c18d6084b7d0aa054ccb4ff684c73cbc2d272d45e32df" kindref="member">OutputMode::Flag::Preferred</ref>),</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1aa11b9066de819c7ae243da448ad7316c" kindref="member">ModeInfo</ref>(QSize(640,<sp/>480),<sp/>60000,<sp/>OutputMode::Flags{}),</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edid<sp/>=<sp/>edid,</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.edidIdentifierOverride<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.connectorName<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mstPath<sp/>=<sp/>QByteArrayLiteral(</highlight><highlight class="stringliteral">&quot;MST-1-2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>outputs<sp/>=<sp/>kwinApp()-&gt;outputBackend()-&gt;outputs();</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cfg<sp/>=<sp/>configs.queryConfig(outputs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(cfg.has_value());</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[config,<sp/>order,<sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>]<sp/>=<sp/>*cfg;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(config.constChangeSet(outputs[0])-&gt;desiredModeSize.value(),<sp/>QSize(640,<sp/>480));</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><ref refid="kwin__wayland__test_8h_1a105fcd0c1d5eb52370ab30db8ad37c4c" kindref="member">WAYLANDTEST_MAIN</ref>(<ref refid="class_k_win_1_1_output_changes_test" kindref="compound">KWin::OutputChangesTest</ref>)</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;outputchanges_test.moc&quot;</highlight></codeline>
    </programlisting>
    <location file="kwin/autotests/integration/outputchanges_test.cpp"/>
  </compounddef>
</doxygen>
