<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_test_output_transform" kind="class" language="C++" prot="public">
    <compoundname>TestOutputTransform</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_test_output_transform_1a63c0caa50e04a6ccb0d366f9a06d97ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestOutputTransform::TestOutputTransform</definition>
        <argsstring>()</argsstring>
        <name>TestOutputTransform</name>
        <qualifiedname>TestOutputTransform::TestOutputTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="18" column="5" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_test_output_transform_1acf25cec35f371e5ebb66645177ac7c8a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapSizeF_data</definition>
        <argsstring>()</argsstring>
        <name>mapSizeF_data</name>
        <qualifiedname>TestOutputTransform::mapSizeF_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="21" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="45" bodyend="63"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1ad0d16638482b9fb3176b42695b45edbd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapSizeF</definition>
        <argsstring>()</argsstring>
        <name>mapSizeF</name>
        <qualifiedname>TestOutputTransform::mapSizeF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="22" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="65" bodyend="72"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a01fe1e3332f80f0e0b689bbe5ba0e0f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapSize_data</definition>
        <argsstring>()</argsstring>
        <name>mapSize_data</name>
        <qualifiedname>TestOutputTransform::mapSize_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="23" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="74" bodyend="92"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1ac8718d1832350ffa96780951a0a82af8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapSize</definition>
        <argsstring>()</argsstring>
        <name>mapSize</name>
        <qualifiedname>TestOutputTransform::mapSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="24" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="94" bodyend="101"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a105ea75d2401df3d9229429c0524f955" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapRectF_data</definition>
        <argsstring>()</argsstring>
        <name>mapRectF_data</name>
        <qualifiedname>TestOutputTransform::mapRectF_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="25" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="103" bodyend="121"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a9773a946cbd39c0e4b13b0fbe35fdf1c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapRectF</definition>
        <argsstring>()</argsstring>
        <name>mapRectF</name>
        <qualifiedname>TestOutputTransform::mapRectF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="26" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="123" bodyend="130"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1afa3a4caf5e6e7ff8d4181fb5b3f8c6d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapRect_data</definition>
        <argsstring>()</argsstring>
        <name>mapRect_data</name>
        <qualifiedname>TestOutputTransform::mapRect_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="27" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="132" bodyend="150"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1ad67c491767e481b76d35018755f0d460" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapRect</definition>
        <argsstring>()</argsstring>
        <name>mapRect</name>
        <qualifiedname>TestOutputTransform::mapRect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="28" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="152" bodyend="159"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a4b909aa68cc0b60b02c6656fa229ec74" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapPointF_data</definition>
        <argsstring>()</argsstring>
        <name>mapPointF_data</name>
        <qualifiedname>TestOutputTransform::mapPointF_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="29" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="161" bodyend="179"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a2c6db23241bec5b5ec7b6b494b3625dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapPointF</definition>
        <argsstring>()</argsstring>
        <name>mapPointF</name>
        <qualifiedname>TestOutputTransform::mapPointF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="30" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="181" bodyend="191"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a0519520232296ecbb154b194fe04c046" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapPoint_data</definition>
        <argsstring>()</argsstring>
        <name>mapPoint_data</name>
        <qualifiedname>TestOutputTransform::mapPoint_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="31" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="193" bodyend="211"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a3d7e82a52c0130498d66fb646215eff2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::mapPoint</definition>
        <argsstring>()</argsstring>
        <name>mapPoint</name>
        <qualifiedname>TestOutputTransform::mapPoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="32" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="213" bodyend="223"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a5db297367012f595384c1abcf7baa34a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::inverted_data</definition>
        <argsstring>()</argsstring>
        <name>inverted_data</name>
        <qualifiedname>TestOutputTransform::inverted_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="33" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="225" bodyend="242"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1ae676ca59ce6bd8000dceea505e5a0791" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::inverted</definition>
        <argsstring>()</argsstring>
        <name>inverted</name>
        <qualifiedname>TestOutputTransform::inverted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="34" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="244" bodyend="250"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1ac7ed51de5ac710ebabcb3b12851d5e09" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::combine_data</definition>
        <argsstring>()</argsstring>
        <name>combine_data</name>
        <qualifiedname>TestOutputTransform::combine_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="35" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="252" bodyend="413"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a3b4df8036609ae7a25d6faee0ff5fd27" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::combine</definition>
        <argsstring>()</argsstring>
        <name>combine</name>
        <qualifiedname>TestOutputTransform::combine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="36" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="415" bodyend="429"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a658e5ce5ae4c3fa045596dd8813b4f96" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::matrix_data</definition>
        <argsstring>()</argsstring>
        <name>matrix_data</name>
        <qualifiedname>TestOutputTransform::matrix_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="37" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="431" bodyend="449"/>
      </memberdef>
      <memberdef kind="slot" id="class_test_output_transform_1a4409ac12539db392c17cb8285735171e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TestOutputTransform::matrix</definition>
        <argsstring>()</argsstring>
        <name>matrix</name>
        <qualifiedname>TestOutputTransform::matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/output_transform_test.cpp" line="38" column="10" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="451" bodyend="473"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestOutputTransform</label>
        <link refid="class_test_output_transform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TestOutputTransform</label>
        <link refid="class_test_output_transform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/autotests/output_transform_test.cpp" line="13" column="1" bodyfile="kwin/autotests/output_transform_test.cpp" bodystart="14" bodyend="39"/>
    <listofallmembers>
      <member refid="class_test_output_transform_1a3b4df8036609ae7a25d6faee0ff5fd27" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>combine</name></member>
      <member refid="class_test_output_transform_1ac7ed51de5ac710ebabcb3b12851d5e09" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>combine_data</name></member>
      <member refid="class_test_output_transform_1ae676ca59ce6bd8000dceea505e5a0791" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>inverted</name></member>
      <member refid="class_test_output_transform_1a5db297367012f595384c1abcf7baa34a" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>inverted_data</name></member>
      <member refid="class_test_output_transform_1a3d7e82a52c0130498d66fb646215eff2" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapPoint</name></member>
      <member refid="class_test_output_transform_1a0519520232296ecbb154b194fe04c046" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapPoint_data</name></member>
      <member refid="class_test_output_transform_1a2c6db23241bec5b5ec7b6b494b3625dc" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapPointF</name></member>
      <member refid="class_test_output_transform_1a4b909aa68cc0b60b02c6656fa229ec74" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapPointF_data</name></member>
      <member refid="class_test_output_transform_1ad67c491767e481b76d35018755f0d460" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapRect</name></member>
      <member refid="class_test_output_transform_1afa3a4caf5e6e7ff8d4181fb5b3f8c6d0" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapRect_data</name></member>
      <member refid="class_test_output_transform_1a9773a946cbd39c0e4b13b0fbe35fdf1c" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapRectF</name></member>
      <member refid="class_test_output_transform_1a105ea75d2401df3d9229429c0524f955" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapRectF_data</name></member>
      <member refid="class_test_output_transform_1ac8718d1832350ffa96780951a0a82af8" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapSize</name></member>
      <member refid="class_test_output_transform_1a01fe1e3332f80f0e0b689bbe5ba0e0f2" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapSize_data</name></member>
      <member refid="class_test_output_transform_1ad0d16638482b9fb3176b42695b45edbd" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapSizeF</name></member>
      <member refid="class_test_output_transform_1acf25cec35f371e5ebb66645177ac7c8a" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>mapSizeF_data</name></member>
      <member refid="class_test_output_transform_1a4409ac12539db392c17cb8285735171e" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>matrix</name></member>
      <member refid="class_test_output_transform_1a658e5ce5ae4c3fa045596dd8813b4f96" prot="private" virt="non-virtual"><scope>TestOutputTransform</scope><name>matrix_data</name></member>
      <member refid="class_test_output_transform_1a63c0caa50e04a6ccb0d366f9a06d97ef" prot="public" virt="non-virtual"><scope>TestOutputTransform</scope><name>TestOutputTransform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
