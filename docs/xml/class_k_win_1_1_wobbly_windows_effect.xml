<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_wobbly_windows_effect" kind="class" language="C++" prot="public">
    <compoundname>KWin::WobblyWindowsEffect</compoundname>
    <basecompoundref refid="class_k_win_1_1_offscreen_effect" prot="public" virt="non-virtual">KWin::OffscreenEffect</basecompoundref>
    <includes refid="wobblywindows_8h" local="no">wobblywindows.h</includes>
    <innerclass refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" prot="public">KWin::WobblyWindowsEffect::Pair</innerclass>
    <innerclass refid="struct_k_win_1_1_wobbly_windows_effect_1_1_window_wobbly_infos" prot="private">KWin::WobblyWindowsEffect::WindowWobblyInfos</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0a" prot="public" static="no" strong="no">
        <type></type>
        <name>WindowStatus</name>
        <qualifiedname>KWin::WobblyWindowsEffect::WindowStatus</qualifiedname>
        <enumvalue id="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0aa202ddbde4a47ff81fd71084f45bfe5e4" prot="public">
          <name>Free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0aa5b04970e31aaf2f769b52bb494edfaa6" prot="public">
          <name>Moving</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="69" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="69" bodyend="72"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1a5c7289c9291944458b94237345063a68" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::stiffness</definition>
        <argsstring></argsstring>
        <name>stiffness</name>
        <qualifiedname>KWin::WobblyWindowsEffect::stiffness</qualifiedname>
        <read>stiffness</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="26" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1aa6f9e0ab5afd09fd53113b3e26440bf1" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::drag</definition>
        <argsstring></argsstring>
        <name>drag</name>
        <qualifiedname>KWin::WobblyWindowsEffect::drag</qualifiedname>
        <read>drag</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="27" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1ad8f75b0a63e4e2120741f3e7aa5d93b2" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::moveFactor</definition>
        <argsstring></argsstring>
        <name>moveFactor</name>
        <qualifiedname>KWin::WobblyWindowsEffect::moveFactor</qualifiedname>
        <read>moveFactor</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="28" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1a80ded6c426a9f75306d09017d5edfd4e" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::xTesselation</definition>
        <argsstring></argsstring>
        <name>xTesselation</name>
        <qualifiedname>KWin::WobblyWindowsEffect::xTesselation</qualifiedname>
        <read>xTesselation</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="29" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1a6493c14b75b1bdffe330358c663c8aef" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::yTesselation</definition>
        <argsstring></argsstring>
        <name>yTesselation</name>
        <qualifiedname>KWin::WobblyWindowsEffect::yTesselation</qualifiedname>
        <read>yTesselation</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="30" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1a7d90885528d27cd091ae29151d1d1a2e" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::minVelocity</definition>
        <argsstring></argsstring>
        <name>minVelocity</name>
        <qualifiedname>KWin::WobblyWindowsEffect::minVelocity</qualifiedname>
        <read>minVelocity</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="31" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1ae798c92263bf922f9f51ece88687be1d" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::maxVelocity</definition>
        <argsstring></argsstring>
        <name>maxVelocity</name>
        <qualifiedname>KWin::WobblyWindowsEffect::maxVelocity</qualifiedname>
        <read>maxVelocity</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="32" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1a27ec2b20319178c5372e486b33f357c5" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::stopVelocity</definition>
        <argsstring></argsstring>
        <name>stopVelocity</name>
        <qualifiedname>KWin::WobblyWindowsEffect::stopVelocity</qualifiedname>
        <read>stopVelocity</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="33" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1ae63c44edd798cef641d5cbf97092aea2" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::minAcceleration</definition>
        <argsstring></argsstring>
        <name>minAcceleration</name>
        <qualifiedname>KWin::WobblyWindowsEffect::minAcceleration</qualifiedname>
        <read>minAcceleration</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="34" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1a75d0c60666b5d108e7c9ba1303979c5f" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::maxAcceleration</definition>
        <argsstring></argsstring>
        <name>maxAcceleration</name>
        <qualifiedname>KWin::WobblyWindowsEffect::maxAcceleration</qualifiedname>
        <read>maxAcceleration</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="35" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1a961a6093573c2a5af167ffd0d66cfef8" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::stopAcceleration</definition>
        <argsstring></argsstring>
        <name>stopAcceleration</name>
        <qualifiedname>KWin::WobblyWindowsEffect::stopAcceleration</qualifiedname>
        <read>stopAcceleration</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="36" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1ac63a625bcef5770ae68d075d7f9013fb" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool KWin::WobblyWindowsEffect::moveWobble</definition>
        <argsstring></argsstring>
        <name>moveWobble</name>
        <qualifiedname>KWin::WobblyWindowsEffect::moveWobble</qualifiedname>
        <read>isMoveWobble</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="37" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_k_win_1_1_wobbly_windows_effect_1a045c6c6d61cf5002086cb52aea58af4b" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool KWin::WobblyWindowsEffect::resizeWobble</definition>
        <argsstring></argsstring>
        <name>resizeWobble</name>
        <qualifiedname>KWin::WobblyWindowsEffect::resizeWobble</qualifiedname>
        <read>isResizeWobble</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="38" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1aa0ec16dcd487baaf0b1d2530737fcf59" prot="private" static="no" mutable="no">
        <type>QHash&lt; const <ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *, WindowWobblyInfos &gt;</type>
        <definition>QHash&lt;const EffectWindow *, WindowWobblyInfos&gt; KWin::WobblyWindowsEffect::windows</definition>
        <argsstring></argsstring>
        <name>windows</name>
        <qualifiedname>KWin::WobblyWindowsEffect::windows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="137" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1a8dc62db67f08bb492f129106ec2a3121" prot="private" static="no" mutable="no">
        <type>QRegion</type>
        <definition>QRegion KWin::WobblyWindowsEffect::m_updateRegion</definition>
        <argsstring></argsstring>
        <name>m_updateRegion</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_updateRegion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="139" column="13" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1afafaea2f5795094cdd916170a8fbfe1c" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_stiffness</definition>
        <argsstring></argsstring>
        <name>m_stiffness</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_stiffness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="141" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1ae8d8fed4841d47ad59e0a82b54879db7" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_drag</definition>
        <argsstring></argsstring>
        <name>m_drag</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_drag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="142" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1a193d9ff70ce958567dfdd33c57e369c2" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_move_factor</definition>
        <argsstring></argsstring>
        <name>m_move_factor</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_move_factor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="143" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1a07ccf7ed39eb78d09f3540e514618422" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_xTesselation</definition>
        <argsstring></argsstring>
        <name>m_xTesselation</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_xTesselation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="148" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1a4b08d6dec98fab8c4a7afd5767a242a7" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_yTesselation</definition>
        <argsstring></argsstring>
        <name>m_yTesselation</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_yTesselation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="149" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1a937a45ae1ade2e5b5032ebd0519a971b" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_minVelocity</definition>
        <argsstring></argsstring>
        <name>m_minVelocity</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_minVelocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="151" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1afb3eef8dea8c008d39844918845a2c13" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_maxVelocity</definition>
        <argsstring></argsstring>
        <name>m_maxVelocity</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_maxVelocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="152" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1a8757b7a02683a46f5d46976903ab00a1" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_stopVelocity</definition>
        <argsstring></argsstring>
        <name>m_stopVelocity</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_stopVelocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="153" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1aa7cefd4b0e3eebc9f6ce9199627861f9" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_minAcceleration</definition>
        <argsstring></argsstring>
        <name>m_minAcceleration</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_minAcceleration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="154" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1a8406d98176bbaf3ea9010a834748f27a" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_maxAcceleration</definition>
        <argsstring></argsstring>
        <name>m_maxAcceleration</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_maxAcceleration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="155" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1aa8295ffe61b80b0469f41813ef9a714f" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::m_stopAcceleration</definition>
        <argsstring></argsstring>
        <name>m_stopAcceleration</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_stopAcceleration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="156" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1a98cdd221f39f15f3a14140222c2108cb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::WobblyWindowsEffect::m_moveWobble</definition>
        <argsstring></argsstring>
        <name>m_moveWobble</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_moveWobble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="158" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wobbly_windows_effect_1a364b934e611a24d453be3e2080ecd730" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::WobblyWindowsEffect::m_resizeWobble</definition>
        <argsstring></argsstring>
        <name>m_resizeWobble</name>
        <qualifiedname>KWin::WobblyWindowsEffect::m_resizeWobble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="159" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="159" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a47a104f92af7482acc5e67a8e51f7506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::WobblyWindowsEffect::WobblyWindowsEffect</definition>
        <argsstring>()</argsstring>
        <name>WobblyWindowsEffect</name>
        <qualifiedname>KWin::WobblyWindowsEffect::WobblyWindowsEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="40" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="123" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a1f4900e755b5564ba65d69c0ceaa9e4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::WobblyWindowsEffect::~WobblyWindowsEffect</definition>
        <argsstring>() override</argsstring>
        <name>~WobblyWindowsEffect</name>
        <qualifiedname>KWin::WobblyWindowsEffect::~WobblyWindowsEffect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="41" column="5" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1abe866e5adad959c2773fae5434906788" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::reconfigure</definition>
        <argsstring>(ReconfigureFlags) override</argsstring>
        <name>reconfigure</name>
        <qualifiedname>KWin::WobblyWindowsEffect::reconfigure</qualifiedname>
        <reimplements refid="group__kwineffects_1ga737c6d80eb8f8b24fdc6398209c38e3d">reconfigure</reimplements>
        <param>
          <type>ReconfigureFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when configuration changes (either the effect&apos;s or <ref refid="namespace_k_win" kindref="compound">KWin</ref>&apos;s global).</para>
<para>In OpenGL based compositing, the frameworks ensures that the context is current when the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> is reconfigured. If this method is called from within the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> it is required to ensure that the context is current if the implementation does OpenGL calls. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="43" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="143" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a2ddf16f348c8db49d8540a5b070e277c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::prePaintScreen</definition>
        <argsstring>(ScreenPrePaintData &amp;data, std::chrono::milliseconds presentTime) override</argsstring>
        <name>prePaintScreen</name>
        <qualifiedname>KWin::WobblyWindowsEffect::prePaintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga2edc1b757e36bb6bcbbacde454dfc05c">prePaintScreen</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_screen_pre_paint_data" kindref="compound">ScreenPrePaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>presentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called before starting to paint the screen. In this method you can: <itemizedlist>
<listitem><para>set whether the windows or the entire screen will be transformed </para>
</listitem>
<listitem><para>change the region of the screen that will be painted </para>
</listitem>
<listitem><para>do various housekeeping tasks such as initing your effect&apos;s variables for the upcoming paint pass or updating animation&apos;s progress</para>
</listitem>
</itemizedlist>
<emphasis>presentTime</emphasis> specifies the expected monotonic time when the rendered frame will be displayed on the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="44" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1ab61cba4718f96d0f93fb5540cb3b4dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::prePaintWindow</definition>
        <argsstring>(EffectWindow *w, WindowPrePaintData &amp;data, std::chrono::milliseconds presentTime) override</argsstring>
        <name>prePaintWindow</name>
        <qualifiedname>KWin::WobblyWindowsEffect::prePaintWindow</qualifiedname>
        <reimplements refid="group__kwineffects_1ga2832c7831c0f49f9f5cf0267ffc53672">prePaintWindow</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_pre_paint_data" kindref="compound">WindowPrePaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::chrono::milliseconds</type>
          <declname>presentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called for every window before the actual paint pass In this method you can: <itemizedlist>
<listitem><para>enable or disable painting of the window (e.g. enable paiting of minimized window) </para>
</listitem>
<listitem><para>set window to be painted with translucency </para>
</listitem>
<listitem><para>set window to be transformed </para>
</listitem>
<listitem><para>request the window to be divided into multiple parts</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked.</para>
<para><emphasis>presentTime</emphasis> specifies the expected monotonic time when the rendered frame will be displayed on the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="45" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="238" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a5b0fbd81a207740ebac90546f8a5f3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::postPaintScreen</definition>
        <argsstring>() override</argsstring>
        <name>postPaintScreen</name>
        <qualifiedname>KWin::WobblyWindowsEffect::postPaintScreen</qualifiedname>
        <reimplements refid="group__kwineffects_1ga10021cf9704c00d60beae284d53846e2">postPaintScreen</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called after all the painting has been finished. In this method you can: <itemizedlist>
<listitem><para>schedule next repaint in case of animations You shouldn&apos;t paint anything here.</para>
</listitem>
</itemizedlist>
In OpenGL based compositing, the frameworks ensures that the context is current when this method is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="46" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="298" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a7f518538e5a62f0a2d108042136b5e38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::WobblyWindowsEffect::isActive</definition>
        <argsstring>() const override</argsstring>
        <name>isActive</name>
        <qualifiedname>KWin::WobblyWindowsEffect::isActive</qualifiedname>
        <reimplements refid="group__kwineffects_1ga596b6c0ed146b97b293f5db5f27fc40f">isActive</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrite this method to indicate whether your effect will be doing something in the next frame to be rendered. If the method returns <computeroutput>false</computeroutput> the effect will be excluded from the chained methods in the next rendered frame.</para>
<para>This method is called always directly before the paint loop begins. So it is totally fine to e.g. react on a window event, issue a repaint to trigger an animation and change a flag to indicate that this method returns <computeroutput>true</computeroutput>.</para>
<para>As the method is called each frame, you should not perform complex calculations. Best use just a boolean flag.</para>
<para>The default implementation of this method returns <computeroutput>true</computeroutput>. <simplesect kind="since"><para>4.8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="47" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1097" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1aa3536bf83dc6d62acdf1429ea46328a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int KWin::WobblyWindowsEffect::requestedEffectChainPosition</definition>
        <argsstring>() const override</argsstring>
        <name>requestedEffectChainPosition</name>
        <qualifiedname>KWin::WobblyWindowsEffect::requestedEffectChainPosition</qualifiedname>
        <reimplements refid="group__kwineffects_1ga120531588e58691a5a18028158d2947a">requestedEffectChainPosition</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reimplement this method to indicate where in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> chain the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> should be placed.</para>
<para>A low number indicates early chain position, thus before other Effects got called, a high number indicates a late position. The returned number should be in the interval [0, 100]. The default value is 0.</para>
<para>In KWin4 this information was provided in the <ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref>&apos;s desktop file as property X-KDE-Ordering. In the case of Scripted Effects this property is still used.</para>
<para><simplesect kind="since"><para>5.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="49" column="9" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1ae3624a2112250c4fc48ac1bf14ba88ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::setStiffness</definition>
        <argsstring>(qreal stiffness)</argsstring>
        <name>setStiffness</name>
        <qualifiedname>KWin::WobblyWindowsEffect::setStiffness</qualifiedname>
        <param>
          <type>qreal</type>
          <declname>stiffness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="58" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a96ad41272e7791dabf2a35be488a3c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::setDrag</definition>
        <argsstring>(qreal drag)</argsstring>
        <name>setDrag</name>
        <qualifiedname>KWin::WobblyWindowsEffect::setDrag</qualifiedname>
        <param>
          <type>qreal</type>
          <declname>drag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="59" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a56e68b9ab3c6bb972ff6e17993a4659d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::setVelocityThreshold</definition>
        <argsstring>(qreal velocityThreshold)</argsstring>
        <name>setVelocityThreshold</name>
        <qualifiedname>KWin::WobblyWindowsEffect::setVelocityThreshold</qualifiedname>
        <param>
          <type>qreal</type>
          <declname>velocityThreshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="60" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a4a13ac671787d3de31913f3d9aefd33b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::setMoveFactor</definition>
        <argsstring>(qreal factor)</argsstring>
        <name>setMoveFactor</name>
        <qualifiedname>KWin::WobblyWindowsEffect::setMoveFactor</qualifiedname>
        <param>
          <type>qreal</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="61" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1ab202dad637c8486057c9efb2732d6752" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::stiffness</definition>
        <argsstring>() const</argsstring>
        <name>stiffness</name>
        <qualifiedname>KWin::WobblyWindowsEffect::stiffness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="77" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1102" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1ae59a34da98ac9e39a1d044a3b748e4a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::drag</definition>
        <argsstring>() const</argsstring>
        <name>drag</name>
        <qualifiedname>KWin::WobblyWindowsEffect::drag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="78" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1107" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a1c2046a957ff96abae0674599c1c6ed5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::moveFactor</definition>
        <argsstring>() const</argsstring>
        <name>moveFactor</name>
        <qualifiedname>KWin::WobblyWindowsEffect::moveFactor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="79" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1112" bodyend="1115"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1ac26ad08451eae9c95842a8c19e8eb726" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::xTesselation</definition>
        <argsstring>() const</argsstring>
        <name>xTesselation</name>
        <qualifiedname>KWin::WobblyWindowsEffect::xTesselation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="80" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1117" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a342c9f57980e43ba1f53d7cb450ad0de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::yTesselation</definition>
        <argsstring>() const</argsstring>
        <name>yTesselation</name>
        <qualifiedname>KWin::WobblyWindowsEffect::yTesselation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="81" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1122" bodyend="1125"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a70e8be2d7a53668850b472ddb72b7065" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::minVelocity</definition>
        <argsstring>() const</argsstring>
        <name>minVelocity</name>
        <qualifiedname>KWin::WobblyWindowsEffect::minVelocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="82" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1127" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a6da6832cc80d7ff9e61b5c6df3629f11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::maxVelocity</definition>
        <argsstring>() const</argsstring>
        <name>maxVelocity</name>
        <qualifiedname>KWin::WobblyWindowsEffect::maxVelocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="83" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1132" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1adf1871ae50c268a4d3450906a70c2daf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::stopVelocity</definition>
        <argsstring>() const</argsstring>
        <name>stopVelocity</name>
        <qualifiedname>KWin::WobblyWindowsEffect::stopVelocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="84" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1137" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1afdd1c18c82b41c2165003b44d6d94a28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::minAcceleration</definition>
        <argsstring>() const</argsstring>
        <name>minAcceleration</name>
        <qualifiedname>KWin::WobblyWindowsEffect::minAcceleration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="85" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1142" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1ace90e374676860ae2ae1d3d80103eae4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::maxAcceleration</definition>
        <argsstring>() const</argsstring>
        <name>maxAcceleration</name>
        <qualifiedname>KWin::WobblyWindowsEffect::maxAcceleration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="86" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1147" bodyend="1150"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a0050a95e608a44301e12f8df21404e8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::WobblyWindowsEffect::stopAcceleration</definition>
        <argsstring>() const</argsstring>
        <name>stopAcceleration</name>
        <qualifiedname>KWin::WobblyWindowsEffect::stopAcceleration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="87" column="11" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1152" bodyend="1155"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a0603908ad181025da3a2a8f42928e1b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::WobblyWindowsEffect::isMoveWobble</definition>
        <argsstring>() const</argsstring>
        <name>isMoveWobble</name>
        <qualifiedname>KWin::WobblyWindowsEffect::isMoveWobble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="88" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1157" bodyend="1160"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a8dace18603cf9cb1cd84288d9a8cf7bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::WobblyWindowsEffect::isResizeWobble</definition>
        <argsstring>() const</argsstring>
        <name>isResizeWobble</name>
        <qualifiedname>KWin::WobblyWindowsEffect::isResizeWobble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="89" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="1162" bodyend="1165"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a6f43fcdd36db1782003298ae0022de4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::WobblyWindowsEffect::supported</definition>
        <argsstring>()</argsstring>
        <name>supported</name>
        <qualifiedname>KWin::WobblyWindowsEffect::supported</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="74" column="17" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="189" bodyend="192"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a1fe350cb507b59572c72f7e26f8f7741" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::apply</definition>
        <argsstring>(EffectWindow *w, int mask, WindowPaintData &amp;data, WindowQuadList &amp;quads) override</argsstring>
        <name>apply</name>
        <qualifiedname>KWin::WobblyWindowsEffect::apply</qualifiedname>
        <reimplements refid="class_k_win_1_1_offscreen_effect_1a770fb27f108f87402051ca3f320092b2">apply</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_paint_data" kindref="compound">WindowPaintData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window_quad_list" kindref="compound">WindowQuadList</ref> &amp;</type>
          <declname>quads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override this function to transform the window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="92" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="257" bodyend="296"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_wobbly_windows_effect_1a51415ac7a1b2b728a10bd47eff4e05b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::slotWindowAdded</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowAdded</name>
        <qualifiedname>KWin::WobblyWindowsEffect::slotWindowAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="95" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="309" bodyend="315"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_wobbly_windows_effect_1a53c53421124a8334e4624e1860b1b75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::slotWindowStartUserMovedResized</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowStartUserMovedResized</name>
        <qualifiedname>KWin::WobblyWindowsEffect::slotWindowStartUserMovedResized</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="96" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="317" bodyend="326"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_wobbly_windows_effect_1a0ac7635d79f87cd333df576f19800d24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::slotWindowStepUserMovedResized</definition>
        <argsstring>(KWin::EffectWindow *w, const QRectF &amp;geometry)</argsstring>
        <name>slotWindowStepUserMovedResized</name>
        <qualifiedname>KWin::WobblyWindowsEffect::slotWindowStepUserMovedResized</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="97" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="328" bodyend="347"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_wobbly_windows_effect_1a9fe3dadc1173e1d4b39550149c8e1313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::slotWindowFinishUserMovedResized</definition>
        <argsstring>(KWin::EffectWindow *w)</argsstring>
        <name>slotWindowFinishUserMovedResized</name>
        <qualifiedname>KWin::WobblyWindowsEffect::slotWindowFinishUserMovedResized</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="98" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="349" bodyend="368"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_wobbly_windows_effect_1aa1df3c77fdd8f4603ec65fca20ef3e7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::slotWindowMaximizeStateChanged</definition>
        <argsstring>(KWin::EffectWindow *w, bool horizontal, bool vertical)</argsstring>
        <name>slotWindowMaximizeStateChanged</name>
        <qualifiedname>KWin::WobblyWindowsEffect::slotWindowMaximizeStateChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">KWin::EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>horizontal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vertical</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="99" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="370" bodyend="396"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a052e3e90492366e86f1c12bee39d7c03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::startMovedResized</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>startMovedResized</name>
        <qualifiedname>KWin::WobblyWindowsEffect::startMovedResized</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="102" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="398" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1aac27fdbbb53acb30f7a0fd2dd2bcccff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::stepMovedResized</definition>
        <argsstring>(EffectWindow *w)</argsstring>
        <name>stepMovedResized</name>
        <qualifiedname>KWin::WobblyWindowsEffect::stepMovedResized</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="103" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="440" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1aa45f41745a675631ee9e5093c7f3e921" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::WobblyWindowsEffect::updateWindowWobblyDatas</definition>
        <argsstring>(EffectWindow *w, qreal time)</argsstring>
        <name>updateWindowWobblyDatas</name>
        <qualifiedname>KWin::WobblyWindowsEffect::updateWindowWobblyDatas</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_effect_window" kindref="compound">EffectWindow</ref> *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="104" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="603" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a5461cb1741b026560ef2907c30f0d5ed" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::initWobblyInfo</definition>
        <argsstring>(WindowWobblyInfos &amp;wwi, QRectF geometry) const</argsstring>
        <name>initWobblyInfo</name>
        <qualifiedname>KWin::WobblyWindowsEffect::initWobblyInfo</qualifiedname>
        <param>
          <type>WindowWobblyInfos &amp;</type>
          <declname>wwi</declname>
        </param>
        <param>
          <type>QRectF</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="161" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="470" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1ad8a4112cfa416057bdae2eeed0fff099" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">WobblyWindowsEffect::Pair</ref></type>
        <definition>WobblyWindowsEffect::Pair KWin::WobblyWindowsEffect::computeBezierPoint</definition>
        <argsstring>(const WindowWobblyInfos &amp;wwi, Pair point) const</argsstring>
        <name>computeBezierPoint</name>
        <qualifiedname>KWin::WobblyWindowsEffect::computeBezierPoint</qualifiedname>
        <param>
          <type>const WindowWobblyInfos &amp;</type>
          <declname>wwi</declname>
        </param>
        <param>
          <type><ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="163" column="31" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="527" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1a7f3ae82199be6ecf05c0ee71d58216ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::setParameterSet</definition>
        <argsstring>(const ParameterSet &amp;pset)</argsstring>
        <name>setParameterSet</name>
        <qualifiedname>KWin::WobblyWindowsEffect::setParameterSet</qualifiedname>
        <param>
          <type>const <ref refid="struct_k_win_1_1_parameter_set" kindref="compound">ParameterSet</ref> &amp;</type>
          <declname>pset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="167" column="10" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="194" bodyend="209"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_k_win_1_1_wobbly_windows_effect_1ab0c03aed3399a2bde102e7aae6cb6853" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::WobblyWindowsEffect::heightRingLinearMean</definition>
        <argsstring>(QList&lt; Pair &gt; &amp;data, WindowWobblyInfos &amp;wwi)</argsstring>
        <name>heightRingLinearMean</name>
        <qualifiedname>KWin::WobblyWindowsEffect::heightRingLinearMean</qualifiedname>
        <param>
          <type>QList&lt; <ref refid="struct_k_win_1_1_wobbly_windows_effect_1_1_pair" kindref="compound">Pair</ref> &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>WindowWobblyInfos &amp;</type>
          <declname>wwi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="165" column="17" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.cpp" bodystart="959" bodyend="1095"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_k_win_1_1_effect" kindref="compound">Effect</ref> which wobble windows </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::OffscreenEffect</label>
        <link refid="class_k_win_1_1_offscreen_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::WobblyWindowsEffect</label>
        <link refid="class_k_win_1_1_wobbly_windows_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>KWin::Effect</label>
        <link refid="class_k_win_1_1_effect"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::OffscreenEffect</label>
        <link refid="class_k_win_1_1_offscreen_effect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::WobblyWindowsEffect</label>
        <link refid="class_k_win_1_1_wobbly_windows_effect"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/plugins/wobblywindows/wobblywindows.h" line="23" column="1" bodyfile="kwin/src/plugins/wobblywindows/wobblywindows.h" bodystart="24" bodyend="168"/>
    <listofallmembers>
      <member refid="group__kwineffects_1gab9bcf52072fe74567496b0a894d1d873" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga3a167fe6d9c46376ed46db13caf2d135" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>animationTime</name></member>
      <member refid="group__kwineffects_1ga0ba05f1463195d0f92ea1dd3396a5d16" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>animationTime</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a1fe350cb507b59572c72f7e26f8f7741" prot="protected" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>apply</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a112119e708233a1ddcfac249089f2fee" prot="protected" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>blocksDirectScanout</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea67d120ab5ce1dc424476e63c132af6c1" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>Blur</name></member>
      <member refid="group__kwineffects_1gab8a94f591b743b59b7285911e641e7d5" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>borderActivated</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ad8a4112cfa416057bdae2eeed0fff099" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>computeBezierPoint</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aead805f717a48c23959a1e9ecd7722d15d" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>Contrast</name></member>
      <member refid="group__kwineffects_1ga4da344d8b8f2cb9eecd6e64a9b758740" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>cursorPos</name></member>
      <member refid="group__kwineffects_1ga0c159e00c3a51ca733bea49cf8d52691" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>debug</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1aa6f9e0ab5afd09fd53113b3e26440bf1" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>drag</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ae59a34da98ac9e39a1d044a3b748e4a1" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>drag</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a0a6ba121aa03a17457d3080054ef1615" prot="protected" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>drawWindow</name></member>
      <member refid="group__kwineffects_1ga7bd8262f4cb2c5c3090c748eb388ad7e" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>Effect</name></member>
      <member refid="group__kwineffects_1ga6337b2a9b5aadfbb6b696119144b56ae" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>Feature</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0aa202ddbde4a47ff81fd71084f45bfe5e4" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>Free</name></member>
      <member refid="group__kwineffects_1gab5e0581ae4b2dffe8014ff5cf6c21158" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>grabbedKeyboardEvent</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ab0c03aed3399a2bde102e7aae6cb6853" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>heightRingLinearMean</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aeaecbb77ad241419970ece3d45296c4838" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>HighlightWindows</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a5461cb1741b026560ef2907c30f0d5ed" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>initWobblyInfo</name></member>
      <member refid="group__kwineffects_1ga7b0ecb57667179e95c188f0ee7416d00" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>interpolate</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a7f518538e5a62f0a2d108042136b5e38" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>isActive</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a0603908ad181025da3a2a8f42928e1b1" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>isMoveWobble</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a8dace18603cf9cb1cd84288d9a8cf7bf" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>isResizeWobble</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ae8d8fed4841d47ad59e0a82b54879db7" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_drag</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a8406d98176bbaf3ea9010a834748f27a" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_maxAcceleration</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1afb3eef8dea8c008d39844918845a2c13" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_maxVelocity</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1aa7cefd4b0e3eebc9f6ce9199627861f9" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_minAcceleration</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a937a45ae1ade2e5b5032ebd0519a971b" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_minVelocity</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a193d9ff70ce958567dfdd33c57e369c2" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_move_factor</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a98cdd221f39f15f3a14140222c2108cb" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_moveWobble</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a364b934e611a24d453be3e2080ecd730" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_resizeWobble</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1afafaea2f5795094cdd916170a8fbfe1c" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_stiffness</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1aa8295ffe61b80b0469f41813ef9a714f" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_stopAcceleration</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a8757b7a02683a46f5d46976903ab00a1" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_stopVelocity</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a8dc62db67f08bb492f129106ec2a3121" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_updateRegion</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a07ccf7ed39eb78d09f3540e514618422" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_xTesselation</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a4b08d6dec98fab8c4a7afd5767a242a7" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>m_yTesselation</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a75d0c60666b5d108e7c9ba1303979c5f" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>maxAcceleration</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ace90e374676860ae2ae1d3d80103eae4" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>maxAcceleration</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ae798c92263bf922f9f51ece88687be1d" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>maxVelocity</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a6da6832cc80d7ff9e61b5c6df3629f11" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>maxVelocity</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ae63c44edd798cef641d5cbf97092aea2" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>minAcceleration</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1afdd1c18c82b41c2165003b44d6d94a28" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>minAcceleration</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a7d90885528d27cd091ae29151d1d1a2e" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>minVelocity</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a70e8be2d7a53668850b472ddb72b7065" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>minVelocity</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ad8f75b0a63e4e2120741f3e7aa5d93b2" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>moveFactor</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a1c2046a957ff96abae0674599c1c6ed5" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>moveFactor</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ac63a625bcef5770ae68d075d7f9013fb" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>moveWobble</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0aa5b04970e31aaf2f769b52bb494edfaa6" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>Moving</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea170229312ed2ec0e446ee89ba7f6b6ca" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>Nothing</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ac2af5bb9d718ff03474cdd2d6715a055" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>OffscreenEffect</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dab0de2932c45bde6df3de10d00dbd6fcd" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>PAINT_SCREEN_BACKGROUND_FIRST</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da43acbfc913cae9eb3c363aeb0524f18f" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>PAINT_SCREEN_REGION</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da3e731594d83c3e92742bff7c420fb7f8" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>PAINT_SCREEN_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da124dd798e5f793087e81da77e11a9b1e" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>PAINT_SCREEN_WITH_TRANSFORMED_WINDOWS</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac606d3dcf2dd150234f71c4c39083c7d" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>PAINT_WINDOW_OPAQUE</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378da684bb6c6c278b900b6d0c889e79233b8" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>PAINT_WINDOW_TRANSFORMED</name></member>
      <member refid="group__kwineffects_1gga26b3491296f952420a75b4a0ab33378dac7237bf4bb4d6ea6d6fb1215db19b45e" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>PAINT_WINDOW_TRANSLUCENT</name></member>
      <member refid="group__kwineffects_1ga44ee94161446ce6fb2502376af6515a8" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>paintScreen</name></member>
      <member refid="group__kwineffects_1ga0f0292db2bf016a0843ef7cc06219378" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>paintWindow</name></member>
      <member refid="group__kwineffects_1ga5fb1bc87ff54dcc2cfe87b070816ab00" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>perform</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a5b0fbd81a207740ebac90546f8a5f3c7" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>postPaintScreen</name></member>
      <member refid="group__kwineffects_1ga9b7cf82c6f74331cffabb06c63ef914c" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>postPaintWindow</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a2ddf16f348c8db49d8540a5b070e277c" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>prePaintScreen</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ab61cba4718f96d0f93fb5540cb3b4dfc" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>prePaintWindow</name></member>
      <member refid="group__kwineffects_1ga30fc2cbbdd90f95568a9e350f34bf2b7" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>provides</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1abe866e5adad959c2773fae5434906788" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>reconfigure</name></member>
      <member refid="group__kwineffects_1gga4aebd7d0f695e37678debaa118fa92dca19d3e23e53788c8d9cc9c18fbf75fc7d" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>ReconfigureAll</name></member>
      <member refid="group__kwineffects_1ga4aebd7d0f695e37678debaa118fa92dc" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>ReconfigureFlag</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a6f9911e49dbaf73975c2f238937930be" prot="protected" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>redirect</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1aa3536bf83dc6d62acdf1429ea46328a0" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>requestedEffectChainPosition</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a045c6c6d61cf5002086cb52aea58af4b" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>resizeWobble</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea592ea0de7a4d658a1ef9bbb48b18e15a" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>ScreenInversion</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a96ad41272e7791dabf2a35be488a3c92" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>setDrag</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a4a13ac671787d3de31913f3d9aefd33b" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>setMoveFactor</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a7f3ae82199be6ecf05c0ee71d58216ce" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>setParameterSet</name></member>
      <member refid="group__kwineffects_1ga1efc42cd9be15e8200c6e55f6bf47cb8" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>setPositionTransformations</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ae98f808ad3750003d4a1f7f24fa284a5" prot="protected" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>setShader</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ae3624a2112250c4fc48ac1bf14ba88ae" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>setStiffness</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a56e68b9ab3c6bb972ff6e17993a4659d" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>setVelocityThreshold</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ae390a8c07620d899b467b6c919901649" prot="protected" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>setVertexSnappingMode</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a51415ac7a1b2b728a10bd47eff4e05b4" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>slotWindowAdded</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a9fe3dadc1173e1d4b39550149c8e1313" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>slotWindowFinishUserMovedResized</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1aa1df3c77fdd8f4603ec65fca20ef3e7d" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>slotWindowMaximizeStateChanged</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a53c53421124a8334e4624e1860b1b75c" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>slotWindowStartUserMovedResized</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a0ac7635d79f87cd333df576f19800d24" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>slotWindowStepUserMovedResized</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a052e3e90492366e86f1c12bee39d7c03" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>startMovedResized</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1aac27fdbbb53acb30f7a0fd2dd2bcccff" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>stepMovedResized</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a5c7289c9291944458b94237345063a68" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>stiffness</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ab202dad637c8486057c9efb2732d6752" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>stiffness</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a961a6093573c2a5af167ffd0d66cfef8" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>stopAcceleration</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a0050a95e608a44301e12f8df21404e8c" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>stopAcceleration</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a27ec2b20319178c5372e486b33f357c5" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>stopVelocity</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1adf1871ae50c268a4d3450906a70c2daf" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>stopVelocity</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a6f43fcdd36db1782003298ae0022de4a" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>supported</name></member>
      <member refid="group__kwineffects_1gga6337b2a9b5aadfbb6b696119144b56aea19036d413806c53978a3234e7eb197c4" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>SystemBell</name></member>
      <member refid="group__kwineffects_1ga2d22a8f0b8a4d81615dff67dc1ef970f" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>tabletPadButtonEvent</name></member>
      <member refid="group__kwineffects_1gaa084e5a45597f5775213715eb5506f63" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>tabletPadRingEvent</name></member>
      <member refid="group__kwineffects_1ga4998fb0983bd97163935cad2c4dedd76" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>tabletPadStripEvent</name></member>
      <member refid="group__kwineffects_1ga1d4ae01f5935ea887a12018d59191cbf" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>tabletToolAxis</name></member>
      <member refid="group__kwineffects_1ga7a984d7d83dfa97962b8404301c6aba9" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>tabletToolButtonEvent</name></member>
      <member refid="group__kwineffects_1ga4ed77506be381680bf664dbc8c20e036" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>tabletToolProximity</name></member>
      <member refid="group__kwineffects_1gaf16e9ca42cceb738fb859d1a1a462548" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>tabletToolTip</name></member>
      <member refid="group__kwineffects_1gaa31554949bc00085e6380b50be16138e" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>touchCancel</name></member>
      <member refid="group__kwineffects_1ga315fd305e7570f41e7bce7db6812381f" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>touchDown</name></member>
      <member refid="group__kwineffects_1ga54d00a9e05b5d4597db40c2f5b1d36de" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>touchMotion</name></member>
      <member refid="group__kwineffects_1gaf3871967d6199eb7c87621bc75b925bb" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>touchUp</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1a503d5105f32353e6a0046b8a0ea91b22" prot="protected" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>unredirect</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1aa45f41745a675631ee9e5093c7f3e921" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>updateWindowWobblyDatas</name></member>
      <member refid="group__kwineffects_1ga7b142933c38cb9b4a433b768b266e7cb" prot="public" virt="virtual"><scope>KWin::WobblyWindowsEffect</scope><name>windowInputMouseEvent</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1aa0ec16dcd487baaf0b1d2530737fcf59" prot="private" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>windows</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a00bc08f5d0032c27fe66262ec1fe8e0a" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>WindowStatus</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a47a104f92af7482acc5e67a8e51f7506" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>WobblyWindowsEffect</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a80ded6c426a9f75306d09017d5edfd4e" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>xTesselation</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1ac26ad08451eae9c95842a8c19e8eb726" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>xTesselation</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a6493c14b75b1bdffe330358c663c8aef" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>yTesselation</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a342c9f57980e43ba1f53d7cb450ad0de" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>yTesselation</name></member>
      <member refid="group__kwineffects_1ga50174eb0169aebceb78ebd5aff71c481" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>~Effect</name></member>
      <member refid="class_k_win_1_1_offscreen_effect_1ac913e0092c54576890821b0bcb3e7033" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>~OffscreenEffect</name></member>
      <member refid="class_k_win_1_1_wobbly_windows_effect_1a1f4900e755b5564ba65d69c0ceaa9e4c" prot="public" virt="non-virtual"><scope>KWin::WobblyWindowsEffect</scope><name>~WobblyWindowsEffect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
