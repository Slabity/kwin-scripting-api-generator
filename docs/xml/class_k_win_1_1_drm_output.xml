<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_drm_output" kind="class" language="C++" prot="public">
    <compoundname>KWin::DrmOutput</compoundname>
    <basecompoundref refid="class_k_win_1_1_drm_abstract_output" prot="public" virt="non-virtual">KWin::DrmAbstractOutput</basecompoundref>
    <includes refid="drm__output_8h" local="no">drm_output.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1a8745d27db34d91510cfecc1282e7ffd8" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_drm_gpu" kindref="compound">DrmGpu</ref> *const</type>
        <definition>DrmGpu* const KWin::DrmOutput::m_gpu</definition>
        <argsstring></argsstring>
        <name>m_gpu</name>
        <qualifiedname>KWin::DrmOutput::m_gpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="91" column="18" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1a9776a14b040e80211c7d5acf4427aca5" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref> *</type>
        <definition>DrmPipeline* KWin::DrmOutput::m_pipeline</definition>
        <argsstring></argsstring>
        <name>m_pipeline</name>
        <qualifiedname>KWin::DrmOutput::m_pipeline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="92" column="17" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1aa5b636ab77dbf7115cea7c084de789a1" prot="private" static="no" mutable="no">
        <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_connector" kindref="compound">DrmConnector</ref> &gt;</type>
        <definition>const std::shared_ptr&lt;DrmConnector&gt; KWin::DrmOutput::m_connector</definition>
        <argsstring></argsstring>
        <name>m_connector</name>
        <qualifiedname>KWin::DrmOutput::m_connector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="93" column="27" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1a35d9475918a65d18fee69f838600fbd7" prot="private" static="no" mutable="no">
        <type>QTimer</type>
        <definition>QTimer KWin::DrmOutput::m_turnOffTimer</definition>
        <argsstring></argsstring>
        <name>m_turnOffTimer</name>
        <qualifiedname>KWin::DrmOutput::m_turnOffTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="95" column="12" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1a592316aa570783098c4aaf5bb734dd4f" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_file_descriptor" kindref="compound">FileDescriptor</ref></type>
        <definition>FileDescriptor KWin::DrmOutput::m_sleepInhibitor</definition>
        <argsstring></argsstring>
        <name>m_sleepInhibitor</name>
        <qualifiedname>KWin::DrmOutput::m_sleepInhibitor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="96" column="20" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1a69e770fef9b33650cfb485af64b63105" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_drm_lease" kindref="compound">DrmLease</ref> *</type>
        <definition>DrmLease* KWin::DrmOutput::m_lease</definition>
        <argsstring></argsstring>
        <name>m_lease</name>
        <qualifiedname>KWin::DrmOutput::m_lease</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="97" column="14" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1af07e82fa55ebaa650b65fd2eee181e72" prot="private" static="no" mutable="no">
        <type>QVector3D</type>
        <definition>QVector3D KWin::DrmOutput::m_sRgbChannelFactors</definition>
        <argsstring></argsstring>
        <name>m_sRgbChannelFactors</name>
        <qualifiedname>KWin::DrmOutput::m_sRgbChannelFactors</qualifiedname>
        <initializer>= {1, 1, 1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="99" column="15" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1a905f043bb07ede65b94b766de23c37d1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::DrmOutput::m_needsShadowBuffer</definition>
        <argsstring></argsstring>
        <name>m_needsShadowBuffer</name>
        <qualifiedname>KWin::DrmOutput::m_needsShadowBuffer</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="100" column="10" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1a5075af063beca9add0eb9e5db73783f6" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>ColorDescription KWin::DrmOutput::m_scanoutColorDescription</definition>
        <argsstring></argsstring>
        <name>m_scanoutColorDescription</name>
        <qualifiedname>KWin::DrmOutput::m_scanoutColorDescription</qualifiedname>
        <initializer>= <ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="101" column="22" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1af7409396357d0998d8d75eb58114e151" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>ColorDescription KWin::DrmOutput::m_blendingColorDescription</definition>
        <argsstring></argsstring>
        <name>m_blendingColorDescription</name>
        <qualifiedname>KWin::DrmOutput::m_blendingColorDescription</qualifiedname>
        <initializer>= <ref refid="class_k_win_1_1_color_description_1a329e58d9b909836414261f4f1857ccf6" kindref="member">ColorDescription::sRGB</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="102" column="22" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_drm_output_1a66e45d6bc9f325ec0e825046d120ea9b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767" kindref="member">PresentationMode</ref></type>
        <definition>PresentationMode KWin::DrmOutput::m_desiredPresentationMode</definition>
        <argsstring></argsstring>
        <name>m_desiredPresentationMode</name>
        <qualifiedname>KWin::DrmOutput::m_desiredPresentationMode</qualifiedname>
        <initializer>= <ref refid="namespace_k_win_1a5bac5dc1ad9b6deedfa5c46c4e432767a98b06ef30caa386be0f897d0e5c5a135" kindref="member">PresentationMode::VSync</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="103" column="22" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="103" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a23b323af5a2e35735fa1dde3fd2d49b3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::DrmOutput::DrmOutput</definition>
        <argsstring>(const std::shared_ptr&lt; DrmConnector &gt; &amp;connector, DrmPipeline *pipeline)</argsstring>
        <name>DrmOutput</name>
        <qualifiedname>KWin::DrmOutput::DrmOutput</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_drm_connector" kindref="compound">DrmConnector</ref> &gt; &amp;</type>
          <declname>connector</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref> *</type>
          <declname>pipeline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="39" column="14" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="44" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1aefd18fdfb9bbcf129f20a64b63687ecd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_drm_connector" kindref="compound">DrmConnector</ref> *</type>
        <definition>DrmConnector * KWin::DrmOutput::connector</definition>
        <argsstring>() const</argsstring>
        <name>connector</name>
        <qualifiedname>KWin::DrmOutput::connector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="41" column="18" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a735814a691bf95de5a566cc0b70d4c56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_drm_pipeline" kindref="compound">DrmPipeline</ref> *</type>
        <definition>DrmPipeline * KWin::DrmOutput::pipeline</definition>
        <argsstring>() const</argsstring>
        <name>pipeline</name>
        <qualifiedname>KWin::DrmOutput::pipeline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="42" column="17" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a29e4f0c3251b4bbc3f84584c4172e483" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::DrmOutput::present</definition>
        <argsstring>(const std::shared_ptr&lt; OutputFrame &gt; &amp;frame) override</argsstring>
        <name>present</name>
        <qualifiedname>KWin::DrmOutput::present</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_abstract_output_1a11f3d20f496d6bf22bce33b83d83a2c4">present</reimplements>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="44" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="311" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a2178f29dcb0317e91115d312c515a5a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_drm_output_layer" kindref="compound">DrmOutputLayer</ref> *</type>
        <definition>DrmOutputLayer * KWin::DrmOutput::primaryLayer</definition>
        <argsstring>() const override</argsstring>
        <name>primaryLayer</name>
        <qualifiedname>KWin::DrmOutput::primaryLayer</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_abstract_output_1ad30515b25d69d4893480ee64eb3ded56">primaryLayer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="45" column="20" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="552" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1ac5341791d1a0a7e9e07cead78d42ef50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_drm_output_layer" kindref="compound">DrmOutputLayer</ref> *</type>
        <definition>DrmOutputLayer * KWin::DrmOutput::cursorLayer</definition>
        <argsstring>() const override</argsstring>
        <name>cursorLayer</name>
        <qualifiedname>KWin::DrmOutput::cursorLayer</qualifiedname>
        <reimplements refid="class_k_win_1_1_drm_abstract_output_1add4f2927deda44261ffdb8572b8611b2">cursorLayer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="46" column="20" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="557" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a0fa117ef60e93a9cffe0585e459c5669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmOutput::queueChanges</definition>
        <argsstring>(const std::shared_ptr&lt; OutputChangeSet &gt; &amp;properties)</argsstring>
        <name>queueChanges</name>
        <qualifiedname>KWin::DrmOutput::queueChanges</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_change_set" kindref="compound">OutputChangeSet</ref> &gt; &amp;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="48" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="365" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1affc658c99341a950261f46029dd27851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::applyQueuedChanges</definition>
        <argsstring>(const std::shared_ptr&lt; OutputChangeSet &gt; &amp;properties)</argsstring>
        <name>applyQueuedChanges</name>
        <qualifiedname>KWin::DrmOutput::applyQueuedChanges</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_change_set" kindref="compound">OutputChangeSet</ref> &gt; &amp;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="49" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="460" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a88d34182a5cfb95a6eb4f655d4d1de58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::revertQueuedChanges</definition>
        <argsstring>()</argsstring>
        <name>revertQueuedChanges</name>
        <qualifiedname>KWin::DrmOutput::revertQueuedChanges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="50" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="547" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a7d807dad8d601f7880a32b50ef66aaf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::updateDpmsMode</definition>
        <argsstring>(DpmsMode dpmsMode)</argsstring>
        <name>updateDpmsMode</name>
        <qualifiedname>KWin::DrmOutput::updateDpmsMode</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" kindref="member">DpmsMode</ref></type>
          <declname>dpmsMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="51" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="304" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1afdb2fa16d424cc39bd1de0285c4ac4b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmOutput::shouldDisableCursorPlane</definition>
        <argsstring>() const</argsstring>
        <name>shouldDisableCursorPlane</name>
        <qualifiedname>KWin::DrmOutput::shouldDisableCursorPlane</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="53" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="117" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a9d0904c953bdbeb1152547cc3b69becd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::DrmOutput::updateCursorLayer</definition>
        <argsstring>(std::optional&lt; std::chrono::nanoseconds &gt; allowedVrrDelay) override</argsstring>
        <name>updateCursorLayer</name>
        <qualifiedname>KWin::DrmOutput::updateCursorLayer</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_1ad0db444631ca9bd660c2c1c81bda8693">updateCursorLayer</reimplements>
        <param>
          <type>std::optional&lt; std::chrono::nanoseconds &gt;</type>
          <declname>allowedVrrDelay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="54" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="125" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1abdc19a0be12ee192467510247f438b78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_drm_lease" kindref="compound">DrmLease</ref> *</type>
        <definition>DrmLease * KWin::DrmOutput::lease</definition>
        <argsstring>() const</argsstring>
        <name>lease</name>
        <qualifiedname>KWin::DrmOutput::lease</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="56" column="14" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a673ef41baba3e76f4c7d40f7437e0490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmOutput::addLeaseObjects</definition>
        <argsstring>(QList&lt; uint32_t &gt; &amp;objectList)</argsstring>
        <name>addLeaseObjects</name>
        <qualifiedname>KWin::DrmOutput::addLeaseObjects</qualifiedname>
        <param>
          <type>QList&lt; uint32_t &gt; &amp;</type>
          <declname>objectList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="57" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="86" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1aff14ff632ab453c3f9631d73b5799ccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::leased</definition>
        <argsstring>(DrmLease *lease)</argsstring>
        <name>leased</name>
        <qualifiedname>KWin::DrmOutput::leased</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_drm_lease" kindref="compound">DrmLease</ref> *</type>
          <declname>lease</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="58" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a337c3a93d37ac90393a794416d2c9af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::leaseEnded</definition>
        <argsstring>()</argsstring>
        <name>leaseEnded</name>
        <qualifiedname>KWin::DrmOutput::leaseEnded</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="59" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a0712b60ab01273ae49cd9509b1b81675" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::DrmOutput::setChannelFactors</definition>
        <argsstring>(const QVector3D &amp;rgb) override</argsstring>
        <name>setChannelFactors</name>
        <qualifiedname>KWin::DrmOutput::setChannelFactors</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_1acdc1a2c8833b9b635bf8f2c6addf181f">setChannelFactors</reimplements>
        <param>
          <type>const QVector3D &amp;</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="61" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="562" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a3da8ac4978495b21e36c80c92f8ecfaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::updateConnectorProperties</definition>
        <argsstring>()</argsstring>
        <name>updateConnectorProperties</name>
        <qualifiedname>KWin::DrmOutput::updateConnectorProperties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="62" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="229" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a9e58ff9b44eb0bfa9ed28f026eeef697" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
        <definition>const ColorDescription &amp; KWin::DrmOutput::scanoutColorDescription</definition>
        <argsstring>() const</argsstring>
        <name>scanoutColorDescription</name>
        <qualifiedname>KWin::DrmOutput::scanoutColorDescription</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the color description / encoding that the buffers passed to the CRTC need to have, without a color pipeline to change it </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="67" column="28" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="673" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a204afbeb90ebe7d6114faccfddb8c97b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
        <definition>const ColorDescription &amp; KWin::DrmOutput::blendingColorDescription</definition>
        <argsstring>() const</argsstring>
        <name>blendingColorDescription</name>
        <qualifiedname>KWin::DrmOutput::blendingColorDescription</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the color description that compositing and blending need to happen in </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="71" column="28" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="678" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a4bd94eb378d3f3e23914ad1545746f2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmOutput::needsShadowBuffer</definition>
        <argsstring>() const</argsstring>
        <name>needsShadowBuffer</name>
        <qualifiedname>KWin::DrmOutput::needsShadowBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether or not the renderer should apply channel factors </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="75" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="668" bodyend="671"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a51c1047dd85e59c9ffa9f11b95a5d1ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::DrmOutput::setDrmDpmsMode</definition>
        <argsstring>(DpmsMode mode)</argsstring>
        <name>setDrmDpmsMode</name>
        <qualifiedname>KWin::DrmOutput::setDrmDpmsMode</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" kindref="member">DpmsMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="78" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="169" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a6756a3067990f8f65a9f27f935247ca9" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::setDpmsMode</definition>
        <argsstring>(DpmsMode mode) override</argsstring>
        <name>setDpmsMode</name>
        <qualifiedname>KWin::DrmOutput::setDpmsMode</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_1a049f33519b2aa31e8e17f6f52e35151f">setDpmsMode</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" kindref="member">DpmsMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="79" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="145" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1ab460ef0c6a2b3284bc71d27ca0163a73" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::tryKmsColorOffloading</definition>
        <argsstring>()</argsstring>
        <name>tryKmsColorOffloading</name>
        <qualifiedname>KWin::DrmOutput::tryKmsColorOffloading</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="80" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="575" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a2267c5e50f7815744cfc721ee8640bef" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref></type>
        <definition>ColorDescription KWin::DrmOutput::createColorDescription</definition>
        <argsstring>(const std::shared_ptr&lt; OutputChangeSet &gt; &amp;props, double brightness) const</argsstring>
        <name>createColorDescription</name>
        <qualifiedname>KWin::DrmOutput::createColorDescription</qualifiedname>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_change_set" kindref="compound">OutputChangeSet</ref> &gt; &amp;</type>
          <declname>props</declname>
        </param>
        <param>
          <type>double</type>
          <declname>brightness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="81" column="22" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="424" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1aba2b4f39eaad3b8d2b913a0b84a7e351" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Capabilities</type>
        <definition>Output::Capabilities KWin::DrmOutput::computeCapabilities</definition>
        <argsstring>() const</argsstring>
        <name>computeCapabilities</name>
        <qualifiedname>KWin::DrmOutput::computeCapabilities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="82" column="18" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="249" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1ad6f123275e90dcab138d6ac3c6a8a472" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::updateInformation</definition>
        <argsstring>()</argsstring>
        <name>updateInformation</name>
        <qualifiedname>KWin::DrmOutput::updateInformation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="83" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="291" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a490e56ad4d3d6ff8b8a68e9f16033b63" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::setBrightnessDevice</definition>
        <argsstring>(BrightnessDevice *device) override</argsstring>
        <name>setBrightnessDevice</name>
        <qualifiedname>KWin::DrmOutput::setBrightnessDevice</qualifiedname>
        <reimplements refid="class_k_win_1_1_output_1a0f89221e8f4fa1f7edbdc7d873e687b7">setBrightnessDevice</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_brightness_device" kindref="compound">BrightnessDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="84" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="515" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a112d57d7a78e2a32235e9ad13147e823" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::updateBrightness</definition>
        <argsstring>(double newBrightness, double newArtificialHdrHeadroom)</argsstring>
        <name>updateBrightness</name>
        <qualifiedname>KWin::DrmOutput::updateBrightness</qualifiedname>
        <param>
          <type>double</type>
          <declname>newBrightness</declname>
        </param>
        <param>
          <type>double</type>
          <declname>newArtificialHdrHeadroom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="85" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="531" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a484f6786207b29b9eda7ecf55bd63ac5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::setScanoutColorDescription</definition>
        <argsstring>(const ColorDescription &amp;description)</argsstring>
        <name>setScanoutColorDescription</name>
        <qualifiedname>KWin::DrmOutput::setScanoutColorDescription</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="86" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="642" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1afb1ef05d23dbc66bda191cd593d5fa81" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::DrmOutput::setBlendingColorDescription</definition>
        <argsstring>(const ColorDescription &amp;description)</argsstring>
        <name>setBlendingColorDescription</name>
        <qualifiedname>KWin::DrmOutput::setBlendingColorDescription</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="87" column="10" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="655" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_drm_output_1a893e5459e91fb69a7667504427e100bb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_mode" kindref="compound">OutputMode</ref> &gt; &gt;</type>
        <definition>QList&lt; std::shared_ptr&lt; OutputMode &gt; &gt; KWin::DrmOutput::getModes</definition>
        <argsstring>() const</argsstring>
        <name>getModes</name>
        <qualifiedname>KWin::DrmOutput::getModes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/drm/drm_output.h" line="89" column="11" bodyfile="kwin/src/backends/drm/drm_output.cpp" bodystart="133" bodyend="143"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::DrmAbstractOutput</label>
        <link refid="class_k_win_1_1_drm_abstract_output"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::DrmOutput</label>
        <link refid="class_k_win_1_1_drm_output"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::Output</label>
        <link refid="class_k_win_1_1_output"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>KWin::BrightnessDevice</label>
        <link refid="class_k_win_1_1_brightness_device"/>
      </node>
      <node id="7">
        <label>KWin::ColorDescription</label>
        <link refid="class_k_win_1_1_color_description"/>
        <childnode refid="7" relation="usage">
          <edgelabel>sRGB</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>KWin::DrmAbstractOutput</label>
        <link refid="class_k_win_1_1_drm_abstract_output"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::DrmOutput</label>
        <link refid="class_k_win_1_1_drm_output"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>KWin::Edid</label>
        <link refid="class_k_win_1_1_edid"/>
      </node>
      <node id="3">
        <label>KWin::Output</label>
        <link refid="class_k_win_1_1_output"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_state</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_information</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_brightnessDevice</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>KWin::Output::Information</label>
        <link refid="struct_k_win_1_1_output_1_1_information"/>
        <childnode refid="9" relation="usage">
          <edgelabel>edid</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>panelOrientation</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>KWin::Output::State</label>
        <link refid="struct_k_win_1_1_output_1_1_state"/>
        <childnode refid="6" relation="usage">
          <edgelabel>manualTransform</edgelabel>
          <edgelabel>transform</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>colorDescription</edgelabel>
          <edgelabel>originalColorDescription</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>KWin::OutputTransform</label>
        <link refid="class_k_win_1_1_output_transform"/>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/drm/drm_output.h" line="35" column="1" bodyfile="kwin/src/backends/drm/drm_output.h" bodystart="36" bodyend="104"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_output_1a8c730a9077f5d0a5e34a5d4a167ab2ae" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>aboutToChange</name></member>
      <member refid="class_k_win_1_1_output_1ac3b7a29fe56366ce6b96f3e6609ca455" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>aboutToTurnOff</name></member>
      <member refid="class_k_win_1_1_drm_output_1a673ef41baba3e76f4c7d40f7437e0490" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>addLeaseObjects</name></member>
      <member refid="class_k_win_1_1_output_1aab165586f8dd37ca8f53de7898b51e03" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>allowSdrSoftwareBrightness</name></member>
      <member refid="class_k_win_1_1_output_1aa9c2f0eb47a4de8c08f1998056a7ca4f" prot="public" virt="virtual"><scope>KWin::DrmOutput</scope><name>applyChanges</name></member>
      <member refid="class_k_win_1_1_drm_output_1affc658c99341a950261f46029dd27851" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>applyQueuedChanges</name></member>
      <member refid="class_k_win_1_1_output_1a8295e1b73fde3b2ca60ef94bcdbc77a4" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>artificialHdrHeadroom</name></member>
      <member refid="class_k_win_1_1_output_1ac33fe80a4384201645790e9706b8582b" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>AutoRotationPolicy</name></member>
      <member refid="class_k_win_1_1_output_1a78a9933dbd65ade310d22742867af5c1" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>autoRotationPolicy</name></member>
      <member refid="class_k_win_1_1_output_1a66ecc7bfb723f3702693af17fe1d67a3" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>autoRotationPolicyChanged</name></member>
      <member refid="class_k_win_1_1_drm_output_1a204afbeb90ebe7d6114faccfddb8c97b" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>blendingColorDescription</name></member>
      <member refid="class_k_win_1_1_output_1af9df7fcd498a5281398095aec310ffc4" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>brightnessChanged</name></member>
      <member refid="class_k_win_1_1_output_1abb89bb68cd6857ddde801f16528b6580" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>brightnessDevice</name></member>
      <member refid="class_k_win_1_1_output_1aba799d2210ca65c7eb826267f970dcbd" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>brightnessMetadataChanged</name></member>
      <member refid="class_k_win_1_1_output_1ac218b9693b36abc3381fd851633c6eee" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>brightnessSetting</name></member>
      <member refid="class_k_win_1_1_output_1ae3afdc2a498853b6f295ea29b53b418c" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>capabilities</name></member>
      <member refid="class_k_win_1_1_output_1a77b1653dbbbf75f5dca80ec649eb0929" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>capabilitiesChanged</name></member>
      <member refid="class_k_win_1_1_output_1aaeae09997005463c688f15423069f1ab" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>Capability</name></member>
      <member refid="class_k_win_1_1_output_1ac335ddfb48aa5f028a80cca1c07a3aad" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>changed</name></member>
      <member refid="class_k_win_1_1_output_1a649d342c77e276a2af243919c8f24fed" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>colorDescription</name></member>
      <member refid="class_k_win_1_1_output_1a28b08e9f87c706f7bef73a9d437823b6" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>colorDescriptionChanged</name></member>
      <member refid="class_k_win_1_1_output_1a63a50e5f54e2c42409e8e275f673f198" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>ColorPowerTradeoff</name></member>
      <member refid="class_k_win_1_1_output_1ae6e9082834c517e3df5509cb82217ac9" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>colorPowerTradeoff</name></member>
      <member refid="class_k_win_1_1_output_1ad161558acc4cb7f921800e0942cd4733" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>colorPowerTradeoffChanged</name></member>
      <member refid="class_k_win_1_1_output_1a4bb17a5ecd4c681e90bcbb9e9a084e94" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>ColorProfileSource</name></member>
      <member refid="class_k_win_1_1_output_1a4fac789216029b4362ef31480b1e49b8" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>colorProfileSource</name></member>
      <member refid="class_k_win_1_1_output_1afaab79a918ccf0b37d99a38f4ce59a87" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>colorProfileSourceChanged</name></member>
      <member refid="class_k_win_1_1_drm_output_1aba2b4f39eaad3b8d2b913a0b84a7e351" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>computeCapabilities</name></member>
      <member refid="class_k_win_1_1_drm_output_1aefd18fdfb9bbcf129f20a64b63687ecd" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>connector</name></member>
      <member refid="class_k_win_1_1_drm_output_1a2267c5e50f7815744cfc721ee8640bef" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>createColorDescription</name></member>
      <member refid="class_k_win_1_1_output_1a3d6f4cb8a9ea656aa00a8137d4c5c325" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>currentBrightness</name></member>
      <member refid="class_k_win_1_1_output_1a04418b1957d886a4a01ccc73eb5c8fca" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>currentMode</name></member>
      <member refid="class_k_win_1_1_output_1a534780e6e116defcd72a1b6f58a3dcc8" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>currentModeChanged</name></member>
      <member refid="class_k_win_1_1_drm_output_1ac5341791d1a0a7e9e07cead78d42ef50" prot="public" virt="virtual"><scope>KWin::DrmOutput</scope><name>cursorLayer</name></member>
      <member refid="class_k_win_1_1_output_1a20fea699e81a6dc5c6b5429d2778f7fd" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>description</name></member>
      <member refid="class_k_win_1_1_output_1a9f775051738a68891d6e76f18a4c40d3" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>desiredModeRefreshRate</name></member>
      <member refid="class_k_win_1_1_output_1a901d35b02d284ab6406f2fea25b84841" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>desiredModeSize</name></member>
      <member refid="class_k_win_1_1_output_1a101934f190d844ffc5ee29d716067ffd" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>devicePixelRatio</name></member>
      <member refid="class_k_win_1_1_output_1a7f6c9d10afb24eb2bb5183cb5dcbe61c" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>dimAnimationTime</name></member>
      <member refid="class_k_win_1_1_output_1a309f06b3854f4c634ce1ebffbae96771" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>dimming</name></member>
      <member refid="class_k_win_1_1_output_1a3fd2d05ae6a721bf258bd36fb7cbf758" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>dimmingChanged</name></member>
      <member refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>DpmsMode</name></member>
      <member refid="class_k_win_1_1_output_1af206c9aa8a7591fbcfe7e9aaeb9ce57e" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>dpmsMode</name></member>
      <member refid="class_k_win_1_1_output_1ae52011ce61ae5b1b4bab46947044c7f0" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>dpmsModeChanged</name></member>
      <member refid="class_k_win_1_1_drm_abstract_output_1ab16d932c63e6d88a5d60960863b29d1d" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>DrmAbstractOutput</name></member>
      <member refid="class_k_win_1_1_drm_output_1a23b323af5a2e35735fa1dde3fd2d49b3" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>DrmOutput</name></member>
      <member refid="class_k_win_1_1_output_1a8fda3239a47336ba92df2cdda1039478" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>edid</name></member>
      <member refid="class_k_win_1_1_output_1a07af862f480a8f505dddba57cc22eca4" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>eisaId</name></member>
      <member refid="class_k_win_1_1_output_1a0c0e1118b0f333539e1a185edfdbd9cf" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>enabledChanged</name></member>
      <member refid="class_k_win_1_1_output_1acf46dad2b0990591fdebe45b4877ab16" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>geometry</name></member>
      <member refid="class_k_win_1_1_output_1ab68ba2a0470a4836649a67328946c2a4" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>geometry</name></member>
      <member refid="class_k_win_1_1_output_1a645e6097f705c5d42e2a40ab13489e04" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>geometryChanged</name></member>
      <member refid="class_k_win_1_1_output_1a2b8bf63ca113d1cded5922033efbb5c1" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>geometryF</name></member>
      <member refid="class_k_win_1_1_drm_output_1a893e5459e91fb69a7667504427e100bb" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>getModes</name></member>
      <member refid="class_k_win_1_1_output_1a5532e60228ba83969c15f1f6f42a991d" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>highDynamicRange</name></member>
      <member refid="class_k_win_1_1_output_1a5c6908a304e917cf489d525a1e5c9a64" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>highDynamicRangeChanged</name></member>
      <member refid="class_k_win_1_1_output_1ac9b10f45492af10851edba805f3d9768" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>iccProfile</name></member>
      <member refid="class_k_win_1_1_output_1aaf09a31e0b0f9b98607789c3ce801c96" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>iccProfileChanged</name></member>
      <member refid="class_k_win_1_1_output_1a8557248992fcdeb3baf1de29113a7e08" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>iccProfilePath</name></member>
      <member refid="class_k_win_1_1_output_1a7efde201f9ba470622b0f5e28a207eb1" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>iccProfilePathChanged</name></member>
      <member refid="class_k_win_1_1_output_1ae3ba33a8ace198be4ba398ca4c691689" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>isEnabled</name></member>
      <member refid="class_k_win_1_1_output_1aa3c5635645acf9d5f9b969111896f538" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>isInternal</name></member>
      <member refid="class_k_win_1_1_output_1af0a3accd0bee2ac11439e2ddad2b45e6" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>isNonDesktop</name></member>
      <member refid="class_k_win_1_1_output_1a080fb0689b3cb06ab20f94c936d01890" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>isPlaceholder</name></member>
      <member refid="class_k_win_1_1_drm_output_1abdc19a0be12ee192467510247f438b78" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>lease</name></member>
      <member refid="class_k_win_1_1_drm_output_1aff14ff632ab453c3f9631d73b5799ccf" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>leased</name></member>
      <member refid="class_k_win_1_1_drm_output_1a337c3a93d37ac90393a794416d2c9af3" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>leaseEnded</name></member>
      <member refid="class_k_win_1_1_drm_output_1af7409396357d0998d8d75eb58114e151" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_blendingColorDescription</name></member>
      <member refid="class_k_win_1_1_output_1ac236c1f3abd3fd913682c0ae7ca10ef0" prot="protected" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_brightnessDevice</name></member>
      <member refid="class_k_win_1_1_drm_output_1aa5b636ab77dbf7115cea7c084de789a1" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_connector</name></member>
      <member refid="class_k_win_1_1_drm_output_1a66e45d6bc9f325ec0e825046d120ea9b" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_desiredPresentationMode</name></member>
      <member refid="class_k_win_1_1_drm_output_1a8745d27db34d91510cfecc1282e7ffd8" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_gpu</name></member>
      <member refid="class_k_win_1_1_output_1ad75806b23fa7bd8bfacd2bb667d8d542" prot="protected" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_information</name></member>
      <member refid="class_k_win_1_1_drm_output_1a69e770fef9b33650cfb485af64b63105" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_lease</name></member>
      <member refid="class_k_win_1_1_drm_output_1a905f043bb07ede65b94b766de23c37d1" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_needsShadowBuffer</name></member>
      <member refid="class_k_win_1_1_drm_output_1a9776a14b040e80211c7d5acf4427aca5" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_pipeline</name></member>
      <member refid="class_k_win_1_1_output_1a59f8b108a1b1c7ab65a1980e72c51aa9" prot="protected" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_refCount</name></member>
      <member refid="class_k_win_1_1_drm_abstract_output_1acac3691c1006e96118e7e061176321cd" prot="protected" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_renderLoop</name></member>
      <member refid="class_k_win_1_1_drm_output_1a5075af063beca9add0eb9e5db73783f6" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_scanoutColorDescription</name></member>
      <member refid="class_k_win_1_1_drm_output_1a592316aa570783098c4aaf5bb734dd4f" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_sleepInhibitor</name></member>
      <member refid="class_k_win_1_1_drm_output_1af07e82fa55ebaa650b65fd2eee181e72" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_sRgbChannelFactors</name></member>
      <member refid="class_k_win_1_1_output_1ac0b78b1a9f612d7ae52d99c77af9a45d" prot="protected" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_state</name></member>
      <member refid="class_k_win_1_1_drm_output_1a35d9475918a65d18fee69f838600fbd7" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_turnOffTimer</name></member>
      <member refid="class_k_win_1_1_output_1aed972ddf4a99912856a09f1bb766ee5a" prot="protected" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>m_uuid</name></member>
      <member refid="class_k_win_1_1_output_1aac98b9756aa3f948ad8a1ae008d6bb37" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>manualTransform</name></member>
      <member refid="class_k_win_1_1_output_1a18af9cd1a90948e0375eac86b7665368" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>manufacturer</name></member>
      <member refid="class_k_win_1_1_output_1abadfe01c1c6b6db9b68a9d196438df4d" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>manufacturer</name></member>
      <member refid="class_k_win_1_1_output_1a6f3bab77f17faa59e5a2e0ce351cdccb" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_output_1ae5dccce3a13141e5b8021d9d6edbd8e2" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_output_1a9464dfd54e8cc02de4e15592ead5191f" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>mapFromGlobal</name></member>
      <member refid="class_k_win_1_1_output_1a745437a3dd637542df3a504b5c9df630" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>mapToGlobal</name></member>
      <member refid="class_k_win_1_1_output_1a43cc3da5f707a25eab10f5f9941bae30" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>mapToGlobal</name></member>
      <member refid="class_k_win_1_1_output_1a8550a6db203735694a816476d3c2f330" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>maxAverageBrightness</name></member>
      <member refid="class_k_win_1_1_output_1a5c5a4900d2f5508aa2bcf6cbb721d4fe" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>maxAverageBrightnessOverride</name></member>
      <member refid="class_k_win_1_1_output_1a904f72b9faedcf2df3319d94a3ec5840" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>maxPeakBrightness</name></member>
      <member refid="class_k_win_1_1_output_1af1969aa25faeccee6ac4ebfbdeeafb3a" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>maxPeakBrightnessOverride</name></member>
      <member refid="class_k_win_1_1_output_1a41b6d37e945be6ad810c211003b31104" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>minBrightness</name></member>
      <member refid="class_k_win_1_1_output_1abc0bf990016a50f5093d721674f40a50" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>minBrightnessOverride</name></member>
      <member refid="class_k_win_1_1_output_1a41f6de69b05a8be304049fdee6917eb9" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>model</name></member>
      <member refid="class_k_win_1_1_output_1a7ee07be9ca9d43874bf4b7eb52412c00" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>model</name></member>
      <member refid="class_k_win_1_1_output_1a31492dff27d452f0b062cfcb85de835e" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>modes</name></member>
      <member refid="class_k_win_1_1_output_1a79573114196ef06b923699de2bc30fe0" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>modesChanged</name></member>
      <member refid="class_k_win_1_1_output_1a6429302a9498ad18c919a2c035021c61" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>modeSize</name></member>
      <member refid="class_k_win_1_1_output_1a8907b0474db09efb719deb5dbcdbf73d" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>mstPath</name></member>
      <member refid="class_k_win_1_1_output_1ad56a9a779a9bbe7149428a1aa42abeee" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>name</name></member>
      <member refid="class_k_win_1_1_output_1a653c5bcf40098e30f26105f6b884dba9" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>name</name></member>
      <member refid="class_k_win_1_1_drm_output_1a4bd94eb378d3f3e23914ad1545746f2f" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>needsShadowBuffer</name></member>
      <member refid="class_k_win_1_1_output_1a0d05f9630e7411b0485d09cfc3f252ec" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>orientateSize</name></member>
      <member refid="class_k_win_1_1_output_1adb8f18f47c547aad3325e08e1f3617f4" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>Output</name></member>
      <member refid="class_k_win_1_1_output_1a1a63ecbdeebcded91a913d212ed61c37" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>outputChange</name></member>
      <member refid="class_k_win_1_1_output_1a33eda9c57a6d7834424c3165cc9207bd" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>overscan</name></member>
      <member refid="class_k_win_1_1_output_1a4aec1909dc862d143884013214682494" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>overscanChanged</name></member>
      <member refid="class_k_win_1_1_output_1a3ad0802ad51c27b4c8881a374cd1a4ea" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>panelOrientation</name></member>
      <member refid="class_k_win_1_1_output_1af4b1a3e66823aa1e9c6b9522ee7c2f6f" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>physicalSize</name></member>
      <member refid="class_k_win_1_1_drm_output_1a735814a691bf95de5a566cc0b70d4c56" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>pipeline</name></member>
      <member refid="class_k_win_1_1_output_1aedc965facd9be832eb827ab0fe5a6fd9" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>pixelSize</name></member>
      <member refid="class_k_win_1_1_drm_output_1a29e4f0c3251b4bbc3f84584c4172e483" prot="public" virt="virtual"><scope>KWin::DrmOutput</scope><name>present</name></member>
      <member refid="class_k_win_1_1_drm_output_1a2178f29dcb0317e91115d312c515a5a5" prot="public" virt="virtual"><scope>KWin::DrmOutput</scope><name>primaryLayer</name></member>
      <member refid="class_k_win_1_1_output_1a36334461e8e8bf435629389fbf50a8a3" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>Q_ENUM</name></member>
      <member refid="class_k_win_1_1_output_1a31f049ca6ddfc03620193a9c63a6b791" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>Q_ENUM</name></member>
      <member refid="class_k_win_1_1_drm_output_1a0fa117ef60e93a9cffe0585e459c5669" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>queueChanges</name></member>
      <member refid="class_k_win_1_1_output_1a0fa72e536bfcf0b8fbe60333eb5a15ad" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>rect</name></member>
      <member refid="class_k_win_1_1_output_1a96175d3a3c98a1c9f216f95470a2f5b2" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>rectF</name></member>
      <member refid="class_k_win_1_1_output_1a898e164f3e5af7e88855a563410646f3" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>ref</name></member>
      <member refid="class_k_win_1_1_output_1a3618863de6836ef810b3429b89095977" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>referenceLuminance</name></member>
      <member refid="class_k_win_1_1_output_1a2f77d224b57226b799c863f4d2909fc5" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>referenceLuminanceChanged</name></member>
      <member refid="class_k_win_1_1_output_1a3e1d2698295c7897ca32593d1022449d" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>refreshRate</name></member>
      <member refid="class_k_win_1_1_drm_abstract_output_1ae92f4b12869021b84a68eb373f75922e" prot="public" virt="virtual"><scope>KWin::DrmOutput</scope><name>renderLoop</name></member>
      <member refid="class_k_win_1_1_drm_output_1a88d34182a5cfb95a6eb4f655d4d1de58" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>revertQueuedChanges</name></member>
      <member refid="class_k_win_1_1_output_1a091c0b392d5241b7208e2a63d0f89a83" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>RgbRange</name></member>
      <member refid="class_k_win_1_1_output_1a653742c03f688e0e0a1cb4d52355d5ad" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>rgbRange</name></member>
      <member refid="class_k_win_1_1_output_1a12d7fe30ce08fb961d038af680e73f7e" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>rgbRangeChanged</name></member>
      <member refid="class_k_win_1_1_output_1a26b1c3dcc612487192f4f23d11bc72b0" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>scale</name></member>
      <member refid="class_k_win_1_1_output_1a6d784164a30461f60488d1ef7a47d787" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>scaleChanged</name></member>
      <member refid="class_k_win_1_1_drm_output_1a9e58ff9b44eb0bfa9ed28f026eeef697" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>scanoutColorDescription</name></member>
      <member refid="class_k_win_1_1_output_1a1d05286dd7119bb3d2cf4d1497d08a4e" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>sdrGamutWideness</name></member>
      <member refid="class_k_win_1_1_output_1ab49ae70df864b8939d4a012e4b4d8660" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>sdrGamutWidenessChanged</name></member>
      <member refid="class_k_win_1_1_output_1acb9b277fb8f5a5a533d5c21d93682b7a" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>serialNumber</name></member>
      <member refid="class_k_win_1_1_output_1ae67f67696d9b6edc6ae9f0d600a7c6dd" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>serialNumber</name></member>
      <member refid="class_k_win_1_1_drm_output_1afb1ef05d23dbc66bda191cd593d5fa81" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>setBlendingColorDescription</name></member>
      <member refid="class_k_win_1_1_drm_output_1a490e56ad4d3d6ff8b8a68e9f16033b63" prot="private" virt="virtual"><scope>KWin::DrmOutput</scope><name>setBrightnessDevice</name></member>
      <member refid="class_k_win_1_1_drm_output_1a0712b60ab01273ae49cd9509b1b81675" prot="public" virt="virtual"><scope>KWin::DrmOutput</scope><name>setChannelFactors</name></member>
      <member refid="class_k_win_1_1_drm_output_1a6756a3067990f8f65a9f27f935247ca9" prot="private" virt="virtual"><scope>KWin::DrmOutput</scope><name>setDpmsMode</name></member>
      <member refid="class_k_win_1_1_drm_output_1a51c1047dd85e59c9ffa9f11b95a5d1ab" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>setDrmDpmsMode</name></member>
      <member refid="class_k_win_1_1_output_1a3eaae023a36256775eedb537eacce803" prot="protected" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>setInformation</name></member>
      <member refid="class_k_win_1_1_drm_output_1a484f6786207b29b9eda7ecf55bd63ac5" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>setScanoutColorDescription</name></member>
      <member refid="class_k_win_1_1_output_1a4dae6cf7d261659286357d999263640c" prot="protected" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>setState</name></member>
      <member refid="class_k_win_1_1_drm_output_1afdb2fa16d424cc39bd1de0285c4ac4b0" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>shouldDisableCursorPlane</name></member>
      <member refid="class_k_win_1_1_output_1ab37109b7ceca7fe10292bb19a3cbc925" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>SubPixel</name></member>
      <member refid="class_k_win_1_1_output_1a80f4870d37e9b765e2c56091d1844ee1" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>subPixel</name></member>
      <member refid="class_k_win_1_1_output_1a66b40f1d46629cf20190d6f23224966f" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>transform</name></member>
      <member refid="class_k_win_1_1_output_1ac1e24bed156ab39494dfd360e277635d" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>transformChanged</name></member>
      <member refid="class_k_win_1_1_drm_output_1ab460ef0c6a2b3284bc71d27ca0163a73" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>tryKmsColorOffloading</name></member>
      <member refid="class_k_win_1_1_output_1a036f0372f9a864df2bbb535b02b9a4c5" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>unref</name></member>
      <member refid="class_k_win_1_1_drm_output_1a112d57d7a78e2a32235e9ad13147e823" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>updateBrightness</name></member>
      <member refid="class_k_win_1_1_drm_output_1a3da8ac4978495b21e36c80c92f8ecfaa" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>updateConnectorProperties</name></member>
      <member refid="class_k_win_1_1_drm_output_1a9d0904c953bdbeb1152547cc3b69becd" prot="public" virt="virtual"><scope>KWin::DrmOutput</scope><name>updateCursorLayer</name></member>
      <member refid="class_k_win_1_1_drm_output_1a7d807dad8d601f7880a32b50ef66aaf0" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>updateDpmsMode</name></member>
      <member refid="class_k_win_1_1_drm_abstract_output_1acf3c9625d691f99606e1a48c3f8dec81" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>updateEnabled</name></member>
      <member refid="class_k_win_1_1_drm_output_1ad6f123275e90dcab138d6ac3c6a8a472" prot="private" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>updateInformation</name></member>
      <member refid="class_k_win_1_1_output_1a57a16eb2ce011666fc8f7fa5704923f8" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>uuid</name></member>
      <member refid="class_k_win_1_1_output_1a02c8558a99a92cda53b522eeb51e7e0f" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>vrrPolicy</name></member>
      <member refid="class_k_win_1_1_output_1a84bac9b4da1f8af82041ee2c375eaa3b" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>vrrPolicyChanged</name></member>
      <member refid="class_k_win_1_1_output_1ade80d75bdff0b3a8d98dc9b63f2ad179" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>wakeUp</name></member>
      <member refid="class_k_win_1_1_output_1ab09055ab4b113efe20d9ae0f6ef5b07d" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>wideColorGamut</name></member>
      <member refid="class_k_win_1_1_output_1ace4d1451150371d0726e7c89f69fd8eb" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>wideColorGamutChanged</name></member>
      <member refid="class_k_win_1_1_output_1a28905c591239cd30358a9a1a33eed602" prot="public" virt="non-virtual"><scope>KWin::DrmOutput</scope><name>~Output</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
