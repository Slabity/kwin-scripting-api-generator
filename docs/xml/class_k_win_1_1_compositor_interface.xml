<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_compositor_interface" kind="class" language="C++" prot="public">
    <compoundname>KWin::CompositorInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="wayland_2compositor_8h" local="no">compositor.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_compositor_interface_1a06e5402adced4198cf78db8ada540def" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_compositor_interface_private" kindref="compound">CompositorInterfacePrivate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;CompositorInterfacePrivate&gt; KWin::CompositorInterface::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>KWin::CompositorInterface::d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/compositor.h" line="45" column="21" bodyfile="kwin/src/wayland/compositor.h" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_compositor_interface_1a923550a9f020741ddf27f7df45e704ce" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::CompositorInterface::CompositorInterface</definition>
        <argsstring>(Display *display, QObject *parent=nullptr)</argsstring>
        <name>CompositorInterface</name>
        <qualifiedname>KWin::CompositorInterface::CompositorInterface</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> *</type>
          <declname>display</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/compositor.h" line="30" column="14" bodyfile="kwin/src/wayland/compositor.cpp" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_interface_1a1511af0df99cb3882702c186d4fb7d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::CompositorInterface::~CompositorInterface</definition>
        <argsstring>() override</argsstring>
        <name>~CompositorInterface</name>
        <qualifiedname>KWin::CompositorInterface::~CompositorInterface</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/compositor.h" line="31" column="5" bodyfile="kwin/src/wayland/compositor.cpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_compositor_interface_1a2c82bdeb0500da63a74121fe1d2abda8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> *</type>
        <definition>Display * KWin::CompositorInterface::display</definition>
        <argsstring>() const</argsstring>
        <name>display</name>
        <qualifiedname>KWin::CompositorInterface::display</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="class_k_win_1_1_display" kindref="compound">Display</ref> object for this <ref refid="class_k_win_1_1_compositor_interface" kindref="compound">CompositorInterface</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/compositor.h" line="36" column="13" bodyfile="kwin/src/wayland/compositor.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_compositor_interface_1a4a560a885ed69d43af0c857331e25592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::CompositorInterface::surfaceCreated</definition>
        <argsstring>(KWin::SurfaceInterface *surface)</argsstring>
        <name>surfaceCreated</name>
        <qualifiedname>KWin::CompositorInterface::surfaceCreated</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_surface_interface" kindref="compound">KWin::SurfaceInterface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when a new <ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref> <emphasis>surface</emphasis> has been created. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/wayland/compositor.h" line="42" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_compositor_interface" kindref="compound">CompositorInterface</ref> global allows clients to create surfaces and region objects.</para>
<para>The <ref refid="class_k_win_1_1_compositor_interface" kindref="compound">CompositorInterface</ref> corresponds to the <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref> interface <computeroutput>wl_compositor</computeroutput>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::CompositorInterface</label>
        <link refid="class_k_win_1_1_compositor_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::CompositorInterface</label>
        <link refid="class_k_win_1_1_compositor_interface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/wayland/compositor.h" line="25" column="1" bodyfile="kwin/src/wayland/compositor.h" bodystart="26" bodyend="46"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_compositor_interface_1a923550a9f020741ddf27f7df45e704ce" prot="public" virt="non-virtual"><scope>KWin::CompositorInterface</scope><name>CompositorInterface</name></member>
      <member refid="class_k_win_1_1_compositor_interface_1a06e5402adced4198cf78db8ada540def" prot="private" virt="non-virtual"><scope>KWin::CompositorInterface</scope><name>d</name></member>
      <member refid="class_k_win_1_1_compositor_interface_1a2c82bdeb0500da63a74121fe1d2abda8" prot="public" virt="non-virtual"><scope>KWin::CompositorInterface</scope><name>display</name></member>
      <member refid="class_k_win_1_1_compositor_interface_1a4a560a885ed69d43af0c857331e25592" prot="public" virt="non-virtual"><scope>KWin::CompositorInterface</scope><name>surfaceCreated</name></member>
      <member refid="class_k_win_1_1_compositor_interface_1a1511af0df99cb3882702c186d4fb7d09" prot="public" virt="non-virtual"><scope>KWin::CompositorInterface</scope><name>~CompositorInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
