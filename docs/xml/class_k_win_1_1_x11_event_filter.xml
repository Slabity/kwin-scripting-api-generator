<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_x11_event_filter" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>KWin::X11EventFilter</compoundname>
    <derivedcompoundref refid="class_k_win_1_1_root_info_filter" prot="public" virt="non-virtual">KWin::RootInfoFilter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_sync_alarm_x11_filter" prot="public" virt="non-virtual">KWin::SyncAlarmX11Filter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_window_property_notify_x11_filter" prot="public" virt="non-virtual">KWin::WindowPropertyNotifyX11Filter</derivedcompoundref>
    <derivedcompoundref refid="class_k_win_1_1_xwl_1_1_xrandr_event_filter" prot="public" virt="non-virtual">KWin::Xwl::XrandrEventFilter</derivedcompoundref>
    <includes refid="x11eventfilter_8h" local="no">x11eventfilter.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_x11_event_filter_1ade2636489a832c7b5deb65c21b858ee9" prot="private" static="no" mutable="no">
        <type>QList&lt; int &gt;</type>
        <definition>QList&lt;int&gt; KWin::X11EventFilter::m_eventTypes</definition>
        <argsstring></argsstring>
        <name>m_eventTypes</name>
        <qualifiedname>KWin::X11EventFilter::m_eventTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="77" column="11" bodyfile="kwin/src/x11eventfilter.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_x11_event_filter_1a763b2c50fdc301abb5010ead32af02c9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::X11EventFilter::m_extension</definition>
        <argsstring></argsstring>
        <name>m_extension</name>
        <qualifiedname>KWin::X11EventFilter::m_extension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="78" column="9" bodyfile="kwin/src/x11eventfilter.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_x11_event_filter_1aa88a4fb75b81408da7f6b96e793d8f69" prot="private" static="no" mutable="no">
        <type>QList&lt; int &gt;</type>
        <definition>QList&lt;int&gt; KWin::X11EventFilter::m_genericEventTypes</definition>
        <argsstring></argsstring>
        <name>m_genericEventTypes</name>
        <qualifiedname>KWin::X11EventFilter::m_genericEventTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="79" column="11" bodyfile="kwin/src/x11eventfilter.h" bodystart="79" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_x11_event_filter_1a634787ea5b90ab3542462ce51e441075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::X11EventFilter::X11EventFilter</definition>
        <argsstring>(int eventType, int opcode=0, int genericEventType=0)</argsstring>
        <name>X11EventFilter</name>
        <qualifiedname>KWin::X11EventFilter::X11EventFilter</qualifiedname>
        <param>
          <type>int</type>
          <declname>eventType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>opcode</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>genericEventType</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an event filter for the given event type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="27" column="5" bodyfile="kwin/src/x11eventfilter.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_event_filter_1a4ab666da6472bd949b165df9136d6467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::X11EventFilter::X11EventFilter</definition>
        <argsstring>(int eventType, int opcode, const QList&lt; int &gt; &amp;genericEventTypes)</argsstring>
        <name>X11EventFilter</name>
        <qualifiedname>KWin::X11EventFilter::X11EventFilter</qualifiedname>
        <param>
          <type>int</type>
          <declname>eventType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>const QList&lt; int &gt; &amp;</type>
          <declname>genericEventTypes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="28" column="5" bodyfile="kwin/src/x11eventfilter.cpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_event_filter_1a959c1ea46cbc22d9d40fb7de495af23b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::X11EventFilter::X11EventFilter</definition>
        <argsstring>(const QList&lt; int &gt; &amp;eventTypes)</argsstring>
        <name>X11EventFilter</name>
        <qualifiedname>KWin::X11EventFilter::X11EventFilter</qualifiedname>
        <param>
          <type>const QList&lt; int &gt; &amp;</type>
          <declname>eventTypes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="29" column="5" bodyfile="kwin/src/x11eventfilter.cpp" bodystart="16" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_event_filter_1a7fcdd4c03ca89cb04f25481bfb99bdeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>KWin::X11EventFilter::~X11EventFilter</definition>
        <argsstring>()</argsstring>
        <name>~X11EventFilter</name>
        <qualifiedname>KWin::X11EventFilter::~X11EventFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys the event filter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="34" column="13" bodyfile="kwin/src/x11eventfilter.cpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_event_filter_1afa0b072b189ca1abb8c0f7ae590996a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; int &gt;</type>
        <definition>QList&lt; int &gt; KWin::X11EventFilter::eventTypes</definition>
        <argsstring>() const</argsstring>
        <name>eventTypes</name>
        <qualifiedname>KWin::X11EventFilter::eventTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the type of events to filter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="39" column="11" bodyfile="kwin/src/x11eventfilter.h" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_event_filter_1adb373e62d8fa83972576109988775007" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KWin::X11EventFilter::extension</definition>
        <argsstring>() const</argsstring>
        <name>extension</name>
        <qualifiedname>KWin::X11EventFilter::extension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the major opcode of the extension.</para>
<para>Only used when the event type is XCB_GE_GENERIC. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="49" column="9" bodyfile="kwin/src/x11eventfilter.h" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_event_filter_1a16c42913765ef96c93fe448654a3135d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; int &gt;</type>
        <definition>QList&lt; int &gt; KWin::X11EventFilter::genericEventTypes</definition>
        <argsstring>() const</argsstring>
        <name>genericEventTypes</name>
        <qualifiedname>KWin::X11EventFilter::genericEventTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the types of generic events to filter.</para>
<para>Only used when the event type is XCB_GE_GENERIC. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="59" column="11" bodyfile="kwin/src/x11eventfilter.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_event_filter_1a4dcb089aa6a3f64d93a143114472ac09" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool KWin::X11EventFilter::event</definition>
        <argsstring>(xcb_generic_event_t *event)=0</argsstring>
        <name>event</name>
        <qualifiedname>KWin::X11EventFilter::event</qualifiedname>
        <reimplementedby refid="class_k_win_1_1_root_info_filter_1a33993798ce317b50b3b4aeb46adb964f">event</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_sync_alarm_x11_filter_1a2d3d5710392807fc64bb7b9984130497">event</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_window_property_notify_x11_filter_1ad643228357bc18acaee634f4b3bc340a">event</reimplementedby>
        <reimplementedby refid="class_k_win_1_1_xwl_1_1_xrandr_event_filter_1a0db85053549f5d241c6f111f45878fb5">event</reimplementedby>
        <param>
          <type>xcb_generic_event_t *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called for every event of the filtered type.</para>
<para>Return true to accept the event and stop further processing, and false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="69" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_x11_event_filter_1a7d4f9d10daf568fd95599aacf2a73030" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::X11EventFilter::isGenericEvent</definition>
        <argsstring>() const</argsstring>
        <name>isGenericEvent</name>
        <qualifiedname>KWin::X11EventFilter::isGenericEvent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether the event filter is for XCB_GE_GENERIC events. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/x11eventfilter.h" line="74" column="10" bodyfile="kwin/src/x11eventfilter.cpp" bodystart="43" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::RootInfoFilter</label>
        <link refid="class_k_win_1_1_root_info_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::SyncAlarmX11Filter</label>
        <link refid="class_k_win_1_1_sync_alarm_x11_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::WindowPropertyNotifyX11Filter</label>
        <link refid="class_k_win_1_1_window_property_notify_x11_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::X11EventFilter</label>
        <link refid="class_k_win_1_1_x11_event_filter"/>
      </node>
      <node id="5">
        <label>KWin::Xwl::XrandrEventFilter</label>
        <link refid="class_k_win_1_1_xwl_1_1_xrandr_event_filter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="kwin/src/x11eventfilter.h" line="21" column="1" bodyfile="kwin/src/x11eventfilter.h" bodystart="22" bodyend="80"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_x11_event_filter_1a4dcb089aa6a3f64d93a143114472ac09" prot="public" virt="pure-virtual"><scope>KWin::X11EventFilter</scope><name>event</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1afa0b072b189ca1abb8c0f7ae590996a1" prot="public" virt="non-virtual"><scope>KWin::X11EventFilter</scope><name>eventTypes</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1adb373e62d8fa83972576109988775007" prot="public" virt="non-virtual"><scope>KWin::X11EventFilter</scope><name>extension</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1a16c42913765ef96c93fe448654a3135d" prot="public" virt="non-virtual"><scope>KWin::X11EventFilter</scope><name>genericEventTypes</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1a7d4f9d10daf568fd95599aacf2a73030" prot="public" virt="non-virtual"><scope>KWin::X11EventFilter</scope><name>isGenericEvent</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1ade2636489a832c7b5deb65c21b858ee9" prot="private" virt="non-virtual"><scope>KWin::X11EventFilter</scope><name>m_eventTypes</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1a763b2c50fdc301abb5010ead32af02c9" prot="private" virt="non-virtual"><scope>KWin::X11EventFilter</scope><name>m_extension</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1aa88a4fb75b81408da7f6b96e793d8f69" prot="private" virt="non-virtual"><scope>KWin::X11EventFilter</scope><name>m_genericEventTypes</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1a634787ea5b90ab3542462ce51e441075" prot="public" virt="non-virtual"><scope>KWin::X11EventFilter</scope><name>X11EventFilter</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1a4ab666da6472bd949b165df9136d6467" prot="public" virt="non-virtual"><scope>KWin::X11EventFilter</scope><name>X11EventFilter</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1a959c1ea46cbc22d9d40fb7de495af23b" prot="public" virt="non-virtual"><scope>KWin::X11EventFilter</scope><name>X11EventFilter</name></member>
      <member refid="class_k_win_1_1_x11_event_filter_1a7fcdd4c03ca89cb04f25481bfb99bdeb" prot="public" virt="virtual"><scope>KWin::X11EventFilter</scope><name>~X11EventFilter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
