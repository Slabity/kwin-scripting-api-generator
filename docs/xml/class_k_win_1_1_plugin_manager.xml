<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_plugin_manager" kind="class" language="C++" prot="public">
    <compoundname>KWin::PluginManager</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="pluginmanager_8h" local="no">pluginmanager.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_plugin_manager_1af964421d989338bf6297cf33c24217a0" prot="private" static="no" mutable="no">
        <type>std::map&lt; QString, std::unique_ptr&lt; <ref refid="class_k_win_1_1_plugin" kindref="compound">Plugin</ref> &gt; &gt;</type>
        <definition>std::map&lt;QString, std::unique_ptr&lt;Plugin&gt; &gt; KWin::PluginManager::m_plugins</definition>
        <argsstring></argsstring>
        <name>m_plugins</name>
        <qualifiedname>KWin::PluginManager::m_plugins</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/pluginmanager.h" line="42" column="14" bodyfile="kwin/src/pluginmanager.h" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_plugin_manager_1a83d216bf44cb095962a1f2feb56dc904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PluginManager::PluginManager</definition>
        <argsstring>()</argsstring>
        <name>PluginManager</name>
        <qualifiedname>KWin::PluginManager::PluginManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/pluginmanager.h" line="29" column="5" bodyfile="kwin/src/pluginmanager.cpp" bodystart="28" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plugin_manager_1a67f8729f396e1a8f3189101cefea5656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::PluginManager::~PluginManager</definition>
        <argsstring>() override</argsstring>
        <name>~PluginManager</name>
        <qualifiedname>KWin::PluginManager::~PluginManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/pluginmanager.h" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plugin_manager_1a1f9c68928a2b00ef2eac1413337dfb04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList KWin::PluginManager::loadedPlugins</definition>
        <argsstring>() const</argsstring>
        <name>loadedPlugins</name>
        <qualifiedname>KWin::PluginManager::loadedPlugins</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/pluginmanager.h" line="32" column="17" bodyfile="kwin/src/pluginmanager.cpp" bodystart="56" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_plugin_manager_1a3857707ad6c509ce248f3e6dacd73e6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList KWin::PluginManager::availablePlugins</definition>
        <argsstring>() const</argsstring>
        <name>availablePlugins</name>
        <qualifiedname>KWin::PluginManager::availablePlugins</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/pluginmanager.h" line="33" column="17" bodyfile="kwin/src/pluginmanager.cpp" bodystart="66" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_plugin_manager_1a95e02eb521bfbc81e1302ed24bb7477a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::PluginManager::loadPlugin</definition>
        <argsstring>(const QString &amp;pluginId)</argsstring>
        <name>loadPlugin</name>
        <qualifiedname>KWin::PluginManager::loadPlugin</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>pluginId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/pluginmanager.h" line="36" column="10" bodyfile="kwin/src/pluginmanager.cpp" bodystart="80" bodyend="93"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_plugin_manager_1ab45a50a40fd509c7496f5224147c0b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::PluginManager::unloadPlugin</definition>
        <argsstring>(const QString &amp;pluginId)</argsstring>
        <name>unloadPlugin</name>
        <qualifiedname>KWin::PluginManager::unloadPlugin</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>pluginId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/pluginmanager.h" line="37" column="10" bodyfile="kwin/src/pluginmanager.cpp" bodystart="123" bodyend="131"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_plugin_manager_1a0de6c52d768275c327c8923997023b69" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::PluginManager::loadPlugin</definition>
        <argsstring>(const KPluginMetaData &amp;metadata)</argsstring>
        <name>loadPlugin</name>
        <qualifiedname>KWin::PluginManager::loadPlugin</qualifiedname>
        <param>
          <type>const KPluginMetaData &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/pluginmanager.h" line="40" column="10" bodyfile="kwin/src/pluginmanager.cpp" bodystart="95" bodyend="121"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_plugin_manager" kindref="compound">PluginManager</ref> class loads and unloads binary compositor extensions. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::PluginManager</label>
        <link refid="class_k_win_1_1_plugin_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::PluginManager</label>
        <link refid="class_k_win_1_1_plugin_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/pluginmanager.h" line="24" column="1" bodyfile="kwin/src/pluginmanager.h" bodystart="25" bodyend="43"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_plugin_manager_1a3857707ad6c509ce248f3e6dacd73e6d" prot="public" virt="non-virtual"><scope>KWin::PluginManager</scope><name>availablePlugins</name></member>
      <member refid="class_k_win_1_1_plugin_manager_1a1f9c68928a2b00ef2eac1413337dfb04" prot="public" virt="non-virtual"><scope>KWin::PluginManager</scope><name>loadedPlugins</name></member>
      <member refid="class_k_win_1_1_plugin_manager_1a95e02eb521bfbc81e1302ed24bb7477a" prot="public" virt="non-virtual"><scope>KWin::PluginManager</scope><name>loadPlugin</name></member>
      <member refid="class_k_win_1_1_plugin_manager_1a0de6c52d768275c327c8923997023b69" prot="private" virt="non-virtual"><scope>KWin::PluginManager</scope><name>loadPlugin</name></member>
      <member refid="class_k_win_1_1_plugin_manager_1af964421d989338bf6297cf33c24217a0" prot="private" virt="non-virtual"><scope>KWin::PluginManager</scope><name>m_plugins</name></member>
      <member refid="class_k_win_1_1_plugin_manager_1a83d216bf44cb095962a1f2feb56dc904" prot="public" virt="non-virtual"><scope>KWin::PluginManager</scope><name>PluginManager</name></member>
      <member refid="class_k_win_1_1_plugin_manager_1ab45a50a40fd509c7496f5224147c0b8e" prot="public" virt="non-virtual"><scope>KWin::PluginManager</scope><name>unloadPlugin</name></member>
      <member refid="class_k_win_1_1_plugin_manager_1a67f8729f396e1a8f3189101cefea5656" prot="public" virt="non-virtual"><scope>KWin::PluginManager</scope><name>~PluginManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
