<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="seat_8cpp" kind="file" language="C++">
    <compoundname>seat.cpp</compoundname>
    <includes refid="seat_8h" local="yes">seat.h</includes>
    <includes refid="abstract__data__source_8h" local="yes">abstract_data_source.h</includes>
    <includes refid="datacontroldevice__v1_8h" local="yes">datacontroldevice_v1.h</includes>
    <includes refid="datacontrolsource__v1_8h" local="yes">datacontrolsource_v1.h</includes>
    <includes refid="datadevice_8h" local="yes">datadevice.h</includes>
    <includes refid="datadevice__p_8h" local="yes">datadevice_p.h</includes>
    <includes refid="wayland_2datasource_8h" local="yes">datasource.h</includes>
    <includes refid="display_8h" local="yes">display.h</includes>
    <includes refid="display__p_8h" local="yes">display_p.h</includes>
    <includes refid="keyboard_8h" local="yes">keyboard.h</includes>
    <includes refid="keyboard__p_8h" local="yes">keyboard_p.h</includes>
    <includes refid="pointer_8h" local="yes">pointer.h</includes>
    <includes refid="pointer__p_8h" local="yes">pointer_p.h</includes>
    <includes refid="pointerconstraints__v1_8h" local="yes">pointerconstraints_v1.h</includes>
    <includes refid="pointergestures__v1__p_8h" local="yes">pointergestures_v1_p.h</includes>
    <includes refid="primaryselectiondevice__v1_8h" local="yes">primaryselectiondevice_v1.h</includes>
    <includes refid="primaryselectionsource__v1_8h" local="yes">primaryselectionsource_v1.h</includes>
    <includes refid="relativepointer__v1__p_8h" local="yes">relativepointer_v1_p.h</includes>
    <includes refid="seat__p_8h" local="yes">seat_p.h</includes>
    <includes refid="surface_8h" local="yes">surface.h</includes>
    <includes refid="textinput__v1__p_8h" local="yes">textinput_v1_p.h</includes>
    <includes refid="textinput__v2__p_8h" local="yes">textinput_v2_p.h</includes>
    <includes refid="textinput__v3__p_8h" local="yes">textinput_v3_p.h</includes>
    <includes refid="touch__p_8h" local="yes">touch_p.h</includes>
    <includes refid="common_8h" local="yes">utils/common.h</includes>
    <includes refid="resource_8h" local="yes">utils/resource.h</includes>
    <includes refid="xdgtopleveldrag__v1_8h" local="yes">xdgtopleveldrag_v1.h</includes>
    <includes local="no">linux/input.h</includes>
    <includes local="no">functional</includes>
    <includes local="yes">moc_seat.cpp</includes>
    <incdepgraph>
      <node id="57">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>core/renderbackend.h</label>
        <link refid="renderbackend_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>core/rendertarget.h</label>
        <link refid="rendertarget_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>utils/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>utils/filedescriptor.h</label>
        <link refid="filedescriptor_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils/ramfile.h</label>
        <link refid="ramfile_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>utils/resource.h</label>
        <link refid="resource_8h"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>utils/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>abstract_data_source.h</label>
        <link refid="abstract__data__source_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>abstract_drop_handler.h</label>
        <link refid="abstract__drop__handler_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>clientconnection.h</label>
        <link refid="clientconnection_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>datacontroldevice_v1.h</label>
        <link refid="datacontroldevice__v1_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>datacontroldevicemanager_v1.h</label>
        <link refid="datacontroldevicemanager__v1_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>datacontrolsource_v1.h</label>
        <link refid="datacontrolsource__v1_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>datadevice.h</label>
        <link refid="datadevice_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>datadevice_p.h</label>
        <link refid="datadevice__p_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>datadevicemanager.h</label>
        <link refid="datadevicemanager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>datasource.h</label>
        <link refid="wayland_2datasource_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>display.h</label>
        <link refid="display_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>display_p.h</label>
        <link refid="display__p_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>keyboard_p.h</label>
        <link refid="keyboard__p_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>pointer.h</label>
        <link refid="pointer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>pointer_p.h</label>
        <link refid="pointer__p_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>pointerconstraints_v1.h</label>
        <link refid="pointerconstraints__v1_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>pointergestures_v1_p.h</label>
        <link refid="pointergestures__v1__p_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>primaryselectiondevice_v1.h</label>
        <link refid="primaryselectiondevice__v1_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>primaryselectiondevicemanager_v1.h</label>
        <link refid="primaryselectiondevicemanager__v1_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>primaryselectionsource_v1.h</label>
        <link refid="primaryselectionsource__v1_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>relativepointer_v1_p.h</label>
        <link refid="relativepointer__v1__p_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>kwin/src/wayland/seat.cpp</label>
        <link refid="seat_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>seat.h</label>
        <link refid="seat_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>seat_p.h</label>
        <link refid="seat__p_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>surface.h</label>
        <link refid="surface_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>textinput.h</label>
        <link refid="textinput_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>wayland/textinput_v1.h</label>
        <link refid="textinput__v1_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>textinput_v1_p.h</label>
        <link refid="textinput__v1__p_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>textinput_v2.h</label>
        <link refid="textinput__v2_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>textinput_v2_p.h</label>
        <link refid="textinput__v2__p_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>textinput_v3.h</label>
        <link refid="textinput__v3_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>textinput_v3_p.h</label>
        <link refid="textinput__v3__p_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>touch.h</label>
        <link refid="wayland_2touch_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>touch_p.h</label>
        <link refid="touch__p_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>xdgtopleveldrag_v1.h</label>
        <link refid="xdgtopleveldrag__v1_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>QByteArray</label>
      </node>
      <node id="6">
        <label>QCoreApplication</label>
      </node>
      <node id="63">
        <label>QDebug</label>
      </node>
      <node id="39">
        <label>QFlag</label>
      </node>
      <node id="40">
        <label>QHash</label>
      </node>
      <node id="7">
        <label>QImage</label>
      </node>
      <node id="29">
        <label>QList</label>
      </node>
      <node id="85">
        <label>QLoggingCategory</label>
      </node>
      <node id="54">
        <label>QMap</label>
      </node>
      <node id="13">
        <label>QMatrix4x4</label>
      </node>
      <node id="71">
        <label>QMetaType</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="8">
        <label>QPoint</label>
      </node>
      <node id="43">
        <label>QPointF</label>
      </node>
      <node id="14">
        <label>QPointer</label>
      </node>
      <node id="64">
        <label>QRect</label>
      </node>
      <node id="45">
        <label>QRegion</label>
      </node>
      <node id="73">
        <label>QSet</label>
      </node>
      <node id="62">
        <label>QSize</label>
      </node>
      <node id="33">
        <label>QSocketNotifier</label>
      </node>
      <node id="34">
        <label>QString</label>
      </node>
      <node id="38">
        <label>QTemporaryFile</label>
      </node>
      <node id="65">
        <label>QUuid</label>
      </node>
      <node id="9">
        <label>QVariant</label>
      </node>
      <node id="10">
        <label>QVector2D</label>
      </node>
      <node id="72">
        <label>QtGlobal</label>
      </node>
      <node id="86">
        <label>climits</label>
      </node>
      <node id="5">
        <label>config-kwin.h</label>
      </node>
      <node id="92">
        <label>functional</label>
      </node>
      <node id="11">
        <label>kwin_export.h</label>
      </node>
      <node id="88">
        <label>limits</label>
      </node>
      <node id="91">
        <label>linux/input.h</label>
      </node>
      <node id="18">
        <label>memory</label>
      </node>
      <node id="93">
        <label>moc_seat.cpp</label>
      </node>
      <node id="55">
        <label>optional</label>
      </node>
      <node id="47">
        <label>qwayland-server-pointer-gestures-unstable-v1.h</label>
      </node>
      <node id="52">
        <label>qwayland-server-relative-pointer-unstable-v1.h</label>
      </node>
      <node id="74">
        <label>qwayland-server-text-input-unstable-v1.h</label>
      </node>
      <node id="77">
        <label>qwayland-server-text-input-unstable-v2.h</label>
      </node>
      <node id="80">
        <label>qwayland-server-text-input-unstable-v3.h</label>
      </node>
      <node id="26">
        <label>qwayland-server-wayland.h</label>
      </node>
      <node id="17">
        <label>sys/types.h</label>
      </node>
      <node id="89">
        <label>type_traits</label>
      </node>
      <node id="31">
        <label>wayland-server-core.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2014<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2020<sp/>David<sp/>Edmundson<sp/>&lt;davidedmundson@kde.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2021<sp/>Vlad<sp/>Zahorodnii<sp/>&lt;vlad.zahorodnii@kde.org&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>LGPL-2.1-only<sp/>OR<sp/>LGPL-3.0-only<sp/>OR<sp/>LicenseRef-KDE-Accepted-LGPL</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat_8h" kindref="compound">seat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="abstract__data__source_8h" kindref="compound">abstract_data_source.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datacontroldevice__v1_8h" kindref="compound">datacontroldevice_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datacontrolsource__v1_8h" kindref="compound">datacontrolsource_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datadevice_8h" kindref="compound">datadevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datadevice__p_8h" kindref="compound">datadevice_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wayland_2datasource_8h" kindref="compound">datasource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display_8h" kindref="compound">display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="display__p_8h" kindref="compound">display_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keyboard_8h" kindref="compound">keyboard.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keyboard__p_8h" kindref="compound">keyboard_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer_8h" kindref="compound">pointer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointer__p_8h" kindref="compound">pointer_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointerconstraints__v1_8h" kindref="compound">pointerconstraints_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pointergestures__v1__p_8h" kindref="compound">pointergestures_v1_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="primaryselectiondevice__v1_8h" kindref="compound">primaryselectiondevice_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="primaryselectionsource__v1_8h" kindref="compound">primaryselectionsource_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="relativepointer__v1__p_8h" kindref="compound">relativepointer_v1_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seat__p_8h" kindref="compound">seat_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="surface_8h" kindref="compound">surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="textinput__v1__p_8h" kindref="compound">textinput_v1_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="textinput__v2__p_8h" kindref="compound">textinput_v2_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="textinput__v3__p_8h" kindref="compound">textinput_v3_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="touch__p_8h" kindref="compound">touch_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">utils/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resource_8h" kindref="compound">utils/resource.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xdgtopleveldrag__v1_8h" kindref="compound">xdgtopleveldrag_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/input.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_version<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*mapToSurfaceInPosition(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/>QPointF<sp/>&amp;pos)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1af7a3a3ccbdff6ffd690e357fd02f2fcc" kindref="member">inputSurfaceAt</ref>(pos);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&amp;&amp;<sp/>ret<sp/>!=<sp/>surface)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>surface-&gt;mapToChild(ret,<sp/>pos);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_k_win_1_1_seat_interface_private_1a5a91f5f417a6ee1b8bbe71a016d9ab4e" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_seat_interface_private_1a8a9f4e436caff11fde8d675d43d566d5" kindref="member">SeatInterfacePrivate</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_private_1a5a91f5f417a6ee1b8bbe71a016d9ab4e" kindref="member">SeatInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*seat)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seat-&gt;d.get();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_k_win_1_1_seat_interface_private_1a8a9f4e436caff11fde8d675d43d566d5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_seat_interface_private_1a8a9f4e436caff11fde8d675d43d566d5" kindref="member">SeatInterfacePrivate::SeatInterfacePrivate</ref>(<ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>,<sp/><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_private_1a1f5a1b7be22678e8c51065de253a2d3e" kindref="member">display</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_seat_interface_private_1ab5e80c38b897b779feb9d71f10d7edb6" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QtWaylandServer::wl_seat(*<ref refid="class_k_win_1_1_seat_interface_private_1a1f5a1b7be22678e8c51065de253a2d3e" kindref="member">display</ref>,<sp/>s_version)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a1f5a1b7be22678e8c51065de253a2d3e" kindref="member">display</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1a1f5a1b7be22678e8c51065de253a2d3e" kindref="member">display</ref>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1ab5e80c38b897b779feb9d71f10d7edb6" kindref="member">name</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1ab5e80c38b897b779feb9d71f10d7edb6" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1aed556553e178ca2041ef1dc5f7f30dd0" kindref="member">textInputV1</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v1_interface" kindref="compound">TextInputV1Interface</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1ae045b88abab75fe572ee2352c716f026" kindref="member">textInputV2</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v2_interface" kindref="compound">TextInputV2Interface</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1ad0e43fd460aa7fc5f423a2f061115934" kindref="member">textInputV3</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_text_input_v3_interface" kindref="compound">TextInputV3Interface</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a90b5a9dd88faebacb91aec04a6a3f421" kindref="member">pointer</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1af388312d50c31cb3e2a6fa993ae34c77" kindref="member">keyboard</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_keyboard_interface" kindref="compound">KeyboardInterface</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1ab845bbf38748717f90ee04553f61deee" kindref="member">touch</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_touch_interface" kindref="compound">TouchInterface</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>));</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_k_win_1_1_seat_interface_private_1a426f7cfe2c625cdeda7d3a38399e3900" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a426f7cfe2c625cdeda7d3a38399e3900" kindref="member">SeatInterfacePrivate::seat_bind_resource</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resource-&gt;version()<sp/>&gt;=<sp/>WL_SEAT_NAME_SINCE_VERSION)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_name(resource-&gt;handle,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1ab5e80c38b897b779feb9d71f10d7edb6" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>send_capabilities(resource-&gt;handle,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a13130cfc770cb7ff8b3be042631d0cb5" kindref="member">capabilities</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_k_win_1_1_seat_interface_private_1a9b610ac9934c0b5b7131cdd7fdfa2a2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a9b610ac9934c0b5b7131cdd7fdfa2a2a" kindref="member">SeatInterfacePrivate::seat_get_pointer</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_pointer_interface_private" kindref="compound">PointerInterfacePrivate</ref><sp/>*pointerPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_interface_private_1acd1dec82f581dd8d9ccc055ae380548f" kindref="member">PointerInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1a90b5a9dd88faebacb91aec04a6a3f421" kindref="member">pointer</ref>.get());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>pointerPrivate-&gt;add(resource-&gt;client(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>resource-&gt;version());</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_k_win_1_1_seat_interface_private_1a216b85eb12a250e1d77f127beec0570e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a216b85eb12a250e1d77f127beec0570e" kindref="member">SeatInterfacePrivate::seat_get_keyboard</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_keyboard_interface_private" kindref="compound">KeyboardInterfacePrivate</ref><sp/>*keyboardPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_keyboard_interface_private_1adc548f5a26e01987501bd9b1a8af666e" kindref="member">KeyboardInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1af388312d50c31cb3e2a6fa993ae34c77" kindref="member">keyboard</ref>.get());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>keyboardPrivate-&gt;add(resource-&gt;client(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>resource-&gt;version());</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_k_win_1_1_seat_interface_private_1a29d325330954c7a6ad6f1eec484d75da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a29d325330954c7a6ad6f1eec484d75da" kindref="member">SeatInterfacePrivate::seat_get_touch</ref>(Resource<sp/>*resource,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_touch_interface_private" kindref="compound">TouchInterfacePrivate</ref><sp/>*touchPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_touch_interface_private_1a6ddcab0ab0e5596f55b7f744eceda99f" kindref="member">TouchInterfacePrivate::get</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1ab845bbf38748717f90ee04553f61deee" kindref="member">touch</ref>.get());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>touchPrivate-&gt;add(resource-&gt;client(),<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>resource-&gt;version());</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_k_win_1_1_seat_interface_private_1a06fb145063d14e1561a6a02a710b80ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a06fb145063d14e1561a6a02a710b80ff" kindref="member">SeatInterfacePrivate::seat_release</ref>(Resource<sp/>*resource)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_resource_destroy(resource-&gt;handle);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_k_win_1_1_seat_interface_1aae366b865500c74a65f9088057a1393c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_seat_interface_1aae366b865500c74a65f9088057a1393c" kindref="member">SeatInterface::SeatInterface</ref>(<ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a25feb6a01195ac1c32ee4a01239229f6" kindref="member">display</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_seat_interface_1ae732f0941c193cb5d7a3818f266da779" kindref="member">name</ref>,<sp/>QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(new<sp/><ref refid="class_k_win_1_1_seat_interface_1a16d024c3158e5383ab63231b9a4eff14" kindref="member">SeatInterfacePrivate</ref>(this,<sp/><ref refid="class_k_win_1_1_seat_interface_1a25feb6a01195ac1c32ee4a01239229f6" kindref="member">display</ref>,<sp/><ref refid="class_k_win_1_1_seat_interface_1ae732f0941c193cb5d7a3818f266da779" kindref="member">name</ref>))</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_display_private" kindref="compound">DisplayPrivate</ref><sp/>*displayPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_display_private_1a12dd52b580af2e25ed13786f801825c3" kindref="member">DisplayPrivate::get</ref>(d-&gt;display);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>displayPrivate-&gt;<ref refid="class_k_win_1_1_display_private_1a0d61fb6280a8f45dec24ec5561160182" kindref="member">seats</ref>.append(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_k_win_1_1_seat_interface_1a12f4d419c8021143360beba1669020d2" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_seat_interface_1a12f4d419c8021143360beba1669020d2" kindref="member">SeatInterface::~SeatInterface</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;display)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_display_private" kindref="compound">DisplayPrivate</ref><sp/>*displayPrivate<sp/>=<sp/><ref refid="class_k_win_1_1_display_private_1a12dd52b580af2e25ed13786f801825c3" kindref="member">DisplayPrivate::get</ref>(d-&gt;display);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displayPrivate-&gt;<ref refid="class_k_win_1_1_display_private_1a0d61fb6280a8f45dec24ec5561160182" kindref="member">seats</ref>.removeOne(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_k_win_1_1_seat_interface_private_1a3730185dc6332abfd3a3d58026a25ab0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a3730185dc6332abfd3a3d58026a25ab0" kindref="member">SeatInterfacePrivate::updatePointerButtonSerial</ref>(quint32<sp/>button,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a66b6ab589cb85a7522e98ea342920aea" kindref="member">globalPointer</ref>.buttonSerials.find(button);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a66b6ab589cb85a7522e98ea342920aea" kindref="member">globalPointer</ref>.buttonSerials.end())<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a66b6ab589cb85a7522e98ea342920aea" kindref="member">globalPointer</ref>.buttonSerials.insert(button,<sp/>serial);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>it.value()<sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_k_win_1_1_seat_interface_private_1aaca507bf8744de71279c220e36bd75b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1aaca507bf8744de71279c220e36bd75b9" kindref="member">SeatInterfacePrivate::updatePointerButtonState</ref>(quint32<sp/>button,<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_pointer_1a52180649fa85960b91716292ccbdb964" kindref="member">Pointer::State</ref><sp/>state)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a66b6ab589cb85a7522e98ea342920aea" kindref="member">globalPointer</ref>.buttonStates.find(button);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a66b6ab589cb85a7522e98ea342920aea" kindref="member">globalPointer</ref>.buttonStates.end())<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a66b6ab589cb85a7522e98ea342920aea" kindref="member">globalPointer</ref>.buttonStates.insert(button,<sp/>state);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>it.value()<sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_k_win_1_1_seat_interface_private_1a93135b6c033d74b3929bfd61c5288c28" refkind="member"><highlight class="normal">QList&lt;DataDeviceInterface<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a93135b6c033d74b3929bfd61c5288c28" kindref="member">SeatInterfacePrivate::dataDevicesForSurface</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="144"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!surface)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;DataDeviceInterface<sp/>*&gt;<sp/><ref refid="class_k_win_1_1_seat_interface_private_1abfda0d60651a2ad9cce8d6c61b874dc2" kindref="member">primarySelectionDevices</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_private_1ad553a0a06ca06b5c012fac896b2196f9" kindref="member">dataDevices</ref>.constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_k_win_1_1_seat_interface_private_1ad553a0a06ca06b5c012fac896b2196f9" kindref="member">dataDevices</ref>.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it)-&gt;client()<sp/>==<sp/>*surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>())<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1abfda0d60651a2ad9cce8d6c61b874dc2" kindref="member">primarySelectionDevices</ref><sp/>&lt;&lt;<sp/>*it;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1abfda0d60651a2ad9cce8d6c61b874dc2" kindref="member">primarySelectionDevices</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_k_win_1_1_seat_interface_private_1a8877801c1ad727e93fc3e2e12fab34c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a8877801c1ad727e93fc3e2e12fab34c4" kindref="member">SeatInterfacePrivate::registerDataDevice</ref>(<ref refid="class_k_win_1_1_data_device_interface" kindref="compound">DataDeviceInterface</ref><sp/>*dataDevice)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(dataDevice-&gt;<ref refid="class_k_win_1_1_data_device_interface_1a4fe18772a2f088c482a5b4de570c7894" kindref="member">seat</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1ad553a0a06ca06b5c012fac896b2196f9" kindref="member">dataDevices</ref><sp/>&lt;&lt;<sp/>dataDevice;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataDeviceCleanup<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>dataDevice]<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1ad553a0a06ca06b5c012fac896b2196f9" kindref="member">dataDevices</ref>.removeOne(dataDevice);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1aa5266fb7658d1fa5869b51573a24dcb1" kindref="member">globalKeyboard</ref>.focus.selections.removeOne(dataDevice);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(dataDevice,<sp/>&amp;QObject::destroyed,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>,<sp/>dataDeviceCleanup);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(dataDevice,<sp/>&amp;<ref refid="class_k_win_1_1_data_device_interface_1aeab9e45eda20d655de074be20aeebf7d" kindref="member">DataDeviceInterface::selectionChanged</ref>,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_data_source_interface" kindref="compound">DataSourceInterface</ref><sp/>*source,<sp/>quint32<sp/>serial)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateSelection(source,<sp/>serial);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(dataDevice,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_k_win_1_1_data_device_interface_1a2d26807ea73e36dfdb064b07b557fd8e" kindref="member">DataDeviceInterface::dragStarted</ref>,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*source,<sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*origin,<sp/>quint32<sp/>serial,<sp/><ref refid="class_k_win_1_1_drag_and_drop_icon" kindref="compound">DragAndDropIcon</ref><sp/>*dragIcon)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>-&gt;startDrag(source,<sp/>origin,<sp/>serial,<sp/>dragIcon);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>new<sp/>DataDevice<sp/>for<sp/>the<sp/>current<sp/>keyoard<sp/>focus?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_private_1aa5266fb7658d1fa5869b51573a24dcb1" kindref="member">globalKeyboard</ref>.focus.surface)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>client?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_k_win_1_1_seat_interface_private_1aa5266fb7658d1fa5869b51573a24dcb1" kindref="member">globalKeyboard</ref>.focus.surface-&gt;client()<sp/>==<sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_device_interface_1af38ced668b79506e45bfdc72edc86ebf" kindref="member">client</ref>())<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1aa5266fb7658d1fa5869b51573a24dcb1" kindref="member">globalKeyboard</ref>.focus.selections.append(dataDevice);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_private_1aba0a013aca3a5f1c3d656ded3ab6d3ce" kindref="member">currentSelection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_device_interface_1aa7628ede409cae10b83a422b59467cc0" kindref="member">sendSelection</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1aba0a013aca3a5f1c3d656ded3ab6d3ce" kindref="member">currentSelection</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_k_win_1_1_seat_interface_1aa02d7f31bfa5dae6d94f1cf0e312974d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_abstract_drop_handler" kindref="compound">AbstractDropHandler</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1aa02d7f31bfa5dae6d94f1cf0e312974d" kindref="member">SeatInterface::dropHandlerForSurface</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="188"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>list<sp/>=<sp/>d-&gt;dataDevicesForSurface(surface);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list.isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list.first();</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="class_k_win_1_1_seat_interface_1ad467b51b24c938bb3c7b391d65ea64e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1ad467b51b24c938bb3c7b391d65ea64e1" kindref="member">SeatInterface::cancelDrag</ref>()</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.mode<sp/>!=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a6adf97f83acf6453d4a6a4b1070f3754" kindref="member">SeatInterfacePrivate::Drag::Mode::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cancel<sp/>the<sp/>drag,<sp/>don&apos;t<sp/>drop.<sp/>serial<sp/>does<sp/>not<sp/>matter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;cancelDrag();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_k_win_1_1_seat_interface_private_1a12cc982325286960450b4bd8d4dbd730" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a12cc982325286960450b4bd8d4dbd730" kindref="member">SeatInterfacePrivate::registerDataControlDevice</ref>(<ref refid="class_k_win_1_1_data_control_device_v1_interface" kindref="compound">DataControlDeviceV1Interface</ref><sp/>*dataDevice)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1a69c2652b86e21d41bcc266fcf5a66655" kindref="member">seat</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1abf55e5d8dba7a3e0965c14566551dc00" kindref="member">dataControlDevices</ref><sp/>&lt;&lt;<sp/>dataDevice;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataDeviceCleanup<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>dataDevice]<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1abf55e5d8dba7a3e0965c14566551dc00" kindref="member">dataControlDevices</ref>.removeOne(dataDevice);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(dataDevice,<sp/>&amp;QObject::destroyed,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>,<sp/>dataDeviceCleanup);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(dataDevice,<sp/>&amp;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1ad1e00e7b601729ae493e6e8aa37f8b31" kindref="member">DataControlDeviceV1Interface::selectionChanged</ref>,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>dataDevice]<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>klipper<sp/>workaround<sp/>to<sp/>avoid<sp/>a<sp/>race</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>mimetype<sp/>x-kde-onlyReplaceEmpty<sp/>is<sp/>set,<sp/>and<sp/>we&apos;ve<sp/>had<sp/>another<sp/>update<sp/>in<sp/>the<sp/>meantime,<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>resend<sp/>selection<sp/>to<sp/>mimic<sp/>normal<sp/>event<sp/>flow<sp/>upon<sp/>cancel<sp/>and<sp/>not<sp/>confuse<sp/>the<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/swaywm/wlr-protocols/issues/92</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isKlipperEmptyReplacement<sp/>=<sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1a2443b145ae53d28b19a2be6429f4e15b" kindref="member">selection</ref>()<sp/>&amp;&amp;<sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1a2443b145ae53d28b19a2be6429f4e15b" kindref="member">selection</ref>()-&gt;<ref refid="class_k_win_1_1_data_control_source_v1_interface_1ad74c0b2b7c9a06de4fabe1f93dd48f41" kindref="member">mimeTypes</ref>().contains(QLatin1String(</highlight><highlight class="stringliteral">&quot;application/x-kde-onlyReplaceEmpty&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isKlipperEmptyReplacement<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_seat_interface_private_1aba0a013aca3a5f1c3d656ded3ab6d3ce" kindref="member">currentSelection</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_seat_interface_private_1aba0a013aca3a5f1c3d656ded3ab6d3ce" kindref="member">currentSelection</ref>-&gt;mimeTypes().isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1a2443b145ae53d28b19a2be6429f4e15b" kindref="member">selection</ref>()-&gt;<ref refid="class_k_win_1_1_data_control_source_v1_interface_1a1e5b3fced59b857270a9bcbf55523604" kindref="member">cancel</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1acdbeaf7122c69661a93a5b4b868fc205" kindref="member">sendSelection</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1aba0a013aca3a5f1c3d656ded3ab6d3ce" kindref="member">currentSelection</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>-&gt;setSelection(dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1a2443b145ae53d28b19a2be6429f4e15b" kindref="member">selection</ref>(),<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a1f5a1b7be22678e8c51065de253a2d3e" kindref="member">display</ref>-&gt;nextSerial());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(dataDevice,<sp/>&amp;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1a669b1312eed16ffbcc55ccffa3914621" kindref="member">DataControlDeviceV1Interface::primarySelectionChanged</ref>,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>dataDevice]<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>klipper<sp/>workaround<sp/>to<sp/>avoid<sp/>a<sp/>race</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>mimetype<sp/>x-kde-onlyReplaceEmpty<sp/>is<sp/>set,<sp/>and<sp/>we&apos;ve<sp/>had<sp/>another<sp/>update<sp/>in<sp/>the<sp/>meantime,<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>resend<sp/>selection<sp/>to<sp/>mimic<sp/>normal<sp/>event<sp/>flow<sp/>upon<sp/>cancel<sp/>and<sp/>not<sp/>confuse<sp/>the<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/swaywm/wlr-protocols/issues/92</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isKlipperEmptyReplacement<sp/>=<sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1af67652e217fb577475e58c51c42c7d5b" kindref="member">primarySelection</ref>()<sp/>&amp;&amp;<sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1af67652e217fb577475e58c51c42c7d5b" kindref="member">primarySelection</ref>()-&gt;<ref refid="class_k_win_1_1_data_control_source_v1_interface_1ad74c0b2b7c9a06de4fabe1f93dd48f41" kindref="member">mimeTypes</ref>().contains(QLatin1String(</highlight><highlight class="stringliteral">&quot;application/x-kde-onlyReplaceEmpty&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isKlipperEmptyReplacement<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_seat_interface_private_1aeb615024891a5b2ca226d6f0a0f0dc01" kindref="member">currentPrimarySelection</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_k_win_1_1_seat_interface_private_1aeb615024891a5b2ca226d6f0a0f0dc01" kindref="member">currentPrimarySelection</ref>-&gt;mimeTypes().isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1af67652e217fb577475e58c51c42c7d5b" kindref="member">primarySelection</ref>()-&gt;<ref refid="class_k_win_1_1_data_control_source_v1_interface_1a1e5b3fced59b857270a9bcbf55523604" kindref="member">cancel</ref>();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1a7543731a768b4b9c566834cdfaeee220" kindref="member">sendPrimarySelection</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1aeb615024891a5b2ca226d6f0a0f0dc01" kindref="member">currentPrimarySelection</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>-&gt;setPrimarySelection(dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1af67652e217fb577475e58c51c42c7d5b" kindref="member">primarySelection</ref>(),<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a1f5a1b7be22678e8c51065de253a2d3e" kindref="member">display</ref>-&gt;nextSerial());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1acdbeaf7122c69661a93a5b4b868fc205" kindref="member">sendSelection</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1aba0a013aca3a5f1c3d656ded3ab6d3ce" kindref="member">currentSelection</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>dataDevice-&gt;<ref refid="class_k_win_1_1_data_control_device_v1_interface_1a7543731a768b4b9c566834cdfaeee220" kindref="member">sendPrimarySelection</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1aeb615024891a5b2ca226d6f0a0f0dc01" kindref="member">currentPrimarySelection</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_k_win_1_1_seat_interface_private_1a0aeee5c835ce985a61aaaec096b3fb4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a0aeee5c835ce985a61aaaec096b3fb4d" kindref="member">SeatInterfacePrivate::registerPrimarySelectionDevice</ref>(<ref refid="class_k_win_1_1_primary_selection_device_v1_interface" kindref="compound">PrimarySelectionDeviceV1Interface</ref><sp/>*primarySelectionDevice)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(primarySelectionDevice-&gt;<ref refid="class_k_win_1_1_primary_selection_device_v1_interface_1aafd01dcf241236ee0665b15a0d5f75ce" kindref="member">seat</ref>()<sp/>==<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1abfda0d60651a2ad9cce8d6c61b874dc2" kindref="member">primarySelectionDevices</ref><sp/>&lt;&lt;<sp/>primarySelectionDevice;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataDeviceCleanup<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>primarySelectionDevice]<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1abfda0d60651a2ad9cce8d6c61b874dc2" kindref="member">primarySelectionDevices</ref>.removeOne(primarySelectionDevice);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1aa5266fb7658d1fa5869b51573a24dcb1" kindref="member">globalKeyboard</ref>.focus.primarySelections.removeOne(primarySelectionDevice);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(primarySelectionDevice,<sp/>&amp;QObject::destroyed,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>,<sp/>dataDeviceCleanup);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::connect(primarySelectionDevice,<sp/>&amp;<ref refid="class_k_win_1_1_primary_selection_device_v1_interface_1a3335981b5b700a086afaf06831179bdf" kindref="member">PrimarySelectionDeviceV1Interface::selectionChanged</ref>,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="class_k_win_1_1_primary_selection_source_v1_interface" kindref="compound">PrimarySelectionSourceV1Interface</ref><sp/>*source,<sp/>quint32<sp/>serial)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updatePrimarySelection(source,<sp/>serial);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>new<sp/>DataDevice<sp/>for<sp/>the<sp/>current<sp/>keyoard<sp/>focus?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_private_1aa5266fb7658d1fa5869b51573a24dcb1" kindref="member">globalKeyboard</ref>.focus.surface)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>client?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_k_win_1_1_seat_interface_private_1aa5266fb7658d1fa5869b51573a24dcb1" kindref="member">globalKeyboard</ref>.focus.surface-&gt;client()<sp/>==<sp/>primarySelectionDevice-&gt;<ref refid="class_k_win_1_1_primary_selection_device_v1_interface_1aed9871a7eea3a8e30bb236f55a2671fd" kindref="member">client</ref>())<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1aa5266fb7658d1fa5869b51573a24dcb1" kindref="member">globalKeyboard</ref>.focus.primarySelections.append(primarySelectionDevice);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_private_1aeb615024891a5b2ca226d6f0a0f0dc01" kindref="member">currentPrimarySelection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primarySelectionDevice-&gt;<ref refid="class_k_win_1_1_primary_selection_device_v1_interface_1a41bea7bb487415747ac6c3e764043021" kindref="member">sendSelection</ref>(<ref refid="class_k_win_1_1_seat_interface_private_1aeb615024891a5b2ca226d6f0a0f0dc01" kindref="member">currentPrimarySelection</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="class_k_win_1_1_seat_interface_private_1a019d58f6df2ca754c8c723efbc6ae239" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a019d58f6df2ca754c8c723efbc6ae239" kindref="member">SeatInterfacePrivate::cancelDrag</ref>()</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::disconnect(<ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.dragSourceDestroyConnection);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.source)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.source-&gt;dndCancelled();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.target)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.target-&gt;updateDragTarget(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.target<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag" kindref="compound">Drag</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>-&gt;dragSurfaceChanged();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>-&gt;dragEnded();</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_k_win_1_1_seat_interface_private_1a1418c13a9f6a7fe45498b69783d8ba00" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a1418c13a9f6a7fe45498b69783d8ba00" kindref="member">SeatInterfacePrivate::dragInhibitsPointer</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="286"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.mode<sp/>!=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a61cf8510205077b6f5491d38cd44c0f7" kindref="member">SeatInterfacePrivate::Drag::Mode::Pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>targetHasDataDevice<sp/>=<sp/>!<ref refid="class_k_win_1_1_seat_interface_private_1a93135b6c033d74b3929bfd61c5288c28" kindref="member">dataDevicesForSurface</ref>(surface).isEmpty();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>targetHasDataDevice;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="class_k_win_1_1_seat_interface_private_1a067444b725ba6a484247030543c4688a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a067444b725ba6a484247030543c4688a" kindref="member">SeatInterfacePrivate::endDrag</ref>()</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>QObject::disconnect(<ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.dragSourceDestroyConnection);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_abstract_drop_handler" kindref="compound">AbstractDropHandler</ref><sp/>*dragTargetDevice<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.target.data();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*dragSource<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref>.source;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dragSource)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Also<sp/>check<sp/>the<sp/>current<sp/>drag-and-drop<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dragTargetDevice<sp/>&amp;&amp;<sp/>dragSource-&gt;<ref refid="class_k_win_1_1_abstract_data_source_1a6f40c68749ae92f2e311e16668b5630f" kindref="member">isAccepted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>-&gt;dragDropped();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragTargetDevice-&gt;<ref refid="class_k_win_1_1_abstract_drop_handler_1aab6f6209deb9a7666c9f34829570b315" kindref="member">drop</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragSource-&gt;<ref refid="class_k_win_1_1_abstract_data_source_1a65f2b093e5f66a6b28bc7a7481d21191" kindref="member">dropPerformed</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragSource-&gt;<ref refid="class_k_win_1_1_abstract_data_source_1a65f2b093e5f66a6b28bc7a7481d21191" kindref="member">dropPerformed</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragSource-&gt;<ref refid="class_k_win_1_1_abstract_data_source_1a151dd37839962abe10cceb359f54f024" kindref="member">dndCancelled</ref>();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dragTargetDevice)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragTargetDevice-&gt;<ref refid="class_k_win_1_1_abstract_drop_handler_1a42fbb2e82824ddfd456cc97892cc43ac" kindref="member">updateDragTarget</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a3677588300b3f271150a91a66745f3e9" kindref="member">drag</ref><sp/>=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag" kindref="compound">Drag</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>-&gt;dragSurfaceChanged();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>-&gt;dragEnded();</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SeatInterfacePrivate::updateSelection(<ref refid="class_k_win_1_1_data_source_interface" kindref="compound">DataSourceInterface</ref><sp/>*dataSource,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_private_1aa5c63580a955ceda7c2aa2c51e9ea20e" kindref="member">currentSelectionSerial</ref><sp/>-<sp/>serial<sp/>&lt;<sp/>UINT32_MAX<sp/>/<sp/>2<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_seat_interface_private_1aa5c63580a955ceda7c2aa2c51e9ea20e" kindref="member">currentSelectionSerial</ref><sp/>!=<sp/>serial)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataSource)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSource-&gt;<ref refid="class_k_win_1_1_data_source_interface_1ac2120b84438a2c0dbcaea412fb021cb8" kindref="member">cancel</ref>();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>-&gt;setSelection(dataSource,<sp/>serial);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SeatInterfacePrivate::updatePrimarySelection(<ref refid="class_k_win_1_1_primary_selection_source_v1_interface" kindref="compound">PrimarySelectionSourceV1Interface</ref><sp/>*dataSource,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_private_1a5ef5e86baef79d1401a0e64cd17a7a48" kindref="member">currentPrimarySelectionSerial</ref><sp/>-<sp/>serial<sp/>&lt;<sp/>UINT32_MAX<sp/>/<sp/>2<sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a5ef5e86baef79d1401a0e64cd17a7a48" kindref="member">currentPrimarySelectionSerial</ref><sp/>!=<sp/>serial)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataSource)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSource-&gt;cancel();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a700718a7b78a6fa55af8bc714524961a" kindref="member">q</ref>-&gt;setPrimarySelection(dataSource,<sp/>serial);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="class_k_win_1_1_seat_interface_private_1a993edefbd9562c5a1fc64c16d7403516" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_private_1a993edefbd9562c5a1fc64c16d7403516" kindref="member">SeatInterfacePrivate::sendCapabilities</ref>()</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seatResources<sp/>=<sp/>resourceMap();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SeatInterfacePrivate::Resource<sp/>*resource<sp/>:<sp/>seatResources)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_capabilities(resource-&gt;handle,<sp/><ref refid="class_k_win_1_1_seat_interface_private_1a13130cfc770cb7ff8b3be042631d0cb5" kindref="member">capabilities</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="class_k_win_1_1_seat_interface_1a37bb18135b053978deaf9d7ec995c5f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a37bb18135b053978deaf9d7ec995c5f3" kindref="member">SeatInterface::setHasKeyboard</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1a3522bf3c6d75491eee8b53510ea81fc7" kindref="member">hasKeyboard</ref>()<sp/>==<sp/>has)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;capabilities<sp/>|=<sp/>SeatInterfacePrivate::capability_keyboard;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;capabilities<sp/>&amp;=<sp/><ref refid="class_k_win_1_1_seat_interface_1a16d024c3158e5383ab63231b9a4eff14" kindref="member">~SeatInterfacePrivate</ref>::capability_keyboard;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendCapabilities();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1a8d17cc4048875a20d8966953465eb747" kindref="member">hasKeyboardChanged</ref>(has);</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="class_k_win_1_1_seat_interface_1a6514d6351ddd81651f7bbfeb3be84a2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a6514d6351ddd81651f7bbfeb3be84a2d" kindref="member">SeatInterface::setHasPointer</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1a1ab5cb0e60f09868cac2d9f2927f4f4c" kindref="member">hasPointer</ref>()<sp/>==<sp/>has)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;capabilities<sp/>|=<sp/>SeatInterfacePrivate::capability_pointer;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;capabilities<sp/>&amp;=<sp/><ref refid="class_k_win_1_1_seat_interface_1a16d024c3158e5383ab63231b9a4eff14" kindref="member">~SeatInterfacePrivate</ref>::capability_pointer;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendCapabilities();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1adfa024bafa0b9311a9b0b317885e4d90" kindref="member">hasPointerChanged</ref>(has);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="class_k_win_1_1_seat_interface_1a1242dec262af8c709b27a393c3a0b39e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a1242dec262af8c709b27a393c3a0b39e" kindref="member">SeatInterface::setHasTouch</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1a477df87a0a1f4ca521ed404c484f5509" kindref="member">hasTouch</ref>()<sp/>==<sp/>has)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;capabilities<sp/>|=<sp/>SeatInterfacePrivate::capability_touch;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;capabilities<sp/>&amp;=<sp/><ref refid="class_k_win_1_1_seat_interface_1a16d024c3158e5383ab63231b9a4eff14" kindref="member">~SeatInterfacePrivate</ref>::capability_touch;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sendCapabilities();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1a83659a3d7032226c45b36f537e82e8ab" kindref="member">hasTouchChanged</ref>(has);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="class_k_win_1_1_seat_interface_1ae732f0941c193cb5d7a3818f266da779" refkind="member"><highlight class="normal">QString<sp/><ref refid="class_k_win_1_1_seat_interface_1ae732f0941c193cb5d7a3818f266da779" kindref="member">SeatInterface::name</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="398"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;name;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="class_k_win_1_1_seat_interface_1a1ab5cb0e60f09868cac2d9f2927f4f4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a1ab5cb0e60f09868cac2d9f2927f4f4c" kindref="member">SeatInterface::hasPointer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="403"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;capabilities<sp/>&amp;<sp/>SeatInterfacePrivate::capability_pointer;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="class_k_win_1_1_seat_interface_1a3522bf3c6d75491eee8b53510ea81fc7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a3522bf3c6d75491eee8b53510ea81fc7" kindref="member">SeatInterface::hasKeyboard</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="408"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;capabilities<sp/>&amp;<sp/>SeatInterfacePrivate::capability_keyboard;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="class_k_win_1_1_seat_interface_1a477df87a0a1f4ca521ed404c484f5509" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a477df87a0a1f4ca521ed404c484f5509" kindref="member">SeatInterface::hasTouch</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="413"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;capabilities<sp/>&amp;<sp/>SeatInterfacePrivate::capability_touch;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="class_k_win_1_1_seat_interface_1a25feb6a01195ac1c32ee4a01239229f6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_display" kindref="compound">Display</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a25feb6a01195ac1c32ee4a01239229f6" kindref="member">SeatInterface::display</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="418"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;display;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="class_k_win_1_1_seat_interface_1a775d59c207e73b1d92b8aa92c83a35ab" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_seat_interface_1aae366b865500c74a65f9088057a1393c" kindref="member">SeatInterface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a775d59c207e73b1d92b8aa92c83a35ab" kindref="member">SeatInterface::get</ref>(wl_resource<sp/>*native)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1a16d024c3158e5383ab63231b9a4eff14" kindref="member">SeatInterfacePrivate</ref><sp/>*seatPrivate<sp/>=<sp/><ref refid="namespace_k_win_1a8c77ef01a5298009b38f91650c249957" kindref="member">resource_cast&lt;SeatInterfacePrivate *&gt;</ref>(native))<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seatPrivate-&gt;q;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="class_k_win_1_1_seat_interface_1a31733a64eb06520e8f793c6b80674566" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_seat_interface_1a31733a64eb06520e8f793c6b80674566" kindref="member">SeatInterface::pointerPos</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="431"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;globalPointer.pos;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="class_k_win_1_1_seat_interface_1a544c9a6129a4afa11a3a98163357f739" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a544c9a6129a4afa11a3a98163357f739" kindref="member">SeatInterface::notifyPointerMotion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;globalPointer.pos<sp/>==<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalPointer.pos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1aa45ec0696603ab055b470dffa00ab43d" kindref="member">pointerPosChanged</ref>(pos);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*focusedSurface<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1a68b2e53bcc63c7ff056242f218f94714" kindref="member">focusedPointerSurface</ref>();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!focusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;dragInhibitsPointer(focusedSurface))<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusedSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1adcc92bcb7baae24e72f17d6891251db4" kindref="member">lockedPointer</ref>()<sp/>&amp;&amp;<sp/>focusedSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1adcc92bcb7baae24e72f17d6891251db4" kindref="member">lockedPointer</ref>()-&gt;<ref refid="class_k_win_1_1_locked_pointer_v1_interface_1a99df83e3fc7398070fb8365238adc41e" kindref="member">isLocked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>localPosition<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1addcc25a323fd28a4ffcb30f3922831ac" kindref="member">focusedPointerSurfaceTransformation</ref>().map(pos);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*effectiveFocusedSurface<sp/>=<sp/>mapToSurfaceInPosition(focusedSurface,<sp/>localPosition);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;pointer-&gt;focusedSurface()<sp/>!=<sp/>effectiveFocusedSurface)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;pointer-&gt;sendEnter(effectiveFocusedSurface,<sp/>localPosition,<sp/><ref refid="class_k_win_1_1_seat_interface_1a25feb6a01195ac1c32ee4a01239229f6" kindref="member">display</ref>()-&gt;nextSerial());</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;keyboard)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;keyboard-&gt;setModifierFocusSurface(effectiveFocusedSurface);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;pointer-&gt;sendMotion(localPosition);</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" refkind="member"><highlight class="normal">std::chrono::milliseconds<sp/><ref refid="class_k_win_1_1_seat_interface_1a9408b149c73fbd8d4062ab804f9eb924" kindref="member">SeatInterface::timestamp</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="471"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;timestamp;</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a387dc48ce43458b7e40f693ae5b9b007" kindref="member">SeatInterface::setTimestamp</ref>(std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;timestamp<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(time);</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="class_k_win_1_1_seat_interface_1a3bce382cbc9cb803a4e6bde0f90367db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a3bce382cbc9cb803a4e6bde0f90367db" kindref="member">SeatInterface::setDragTarget</ref>(<ref refid="class_k_win_1_1_abstract_drop_handler" kindref="compound">AbstractDropHandler</ref><sp/>*dropTarget,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;globalPosition,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;inputTransformation)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface<sp/>==<sp/>d-&gt;drag.surface)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/>d-&gt;display-&gt;nextSerial();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.target)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.target-&gt;updateDragTarget(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>serial);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>technically<sp/>we<sp/>can<sp/>have<sp/>mulitple<sp/>data<sp/>devices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>we<sp/>should<sp/>send<sp/>the<sp/>drag<sp/>to<sp/>all<sp/>of<sp/>them,<sp/>but<sp/>that<sp/>seems<sp/>overly<sp/>complicated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>practice<sp/>so<sp/>far<sp/>the<sp/>only<sp/>case<sp/>for<sp/>mulitple<sp/>data<sp/>devices<sp/>is<sp/>for<sp/>clipboard<sp/>overriding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;drag.target<sp/>=<sp/>dropTarget;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a61cf8510205077b6f5491d38cd44c0f7" kindref="member">SeatInterfacePrivate::Drag::Mode::Pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a544c9a6129a4afa11a3a98163357f739" kindref="member">notifyPointerMotion</ref>(globalPosition);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1ab9c928f670fb2f9e9ca77dce6d496464" kindref="member">notifyPointerFrame</ref>();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9af0f31c9700c6b10d8a20dc487b2ae6a8" kindref="member">SeatInterfacePrivate::Drag::Mode::Touch</ref><sp/>&amp;&amp;<sp/><ref refid="class_k_win_1_1_seat_interface_1a2b62c3201bdaec061f50957d8aa9d1ee" kindref="member">firstTouchPointPosition</ref>(surface)<sp/>!=<sp/>globalPosition)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a673ce0b1f88bc6c3dda285723a23bfb7" kindref="member">notifyTouchMotion</ref>(d-&gt;globalTouch.ids.begin()-&gt;second-&gt;serial,<sp/>globalPosition);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.target)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>surfaceInputTransformation<sp/>=<sp/>inputTransformation;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfaceInputTransformation.scale(surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1aedcd504f5954c1ed715e34d868096a61" kindref="member">scaleOverride</ref>());</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.surface<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.transformation<sp/>=<sp/>surfaceInputTransformation;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;dragInhibitsPointer(d-&gt;globalPointer.focus.surface))<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a879f67e2ec9d35057979d181f2c24133" kindref="member">notifyPointerLeave</ref>();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.target-&gt;updateDragTarget(surface,<sp/>serial);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.surface<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1a60356dd135469a5dac20452a9f0a005a" kindref="member">dragSurfaceChanged</ref>();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="class_k_win_1_1_seat_interface_1a163a9a032f623020880383989a39f585" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a3bce382cbc9cb803a4e6bde0f90367db" kindref="member">SeatInterface::setDragTarget</ref>(<ref refid="class_k_win_1_1_abstract_drop_handler" kindref="compound">AbstractDropHandler</ref><sp/>*target,<sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;inputTransformation)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a61cf8510205077b6f5491d38cd44c0f7" kindref="member">SeatInterfacePrivate::Drag::Mode::Pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a3bce382cbc9cb803a4e6bde0f90367db" kindref="member">setDragTarget</ref>(target,<sp/>surface,<sp/><ref refid="class_k_win_1_1_seat_interface_1a31733a64eb06520e8f793c6b80674566" kindref="member">pointerPos</ref>(),<sp/>inputTransformation);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9af0f31c9700c6b10d8a20dc487b2ae6a8" kindref="member">SeatInterfacePrivate::Drag::Mode::Touch</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a3bce382cbc9cb803a4e6bde0f90367db" kindref="member">setDragTarget</ref>(target,<sp/>surface,<sp/><ref refid="class_k_win_1_1_seat_interface_1a2b62c3201bdaec061f50957d8aa9d1ee" kindref="member">firstTouchPointPosition</ref>(surface),<sp/>inputTransformation);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="class_k_win_1_1_seat_interface_1a68b2e53bcc63c7ff056242f218f94714" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a68b2e53bcc63c7ff056242f218f94714" kindref="member">SeatInterface::focusedPointerSurface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="533"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;globalPointer.focus.surface;</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="class_k_win_1_1_seat_interface_1a7fd0cb17dde8e7a484f71c2fb2f75a48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a7fd0cb17dde8e7a484f71c2fb2f75a48" kindref="member">SeatInterface::notifyPointerEnter</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;surfacePosition)</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>QMatrix4x4<sp/>m;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>m.translate(-surfacePosition.x(),<sp/>-surfacePosition.y());</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a7fd0cb17dde8e7a484f71c2fb2f75a48" kindref="member">notifyPointerEnter</ref>(surface,<sp/>position,<sp/>m);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;globalPointer.focus.surface)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus.offset<sp/>=<sp/>surfacePosition;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="class_k_win_1_1_seat_interface_1a47e0286e6a1e5591230505f72ec5e96a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a7fd0cb17dde8e7a484f71c2fb2f75a48" kindref="member">SeatInterface::notifyPointerEnter</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;transformation)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;dragInhibitsPointer(surface))<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/>d-&gt;display-&gt;nextSerial();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;globalPointer.focus.surface)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;globalPointer.focus.destroyConnection);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus<sp/>=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_pointer_1_1_focus" kindref="compound">SeatInterfacePrivate::Pointer::Focus</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus.surface<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus.destroyConnection<sp/>=<sp/>connect(surface,<sp/>&amp;QObject::destroyed,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus<sp/>=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_pointer_1_1_focus" kindref="compound">SeatInterfacePrivate::Pointer::Focus</ref>();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus.serial<sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus.transformation<sp/>=<sp/>transformation;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus.<ref refid="class_k_win_1_1_surface_interface_1a5a6b83bbb0260f80c8b98c918cafcba3" kindref="member">offset</ref><sp/>=<sp/>QPointF();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalPointer.pos<sp/>=<sp/>position;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>localPosition<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1addcc25a323fd28a4ffcb30f3922831ac" kindref="member">focusedPointerSurfaceTransformation</ref>().map(position);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*effectiveFocusedSurface<sp/>=<sp/>mapToSurfaceInPosition(surface,<sp/>localPosition);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;pointer-&gt;sendEnter(effectiveFocusedSurface,<sp/>localPosition,<sp/>serial);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;keyboard)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;keyboard-&gt;setModifierFocusSurface(effectiveFocusedSurface);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="class_k_win_1_1_seat_interface_1a879f67e2ec9d35057979d181f2c24133" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a879f67e2ec9d35057979d181f2c24133" kindref="member">SeatInterface::notifyPointerLeave</ref>()</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;globalPointer.focus.surface)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;globalPointer.focus.destroyConnection);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus<sp/>=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_pointer_1_1_focus" kindref="compound">SeatInterfacePrivate::Pointer::Focus</ref>();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/>d-&gt;display-&gt;nextSerial();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;pointer-&gt;sendLeave(serial);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;keyboard)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;keyboard-&gt;setModifierFocusSurface(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="class_k_win_1_1_seat_interface_1a12c1f9e56a0f043239bbe55019481977" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a12c1f9e56a0f043239bbe55019481977" kindref="member">SeatInterface::setFocusedPointerSurfacePosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;surfacePosition)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;globalPointer.focus.surface)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus.offset<sp/>=<sp/>surfacePosition;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus.transformation<sp/>=<sp/>QMatrix4x4();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus.transformation.translate(-surfacePosition.x(),<sp/>-surfacePosition.y());</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="class_k_win_1_1_seat_interface_1a7425f1b551a9ed28bc2d60775ee54e42" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_seat_interface_1a7425f1b551a9ed28bc2d60775ee54e42" kindref="member">SeatInterface::focusedPointerSurfacePosition</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="608"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;globalPointer.focus.offset;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="class_k_win_1_1_seat_interface_1a84670f4ddd03ff66967a80713bdd28d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a84670f4ddd03ff66967a80713bdd28d0" kindref="member">SeatInterface::setFocusedPointerSurfaceTransformation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMatrix4x4<sp/>&amp;transformation)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;globalPointer.focus.surface)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalPointer.focus.transformation<sp/>=<sp/>transformation;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="class_k_win_1_1_seat_interface_1addcc25a323fd28a4ffcb30f3922831ac" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_seat_interface_1addcc25a323fd28a4ffcb30f3922831ac" kindref="member">SeatInterface::focusedPointerSurfaceTransformation</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="620"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;globalPointer.focus.transformation;</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_pointer_interface" kindref="compound">PointerInterface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">SeatInterface::pointer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="625"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;pointer.<ref refid="class_k_win_1_1_pointer_interface_1adb41bec900d6203bc4e19641e48a35b6" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>quint32<sp/>qtToWaylandButton(Qt::MouseButton<sp/>button)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QHash&lt;Qt::MouseButton,<sp/>quint32&gt;<sp/>s_buttons({</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::LeftButton,<sp/>BTN_LEFT},</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::RightButton,<sp/>BTN_RIGHT},</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::MiddleButton,<sp/>BTN_MIDDLE},</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton1,<sp/>BTN_BACK},<sp/></highlight><highlight class="comment">//<sp/>note:<sp/>QtWayland<sp/>maps<sp/>BTN_SIDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton2,<sp/>BTN_FORWARD},<sp/></highlight><highlight class="comment">//<sp/>note:<sp/>QtWayland<sp/>maps<sp/>BTN_EXTRA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton3,<sp/>BTN_TASK},<sp/></highlight><highlight class="comment">//<sp/>note:<sp/>QtWayland<sp/>maps<sp/>BTN_FORWARD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton4,<sp/>BTN_EXTRA},<sp/></highlight><highlight class="comment">//<sp/>note:<sp/>QtWayland<sp/>maps<sp/>BTN_BACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton5,<sp/>BTN_SIDE},<sp/></highlight><highlight class="comment">//<sp/>note:<sp/>QtWayland<sp/>maps<sp/>BTN_TASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton6,<sp/>BTN_TASK<sp/>+<sp/>1},</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton7,<sp/>BTN_TASK<sp/>+<sp/>2},</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton8,<sp/>BTN_TASK<sp/>+<sp/>3},</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton9,<sp/>BTN_TASK<sp/>+<sp/>4},</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton10,<sp/>BTN_TASK<sp/>+<sp/>5},</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton11,<sp/>BTN_TASK<sp/>+<sp/>6},</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton12,<sp/>BTN_TASK<sp/>+<sp/>7},</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{Qt::ExtraButton13,<sp/>BTN_TASK<sp/>+<sp/>8}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>further<sp/>mapping<sp/>not<sp/>possible,<sp/>0x120<sp/>is<sp/>BTN_JOYSTICK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_buttons.value(button,<sp/>0);</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="class_k_win_1_1_seat_interface_1ac73c70cb929c2c651d70818038c4ec34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a897a0c30fdef792d6e446c7e730c5147" kindref="member">SeatInterface::isPointerButtonPressed</ref>(Qt::MouseButton<sp/>button)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="654"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a897a0c30fdef792d6e446c7e730c5147" kindref="member">isPointerButtonPressed</ref>(qtToWaylandButton(button));</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="class_k_win_1_1_seat_interface_1a897a0c30fdef792d6e446c7e730c5147" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a897a0c30fdef792d6e446c7e730c5147" kindref="member">SeatInterface::isPointerButtonPressed</ref>(quint32<sp/>button)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="659"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;globalPointer.buttonStates.constFind(button);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>d-&gt;globalPointer.buttonStates.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it.value()<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_pointer_1a52180649fa85960b91716292ccbdb964ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">SeatInterfacePrivate::Pointer::State::Pressed</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="class_k_win_1_1_seat_interface_1af7eb3d46872924785a59afcc91b92e56" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1af7eb3d46872924785a59afcc91b92e56" kindref="member">SeatInterface::notifyPointerAxis</ref>(Qt::Orientation<sp/>orientation,<sp/>qreal<sp/>delta,<sp/>qint32<sp/>deltaV120,<sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248" kindref="member">PointerAxisSource</ref><sp/>source,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a61cf8510205077b6f5491d38cd44c0f7" kindref="member">SeatInterfacePrivate::Drag::Mode::Pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;pointer-&gt;sendAxis(orientation,<sp/>delta,<sp/>deltaV120,<sp/>source,<sp/>inverted);</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679" refid="class_k_win_1_1_seat_interface_1ab9902db728c89f507255f78209872ee1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1ae38adc683ab54c95f9fa10ef26028b73" kindref="member">SeatInterface::notifyPointerButton</ref>(Qt::MouseButton<sp/>button,<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref><sp/>state)</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>nativeButton<sp/>=<sp/>qtToWaylandButton(button);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nativeButton<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1ae38adc683ab54c95f9fa10ef26028b73" kindref="member">notifyPointerButton</ref>(nativeButton,<sp/>state);</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="class_k_win_1_1_seat_interface_1ae38adc683ab54c95f9fa10ef26028b73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1ae38adc683ab54c95f9fa10ef26028b73" kindref="member">SeatInterface::notifyPointerButton</ref>(quint32<sp/>button,<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3" kindref="member">PointerButtonState</ref><sp/>state)</highlight></codeline>
<codeline lineno="689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/>d-&gt;display-&gt;nextSerial();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/><ref refid="namespace_k_win_1af04c7f9798b123fe6f74415788dd38d3ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">PointerButtonState::Pressed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;updatePointerButtonSerial(button,<sp/>serial);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;updatePointerButtonState(button,<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_pointer_1a52180649fa85960b91716292ccbdb964ad78a68f6a85421ae121c2cb5b73a1040" kindref="member">SeatInterfacePrivate::Pointer::State::Pressed</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a61cf8510205077b6f5491d38cd44c0f7" kindref="member">SeatInterfacePrivate::Drag::Mode::Pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>currentButtonSerial<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1a11c1dac5dc3496d47a71359341b6ccc0" kindref="member">pointerButtonSerial</ref>(button);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;updatePointerButtonSerial(button,<sp/>serial);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;updatePointerButtonState(button,<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_pointer_1a52180649fa85960b91716292ccbdb964aea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">SeatInterfacePrivate::Pointer::State::Released</ref>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a61cf8510205077b6f5491d38cd44c0f7" kindref="member">SeatInterfacePrivate::Drag::Mode::Pointer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.dragImplicitGrabSerial<sp/>!=<sp/>currentButtonSerial)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>our<sp/>drag<sp/>button<sp/>-<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*focusedSurface<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1a68b2e53bcc63c7ff056242f218f94714" kindref="member">focusedPointerSurface</ref>();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusedSurface<sp/>&amp;&amp;<sp/>!d-&gt;dragInhibitsPointer(focusedSurface))<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;pointer-&gt;sendButton(button,<sp/>state,<sp/>serial);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;endDrag();</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;pointer-&gt;sendButton(button,<sp/>state,<sp/>serial);</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="class_k_win_1_1_seat_interface_1ab9c928f670fb2f9e9ca77dce6d496464" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1ab9c928f670fb2f9e9ca77dce6d496464" kindref="member">SeatInterface::notifyPointerFrame</ref>()</highlight></codeline>
<codeline lineno="725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*focusedSurface<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1a68b2e53bcc63c7ff056242f218f94714" kindref="member">focusedPointerSurface</ref>();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusedSurface<sp/>&amp;&amp;<sp/>d-&gt;dragInhibitsPointer(focusedSurface))<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;pointer-&gt;sendFrame();</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="class_k_win_1_1_seat_interface_1a22b1f71119bc0f5a1474b874e18265e3" refkind="member"><highlight class="normal">quint32<sp/><ref refid="class_k_win_1_1_seat_interface_1a11c1dac5dc3496d47a71359341b6ccc0" kindref="member">SeatInterface::pointerButtonSerial</ref>(Qt::MouseButton<sp/>button)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="737"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a11c1dac5dc3496d47a71359341b6ccc0" kindref="member">pointerButtonSerial</ref>(qtToWaylandButton(button));</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741" refid="class_k_win_1_1_seat_interface_1a11c1dac5dc3496d47a71359341b6ccc0" refkind="member"><highlight class="normal">quint32<sp/><ref refid="class_k_win_1_1_seat_interface_1a11c1dac5dc3496d47a71359341b6ccc0" kindref="member">SeatInterface::pointerButtonSerial</ref>(quint32<sp/>button)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="742"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;globalPointer.buttonSerials.constFind(button);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>d-&gt;globalPointer.buttonSerials.constEnd())<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it.value();</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="class_k_win_1_1_seat_interface_1acb3e4606e15000508f8beff4213d9a2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1acb3e4606e15000508f8beff4213d9a2a" kindref="member">SeatInterface::relativePointerMotion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;deltaNonAccelerated,<sp/>std::chrono::microseconds<sp/>time)</highlight></codeline>
<codeline lineno="751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>relativePointer<sp/>=<sp/><ref refid="class_k_win_1_1_relative_pointer_v1_interface_1a2f38948e57a4f4e08777657fe5c043ed" kindref="member">RelativePointerV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relativePointer)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relativePointer-&gt;sendRelativeMotion(delta,<sp/>deltaNonAccelerated,<sp/>time);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="class_k_win_1_1_seat_interface_1abc5441eb8d25916b777dbefb94396bb9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1abc5441eb8d25916b777dbefb94396bb9" kindref="member">SeatInterface::startPointerSwipeGesture</ref>(quint32<sp/>fingerCount)</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>swipeGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a4f89ebf9f6a0ce2fbb50341c430b09b5" kindref="member">PointerSwipeGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swipeGesture)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swipeGesture-&gt;sendBegin(d-&gt;display-&gt;nextSerial(),<sp/>fingerCount);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="class_k_win_1_1_seat_interface_1a2cdb42e323facd65caa6ac3d55c7d221" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a2cdb42e323facd65caa6ac3d55c7d221" kindref="member">SeatInterface::updatePointerSwipeGesture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta)</highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>swipeGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a4f89ebf9f6a0ce2fbb50341c430b09b5" kindref="member">PointerSwipeGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swipeGesture)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swipeGesture-&gt;sendUpdate(delta);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786" refid="class_k_win_1_1_seat_interface_1a9557b251d288cb3fa05eeb39e8b07475" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a9557b251d288cb3fa05eeb39e8b07475" kindref="member">SeatInterface::endPointerSwipeGesture</ref>()</highlight></codeline>
<codeline lineno="787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>swipeGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a4f89ebf9f6a0ce2fbb50341c430b09b5" kindref="member">PointerSwipeGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swipeGesture)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swipeGesture-&gt;sendEnd(d-&gt;display-&gt;nextSerial());</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="class_k_win_1_1_seat_interface_1a5d05a7e5f51b6489ae5d10e89b3cee85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a5d05a7e5f51b6489ae5d10e89b3cee85" kindref="member">SeatInterface::cancelPointerSwipeGesture</ref>()</highlight></codeline>
<codeline lineno="799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>swipeGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_swipe_gesture_v1_interface_1a4f89ebf9f6a0ce2fbb50341c430b09b5" kindref="member">PointerSwipeGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swipeGesture)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swipeGesture-&gt;sendCancel(d-&gt;display-&gt;nextSerial());</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810" refid="class_k_win_1_1_seat_interface_1a93b8a12b9902cab1c77370ed527f7bf6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a93b8a12b9902cab1c77370ed527f7bf6" kindref="member">SeatInterface::startPointerPinchGesture</ref>(quint32<sp/>fingerCount)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pinchGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a3bb1458c78e8b4e1e9df6e1967b7ac86" kindref="member">PointerPinchGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pinchGesture)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinchGesture-&gt;sendBegin(d-&gt;display-&gt;nextSerial(),<sp/>fingerCount);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="class_k_win_1_1_seat_interface_1a6eebac419af90fb3d4f58402acc81e8e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a6eebac419af90fb3d4f58402acc81e8e" kindref="member">SeatInterface::updatePointerPinchGesture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>qreal<sp/>scale,<sp/>qreal<sp/>rotation)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pinchGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a3bb1458c78e8b4e1e9df6e1967b7ac86" kindref="member">PointerPinchGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pinchGesture)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinchGesture-&gt;sendUpdate(delta,<sp/>scale,<sp/>rotation);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834" refid="class_k_win_1_1_seat_interface_1a353643056f4a561940787f7d4cbec90b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a353643056f4a561940787f7d4cbec90b" kindref="member">SeatInterface::endPointerPinchGesture</ref>()</highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pinchGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a3bb1458c78e8b4e1e9df6e1967b7ac86" kindref="member">PointerPinchGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pinchGesture)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinchGesture-&gt;sendEnd(d-&gt;display-&gt;nextSerial());</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846" refid="class_k_win_1_1_seat_interface_1aed0c3a233ea62a5d4de7ea45310f781f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1aed0c3a233ea62a5d4de7ea45310f781f" kindref="member">SeatInterface::cancelPointerPinchGesture</ref>()</highlight></codeline>
<codeline lineno="847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pinchGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_pinch_gesture_v1_interface_1a3bb1458c78e8b4e1e9df6e1967b7ac86" kindref="member">PointerPinchGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pinchGesture)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinchGesture-&gt;sendCancel(d-&gt;display-&gt;nextSerial());</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858" refid="class_k_win_1_1_seat_interface_1a6488ad9d6f36a36eb7895661f7ccac67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a6488ad9d6f36a36eb7895661f7ccac67" kindref="member">SeatInterface::startPointerHoldGesture</ref>(quint32<sp/>fingerCount)</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>holdGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a7968e746a56eea8df0d7d851172d6600" kindref="member">PointerHoldGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(holdGesture)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>holdGesture-&gt;sendBegin(d-&gt;display-&gt;nextSerial(),<sp/>fingerCount);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="class_k_win_1_1_seat_interface_1a0f0333599b0eb8d7f35b94daad7001c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a0f0333599b0eb8d7f35b94daad7001c0" kindref="member">SeatInterface::endPointerHoldGesture</ref>()</highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>holdGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a7968e746a56eea8df0d7d851172d6600" kindref="member">PointerHoldGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(holdGesture)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>holdGesture-&gt;sendEnd(d-&gt;display-&gt;nextSerial());</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882" refid="class_k_win_1_1_seat_interface_1a24c10aa7d6da4d16eb16cf3f942537a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a24c10aa7d6da4d16eb16cf3f942537a6" kindref="member">SeatInterface::cancelPointerHoldGesture</ref>()</highlight></codeline>
<codeline lineno="883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;pointer)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>holdGesture<sp/>=<sp/><ref refid="class_k_win_1_1_pointer_hold_gesture_v1_interface_1a7968e746a56eea8df0d7d851172d6600" kindref="member">PointerHoldGestureV1Interface::get</ref>(<ref refid="class_k_win_1_1_seat_interface_1a72ca4164963a902ef1456daecc5cfd64" kindref="member">pointer</ref>());</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(holdGesture)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>holdGesture-&gt;sendCancel(d-&gt;display-&gt;nextSerial());</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894" refid="class_k_win_1_1_seat_interface_1a6e95e0564a331a376b45ebdb6621b876" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a6e95e0564a331a376b45ebdb6621b876" kindref="member">SeatInterface::focusedKeyboardSurface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="895"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;globalKeyboard.focus.surface;</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899" refid="class_k_win_1_1_seat_interface_1a35bf1169670b7acafb2256cbf4ba957f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a35bf1169670b7acafb2256cbf4ba957f" kindref="member">SeatInterface::setFocusedKeyboardSurface</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;quint32&gt;<sp/>&amp;keys)</highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;keyboard)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1a3ae02428a3f35d94ef5e3aea24085533" kindref="member">focusedKeyboardSurfaceAboutToChange</ref>(surface);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/>d-&gt;display-&gt;nextSerial();</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;globalKeyboard.focus.surface)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;globalKeyboard.focus.destroyConnection);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalKeyboard.focus<sp/>=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_keyboard_1_1_focus" kindref="compound">SeatInterfacePrivate::Keyboard::Focus</ref>();</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalKeyboard.focus.surface<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;keyboard-&gt;setFocusedSurface(surface,<sp/>keys,<sp/>serial);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;globalKeyboard.focus.surface)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalKeyboard.focus.destroyConnection<sp/>=<sp/>connect(surface,<sp/>&amp;QObject::destroyed,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalKeyboard.focus<sp/>=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_keyboard_1_1_focus" kindref="compound">SeatInterfacePrivate::Keyboard::Focus</ref>();</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalKeyboard.focus.serial<sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>selection?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;DataDeviceInterface<sp/>*&gt;<sp/>dataDevices<sp/>=<sp/>d-&gt;dataDevicesForSurface(surface);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalKeyboard.focus.selections<sp/>=<sp/>dataDevices;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataDevice<sp/>:<sp/>dataDevices)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDevice-&gt;sendSelection(d-&gt;currentSelection);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>primary<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;PrimarySelectionDeviceV1Interface<sp/>*&gt;<sp/>primarySelectionDevices;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;primarySelectionDevices.constBegin();<sp/>it<sp/>!=<sp/>d-&gt;primarySelectionDevices.constEnd();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it)-&gt;client()<sp/>==<sp/>*surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a12f9073812125fc1dd668fe73fc0285a" kindref="member">client</ref>())<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primarySelectionDevices<sp/>&lt;&lt;<sp/>*it;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalKeyboard.focus.primarySelections<sp/>=<sp/>primarySelectionDevices;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>primaryDataDevice<sp/>:<sp/>primarySelectionDevices)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primaryDataDevice-&gt;sendSelection(d-&gt;currentPrimarySelection);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>focused<sp/>text<sp/>input<sp/>surface<sp/>follows<sp/>keyboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1a3522bf3c6d75491eee8b53510ea81fc7" kindref="member">hasKeyboard</ref>())<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a7f66fb5fb1cf10789ea3d2d0f6938b99" kindref="member">setFocusedTextInputSurface</ref>(surface);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947" refid="class_k_win_1_1_seat_interface_1aaceacef11dc2154613e624c6b8bfabf5" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_keyboard_interface" kindref="compound">KeyboardInterface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1aaceacef11dc2154613e624c6b8bfabf5" kindref="member">SeatInterface::keyboard</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="948"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;keyboard.get();</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952" refid="class_k_win_1_1_seat_interface_1a530582606da7f53d1b232f979128687e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a530582606da7f53d1b232f979128687e" kindref="member">SeatInterface::notifyKeyboardKey</ref>(quint32<sp/>keyCode,<sp/><ref refid="namespace_k_win_1a01355afe201da93e2da84b64923a02f1" kindref="member">KeyboardKeyState</ref><sp/>state)</highlight></codeline>
<codeline lineno="953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;keyboard)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;keyboard-&gt;<ref refid="class_k_win_1_1_keyboard_interface_1a7769a7ff54757f86368c6699ea2c96aa" kindref="member">sendKey</ref>(keyCode,<sp/>state);</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="class_k_win_1_1_seat_interface_1aae6544023eb6bafe3b6219a7cd13b5c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1aae6544023eb6bafe3b6219a7cd13b5c9" kindref="member">SeatInterface::notifyKeyboardModifiers</ref>(quint32<sp/>depressed,<sp/>quint32<sp/>latched,<sp/>quint32<sp/>locked,<sp/>quint32<sp/>group)</highlight></codeline>
<codeline lineno="961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;keyboard)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;keyboard-&gt;sendModifiers(depressed,<sp/>latched,<sp/>locked,<sp/>group);</highlight></codeline>
<codeline lineno="966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968" refid="class_k_win_1_1_seat_interface_1a3fe38982f099a9a9887e58278d7f8eea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a3fe38982f099a9a9887e58278d7f8eea" kindref="member">SeatInterface::notifyTouchCancel</ref>()</highlight></codeline>
<codeline lineno="969"><highlight class="normal">{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;touch)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;globalTouch.focus.begin(),<sp/>itEnd<sp/>=<sp/>d-&gt;globalTouch.focus.end();<sp/>it<sp/>!=<sp/>itEnd;)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;touch-&gt;sendCancel(it-&gt;first);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>d-&gt;globalTouch.focus.erase(it);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9af0f31c9700c6b10d8a20dc487b2ae6a8" kindref="member">SeatInterfacePrivate::Drag::Mode::Touch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cancel<sp/>the<sp/>drag,<sp/>don&apos;t<sp/>drop.<sp/>serial<sp/>does<sp/>not<sp/>matter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;cancelDrag();</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalTouch.ids.clear();</highlight></codeline>
<codeline lineno="983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985" refid="class_k_win_1_1_seat_interface_1a3a8873143808a5cfc4e395332ddfca6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a3a8873143808a5cfc4e395332ddfca6d" kindref="member">SeatInterface::isSurfaceTouched</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="986"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;globalTouch.focus.contains(surface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a6b90cf6b6f8c6fbf42764d98d690c865" kindref="member">mainSurface</ref>());</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="class_k_win_1_1_seat_interface_1a4a875c28ac138d19768d2f13f57f7336" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a4a875c28ac138d19768d2f13f57f7336" kindref="member">SeatInterface::isTouchSequence</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="991"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!d-&gt;globalTouch.ids.empty();</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995" refid="class_k_win_1_1_seat_interface_1ab1942adfa9a04d1cb7e9c3785c0aca06" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_touch_interface" kindref="compound">TouchInterface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1ab1942adfa9a04d1cb7e9c3785c0aca06" kindref="member">SeatInterface::touch</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="996"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;touch.get();</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000" refid="class_k_win_1_1_seat_interface_1a2b62c3201bdaec061f50957d8aa9d1ee" refkind="member"><highlight class="normal">QPointF<sp/><ref refid="class_k_win_1_1_seat_interface_1a2b62c3201bdaec061f50957d8aa9d1ee" kindref="member">SeatInterface::firstTouchPointPosition</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1001"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;globalTouch.focus.find(surface);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>d-&gt;globalTouch.focus.end())<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Requested<sp/>a<sp/>first<sp/>touch<sp/>on<sp/>a<sp/>surface<sp/>that<sp/>isn&apos;t<sp/>touched&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>surface;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second-&gt;firstTouchPos;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010" refid="class_k_win_1_1_seat_interface_1a8817f59e87fed5eb3509862c63da2e39" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_seat_interface_1aa5cc5bb2ce40bb2dd4a4e62fcefb0c59" kindref="member">TouchPoint</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a8817f59e87fed5eb3509862c63da2e39" kindref="member">SeatInterface::touchPointByImplicitGrabSerial</ref>(quint32<sp/>serial)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1011"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>touchPoint]<sp/>:<sp/>d-&gt;globalTouch.ids)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(touchPoint-&gt;serial<sp/>==<sp/>serial)<sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>touchPoint.get();</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020" refid="class_k_win_1_1_touch_point_1a9efd911dd960e0f2ff4d6fa4379c61f8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_touch_point_1a9efd911dd960e0f2ff4d6fa4379c61f8" kindref="member">TouchPoint::TouchPoint</ref>(quint32<sp/><ref refid="class_k_win_1_1_touch_point_1a0b070060cc9bf4e8ddf24f222a154e04" kindref="member">serial</ref>,<sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_touch_point_1a020d16c0020ace35b861303239d709e4" kindref="member">surface</ref>,<sp/><ref refid="class_k_win_1_1_seat_interface" kindref="compound">SeatInterface</ref><sp/>*<ref refid="class_k_win_1_1_touch_point_1af61a445aee6472a5429f9e6d20e28807" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_k_win_1_1_touch_point_1a0b070060cc9bf4e8ddf24f222a154e04" kindref="member">serial</ref>(<ref refid="class_k_win_1_1_touch_point_1a0b070060cc9bf4e8ddf24f222a154e04" kindref="member">serial</ref>)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_touch_point_1afb80d4df0d4bd68e7e933264ff1edc18" kindref="member">client</ref>(<ref refid="class_k_win_1_1_touch_point_1a020d16c0020ace35b861303239d709e4" kindref="member">surface</ref>-&gt;<ref refid="class_k_win_1_1_touch_point_1afb80d4df0d4bd68e7e933264ff1edc18" kindref="member">client</ref>())</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_touch_point_1a020d16c0020ace35b861303239d709e4" kindref="member">surface</ref>(<ref refid="class_k_win_1_1_touch_point_1a020d16c0020ace35b861303239d709e4" kindref="member">surface</ref>)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_k_win_1_1_touch_point_1af61a445aee6472a5429f9e6d20e28807" kindref="member">seat</ref>(<ref refid="class_k_win_1_1_touch_point_1af61a445aee6472a5429f9e6d20e28807" kindref="member">seat</ref>)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028" refid="class_k_win_1_1_touch_point_1ab9e79fdd7cd272087e94f9d12790a872" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_touch_point_1ab9e79fdd7cd272087e94f9d12790a872" kindref="member">TouchPoint::setSurfacePosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;surfacePosition)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_touch_point_1a80f91a724473a376d1cb25f785f549d5" kindref="member">offset</ref><sp/>=<sp/>surfacePosition;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_touch_point_1a027ef8b07d6a092203f750e805ed1ade" kindref="member">transformation</ref><sp/>=<sp/>QMatrix4x4();</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_touch_point_1a027ef8b07d6a092203f750e805ed1ade" kindref="member">transformation</ref>.translate(-surfacePosition.x(),<sp/>-surfacePosition.y());</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035" refid="class_k_win_1_1_seat_interface_1aaf2158db5fcf66eb8a54665e9d1cb64f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_seat_interface_1aa5cc5bb2ce40bb2dd4a4e62fcefb0c59" kindref="member">TouchPoint</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1aaf2158db5fcf66eb8a54665e9d1cb64f" kindref="member">SeatInterface::notifyTouchDown</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;surfacePosition,<sp/>qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;globalPosition)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!d-&gt;globalTouch.ids.contains(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;touch<sp/>||<sp/>!surface)<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;globalTouch.focus.find(surface);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>d-&gt;globalTouch.focus.end())<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalTouch.focus[surface]<sp/>=<sp/>std::make_unique&lt;SeatInterfacePrivate::Touch::Interaction&gt;();</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>d-&gt;globalTouch.focus.find(surface);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;firstTouchPos<sp/>=<sp/>globalPosition;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;destroyConnection<sp/>=<sp/>QObject::connect(surface,<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_1a547a07eb856d80205eb584e50571d1ee" kindref="member">SurfaceInterface::aboutToBeDestroyed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>surface]()<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalTouch.focus.erase(surface);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>it-&gt;second-&gt;refs++;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>globalPosition<sp/>-<sp/>surfacePosition;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*effectiveTouchedSurface<sp/>=<sp/>mapToSurfaceInPosition(surface,<sp/>pos);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1a25feb6a01195ac1c32ee4a01239229f6" kindref="member">display</ref>()-&gt;<ref refid="class_k_win_1_1_display_1a88d04e81a3c1a696bae7fca6426fabcc" kindref="member">nextSerial</ref>();</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;touch-&gt;sendDown(effectiveTouchedSurface,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>serial,<sp/>pos);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tp<sp/>=<sp/>std::make_unique&lt;TouchPoint&gt;(serial,<sp/>surface,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>tp-&gt;offset<sp/>=<sp/>surfacePosition;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>tp-&gt;transformation<sp/>=<sp/>QMatrix4x4();</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>tp-&gt;transformation.translate(-surfacePosition.x(),<sp/>-surfacePosition.y());</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>tp.get();</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalTouch.ids[id]<sp/>=<sp/>std::move(tp);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068" refid="class_k_win_1_1_seat_interface_1a673ce0b1f88bc6c3dda285723a23bfb7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a673ce0b1f88bc6c3dda285723a23bfb7" kindref="member">SeatInterface::notifyTouchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;globalPosition)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;touch)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itTouch<sp/>=<sp/>d-&gt;globalTouch.ids.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itTouch<sp/>==<sp/>d-&gt;globalTouch.ids.cend())<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>happen<sp/>in<sp/>cases<sp/>where<sp/>the<sp/>interaction<sp/>started<sp/>while<sp/>the<sp/>device<sp/>was<sp/>asleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Detected<sp/>a<sp/>touch<sp/>move<sp/>that<sp/>never<sp/>has<sp/>been<sp/>down,<sp/>discarding&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>interaction<sp/>=<sp/>d-&gt;globalTouch.focus.find(itTouch-&gt;second-&gt;surface);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interaction<sp/>!=<sp/>d-&gt;globalTouch.focus.end())<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>globalPosition<sp/>-<sp/>itTouch-&gt;second-&gt;offset;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*effectiveTouchedSurface<sp/>=<sp/>mapToSurfaceInPosition(d-&gt;globalTouch.ids[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]-&gt;surface,<sp/>pos);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1a94fb7a3110dad0ae2b0b0f5c0026ca50" kindref="member">isDragTouch</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handled<sp/>by<sp/>DataDevice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;touch-&gt;sendMotion(effectiveTouchedSurface,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interaction-&gt;second-&gt;firstTouchPos<sp/>=<sp/>globalPosition;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1a560e24d032be268d9d9049a3eb276af6" kindref="member">touchMoved</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>itTouch-&gt;second-&gt;serial,<sp/>globalPosition);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099" refid="class_k_win_1_1_seat_interface_1ac5af1bde24cbb5c8322abad11a118a0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1ac5af1bde24cbb5c8322abad11a118a0f" kindref="member">SeatInterface::notifyTouchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;touch)<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itTouch<sp/>=<sp/>d-&gt;globalTouch.ids.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itTouch<sp/>==<sp/>d-&gt;globalTouch.ids.end())<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>happen<sp/>in<sp/>cases<sp/>where<sp/>the<sp/>interaction<sp/>started<sp/>while<sp/>the<sp/>device<sp/>was<sp/>asleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(KWIN_CORE)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Detected<sp/>a<sp/>touch<sp/>that<sp/>never<sp/>started,<sp/>discarding&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1aa5cc5bb2ce40bb2dd4a4e62fcefb0c59" kindref="member">TouchPoint</ref><sp/>*touchPoint<sp/>=<sp/>itTouch-&gt;second.get();</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9af0f31c9700c6b10d8a20dc487b2ae6a8" kindref="member">SeatInterfacePrivate::Drag::Mode::Touch</ref><sp/>&amp;&amp;<sp/>d-&gt;drag.dragImplicitGrabSerial<sp/>==<sp/>touchPoint-&gt;<ref refid="class_k_win_1_1_touch_point_1a0b070060cc9bf4e8ddf24f222a154e04" kindref="member">serial</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>implicitly<sp/>grabbing<sp/>touch<sp/>point<sp/>has<sp/>been<sp/>upped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;endDrag();</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(touchPoint-&gt;<ref refid="class_k_win_1_1_touch_point_1afb80d4df0d4bd68e7e933264ff1edc18" kindref="member">client</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;touch-&gt;sendUp(touchPoint-&gt;<ref refid="class_k_win_1_1_touch_point_1afb80d4df0d4bd68e7e933264ff1edc18" kindref="member">client</ref>,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>d-&gt;display-&gt;nextSerial());</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d-&gt;globalTouch.focus.find(touchPoint-&gt;<ref refid="class_k_win_1_1_touch_point_1a020d16c0020ace35b861303239d709e4" kindref="member">surface</ref>);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>d-&gt;globalTouch.focus.end())<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;refs--;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;refs<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;globalTouch.focus.erase(it);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;globalTouch.ids.erase(itTouch);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133" refid="class_k_win_1_1_seat_interface_1a871c144ad25becc98e8f9aba1b09e216" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a871c144ad25becc98e8f9aba1b09e216" kindref="member">SeatInterface::notifyTouchFrame</ref>()</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;touch)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;touch-&gt;sendFrame();</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141" refid="class_k_win_1_1_seat_interface_1a5027b6dcaec3c046da667afd0be0e920" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a5027b6dcaec3c046da667afd0be0e920" kindref="member">SeatInterface::hasImplicitTouchGrab</ref>(quint32<sp/>serial)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1142"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::ranges::any_of(std::as_const(d-&gt;globalTouch.ids),<sp/>[serial](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>x.second-&gt;serial<sp/>==<sp/>serial;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148" refid="class_k_win_1_1_seat_interface_1a57ac6a4f80381496d09b6241e0fa1b2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a57ac6a4f80381496d09b6241e0fa1b2f" kindref="member">SeatInterface::isDrag</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1149"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;drag.mode<sp/>!=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a6adf97f83acf6453d4a6a4b1070f3754" kindref="member">SeatInterfacePrivate::Drag::Mode::None</ref>;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153" refid="class_k_win_1_1_seat_interface_1a87ba2e3f967fbce884cdd9ca19d70780" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a87ba2e3f967fbce884cdd9ca19d70780" kindref="member">SeatInterface::isDragPointer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1154"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a61cf8510205077b6f5491d38cd44c0f7" kindref="member">SeatInterfacePrivate::Drag::Mode::Pointer</ref>;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158" refid="class_k_win_1_1_seat_interface_1a94fb7a3110dad0ae2b0b0f5c0026ca50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a94fb7a3110dad0ae2b0b0f5c0026ca50" kindref="member">SeatInterface::isDragTouch</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;drag.mode<sp/>==<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9af0f31c9700c6b10d8a20dc487b2ae6a8" kindref="member">SeatInterfacePrivate::Drag::Mode::Touch</ref>;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163" refid="class_k_win_1_1_seat_interface_1a87cffed36e84d1fc9acdf77e2bda6296" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a87cffed36e84d1fc9acdf77e2bda6296" kindref="member">SeatInterface::hasImplicitPointerGrab</ref>(quint32<sp/>serial)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1164"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;serials<sp/>=<sp/>d-&gt;globalPointer.buttonSerials;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>serials.constBegin(),<sp/>end<sp/>=<sp/>serials.constEnd();<sp/>it<sp/>!=<sp/>end;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value()<sp/>==<sp/>serial)<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a897a0c30fdef792d6e446c7e730c5147" kindref="member">isPointerButtonPressed</ref>(it.key());</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174" refid="class_k_win_1_1_seat_interface_1ad0eb3b07546c008f98436ce7b8ef06ef" refkind="member"><highlight class="normal">QMatrix4x4<sp/><ref refid="class_k_win_1_1_seat_interface_1ad0eb3b07546c008f98436ce7b8ef06ef" kindref="member">SeatInterface::dragSurfaceTransformation</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1175"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;drag.transformation;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179" refid="class_k_win_1_1_seat_interface_1a3da5ce00a5ffd81f77dc6b9363ced81d" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a3da5ce00a5ffd81f77dc6b9363ced81d" kindref="member">SeatInterface::dragSurface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1180"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;drag.surface;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184" refid="class_k_win_1_1_seat_interface_1af10546626ca0b56147b3ca2af66288a8" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1af10546626ca0b56147b3ca2af66288a8" kindref="member">SeatInterface::dragSource</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1185"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;drag.source;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189" refid="class_k_win_1_1_seat_interface_1a49ecec73ceab04d444085408680c5821" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_xdg_toplevel_drag_v1_interface" kindref="compound">XdgToplevelDragV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a49ecec73ceab04d444085408680c5821" kindref="member">SeatInterface::xdgTopleveldrag</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1190"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>source<sp/>=<sp/>qobject_cast&lt;DataSourceInterface<sp/>*&gt;(d-&gt;drag.source))<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>source-&gt;xdgToplevelDrag();</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197" refid="class_k_win_1_1_seat_interface_1a7f66fb5fb1cf10789ea3d2d0f6938b99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a7f66fb5fb1cf10789ea3d2d0f6938b99" kindref="member">SeatInterface::setFocusedTextInputSurface</ref>(<ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*surface)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint32<sp/>serial<sp/>=<sp/>d-&gt;display-&gt;nextSerial();</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;focusedTextInputSurface<sp/>==<sp/>surface)<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;focusedTextInputSurface)<sp/>{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;focusedSurfaceDestroyConnection);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;textInputV1-&gt;d-&gt;sendLeave(d-&gt;focusedTextInputSurface);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;textInputV2-&gt;d-&gt;sendLeave(serial,<sp/>d-&gt;focusedTextInputSurface);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;textInputV3-&gt;d-&gt;sendLeave(d-&gt;focusedTextInputSurface);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;focusedTextInputSurface<sp/>=<sp/>surface;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surface)<sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;focusedSurfaceDestroyConnection<sp/>=<sp/>connect(surface,<sp/>&amp;<ref refid="class_k_win_1_1_surface_interface_1a547a07eb856d80205eb584e50571d1ee" kindref="member">SurfaceInterface::aboutToBeDestroyed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a7f66fb5fb1cf10789ea3d2d0f6938b99" kindref="member">setFocusedTextInputSurface</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;textInputV1-&gt;d-&gt;sendEnter(surface);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;textInputV2-&gt;d-&gt;sendEnter(surface,<sp/>serial);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;textInputV3-&gt;d-&gt;sendEnter(surface);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1a62e6d46ceb192c026bb50238e11b3aab" kindref="member">focusedTextInputSurfaceChanged</ref>();</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225" refid="class_k_win_1_1_seat_interface_1a03d13be3f0d21aa73d1560d695e2526b" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a03d13be3f0d21aa73d1560d695e2526b" kindref="member">SeatInterface::focusedTextInputSurface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1226"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;focusedTextInputSurface;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230" refid="class_k_win_1_1_seat_interface_1a31b0ca85c10f480fa3142315e04253bd" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_text_input_v1_interface" kindref="compound">TextInputV1Interface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a31b0ca85c10f480fa3142315e04253bd" kindref="member">SeatInterface::textInputV1</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1231"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;textInputV1;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235" refid="class_k_win_1_1_seat_interface_1a821a8b87f9848b0b2c9d10a96c651ad6" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_text_input_v2_interface" kindref="compound">TextInputV2Interface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1a821a8b87f9848b0b2c9d10a96c651ad6" kindref="member">SeatInterface::textInputV2</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1236"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;textInputV2;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240" refid="class_k_win_1_1_seat_interface_1aedd2e32ac2f42dce970a79d7fe73809a" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_text_input_v3_interface" kindref="compound">TextInputV3Interface</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1aedd2e32ac2f42dce970a79d7fe73809a" kindref="member">SeatInterface::textInputV3</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1241"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;textInputV3;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1244" refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">SeatInterface::selection</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1245"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;currentSelection;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249" refid="class_k_win_1_1_seat_interface_1a9f6de55aae663edcef362cf5f6c3fb3b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a9f6de55aae663edcef362cf5f6c3fb3b" kindref="member">SeatInterface::setSelection</ref>(<ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;currentSelection<sp/>==<sp/><ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;currentSelection)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;currentSelection-&gt;cancel();</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;currentSelection,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cleanup<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>serial]()<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a9f6de55aae663edcef362cf5f6c3fb3b" kindref="member">setSelection</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>serial);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_abstract_data_source_1ac8e054ef0032554e4626026daf463c85" kindref="member">AbstractDataSource::aboutToBeDestroyed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>cleanup);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;currentSelection<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;currentSelectionSerial<sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>focussedSelection<sp/>:<sp/>std::as_const(d-&gt;globalKeyboard.focus.selections))<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focussedSelection-&gt;sendSelection(<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>control<sp/>:<sp/>std::as_const(d-&gt;dataControlDevices))<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>control-&gt;sendSelection(<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1a9a891404b480c4b3aacf6be99e53025c" kindref="member">selectionChanged</ref>(<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281" refid="class_k_win_1_1_seat_interface_1ae021f848fa46b6db4b1bf58ed569d4ae" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1ae021f848fa46b6db4b1bf58ed569d4ae" kindref="member">SeatInterface::primarySelection</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1282"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;currentPrimarySelection;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286" refid="class_k_win_1_1_seat_interface_1a7a242cc390e1ff165ddfdf73f800f8dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1a7a242cc390e1ff165ddfdf73f800f8dd" kindref="member">SeatInterface::setPrimarySelection</ref>(<ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>,<sp/>quint32<sp/>serial)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;currentPrimarySelection<sp/>==<sp/><ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;currentPrimarySelection)<sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;currentPrimarySelection-&gt;cancel();</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(d-&gt;currentPrimarySelection,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cleanup<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>serial]()<sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a7a242cc390e1ff165ddfdf73f800f8dd" kindref="member">setPrimarySelection</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>serial);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_abstract_data_source_1ac8e054ef0032554e4626026daf463c85" kindref="member">AbstractDataSource::aboutToBeDestroyed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>cleanup);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;currentPrimarySelection<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;currentPrimarySelectionSerial<sp/>=<sp/>serial;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>focussedSelection<sp/>:<sp/>std::as_const(d-&gt;globalKeyboard.focus.primarySelections))<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focussedSelection-&gt;sendSelection(<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>control<sp/>:<sp/>std::as_const(d-&gt;dataControlDevices))<sp/>{</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>control-&gt;sendPrimarySelection(<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1a9af1f5bd613d52ade5559b87cb06dbc7" kindref="member">primarySelectionChanged</ref>(<ref refid="class_k_win_1_1_seat_interface_1acefdc0836fba9b4af5f1c72a10c0c65f" kindref="member">selection</ref>);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316" refid="class_k_win_1_1_seat_interface_1ac915137afd26577d34c17ef33295d46e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_seat_interface_1ac915137afd26577d34c17ef33295d46e" kindref="member">SeatInterface::startDrag</ref>(<ref refid="class_k_win_1_1_abstract_data_source" kindref="compound">AbstractDataSource</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1af10546626ca0b56147b3ca2af66288a8" kindref="member">dragSource</ref>,<sp/><ref refid="class_k_win_1_1_surface_interface" kindref="compound">SurfaceInterface</ref><sp/>*originSurface,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dragSerial,<sp/><ref refid="class_k_win_1_1_drag_and_drop_icon" kindref="compound">DragAndDropIcon</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1aec01f08f1798e183ed8f066c9cabd49c" kindref="member">dragIcon</ref>)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.mode<sp/>!=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a6adf97f83acf6453d4a6a4b1070f3754" kindref="member">SeatInterfacePrivate::Drag::Mode::None</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>originSurface<sp/>=<sp/>originSurface-&gt;<ref refid="class_k_win_1_1_surface_interface_1a6b90cf6b6f8c6fbf42764d98d690c865" kindref="member">mainSurface</ref>();</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1a87cffed36e84d1fc9acdf77e2bda6296" kindref="member">hasImplicitPointerGrab</ref>(dragSerial))<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.mode<sp/>=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9a61cf8510205077b6f5491d38cd44c0f7" kindref="member">SeatInterfacePrivate::Drag::Mode::Pointer</ref>;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.transformation<sp/>=<sp/>d-&gt;globalPointer.focus.transformation;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1aa5cc5bb2ce40bb2dd4a4e62fcefb0c59" kindref="member">TouchPoint</ref><sp/>*touchPoint<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1a8817f59e87fed5eb3509862c63da2e39" kindref="member">touchPointByImplicitGrabSerial</ref>(dragSerial))<sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.mode<sp/>=<sp/><ref refid="struct_k_win_1_1_seat_interface_private_1_1_drag_1af6877bf043c0551ea5c4012130d2ebe9af0f31c9700c6b10d8a20dc487b2ae6a8" kindref="member">SeatInterfacePrivate::Drag::Mode::Touch</ref>;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.transformation<sp/>=<sp/>touchPoint-&gt;transformation;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>implicit<sp/>grab,<sp/>abort<sp/>drag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;drag.dragImplicitGrabSerial<sp/>=<sp/>dragSerial;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>initial<sp/>drag<sp/>target<sp/>to<sp/>ourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;drag.surface<sp/>=<sp/>originSurface;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;drag.source<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1af10546626ca0b56147b3ca2af66288a8" kindref="member">dragSource</ref>;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_win_1_1_seat_interface_1af10546626ca0b56147b3ca2af66288a8" kindref="member">dragSource</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.dragSourceDestroyConnection<sp/>=<sp/>QObject::connect(<ref refid="class_k_win_1_1_seat_interface_1af10546626ca0b56147b3ca2af66288a8" kindref="member">dragSource</ref>,<sp/>&amp;<ref refid="class_k_win_1_1_abstract_data_source_1ac8e054ef0032554e4626026daf463c85" kindref="member">AbstractDataSource::aboutToBeDestroyed</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;cancelDrag();</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;drag.dragIcon<sp/>=<sp/><ref refid="class_k_win_1_1_seat_interface_1aec01f08f1798e183ed8f066c9cabd49c" kindref="member">dragIcon</ref>;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d-&gt;dataDevicesForSurface(originSurface).isEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.target<sp/>=<sp/>d-&gt;dataDevicesForSurface(originSurface)[0];</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;drag.target)<sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;dragInhibitsPointer(originSurface))<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_seat_interface_1a879f67e2ec9d35057979d181f2c24133" kindref="member">notifyPointerLeave</ref>();</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;drag.target-&gt;updateDragTarget(originSurface,<sp/><ref refid="class_k_win_1_1_seat_interface_1a25feb6a01195ac1c32ee4a01239229f6" kindref="member">display</ref>()-&gt;nextSerial());</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1a74ad66a32e97bd7aefab3e4ce40a715f" kindref="member">dragStarted</ref>();</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_seat_interface_1a60356dd135469a5dac20452a9f0a005a" kindref="member">dragSurfaceChanged</ref>();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360" refid="class_k_win_1_1_seat_interface_1aec01f08f1798e183ed8f066c9cabd49c" refkind="member"><highlight class="normal"><ref refid="class_k_win_1_1_drag_and_drop_icon" kindref="compound">DragAndDropIcon</ref><sp/>*<ref refid="class_k_win_1_1_seat_interface_1aec01f08f1798e183ed8f066c9cabd49c" kindref="member">SeatInterface::dragIcon</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1361"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;drag.dragIcon;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;moc_seat.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/wayland/seat.cpp"/>
  </compounddef>
</doxygen>
