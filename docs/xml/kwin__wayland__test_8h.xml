<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="kwin__wayland__test_8h" kind="file" language="C++">
    <compoundname>kwin_wayland_test.h</compoundname>
    <includes refid="inputdevice_8h" local="yes">core/inputdevice.h</includes>
    <includes local="yes">main.h</includes>
    <includes local="yes">window.h</includes>
    <includes local="no">QSignalSpy</includes>
    <includes local="no">QTest</includes>
    <includes local="no">KWayland/Client/surface.h</includes>
    <includes local="no">optional</includes>
    <includes local="yes">qwayland-color-management-v1.h</includes>
    <includes local="yes">qwayland-cursor-shape-v1.h</includes>
    <includes local="yes">qwayland-fake-input.h</includes>
    <includes local="yes">qwayland-fractional-scale-v1.h</includes>
    <includes local="yes">qwayland-idle-inhibit-unstable-v1.h</includes>
    <includes local="yes">qwayland-input-method-unstable-v1.h</includes>
    <includes local="yes">qwayland-kde-output-device-v2.h</includes>
    <includes local="yes">qwayland-kde-output-management-v2.h</includes>
    <includes local="yes">qwayland-kde-screen-edge-v1.h</includes>
    <includes local="yes">qwayland-security-context-v1.h</includes>
    <includes local="yes">qwayland-text-input-unstable-v3.h</includes>
    <includes local="yes">qwayland-wlr-layer-shell-unstable-v1.h</includes>
    <includes local="yes">qwayland-xdg-decoration-unstable-v1.h</includes>
    <includes local="yes">qwayland-xdg-dialog-v1.h</includes>
    <includes local="yes">qwayland-xdg-shell.h</includes>
    <includes local="yes">qwayland-zkde-screencast-unstable-v1.h</includes>
    <includedby refid="activation__test_8cpp" local="yes">kwin/autotests/integration/activation_test.cpp</includedby>
    <includedby refid="activities__test_8cpp" local="yes">kwin/autotests/integration/activities_test.cpp</includedby>
    <includedby refid="bounce__keys__test_8cpp" local="yes">kwin/autotests/integration/bounce_keys_test.cpp</includedby>
    <includedby refid="buttonrebind__test_8cpp" local="yes">kwin/autotests/integration/buttonrebind_test.cpp</includedby>
    <includedby refid="dbus__interface__test_8cpp" local="yes">kwin/autotests/integration/dbus_interface_test.cpp</includedby>
    <includedby refid="debug__console__test_8cpp" local="yes">kwin/autotests/integration/debug_console_test.cpp</includedby>
    <includedby refid="decoration__input__test_8cpp" local="yes">kwin/autotests/integration/decoration_input_test.cpp</includedby>
    <includedby refid="desktop__window__x11__test_8cpp" local="yes">kwin/autotests/integration/desktop_window_x11_test.cpp</includedby>
    <includedby refid="dont__crash__aurorae__destroy__deco_8cpp" local="yes">kwin/autotests/integration/dont_crash_aurorae_destroy_deco.cpp</includedby>
    <includedby refid="dont__crash__cancel__animation_8cpp" local="yes">kwin/autotests/integration/dont_crash_cancel_animation.cpp</includedby>
    <includedby refid="dont__crash__empty__deco_8cpp" local="yes">kwin/autotests/integration/dont_crash_empty_deco.cpp</includedby>
    <includedby refid="dont__crash__glxgears_8cpp" local="yes">kwin/autotests/integration/dont_crash_glxgears.cpp</includedby>
    <includedby refid="dont__crash__reinitialize__compositor_8cpp" local="yes">kwin/autotests/integration/dont_crash_reinitialize_compositor.cpp</includedby>
    <includedby refid="dont__crash__useractions__menu_8cpp" local="yes">kwin/autotests/integration/dont_crash_useractions_menu.cpp</includedby>
    <includedby refid="desktop__switching__animation__test_8cpp" local="yes">kwin/autotests/integration/effects/desktop_switching_animation_test.cpp</includedby>
    <includedby refid="maximize__animation__test_8cpp" local="yes">kwin/autotests/integration/effects/maximize_animation_test.cpp</includedby>
    <includedby refid="minimize__animation__test_8cpp" local="yes">kwin/autotests/integration/effects/minimize_animation_test.cpp</includedby>
    <includedby refid="popup__open__close__animation__test_8cpp" local="yes">kwin/autotests/integration/effects/popup_open_close_animation_test.cpp</includedby>
    <includedby refid="scripted__effects__test_8cpp" local="yes">kwin/autotests/integration/effects/scripted_effects_test.cpp</includedby>
    <includedby refid="slidingpopups__test_8cpp" local="yes">kwin/autotests/integration/effects/slidingpopups_test.cpp</includedby>
    <includedby refid="toplevel__open__close__animation__test_8cpp" local="yes">kwin/autotests/integration/effects/toplevel_open_close_animation_test.cpp</includedby>
    <includedby refid="translucency__test_8cpp" local="yes">kwin/autotests/integration/effects/translucency_test.cpp</includedby>
    <includedby refid="wobbly__shade__test_8cpp" local="yes">kwin/autotests/integration/effects/wobbly_shade_test.cpp</includedby>
    <includedby refid="fakeinput__test_8cpp" local="yes">kwin/autotests/integration/fakeinput_test.cpp</includedby>
    <includedby refid="fractional__scaling__test_8cpp" local="yes">kwin/autotests/integration/fractional_scaling_test.cpp</includedby>
    <includedby refid="generic__scene__opengl__test_8h" local="yes">kwin/autotests/integration/generic_scene_opengl_test.h</includedby>
    <includedby refid="globalshortcuts__test_8cpp" local="yes">kwin/autotests/integration/globalshortcuts_test.cpp</includedby>
    <includedby refid="idle__inhibition__test_8cpp" local="yes">kwin/autotests/integration/idle_inhibition_test.cpp</includedby>
    <includedby refid="input__capture__test_8cpp" local="yes">kwin/autotests/integration/input_capture_test.cpp</includedby>
    <includedby refid="input__stacking__order_8cpp" local="yes">kwin/autotests/integration/input_stacking_order.cpp</includedby>
    <includedby refid="inputmethod__test_8cpp" local="yes">kwin/autotests/integration/inputmethod_test.cpp</includedby>
    <includedby refid="internal__window_8cpp" local="yes">kwin/autotests/integration/internal_window.cpp</includedby>
    <includedby refid="keyboard__input__test_8cpp" local="yes">kwin/autotests/integration/keyboard_input_test.cpp</includedby>
    <includedby refid="keyboard__layout__test_8cpp" local="yes">kwin/autotests/integration/keyboard_layout_test.cpp</includedby>
    <includedby refid="keymap__creation__failure__test_8cpp" local="yes">kwin/autotests/integration/keymap_creation_failure_test.cpp</includedby>
    <includedby refid="kwin__wayland__test_8cpp" local="yes">kwin/autotests/integration/kwin_wayland_test.cpp</includedby>
    <includedby refid="kwinbindings__test_8cpp" local="yes">kwin/autotests/integration/kwinbindings_test.cpp</includedby>
    <includedby refid="layershellv1window__test_8cpp" local="yes">kwin/autotests/integration/layershellv1window_test.cpp</includedby>
    <includedby refid="lockscreen_8cpp" local="yes">kwin/autotests/integration/lockscreen.cpp</includedby>
    <includedby refid="maximize__test_8cpp" local="yes">kwin/autotests/integration/maximize_test.cpp</includedby>
    <includedby refid="mouseactions__test_8cpp" local="yes">kwin/autotests/integration/mouseactions_test.cpp</includedby>
    <includedby refid="move__resize__window__test_8cpp" local="yes">kwin/autotests/integration/move_resize_window_test.cpp</includedby>
    <includedby refid="no__global__shortcuts__test_8cpp" local="yes">kwin/autotests/integration/no_global_shortcuts_test.cpp</includedby>
    <includedby refid="outputchanges__test_8cpp" local="yes">kwin/autotests/integration/outputchanges_test.cpp</includedby>
    <includedby refid="placement__test_8cpp" local="yes">kwin/autotests/integration/placement_test.cpp</includedby>
    <includedby refid="plasma__surface__test_8cpp" local="yes">kwin/autotests/integration/plasma_surface_test.cpp</includedby>
    <includedby refid="plasmawindow__test_8cpp" local="yes">kwin/autotests/integration/plasmawindow_test.cpp</includedby>
    <includedby refid="autotests_2integration_2platformcursor_8cpp" local="yes">kwin/autotests/integration/platformcursor.cpp</includedby>
    <includedby refid="pointer__constraints__test_8cpp" local="yes">kwin/autotests/integration/pointer_constraints_test.cpp</includedby>
    <includedby refid="autotests_2integration_2pointer__input_8cpp" local="yes">kwin/autotests/integration/pointer_input.cpp</includedby>
    <includedby refid="quick__tiling__test_8cpp" local="yes">kwin/autotests/integration/quick_tiling_test.cpp</includedby>
    <includedby refid="screen__changes__test_8cpp" local="yes">kwin/autotests/integration/screen_changes_test.cpp</includedby>
    <includedby refid="screenedges__test_8cpp" local="yes">kwin/autotests/integration/screenedges_test.cpp</includedby>
    <includedby refid="screens__test_8cpp" local="yes">kwin/autotests/integration/screens_test.cpp</includedby>
    <includedby refid="minimizeall__test_8cpp" local="yes">kwin/autotests/integration/scripting/minimizeall_test.cpp</includedby>
    <includedby refid="screenedge__test_8cpp" local="yes">kwin/autotests/integration/scripting/screenedge_test.cpp</includedby>
    <includedby refid="security__context__test_8cpp" local="yes">kwin/autotests/integration/security_context_test.cpp</includedby>
    <includedby refid="shade__test_8cpp" local="yes">kwin/autotests/integration/shade_test.cpp</includedby>
    <includedby refid="showing__desktop__test_8cpp" local="yes">kwin/autotests/integration/showing_desktop_test.cpp</includedby>
    <includedby refid="stacking__order__test_8cpp" local="yes">kwin/autotests/integration/stacking_order_test.cpp</includedby>
    <includedby refid="sticky__keys__test_8cpp" local="yes">kwin/autotests/integration/sticky_keys_test.cpp</includedby>
    <includedby refid="struts__test_8cpp" local="yes">kwin/autotests/integration/struts_test.cpp</includedby>
    <includedby refid="tabbox__test_8cpp" local="yes">kwin/autotests/integration/tabbox_test.cpp</includedby>
    <includedby refid="test__colormanagement_8cpp" local="yes">kwin/autotests/integration/test_colormanagement.cpp</includedby>
    <includedby refid="test__helpers_8cpp" local="yes">kwin/autotests/integration/test_helpers.cpp</includedby>
    <includedby refid="test__virtualkeyboard__dbus_8cpp" local="yes">kwin/autotests/integration/test_virtualkeyboard_dbus.cpp</includedby>
    <includedby refid="tiles__test_8cpp" local="yes">kwin/autotests/integration/tiles_test.cpp</includedby>
    <includedby refid="touch__input__test_8cpp" local="yes">kwin/autotests/integration/touch_input_test.cpp</includedby>
    <includedby refid="transient__placement_8cpp" local="yes">kwin/autotests/integration/transient_placement.cpp</includedby>
    <includedby refid="virtual__desktop__test_8cpp" local="yes">kwin/autotests/integration/virtual_desktop_test.cpp</includedby>
    <includedby refid="window__rules__test_8cpp" local="yes">kwin/autotests/integration/window_rules_test.cpp</includedby>
    <includedby refid="window__selection__test_8cpp" local="yes">kwin/autotests/integration/window_selection_test.cpp</includedby>
    <includedby refid="workspace__test_8cpp" local="yes">kwin/autotests/integration/workspace_test.cpp</includedby>
    <includedby refid="x11__window__test_8cpp" local="yes">kwin/autotests/integration/x11_window_test.cpp</includedby>
    <includedby refid="x11keyread_8cpp" local="yes">kwin/autotests/integration/x11keyread.cpp</includedby>
    <includedby refid="xdgshellwindow__rules__test_8cpp" local="yes">kwin/autotests/integration/xdgshellwindow_rules_test.cpp</includedby>
    <includedby refid="xdgshellwindow__test_8cpp" local="yes">kwin/autotests/integration/xdgshellwindow_test.cpp</includedby>
    <includedby refid="xinerama__test_8cpp" local="yes">kwin/autotests/integration/xinerama_test.cpp</includedby>
    <includedby refid="xwayland__input__test_8cpp" local="yes">kwin/autotests/integration/xwayland_input_test.cpp</includedby>
    <includedby refid="xwayland__selections__test_8cpp" local="yes">kwin/autotests/integration/xwayland_selections_test.cpp</includedby>
    <includedby refid="xwaylandserver__crash__test_8cpp" local="yes">kwin/autotests/integration/xwaylandserver_crash_test.cpp</includedby>
    <includedby refid="xwaylandserver__restart__test_8cpp" local="yes">kwin/autotests/integration/xwaylandserver_restart_test.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>kwin/autotests/integration/kwin_wayland_test.h</label>
        <link refid="kwin__wayland__test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/inputdevice.h</label>
        <link refid="inputdevice_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>KWayland/Client/surface.h</label>
      </node>
      <node id="5">
        <label>QCoreApplication</label>
      </node>
      <node id="6">
        <label>QImage</label>
      </node>
      <node id="11">
        <label>QObject</label>
      </node>
      <node id="7">
        <label>QPoint</label>
      </node>
      <node id="14">
        <label>QSignalSpy</label>
      </node>
      <node id="15">
        <label>QTest</label>
      </node>
      <node id="8">
        <label>QVariant</label>
      </node>
      <node id="9">
        <label>QVector2D</label>
      </node>
      <node id="4">
        <label>config-kwin.h</label>
      </node>
      <node id="10">
        <label>kwin_export.h</label>
      </node>
      <node id="12">
        <label>main.h</label>
      </node>
      <node id="17">
        <label>optional</label>
      </node>
      <node id="18">
        <label>qwayland-color-management-v1.h</label>
      </node>
      <node id="19">
        <label>qwayland-cursor-shape-v1.h</label>
      </node>
      <node id="20">
        <label>qwayland-fake-input.h</label>
      </node>
      <node id="21">
        <label>qwayland-fractional-scale-v1.h</label>
      </node>
      <node id="22">
        <label>qwayland-idle-inhibit-unstable-v1.h</label>
      </node>
      <node id="23">
        <label>qwayland-input-method-unstable-v1.h</label>
      </node>
      <node id="24">
        <label>qwayland-kde-output-device-v2.h</label>
      </node>
      <node id="25">
        <label>qwayland-kde-output-management-v2.h</label>
      </node>
      <node id="26">
        <label>qwayland-kde-screen-edge-v1.h</label>
      </node>
      <node id="27">
        <label>qwayland-security-context-v1.h</label>
      </node>
      <node id="28">
        <label>qwayland-text-input-unstable-v3.h</label>
      </node>
      <node id="29">
        <label>qwayland-wlr-layer-shell-unstable-v1.h</label>
      </node>
      <node id="30">
        <label>qwayland-xdg-decoration-unstable-v1.h</label>
      </node>
      <node id="31">
        <label>qwayland-xdg-dialog-v1.h</label>
      </node>
      <node id="32">
        <label>qwayland-xdg-shell.h</label>
      </node>
      <node id="33">
        <label>qwayland-zkde-screencast-unstable-v1.h</label>
      </node>
      <node id="13">
        <label>window.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/autotests/integration/activation_test.cpp</label>
        <link refid="activation__test_8cpp"/>
      </node>
      <node id="3">
        <label>kwin/autotests/integration/activities_test.cpp</label>
        <link refid="activities__test_8cpp"/>
      </node>
      <node id="4">
        <label>kwin/autotests/integration/bounce_keys_test.cpp</label>
        <link refid="bounce__keys__test_8cpp"/>
      </node>
      <node id="5">
        <label>kwin/autotests/integration/buttonrebind_test.cpp</label>
        <link refid="buttonrebind__test_8cpp"/>
      </node>
      <node id="6">
        <label>kwin/autotests/integration/dbus_interface_test.cpp</label>
        <link refid="dbus__interface__test_8cpp"/>
      </node>
      <node id="7">
        <label>kwin/autotests/integration/debug_console_test.cpp</label>
        <link refid="debug__console__test_8cpp"/>
      </node>
      <node id="8">
        <label>kwin/autotests/integration/decoration_input_test.cpp</label>
        <link refid="decoration__input__test_8cpp"/>
      </node>
      <node id="9">
        <label>kwin/autotests/integration/desktop_window_x11_test.cpp</label>
        <link refid="desktop__window__x11__test_8cpp"/>
      </node>
      <node id="10">
        <label>kwin/autotests/integration/dont_crash_aurorae_destroy_deco.cpp</label>
        <link refid="dont__crash__aurorae__destroy__deco_8cpp"/>
      </node>
      <node id="11">
        <label>kwin/autotests/integration/dont_crash_cancel_animation.cpp</label>
        <link refid="dont__crash__cancel__animation_8cpp"/>
      </node>
      <node id="12">
        <label>kwin/autotests/integration/dont_crash_empty_deco.cpp</label>
        <link refid="dont__crash__empty__deco_8cpp"/>
      </node>
      <node id="13">
        <label>kwin/autotests/integration/dont_crash_glxgears.cpp</label>
        <link refid="dont__crash__glxgears_8cpp"/>
      </node>
      <node id="14">
        <label>kwin/autotests/integration/dont_crash_reinitialize_compositor.cpp</label>
        <link refid="dont__crash__reinitialize__compositor_8cpp"/>
      </node>
      <node id="15">
        <label>kwin/autotests/integration/dont_crash_useractions_menu.cpp</label>
        <link refid="dont__crash__useractions__menu_8cpp"/>
      </node>
      <node id="16">
        <label>kwin/autotests/integration/effects/desktop_switching_animation_test.cpp</label>
        <link refid="desktop__switching__animation__test_8cpp"/>
      </node>
      <node id="17">
        <label>kwin/autotests/integration/effects/maximize_animation_test.cpp</label>
        <link refid="maximize__animation__test_8cpp"/>
      </node>
      <node id="18">
        <label>kwin/autotests/integration/effects/minimize_animation_test.cpp</label>
        <link refid="minimize__animation__test_8cpp"/>
      </node>
      <node id="19">
        <label>kwin/autotests/integration/effects/popup_open_close_animation_test.cpp</label>
        <link refid="popup__open__close__animation__test_8cpp"/>
      </node>
      <node id="20">
        <label>kwin/autotests/integration/effects/scripted_effects_test.cpp</label>
        <link refid="scripted__effects__test_8cpp"/>
      </node>
      <node id="21">
        <label>kwin/autotests/integration/effects/slidingpopups_test.cpp</label>
        <link refid="slidingpopups__test_8cpp"/>
      </node>
      <node id="22">
        <label>kwin/autotests/integration/effects/toplevel_open_close_animation_test.cpp</label>
        <link refid="toplevel__open__close__animation__test_8cpp"/>
      </node>
      <node id="23">
        <label>kwin/autotests/integration/effects/translucency_test.cpp</label>
        <link refid="translucency__test_8cpp"/>
      </node>
      <node id="24">
        <label>kwin/autotests/integration/effects/wobbly_shade_test.cpp</label>
        <link refid="wobbly__shade__test_8cpp"/>
      </node>
      <node id="25">
        <label>kwin/autotests/integration/fakeinput_test.cpp</label>
        <link refid="fakeinput__test_8cpp"/>
      </node>
      <node id="26">
        <label>kwin/autotests/integration/fractional_scaling_test.cpp</label>
        <link refid="fractional__scaling__test_8cpp"/>
      </node>
      <node id="28">
        <label>kwin/autotests/integration/generic_scene_opengl_test.cpp</label>
        <link refid="generic__scene__opengl__test_8cpp"/>
      </node>
      <node id="27">
        <label>kwin/autotests/integration/generic_scene_opengl_test.h</label>
        <link refid="generic__scene__opengl__test_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>kwin/autotests/integration/globalshortcuts_test.cpp</label>
        <link refid="globalshortcuts__test_8cpp"/>
      </node>
      <node id="33">
        <label>kwin/autotests/integration/idle_inhibition_test.cpp</label>
        <link refid="idle__inhibition__test_8cpp"/>
      </node>
      <node id="34">
        <label>kwin/autotests/integration/input_capture_test.cpp</label>
        <link refid="input__capture__test_8cpp"/>
      </node>
      <node id="35">
        <label>kwin/autotests/integration/input_stacking_order.cpp</label>
        <link refid="input__stacking__order_8cpp"/>
      </node>
      <node id="36">
        <label>kwin/autotests/integration/inputmethod_test.cpp</label>
        <link refid="inputmethod__test_8cpp"/>
      </node>
      <node id="37">
        <label>kwin/autotests/integration/internal_window.cpp</label>
        <link refid="internal__window_8cpp"/>
      </node>
      <node id="38">
        <label>kwin/autotests/integration/keyboard_input_test.cpp</label>
        <link refid="keyboard__input__test_8cpp"/>
      </node>
      <node id="39">
        <label>kwin/autotests/integration/keyboard_layout_test.cpp</label>
        <link refid="keyboard__layout__test_8cpp"/>
      </node>
      <node id="40">
        <label>kwin/autotests/integration/keymap_creation_failure_test.cpp</label>
        <link refid="keymap__creation__failure__test_8cpp"/>
      </node>
      <node id="41">
        <label>kwin/autotests/integration/kwin_wayland_test.cpp</label>
        <link refid="kwin__wayland__test_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/autotests/integration/kwin_wayland_test.h</label>
        <link refid="kwin__wayland__test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>kwin/autotests/integration/kwinbindings_test.cpp</label>
        <link refid="kwinbindings__test_8cpp"/>
      </node>
      <node id="43">
        <label>kwin/autotests/integration/layershellv1window_test.cpp</label>
        <link refid="layershellv1window__test_8cpp"/>
      </node>
      <node id="44">
        <label>kwin/autotests/integration/lockscreen.cpp</label>
        <link refid="lockscreen_8cpp"/>
      </node>
      <node id="45">
        <label>kwin/autotests/integration/maximize_test.cpp</label>
        <link refid="maximize__test_8cpp"/>
      </node>
      <node id="46">
        <label>kwin/autotests/integration/mouseactions_test.cpp</label>
        <link refid="mouseactions__test_8cpp"/>
      </node>
      <node id="47">
        <label>kwin/autotests/integration/move_resize_window_test.cpp</label>
        <link refid="move__resize__window__test_8cpp"/>
      </node>
      <node id="48">
        <label>kwin/autotests/integration/no_global_shortcuts_test.cpp</label>
        <link refid="no__global__shortcuts__test_8cpp"/>
      </node>
      <node id="49">
        <label>kwin/autotests/integration/outputchanges_test.cpp</label>
        <link refid="outputchanges__test_8cpp"/>
      </node>
      <node id="50">
        <label>kwin/autotests/integration/placement_test.cpp</label>
        <link refid="placement__test_8cpp"/>
      </node>
      <node id="51">
        <label>kwin/autotests/integration/plasma_surface_test.cpp</label>
        <link refid="plasma__surface__test_8cpp"/>
      </node>
      <node id="52">
        <label>kwin/autotests/integration/plasmawindow_test.cpp</label>
        <link refid="plasmawindow__test_8cpp"/>
      </node>
      <node id="53">
        <label>kwin/autotests/integration/platformcursor.cpp</label>
        <link refid="autotests_2integration_2platformcursor_8cpp"/>
      </node>
      <node id="54">
        <label>kwin/autotests/integration/pointer_constraints_test.cpp</label>
        <link refid="pointer__constraints__test_8cpp"/>
      </node>
      <node id="55">
        <label>kwin/autotests/integration/pointer_input.cpp</label>
        <link refid="autotests_2integration_2pointer__input_8cpp"/>
      </node>
      <node id="56">
        <label>kwin/autotests/integration/quick_tiling_test.cpp</label>
        <link refid="quick__tiling__test_8cpp"/>
      </node>
      <node id="29">
        <label>kwin/autotests/integration/scene_opengl_es_test.cpp</label>
        <link refid="scene__opengl__es__test_8cpp"/>
      </node>
      <node id="30">
        <label>kwin/autotests/integration/scene_opengl_test.cpp</label>
        <link refid="scene__opengl__test_8cpp"/>
      </node>
      <node id="57">
        <label>kwin/autotests/integration/screen_changes_test.cpp</label>
        <link refid="screen__changes__test_8cpp"/>
      </node>
      <node id="31">
        <label>kwin/autotests/integration/screencasting_test.cpp</label>
        <link refid="screencasting__test_8cpp"/>
      </node>
      <node id="58">
        <label>kwin/autotests/integration/screenedges_test.cpp</label>
        <link refid="screenedges__test_8cpp"/>
      </node>
      <node id="59">
        <label>kwin/autotests/integration/screens_test.cpp</label>
        <link refid="screens__test_8cpp"/>
      </node>
      <node id="60">
        <label>kwin/autotests/integration/scripting/minimizeall_test.cpp</label>
        <link refid="minimizeall__test_8cpp"/>
      </node>
      <node id="61">
        <label>kwin/autotests/integration/scripting/screenedge_test.cpp</label>
        <link refid="screenedge__test_8cpp"/>
      </node>
      <node id="62">
        <label>kwin/autotests/integration/security_context_test.cpp</label>
        <link refid="security__context__test_8cpp"/>
      </node>
      <node id="63">
        <label>kwin/autotests/integration/shade_test.cpp</label>
        <link refid="shade__test_8cpp"/>
      </node>
      <node id="64">
        <label>kwin/autotests/integration/showing_desktop_test.cpp</label>
        <link refid="showing__desktop__test_8cpp"/>
      </node>
      <node id="65">
        <label>kwin/autotests/integration/stacking_order_test.cpp</label>
        <link refid="stacking__order__test_8cpp"/>
      </node>
      <node id="66">
        <label>kwin/autotests/integration/sticky_keys_test.cpp</label>
        <link refid="sticky__keys__test_8cpp"/>
      </node>
      <node id="67">
        <label>kwin/autotests/integration/struts_test.cpp</label>
        <link refid="struts__test_8cpp"/>
      </node>
      <node id="68">
        <label>kwin/autotests/integration/tabbox_test.cpp</label>
        <link refid="tabbox__test_8cpp"/>
      </node>
      <node id="69">
        <label>kwin/autotests/integration/test_colormanagement.cpp</label>
        <link refid="test__colormanagement_8cpp"/>
      </node>
      <node id="70">
        <label>kwin/autotests/integration/test_helpers.cpp</label>
        <link refid="test__helpers_8cpp"/>
      </node>
      <node id="71">
        <label>kwin/autotests/integration/test_virtualkeyboard_dbus.cpp</label>
        <link refid="test__virtualkeyboard__dbus_8cpp"/>
      </node>
      <node id="72">
        <label>kwin/autotests/integration/tiles_test.cpp</label>
        <link refid="tiles__test_8cpp"/>
      </node>
      <node id="73">
        <label>kwin/autotests/integration/touch_input_test.cpp</label>
        <link refid="touch__input__test_8cpp"/>
      </node>
      <node id="74">
        <label>kwin/autotests/integration/transient_placement.cpp</label>
        <link refid="transient__placement_8cpp"/>
      </node>
      <node id="75">
        <label>kwin/autotests/integration/virtual_desktop_test.cpp</label>
        <link refid="virtual__desktop__test_8cpp"/>
      </node>
      <node id="76">
        <label>kwin/autotests/integration/window_rules_test.cpp</label>
        <link refid="window__rules__test_8cpp"/>
      </node>
      <node id="77">
        <label>kwin/autotests/integration/window_selection_test.cpp</label>
        <link refid="window__selection__test_8cpp"/>
      </node>
      <node id="78">
        <label>kwin/autotests/integration/workspace_test.cpp</label>
        <link refid="workspace__test_8cpp"/>
      </node>
      <node id="79">
        <label>kwin/autotests/integration/x11_window_test.cpp</label>
        <link refid="x11__window__test_8cpp"/>
      </node>
      <node id="80">
        <label>kwin/autotests/integration/x11keyread.cpp</label>
        <link refid="x11keyread_8cpp"/>
      </node>
      <node id="81">
        <label>kwin/autotests/integration/xdgshellwindow_rules_test.cpp</label>
        <link refid="xdgshellwindow__rules__test_8cpp"/>
      </node>
      <node id="82">
        <label>kwin/autotests/integration/xdgshellwindow_test.cpp</label>
        <link refid="xdgshellwindow__test_8cpp"/>
      </node>
      <node id="83">
        <label>kwin/autotests/integration/xinerama_test.cpp</label>
        <link refid="xinerama__test_8cpp"/>
      </node>
      <node id="84">
        <label>kwin/autotests/integration/xwayland_input_test.cpp</label>
        <link refid="xwayland__input__test_8cpp"/>
      </node>
      <node id="85">
        <label>kwin/autotests/integration/xwayland_selections_test.cpp</label>
        <link refid="xwayland__selections__test_8cpp"/>
      </node>
      <node id="86">
        <label>kwin/autotests/integration/xwaylandserver_crash_test.cpp</label>
        <link refid="xwaylandserver__crash__test_8cpp"/>
      </node>
      <node id="87">
        <label>kwin/autotests/integration/xwaylandserver_restart_test.cpp</label>
        <link refid="xwaylandserver__restart__test_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_wayland_test_application" prot="public">KWin::WaylandTestApplication</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_text_input_manager_v3" prot="public">KWin::Test::TextInputManagerV3</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_text_input_v3" prot="public">KWin::Test::TextInputV3</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_layer_shell_v1" prot="public">KWin::Test::LayerShellV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_layer_surface_v1" prot="public">KWin::Test::LayerSurfaceV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_xdg_shell" prot="public">KWin::Test::XdgShell</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_xdg_surface" prot="public">KWin::Test::XdgSurface</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_xdg_toplevel" prot="public">KWin::Test::XdgToplevel</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_xdg_positioner" prot="public">KWin::Test::XdgPositioner</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_xdg_popup" prot="public">KWin::Test::XdgPopup</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_xdg_decoration_manager_v1" prot="public">KWin::Test::XdgDecorationManagerV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_xdg_toplevel_decoration_v1" prot="public">KWin::Test::XdgToplevelDecorationV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_idle_inhibit_manager_v1" prot="public">KWin::Test::IdleInhibitManagerV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_idle_inhibitor_v1" prot="public">KWin::Test::IdleInhibitorV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2" prot="public">KWin::Test::WaylandOutputConfigurationV2</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_wayland_output_management_v2" prot="public">KWin::Test::WaylandOutputManagementV2</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode" prot="public">KWin::Test::WaylandOutputDeviceV2Mode</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_wayland_output_device_v2" prot="public">KWin::Test::WaylandOutputDeviceV2</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_mock_input_method" prot="public">KWin::Test::MockInputMethod</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_fractional_scale_manager_v1" prot="public">KWin::Test::FractionalScaleManagerV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_fractional_scale_v1" prot="public">KWin::Test::FractionalScaleV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_screen_edge_manager_v1" prot="public">KWin::Test::ScreenEdgeManagerV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_auto_hide_screen_edge_v1" prot="public">KWin::Test::AutoHideScreenEdgeV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_cursor_shape_manager_v1" prot="public">KWin::Test::CursorShapeManagerV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_cursor_shape_device_v1" prot="public">KWin::Test::CursorShapeDeviceV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_fake_input" prot="public">KWin::Test::FakeInput</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_security_context_manager_v1" prot="public">KWin::Test::SecurityContextManagerV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_xdg_wm_dialog_v1" prot="public">KWin::Test::XdgWmDialogV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_xdg_dialog_v1" prot="public">KWin::Test::XdgDialogV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool" prot="public">KWin::Test::VirtualInputDeviceTabletTool</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_virtual_input_device" prot="public">KWin::Test::VirtualInputDevice</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_color_manager_v1" prot="public">KWin::Test::ColorManagerV1</innerclass>
    <innerclass refid="struct_k_win_1_1_test_1_1_connection" prot="public">KWin::Test::Connection</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_screencasting_stream_v1" prot="public">KWin::Test::ScreencastingStreamV1</innerclass>
    <innerclass refid="class_k_win_1_1_test_1_1_screencasting_v1" prot="public">KWin::Test::ScreencastingV1</innerclass>
    <innerclass refid="struct_k_win_1_1_test_1_1_output_info" prot="public">KWin::Test::OutputInfo</innerclass>
    <innernamespace refid="namespace_k_wayland">KWayland</innernamespace>
    <innernamespace refid="namespace_k_wayland_1_1_client">KWayland::Client</innernamespace>
    <innernamespace refid="namespace_qt_wayland">QtWayland</innernamespace>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespace_k_win_1_1_test">KWin::Test</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="kwin__wayland__test_8h_1a105fcd0c1d5eb52370ab30db8ad37c4c" prot="public" static="no">
        <name>WAYLANDTEST_MAIN</name>
        <param><defname>TestObject</defname></param>
        <initializer>    int <ref refid="copy_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(int argc, char *argv[])                                                                                                      \
    {                                                                                                                                     \
        setenv(&quot;QT_QPA_PLATFORM&quot;, &quot;wayland-org.kde.kwin.qpa&quot;, true);                                                                      \
        setenv(&quot;QT_QPA_PLATFORM_PLUGIN_PATH&quot;, QFileInfo(QString::fromLocal8Bit(argv[0])).absolutePath().toLocal8Bit().constData(), true); \
        setenv(&quot;KWIN_FORCE_OWN_QPA&quot;, &quot;1&quot;, true);                                                                                          \
        qunsetenv(&quot;KDE_FULL_SESSION&quot;);                                                                                                    \
        qunsetenv(&quot;KDE_SESSION_VERSION&quot;);                                                                                                 \
        qunsetenv(&quot;XDG_SESSION_DESKTOP&quot;);                                                                                                 \
        qunsetenv(&quot;XDG_CURRENT_DESKTOP&quot;);                                                                                                 \
        <ref refid="class_k_win_1_1_wayland_test_application" kindref="compound">KWin::WaylandTestApplication</ref> app(argc, argv);                                                                                     \
        app.setAttribute(Qt::AA_Use96Dpi, true);                                                                                          \
        TestObject tc;                                                                                                                    \
        return QTest::qExec(&amp;tc, argc, argv);                                                                                             \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/autotests/integration/kwin_wayland_test.h" line="1011" column="9" bodyfile="kwin/autotests/integration/kwin_wayland_test.h" bodystart="1011" bodyend="1025"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2015<sp/>Martin<sp/>Gräßlin<sp/>&lt;mgraesslin@kde.org&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>KWIN_WAYLAND_TEST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KWIN_WAYLAND_TEST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inputdevice_8h" kindref="compound">core/inputdevice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;main.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSignalSpy&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTest&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/surface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-color-management-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-cursor-shape-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-fake-input.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-fractional-scale-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-idle-inhibit-unstable-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-input-method-unstable-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-kde-output-device-v2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-kde-output-management-v2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-kde-screen-edge-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-security-context-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-text-input-unstable-v3.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-wlr-layer-shell-unstable-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-xdg-decoration-unstable-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-xdg-dialog-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-xdg-shell.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qwayland-zkde-screencast-unstable-v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="namespace_k_wayland" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_wayland" kindref="compound">KWayland</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42" refid="namespace_k_wayland_1_1_client" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_wayland_1_1_client" kindref="compound">Client</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AppMenuManager;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ConnectionThread;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Compositor;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EventQueue;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Output;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PlasmaShell;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PlasmaWindowManagement;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="input__capture__test_8cpp_1a7d3100a8c2962a690e0f48d4fe151e17a61cf8510205077b6f5491d38cd44c0f7" kindref="member">Pointer</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PointerConstraints;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Registry;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Seat;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ShadowManager;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ShmPool;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SubCompositor;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SubSurface;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Surface;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TextInputManager;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="namespace_qt_wayland" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_qt_wayland" kindref="compound">QtWayland</ref></highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">zwp_input_panel_surface_v1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">zwp_text_input_v3;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">zwp_text_input_manager_v3;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ScreencastingV1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WaylandServer;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Xwl</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Xwayland;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="namespace_k_win_1_1_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_test" kindref="compound">Test</ref></highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_virtual_input_device" kindref="compound">VirtualInputDevice</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool" kindref="compound">VirtualInputDeviceTabletTool</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_k_win_1_1_wayland_test_application" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_test_application_1adc301c9ddcada3436f9da9a385e8979d" kindref="member">WaylandTestApplication</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_application_1a447fc3895345c16829eb6dd221e03791" kindref="member">Application</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_test_application_1adc301c9ddcada3436f9da9a385e8979d" kindref="member">WaylandTestApplication</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_test_application_1ae50571013422e0d14f917f726c71999e" kindref="member">~WaylandTestApplication</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_k_win_1_1_wayland_test_application_1a9852b7bb9f6e7287ac4caef95c0a7115" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_test_application_1a9852b7bb9f6e7287ac4caef95c0a7115" kindref="member">setInputMethodServerToStart</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;inputMethodServer)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_inputMethodServerToStart<sp/>=<sp/>inputMethodServer;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device" kindref="compound">Test::VirtualInputDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_test_application_1a8db961256f7f90347445f7b593e29b41" kindref="member">virtualPointer</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device" kindref="compound">Test::VirtualInputDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_test_application_1ad21e0b25717e5610806df80b02058953" kindref="member">virtualKeyboard</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device" kindref="compound">Test::VirtualInputDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_test_application_1aabf2006477bd01ba4eaca7c1037a82b5" kindref="member">virtualTouch</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device" kindref="compound">Test::VirtualInputDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_test_application_1a9e6a1dd6119e3250941d86e48f061d75" kindref="member">virtualTabletPad</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device" kindref="compound">Test::VirtualInputDevice</ref><sp/>*<ref refid="class_k_win_1_1_wayland_test_application_1a54c39d2bb1de570a7f900cae9a726a47" kindref="member">virtualTablet</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool" kindref="compound">Test::VirtualInputDeviceTabletTool</ref><sp/>*<ref refid="class_k_win_1_1_wayland_test_application_1a712722ac69a5a04fda58f3f4ba0d9325" kindref="member">virtualTabletTool</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xwayland_interface" kindref="compound">XwaylandInterface</ref><sp/>*<ref refid="class_k_win_1_1_application_1a54025faea93f03b13bd7550fe639e4b1" kindref="member">xwayland</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_test_application_1a86686a404f7a38df5889eaec80024a23" kindref="member">performStartup</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finalizeStartup();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createVirtualInputDevices();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyVirtualInputDevices();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;WaylandServer&gt;<sp/>m_waylandServer;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Xwl::Xwayland&gt;<sp/>m_xwayland;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>m_inputMethodServerToStart;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::VirtualInputDevice&gt;<sp/>m_virtualPointer;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::VirtualInputDevice&gt;<sp/>m_virtualKeyboard;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::VirtualInputDevice&gt;<sp/>m_virtualTouch;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::VirtualInputDevice&gt;<sp/>m_virtualTabletPad;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::VirtualInputDevice&gt;<sp/>m_virtualTablet;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Test::VirtualInputDeviceTabletTool&gt;<sp/>m_virtualTabletTool;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Test</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a940eda63ada8e3685f938def5cf3edb1" kindref="member">ScreencastingV1</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MockInputMethod;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_k_win_1_1_test_1_1_text_input_manager_v3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_text_input_manager_v3" kindref="compound">TextInputManagerV3</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zwp_text_input_manager_v3</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146" refid="class_k_win_1_1_test_1_1_text_input_manager_v3_1aa3ea594b0eea62000192161684ecb014" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_text_input_manager_v3_1aa3ea594b0eea62000192161684ecb014" kindref="member">~TextInputManagerV3</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="147"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroy();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_k_win_1_1_test_1_1_text_input_v3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_text_input_v3" kindref="compound">TextInputV3</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zwp_text_input_v3</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156" refid="class_k_win_1_1_test_1_1_text_input_v3_1a299e3c0a39b2361b52f8825effd13b4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_text_input_v3_1a299e3c0a39b2361b52f8825effd13b4a" kindref="member">~TextInputV3</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="157"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroy();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="162" refid="class_k_win_1_1_test_1_1_text_input_v3_1adac71f5c1aaa175ca5f79bf3a730c22d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_text_input_v3_1adac71f5c1aaa175ca5f79bf3a730c22d" kindref="member">preeditString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor_begin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor_end);</highlight></codeline>
<codeline lineno="163" refid="class_k_win_1_1_test_1_1_text_input_v3_1a252265880e006682a9c80f7a1397029d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_text_input_v3_1a252265880e006682a9c80f7a1397029d" kindref="member">commitString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166" refid="class_k_win_1_1_test_1_1_text_input_v3_1aceb4444435e36ea6a6531f84915ee2a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_text_input_v3_1aceb4444435e36ea6a6531f84915ee2a1" kindref="member">zwp_text_input_v3_preedit_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/>int32_t<sp/>cursor_begin,<sp/>int32_t<sp/>cursor_end)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="167"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_test_1_1_text_input_v3_1adac71f5c1aaa175ca5f79bf3a730c22d" kindref="member">preeditString</ref>(text,<sp/>cursor_begin,<sp/>cursor_end);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170" refid="class_k_win_1_1_test_1_1_text_input_v3_1a26b20f8596116c68451859a1d4cf5e6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_text_input_v3_1a26b20f8596116c68451859a1d4cf5e6b" kindref="member">zwp_text_input_v3_commit_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="171"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_test_1_1_text_input_v3_1a252265880e006682a9c80f7a1397029d" kindref="member">commitString</ref>(text);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_k_win_1_1_test_1_1_layer_shell_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_layer_shell_v1" kindref="compound">LayerShellV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zwlr_layer_shell_v1</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_layer_shell_v1_1aa1fa112325ef6ff55a261022cd1e4174" kindref="member">~LayerShellV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_k_win_1_1_test_1_1_layer_surface_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_layer_surface_v1" kindref="compound">LayerSurfaceV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zwlr_layer_surface_v1</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_layer_surface_v1_1ae286c3499e7b673fa575ae8798915c89" kindref="member">~LayerSurfaceV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_layer_surface_v1_1a1ec0c76c689671c54400fcc05622d3c4" kindref="member">zwlr_layer_surface_v1_configure</ref>(uint32_t<sp/>serial,<sp/>uint32_t<sp/>width,<sp/>uint32_t<sp/>height)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_layer_surface_v1_1a2b3671299d141390daec2bdfb167116b" kindref="member">zwlr_layer_surface_v1_closed</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="194" refid="class_k_win_1_1_test_1_1_layer_surface_v1_1a079e6b170d672684e76a28ad159dfc8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_layer_surface_v1_1a079e6b170d672684e76a28ad159dfc8d" kindref="member">closeRequested</ref>();</highlight></codeline>
<codeline lineno="195" refid="class_k_win_1_1_test_1_1_layer_surface_v1_1ab3ac340b7d5e37b0579b36a1ac8f5d8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_layer_surface_v1_1ab3ac340b7d5e37b0579b36a1ac8f5d8a" kindref="member">configureRequested</ref>(quint32<sp/>serial,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_k_win_1_1_test_1_1_xdg_shell" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_xdg_shell" kindref="compound">XdgShell</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::xdg_wm_base</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_shell_1aafeedb958b02d3400a17b717401cbd01" kindref="member">~XdgShell</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205" refid="class_k_win_1_1_test_1_1_xdg_shell_1ab93c38d45dc85357c5d27a6765e77678" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_shell_1ab93c38d45dc85357c5d27a6765e77678" kindref="member">xdg_wm_base_ping</ref>(uint32_t<sp/>serial)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="206"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pong(serial);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="class_k_win_1_1_test_1_1_xdg_surface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_xdg_surface_1af569589a35035310a64136478cece563" kindref="member">XdgSurface</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::xdg_surface</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_surface_1af569589a35035310a64136478cece563" kindref="member">XdgSurface</ref>(<ref refid="class_k_win_1_1_test_1_1_xdg_shell" kindref="compound">XdgShell</ref><sp/>*shell,<sp/>KWayland::Client::Surface<sp/>*<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a596671e7ea622b7214a20614049c1254" kindref="member">surface</ref>,<sp/>QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7a9b51c1638e077c4e996fb53ce9f5da" kindref="member">~XdgSurface</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Surface<sp/>*<ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a596671e7ea622b7214a20614049c1254" kindref="member">surface</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="225" refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a7acfa65721c5be4f16fc45886605ddd2" kindref="member">configureRequested</ref>(quint32<sp/>serial);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_surface_1a33a670f5f5426f5556ba9ba2a6cd9ab9" kindref="member">xdg_surface_configure</ref>(uint32_t<sp/>serial)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Surface<sp/>*m_surface;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_k_win_1_1_test_1_1_xdg_toplevel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1aee9525eaa992510edf8b3cd0ba2611cb" kindref="member">XdgToplevel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::xdg_toplevel</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243" refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7440bb47e78c5081ce4912cf93dfb794" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7440bb47e78c5081ce4912cf93dfb794" kindref="member">State</ref><sp/>{</highlight></codeline>
<codeline lineno="244" refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7440bb47e78c5081ce4912cf93dfb794a49d903a5c02560cf79bf6b516cc89457" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7440bb47e78c5081ce4912cf93dfb794a49d903a5c02560cf79bf6b516cc89457" kindref="member">Maximized</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="245" refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7440bb47e78c5081ce4912cf93dfb794a0829ea6734059d66e6bf87096b215dc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7440bb47e78c5081ce4912cf93dfb794a0829ea6734059d66e6bf87096b215dc1" kindref="member">Fullscreen</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="246" refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7440bb47e78c5081ce4912cf93dfb794a40ad90bcd481a4e3ea17531b6d1c01e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7440bb47e78c5081ce4912cf93dfb794a40ad90bcd481a4e3ea17531b6d1c01e7" kindref="member">Resizing</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="247" refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7440bb47e78c5081ce4912cf93dfb794acb456215c3333db0551bd0788bc258c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7440bb47e78c5081ce4912cf93dfb794acb456215c3333db0551bd0788bc258c7" kindref="member">Activated</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_DECLARE_FLAGS(States,<sp/><ref refid="x11keyread_8cpp_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1aee9525eaa992510edf8b3cd0ba2611cb" kindref="member">XdgToplevel</ref>(<ref refid="class_k_win_1_1_test_1_1_xdg_surface" kindref="compound">XdgSurface</ref><sp/>*surface,<sp/>QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a8838068f2afbeb36d3975f69cdc1bec7" kindref="member">~XdgToplevel</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_surface" kindref="compound">XdgSurface</ref><sp/>*<ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a0904d25789c7ee286cb1a944edf04cb0" kindref="member">xdgSurface</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="257" refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1acd9bde0a055bcdbb4623d0d97525a0c9" kindref="member">configureRequested</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/>KWin::Test::XdgToplevel::States<sp/>states);</highlight></codeline>
<codeline lineno="258" refid="class_k_win_1_1_test_1_1_xdg_toplevel_1aca9814388f7a96f8ce6eaa3098c3dd18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1aca9814388f7a96f8ce6eaa3098c3dd18" kindref="member">closeRequested</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a9a2cf7dbf7458f0c9d78c727fe80a8c9" kindref="member">xdg_toplevel_configure</ref>(int32_t<sp/>width,<sp/>int32_t<sp/>height,<sp/>wl_array<sp/>*states)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_1a7e25445a3aaef2f71970950d65325390" kindref="member">xdg_toplevel_close</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;XdgSurface&gt;<sp/>m_xdgSurface;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="class_k_win_1_1_test_1_1_xdg_positioner" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_xdg_positioner_1a36fb4b780ddcbe1b1a41be9bb6240cd1" kindref="member">XdgPositioner</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::xdg_positioner</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_positioner_1a36fb4b780ddcbe1b1a41be9bb6240cd1" kindref="member">XdgPositioner</ref>(<ref refid="class_k_win_1_1_test_1_1_xdg_shell" kindref="compound">XdgShell</ref><sp/>*shell);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_positioner_1af759960e685ac6f4565c9ea8d347ba56" kindref="member">~XdgPositioner</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="class_k_win_1_1_test_1_1_xdg_popup" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_xdg_popup_1a0c25b2e500fe6327ebbe91e02661a2bc" kindref="member">XdgPopup</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::xdg_popup</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_popup_1a0c25b2e500fe6327ebbe91e02661a2bc" kindref="member">XdgPopup</ref>(<ref refid="class_k_win_1_1_test_1_1_xdg_surface" kindref="compound">XdgSurface</ref><sp/>*surface,<sp/><ref refid="class_k_win_1_1_test_1_1_xdg_surface" kindref="compound">XdgSurface</ref><sp/>*parentSurface,<sp/><ref refid="class_k_win_1_1_test_1_1_xdg_positioner" kindref="compound">XdgPositioner</ref><sp/>*positioner,<sp/>QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_popup_1a1eebea854b0315fd166ca8d054b5f877" kindref="member">~XdgPopup</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_surface" kindref="compound">XdgSurface</ref><sp/>*<ref refid="class_k_win_1_1_test_1_1_xdg_popup_1abd6fe9850f827bdc5115d3e55f17eaa7" kindref="member">xdgSurface</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="293" refid="class_k_win_1_1_test_1_1_xdg_popup_1a49692131e1f07345dbb7242c5f9308ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_popup_1a49692131e1f07345dbb7242c5f9308ae" kindref="member">configureRequested</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect);</highlight></codeline>
<codeline lineno="294" refid="class_k_win_1_1_test_1_1_xdg_popup_1a2b766a2e5a276eeb692320d679a9c522" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_popup_1a2b766a2e5a276eeb692320d679a9c522" kindref="member">doneReceived</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_popup_1aae7701951e584dda5cc4fb43eff20d5a" kindref="member">xdg_popup_configure</ref>(int32_t<sp/>x,<sp/>int32_t<sp/>y,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>height)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_popup_1ade40724288ba7af45a4e8b2e3f800abe" kindref="member">xdg_popup_popup_done</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;XdgSurface&gt;<sp/>m_xdgSurface;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="class_k_win_1_1_test_1_1_xdg_decoration_manager_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_xdg_decoration_manager_v1" kindref="compound">XdgDecorationManagerV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zxdg_decoration_manager_v1</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_decoration_manager_v1_1afaef527cda392a6082f3568d97b36647" kindref="member">~XdgDecorationManagerV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">};</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="class_k_win_1_1_test_1_1_xdg_toplevel_decoration_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_decoration_v1_1a6ea552b49b4a99388da4862ee85d3a9f" kindref="member">XdgToplevelDecorationV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zxdg_toplevel_decoration_v1</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_decoration_v1_1a6ea552b49b4a99388da4862ee85d3a9f" kindref="member">XdgToplevelDecorationV1</ref>(<ref refid="class_k_win_1_1_test_1_1_xdg_decoration_manager_v1" kindref="compound">XdgDecorationManagerV1</ref><sp/>*manager,<sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel" kindref="compound">XdgToplevel</ref><sp/>*toplevel,<sp/>QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_decoration_v1_1ab51d32a243583e96536ea20c1f5d0e12" kindref="member">~XdgToplevelDecorationV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="319" refid="class_k_win_1_1_test_1_1_xdg_toplevel_decoration_v1_1a389a2bf556a1e31a46eeca8afb482619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_decoration_v1_1a389a2bf556a1e31a46eeca8afb482619" kindref="member">configureRequested</ref>(QtWayland::zxdg_toplevel_decoration_v1::mode<sp/>mode);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel_decoration_v1_1aad8195a3f7a4d218cbb4534bb5f4fc54" kindref="member">zxdg_toplevel_decoration_v1_configure</ref>(uint32_t<sp/>mode)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="class_k_win_1_1_test_1_1_idle_inhibit_manager_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_idle_inhibit_manager_v1" kindref="compound">IdleInhibitManagerV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zwp_idle_inhibit_manager_v1</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_idle_inhibit_manager_v1_1aa4264d3ede5c2387d4783bca8e60bc95" kindref="member">~IdleInhibitManagerV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="class_k_win_1_1_test_1_1_idle_inhibitor_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_idle_inhibitor_v1_1acc40e355b4deb0ffb4e0d149355760d2" kindref="member">IdleInhibitorV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zwp_idle_inhibitor_v1</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_idle_inhibitor_v1_1acc40e355b4deb0ffb4e0d149355760d2" kindref="member">IdleInhibitorV1</ref>(<ref refid="class_k_win_1_1_test_1_1_idle_inhibit_manager_v1" kindref="compound">IdleInhibitManagerV1</ref><sp/>*manager,<sp/>KWayland::Client::Surface<sp/>*surface);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_idle_inhibitor_v1_1a016578d7cae8849b380075292d6c7a37" kindref="member">~IdleInhibitorV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">};</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2_1a25a0092bff291b427341e10f6202f67a" kindref="member">WaylandOutputConfigurationV2</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::kde_output_configuration_v2</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2_1a25a0092bff291b427341e10f6202f67a" kindref="member">WaylandOutputConfigurationV2</ref>(struct<sp/>::kde_output_configuration_v2<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="345" refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2_1a725d11f269f830ec1052558498209ca0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2_1a725d11f269f830ec1052558498209ca0" kindref="member">applied</ref>();</highlight></codeline>
<codeline lineno="346" refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2_1aea8f426659b381552619a3ddd0984b57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2_1aea8f426659b381552619a3ddd0984b57" kindref="member">failed</ref>();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2_1a6c45aaecfca1e8a699d65fa975e54d18" kindref="member">kde_output_configuration_v2_applied</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2_1a4757dda4aeb0636f796996a48e54b6c2" kindref="member">kde_output_configuration_v2_failed</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="class_k_win_1_1_test_1_1_wayland_output_management_v2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_wayland_output_management_v2_1a340c14cb2b250d460640b324974930f9" kindref="member">WaylandOutputManagementV2</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::kde_output_management_v2</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_management_v2_1a340c14cb2b250d460640b324974930f9" kindref="member">WaylandOutputManagementV2</ref>(struct<sp/>::wl_registry<sp/>*registry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_configuration_v2" kindref="compound">WaylandOutputConfigurationV2</ref><sp/>*<ref refid="class_k_win_1_1_test_1_1_wayland_output_management_v2_1af9628108a62dd2076803864e31685f58" kindref="member">createConfiguration</ref>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal">};</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a360b90b44dd03989f66ab8f06df64488" kindref="member">WaylandOutputDeviceV2Mode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::kde_output_device_mode_v2</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a360b90b44dd03989f66ab8f06df64488" kindref="member">WaylandOutputDeviceV2Mode</ref>(struct<sp/>::kde_output_device_mode_v2<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a082acf30848436a32a7714edc52953e2" kindref="member">~WaylandOutputDeviceV2Mode</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1ae4a5b9d9909afcc5915837dd000fa5f8" kindref="member">refreshRate</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a072b1875861a070e5c5339bc89b85671" kindref="member">size</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a7527760d1d278551b6e3bb55232246f8" kindref="member">preferred</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a536fa51e79adabd3e16fa10335e98369" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a360b90b44dd03989f66ab8f06df64488" kindref="member">WaylandOutputDeviceV2Mode</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a360b90b44dd03989f66ab8f06df64488" kindref="member">WaylandOutputDeviceV2Mode</ref><sp/>*<ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1aa2ca8f0a5f7c26b5d345c3022c96a7f9" kindref="member">get</ref>(struct<sp/>::kde_output_device_mode_v2<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="379" refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a7e764cde35d341984c24543c816a36cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a7e764cde35d341984c24543c816a36cf" kindref="member">removed</ref>();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a9331407c299bce4c493eadd11ea9371c" kindref="member">kde_output_device_mode_v2_size</ref>(int32_t<sp/>width,<sp/>int32_t<sp/>height)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a6497cdf984fa0e576958d0290c05918c" kindref="member">kde_output_device_mode_v2_refresh</ref>(int32_t<sp/>refresh)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a4fba94fd7e48608d05b0a6b3451f2fbd" kindref="member">kde_output_device_mode_v2_preferred</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode_1a7a2bdf8cba3b883344121d6f3380ec04" kindref="member">kde_output_device_mode_v2_removed</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_refreshRate<sp/>=<sp/>60000;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>m_size;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_preferred<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="class_k_win_1_1_test_1_1_wayland_output_device_v2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1aa122cc8307e5e0aa472f4f532185ef2c" kindref="member">WaylandOutputDeviceV2</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::kde_output_device_v2</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1aa122cc8307e5e0aa472f4f532185ef2c" kindref="member">WaylandOutputDeviceV2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a9665b961e4d2d774b2b77cb9c763827e" kindref="member">~WaylandOutputDeviceV2</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a4411b3c40f0ea6be116cffa585368179" kindref="member">edid</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae31d0b7b99f22ae28de2294526ca60f1" kindref="member">enabled</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a627cad3540e95622d83afb30553e8498" kindref="member">id</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a910c1ecd526fa8666f1a3ce54d30bf90" kindref="member">name</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a44b48e185abab9248ac89513df82236c" kindref="member">model</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a421702495cf785798034dfbe9cc88070" kindref="member">manufacturer</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a14e637a859ba76de441731146b8e1b3c" kindref="member">scale</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a4012ff6bf621015e05e169a5e33db43b" kindref="member">globalPosition</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1abedcba62d498e7071a66f23642c06052" kindref="member">pixelSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1af63efbf08909c8f61bee56f7d24558da" kindref="member">refreshRate</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1af380c78ed8fcb357a23dfdecbb06e72a" kindref="member">vrrPolicy</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a6f0a3dcc63c7d11ad659d908f4aa55d8" kindref="member">overscan</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a8719df6653b923b7a61b2b8dce3f6167" kindref="member">capabilities</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae44d6175c61b5d32982535abe3e9a7e7" kindref="member">rgbRange</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a8ae7f1adc14b41b810503f3532222acf" kindref="member">modeId</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="419" refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a2c96c324b9e4a5c9feff55a8bd668b08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a2c96c324b9e4a5c9feff55a8bd668b08" kindref="member">enabledChanged</ref>();</highlight></codeline>
<codeline lineno="420" refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a5720da06dfe9cd7e1ceb2e057c12b42d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a5720da06dfe9cd7e1ceb2e057c12b42d" kindref="member">done</ref>();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a48befc1af864f12484ab95ad270c6ed7" kindref="member">kde_output_device_v2_geometry</ref>(int32_t<sp/>x,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>y,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>physical_width,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>physical_height,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>subpixel,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;make,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a44b48e185abab9248ac89513df82236c" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>transform)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae8feb35183eb18973ee6c31d6f54ebf2" kindref="member">kde_output_device_v2_current_mode</ref>(struct<sp/>::kde_output_device_mode_v2<sp/>*mode)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a4a5d1be79c4cae7085a630a2fc7ec2c8" kindref="member">kde_output_device_v2_mode</ref>(struct<sp/>::kde_output_device_mode_v2<sp/>*mode)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae63860a0c9bbb5d200c54825fb43165d" kindref="member">kde_output_device_v2_done</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a36ab6295620505bfe45dcb654479b5f0" kindref="member">kde_output_device_v2_scale</ref>(wl_fixed_t<sp/>factor)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a879d274b3415bdc686f8a5ec501cc12d" kindref="member">kde_output_device_v2_edid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;raw)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a7cf0e47936d450b512992f60e23f493d" kindref="member">kde_output_device_v2_enabled</ref>(int32_t<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ae31d0b7b99f22ae28de2294526ca60f1" kindref="member">enabled</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a08ec8bb5dc0b8fc7833af2c2d76ddd2a" kindref="member">kde_output_device_v2_uuid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;uuid)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ad4172622475d72ad8033427f226e8bd4" kindref="member">kde_output_device_v2_serial_number</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;serialNumber)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a289a93797ec9174612eeb208b4013f38" kindref="member">kde_output_device_v2_eisa_id</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;eisaId)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a388126afa9a85a4a012401eb1bf32a75" kindref="member">kde_output_device_v2_capabilities</ref>(uint32_t<sp/>flags)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a62e828ae6886ae30376324892977aa64" kindref="member">kde_output_device_v2_overscan</ref>(uint32_t<sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a6f0a3dcc63c7d11ad659d908f4aa55d8" kindref="member">overscan</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ada2f8c806c4f6ad1614cd310c84c4b18" kindref="member">kde_output_device_v2_vrr_policy</ref>(uint32_t<sp/>vrr_policy)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1ac1409fcb833cf2a23e362e59956b924a" kindref="member">kde_output_device_v2_rgb_range</ref>(uint32_t<sp/>rgb_range)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>modeName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode" kindref="compound">WaylandOutputDeviceV2Mode</ref><sp/>*m)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode" kindref="compound">WaylandOutputDeviceV2Mode</ref><sp/>*deviceModeFromId(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_1a8ae7f1adc14b41b810503f3532222acf" kindref="member">modeId</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_device_v2_mode" kindref="compound">WaylandOutputDeviceV2Mode</ref><sp/>*m_mode;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;WaylandOutputDeviceV2Mode<sp/>*&gt;<sp/>m_modes;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_id;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/>m_pos;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>m_physicalSize;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>m_subpixel;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>m_manufacturer;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>m_model;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>m_transform;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>m_factor;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>m_edid;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>m_enabled;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>m_uuid;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>m_serialNumber;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>m_eisaId;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_flags;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_overscan;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_vrr_policy;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_rgbRange;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">};</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="class_k_win_1_1_test_1_1_mock_input_method" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1adb1c33c7ed9152edd03ddb9024d689d5" kindref="member">MockInputMethod</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/>QtWayland::zwp_input_method_v1</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="475" refid="class_k_win_1_1_test_1_1_mock_input_method_1a619415e949a428ef118af4bea55fa7d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a619415e949a428ef118af4bea55fa7d7" kindref="member">Mode</ref><sp/>{</highlight></codeline>
<codeline lineno="476" refid="class_k_win_1_1_test_1_1_mock_input_method_1a619415e949a428ef118af4bea55fa7d7adaa4ad87b52566898a9a6df85657c082" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a619415e949a428ef118af4bea55fa7d7adaa4ad87b52566898a9a6df85657c082" kindref="member">TopLevel</ref>,</highlight></codeline>
<codeline lineno="477" refid="class_k_win_1_1_test_1_1_mock_input_method_1a619415e949a428ef118af4bea55fa7d7a6b551379c3c0b59326abdaf3b4395bd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a619415e949a428ef118af4bea55fa7d7a6b551379c3c0b59326abdaf3b4395bd3" kindref="member">Overlay</ref>,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1adb1c33c7ed9152edd03ddb9024d689d5" kindref="member">MockInputMethod</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>wl_registry<sp/>*registry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a94c2fdfd8e23144ff074bd284946795f" kindref="member">~MockInputMethod</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="class_k_win_1_1_test_1_1_mock_input_method_1a11e24a00f958e06b8ad5e51934bea5bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Surface<sp/>*<ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a11e24a00f958e06b8ad5e51934bea5bd" kindref="member">inputPanelSurface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="484"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_inputSurface.get();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487" refid="class_k_win_1_1_test_1_1_mock_input_method_1a65c83c45b40f087556bb2c2d30800563" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*<ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a65c83c45b40f087556bb2c2d30800563" kindref="member">context</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="488"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_context;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a58bdf66bf3e7508ae7e2602d0f6e88e7" kindref="member">setMode</ref>(<ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a619415e949a428ef118af4bea55fa7d7" kindref="member">Mode</ref><sp/>mode);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="495" refid="class_k_win_1_1_test_1_1_mock_input_method_1a8b1aedbad85f1bc38ce7613e190bcc0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a8b1aedbad85f1bc38ce7613e190bcc0d" kindref="member">activate</ref>();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1aea7d760c3e501456a1ac0bac75699be1" kindref="member">zwp_input_method_v1_activate</ref>(struct<sp/>::zwp_input_method_context_v1<sp/>*<ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a65c83c45b40f087556bb2c2d30800563" kindref="member">context</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a1648de3d8e737a91a8a4f1be877cbcf4" kindref="member">zwp_input_method_v1_deactivate</ref>(struct<sp/>::zwp_input_method_context_v1<sp/>*<ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a65c83c45b40f087556bb2c2d30800563" kindref="member">context</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>m_inputSurface;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;QtWayland::zwp_input_panel_surface_v1&gt;<sp/>m_inputMethodSurface;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/>::zwp_input_method_context_v1<sp/>*m_context<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a619415e949a428ef118af4bea55fa7d7" kindref="member">Mode</ref><sp/>m_mode<sp/>=<sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a619415e949a428ef118af4bea55fa7d7adaa4ad87b52566898a9a6df85657c082" kindref="member">Mode::TopLevel</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">};</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="class_k_win_1_1_test_1_1_fractional_scale_manager_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_fractional_scale_manager_v1" kindref="compound">FractionalScaleManagerV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::wp_fractional_scale_manager_v1</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_fractional_scale_manager_v1_1a3e91994904ba51af6ff8ca3b17c094cc" kindref="member">~FractionalScaleManagerV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">};</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="class_k_win_1_1_test_1_1_fractional_scale_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_fractional_scale_v1" kindref="compound">FractionalScaleV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::wp_fractional_scale_v1</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_fractional_scale_v1_1a6c8875cc1889e667c6a9f38b965b277b" kindref="member">~FractionalScaleV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_fractional_scale_v1_1a37f11ea3408fb5116faf77eda6ef113b" kindref="member">preferredScale</ref>();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_fractional_scale_v1_1acacb45c38490e5a9a99fda7e3c443500" kindref="member">wp_fractional_scale_v1_preferred_scale</ref>(uint32_t<sp/>scale)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="526" refid="class_k_win_1_1_test_1_1_fractional_scale_v1_1a7161437a6eebe192be79678512db413d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_fractional_scale_v1_1a7161437a6eebe192be79678512db413d" kindref="member">preferredScaleChanged</ref>();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>m_preferredScale<sp/>=<sp/>120;</highlight></codeline>
<codeline lineno="530"><highlight class="normal">};</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="class_k_win_1_1_test_1_1_screen_edge_manager_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_screen_edge_manager_v1" kindref="compound">ScreenEdgeManagerV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::kde_screen_edge_manager_v1</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_screen_edge_manager_v1_1ac2678fe440e1de8ef375becdca8a2f69" kindref="member">~ScreenEdgeManagerV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">};</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="class_k_win_1_1_test_1_1_auto_hide_screen_edge_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_auto_hide_screen_edge_v1_1a65f44ffeaa5e8d92374bdf5406d376fd" kindref="member">AutoHideScreenEdgeV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::kde_auto_hide_screen_edge_v1</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_auto_hide_screen_edge_v1_1a65f44ffeaa5e8d92374bdf5406d376fd" kindref="member">AutoHideScreenEdgeV1</ref>(<ref refid="class_k_win_1_1_test_1_1_screen_edge_manager_v1" kindref="compound">ScreenEdgeManagerV1</ref><sp/>*manager,<sp/>KWayland::Client::Surface<sp/>*surface,<sp/>uint32_t<sp/>border);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_auto_hide_screen_edge_v1_1a603ee04ae86bfcc15ae2b575ad788c2a" kindref="member">~AutoHideScreenEdgeV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal">};</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="class_k_win_1_1_test_1_1_cursor_shape_manager_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_cursor_shape_manager_v1" kindref="compound">CursorShapeManagerV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::wp_cursor_shape_manager_v1</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_cursor_shape_manager_v1_1aa0849c87a70b9606a99ac7d3d301077c" kindref="member">~CursorShapeManagerV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">};</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="class_k_win_1_1_test_1_1_cursor_shape_device_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_cursor_shape_device_v1_1ae7282f1a243b9796af804beed3d3ff7e" kindref="member">CursorShapeDeviceV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::wp_cursor_shape_device_v1</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_cursor_shape_device_v1_1ae7282f1a243b9796af804beed3d3ff7e" kindref="member">CursorShapeDeviceV1</ref>(<ref refid="class_k_win_1_1_test_1_1_cursor_shape_manager_v1" kindref="compound">CursorShapeManagerV1</ref><sp/>*manager,<sp/>KWayland::Client::Pointer<sp/>*pointer);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_cursor_shape_device_v1_1a4c70b5220980f5e238d8f346a77e67db" kindref="member">~CursorShapeDeviceV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal">};</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="class_k_win_1_1_test_1_1_fake_input" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_fake_input" kindref="compound">FakeInput</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::org_kde_kwin_fake_input</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_fake_input_1aa86e34b8d0736ec23b9f83d99e79bf0b" kindref="member">~FakeInput</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal">};</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="class_k_win_1_1_test_1_1_security_context_manager_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_security_context_manager_v1" kindref="compound">SecurityContextManagerV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::wp_security_context_manager_v1</highlight></codeline>
<codeline lineno="569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_security_context_manager_v1_1ac96a3878e2fe84637fb720bfbea80dc7" kindref="member">~SecurityContextManagerV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">};</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="class_k_win_1_1_test_1_1_xdg_wm_dialog_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_xdg_wm_dialog_v1" kindref="compound">XdgWmDialogV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::xdg_wm_dialog_v1</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_wm_dialog_v1_1a3ffd28395565624f541378f364ed3c9b" kindref="member">~XdgWmDialogV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">};</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="class_k_win_1_1_test_1_1_xdg_dialog_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_xdg_dialog_v1_1a303e47d32a2be441abfa07a7720b244b" kindref="member">XdgDialogV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::xdg_dialog_v1</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a471db28a9d39b400cbfb1d62d8fe1316" kindref="member">XdgDialogV1</ref>(<ref refid="class_k_win_1_1_test_1_1_xdg_wm_dialog_v1" kindref="compound">XdgWmDialogV1</ref><sp/>*wm,<sp/><ref refid="class_k_win_1_1_test_1_1_xdg_toplevel" kindref="compound">XdgToplevel</ref><sp/>*toplevel);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_dialog_v1_1a3bf63667261682dcafe6232ced2d6537" kindref="member">~XdgDialogV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal">};</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536" kindref="member">AdditionalWaylandInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="588" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a25c40c519686f155291de96c60796f70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a25c40c519686f155291de96c60796f70" kindref="member">Seat</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="589" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536abf1253b71483a68e9dd4dec785fabe65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536abf1253b71483a68e9dd4dec785fabe65" kindref="member">PlasmaShell</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="590" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536afa5c5ed070e7fc241a0421ef4bcb5fdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536afa5c5ed070e7fc241a0421ef4bcb5fdd" kindref="member">WindowManagement</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,</highlight></codeline>
<codeline lineno="591" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a0b3852f0d5dfd229d7157b15e9bef0e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a0b3852f0d5dfd229d7157b15e9bef0e3" kindref="member">PointerConstraints</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,</highlight></codeline>
<codeline lineno="592" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a3ac80213e556032ec5ba55b6db6181f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a3ac80213e556032ec5ba55b6db6181f2" kindref="member">IdleInhibitV1</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,</highlight></codeline>
<codeline lineno="593" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536af5e7a406a01d3f9470a02c5c110b422d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536af5e7a406a01d3f9470a02c5c110b422d" kindref="member">AppMenu</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6,</highlight></codeline>
<codeline lineno="594" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536ae24bd328d819330778eb44ea54915b6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536ae24bd328d819330778eb44ea54915b6b" kindref="member">ShadowManager</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>7,</highlight></codeline>
<codeline lineno="595" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536aa3c659ec106f82ef9eb08668a1094ae3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536aa3c659ec106f82ef9eb08668a1094ae3" kindref="member">XdgDecorationV1</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>8,</highlight></codeline>
<codeline lineno="596" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a357f08e3548f22d19d4864a66ebef074" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a357f08e3548f22d19d4864a66ebef074" kindref="member">OutputManagementV2</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>9,</highlight></codeline>
<codeline lineno="597" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a674d5a804927d2b257be26d8376ed267" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a674d5a804927d2b257be26d8376ed267" kindref="member">TextInputManagerV2</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>10,</highlight></codeline>
<codeline lineno="598" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a0119a2852474a1f2e7c9fcdca19cf5f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a0119a2852474a1f2e7c9fcdca19cf5f1" kindref="member">InputMethodV1</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>11,</highlight></codeline>
<codeline lineno="599" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a6b59204a4c30032f5fb59cb7bfe01965" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_layer_shell_v1" kindref="compound">LayerShellV1</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>12,</highlight></codeline>
<codeline lineno="600" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a3c201ab228c4a5b71be97b5dae4dc617" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_text_input_manager_v3" kindref="compound">TextInputManagerV3</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>13,</highlight></codeline>
<codeline lineno="601" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536ae2e0547db7a3b8fe0b3d2fea900e8f06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536ae2e0547db7a3b8fe0b3d2fea900e8f06" kindref="member">OutputDeviceV2</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>14,</highlight></codeline>
<codeline lineno="602" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a8d8f0277f1fc7f78144e54bae1b556da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_fractional_scale_manager_v1" kindref="compound">FractionalScaleManagerV1</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>15,</highlight></codeline>
<codeline lineno="603" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a940eda63ada8e3685f938def5cf3edb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_v1" kindref="compound">ScreencastingV1</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>16,</highlight></codeline>
<codeline lineno="604" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a1ad3937ae706ae33c6179f9e466383fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a1ad3937ae706ae33c6179f9e466383fc" kindref="member">ScreenEdgeV1</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>17,</highlight></codeline>
<codeline lineno="605" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536ab1cb0ede2f09d5c94363a308f35616bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536ab1cb0ede2f09d5c94363a308f35616bf" kindref="member">CursorShapeV1</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>18,</highlight></codeline>
<codeline lineno="606" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a7dd3c03064c2ad624718288dfce79e94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_fake_input" kindref="compound">FakeInput</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>19,</highlight></codeline>
<codeline lineno="607" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a358f919bdc0fb0ee655249ff95254012" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_security_context_manager_v1" kindref="compound">SecurityContextManagerV1</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20,</highlight></codeline>
<codeline lineno="608" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a471db28a9d39b400cbfb1d62d8fe1316" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_dialog_v1" kindref="compound">XdgDialogV1</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>21,</highlight></codeline>
<codeline lineno="609" refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a4e057fcfe1b74836d9ae00f4cc3b3e04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536a4e057fcfe1b74836d9ae00f4cc3b3e04" kindref="member">ColorManagement</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>22,</highlight></codeline>
<codeline lineno="610"><highlight class="normal">};</highlight></codeline>
<codeline lineno="611"><highlight class="normal">Q_DECLARE_FLAGS(AdditionalWaylandInterfaces,<sp/><ref refid="namespace_k_win_1_1_test_1a9af6a2efb4515dd7c977b9cf2d0b2536" kindref="member">AdditionalWaylandInterface</ref>)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool" refkind="compound"><highlight class="normal">class<sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1ac54c2a834f0bcf34e4298588afb068d0" kindref="member">VirtualInputDeviceTabletTool</ref><sp/>:<sp/>public<sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1a4e2a3629348b17e570aa5afb398635f4" kindref="member">InputDeviceTabletTool</ref></highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1ac54c2a834f0bcf34e4298588afb068d0" kindref="member">VirtualInputDeviceTabletTool</ref>(QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1a88f8d371f92ca50dc724e354342cbf4f" kindref="member">setSerialId</ref>(quint64<sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1aac6748de28e00945d18f74c8be5a6d3c" kindref="member">serialId</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1a1679f3648046ed61f047517e8380f4f9" kindref="member">setUniqueId</ref>(quint64<sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1a2bc2ac7ea4acee4d2699e4322195d4cf" kindref="member">uniqueId</ref>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1ab6f28dd9adea4398bcd236785d1ce7e2" kindref="member">setType</ref>(<ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77e" kindref="member">Type</ref><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1ae8748e54a22e19483b3d5143c186296f" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1a48a4f4d392597445a5d04390bc0fe370" kindref="member">setCapabilities</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;Capability&gt;<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1a441c16249c5cadbc15d69b07542735fb" kindref="member">capabilities</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>quint64<sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1aac6748de28e00945d18f74c8be5a6d3c" kindref="member">serialId</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>quint64<sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1a2bc2ac7ea4acee4d2699e4322195d4cf" kindref="member">uniqueId</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77e" kindref="member">Type</ref><sp/><ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">type</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;Capability&gt;<sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_tablet_tool_1a441c16249c5cadbc15d69b07542735fb" kindref="member">capabilities</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>quint64<sp/>m_serialId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>quint64<sp/>m_uniqueId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77e" kindref="member">Type</ref><sp/>m_type<sp/>=<sp/><ref refid="class_k_win_1_1_input_device_tablet_tool_1adc0cf396bee4488bddb8c152be87b77ea06c2060175060ae5c3b5124ce012708f" kindref="member">Type::Pen</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;Capability&gt;<sp/>m_capabilities;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">};</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="class_k_win_1_1_test_1_1_virtual_input_device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a50a608d9f666f55a0b4387185a0dc4a6" kindref="member">VirtualInputDevice</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_input_device_1aa28bcff91a76e7c2b405dc6cc895cde6" kindref="member">InputDevice</ref></highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a50a608d9f666f55a0b4387185a0dc4a6" kindref="member">VirtualInputDevice</ref>(QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a386d951316d4ee472af7e9c195471f66" kindref="member">setPointer</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a25a5497e734e890c1c6139474ddd4721" kindref="member">setKeyboard</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1abf97a37fb11ede51f256cc6108006a9c" kindref="member">setTouch</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a3e48029ad3db3d17922c8d9214f65c5b" kindref="member">setLidSwitch</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a1d51e9e0444a37e228a534db57137fba" kindref="member">setTabletPad</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1aa84654073d8c42c02e4c7193dfb57a66" kindref="member">setTabletTool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a442992c660ab726f6f9dcf32d0838d15" kindref="member">setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a6f3748cc42d399021a43d34670740cb7" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a9aff4e09165f4b3c3985dfa0a4468abd" kindref="member">setGroup</ref>(uintptr_t<sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a4f4d267885abb3156cf933885270fcb7" kindref="member">group</ref>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a6f3748cc42d399021a43d34670740cb7" kindref="member">name</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a4f4d267885abb3156cf933885270fcb7" kindref="member">group</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1ac13462f41e0738d1454ef821bec45a5b" kindref="member">isEnabled</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1aba2f721efc74dffefc32b251eebb4a23" kindref="member">setEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a665d98da8138dfcb06c27c4cca5913c6" kindref="member">isKeyboard</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a66ff3b8df5f1ce8b418135093471ce60" kindref="member">isPointer</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a2a21b2a640ad9a5e00bc7257dcd0c90a" kindref="member">isTouchpad</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a6c87524855e571069d4f365c93ad04e7" kindref="member">isTouch</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a5a2bb76b394a7de316e0986db025309b" kindref="member">isTabletTool</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1acefedd9d4710491e256f43b1e8239763" kindref="member">isTabletPad</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1a47b9ccb46b84f453534f92179da9a081" kindref="member">isTabletModeSwitch</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_virtual_input_device_1ad2943a9ef2fb73e84726de04fd0eb55f" kindref="member">isLidSwitch</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>m_name;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*m_group<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_pointer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_keyboard<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_touch<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_lidSwitch<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_tabletPad<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_tabletTool<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal">};</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679" refid="class_k_win_1_1_test_1_1_color_manager_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_color_manager_v1_1a33f73cca7e3bd8a8afefa5a17f6223ea" kindref="member">ColorManagerV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::wp_color_manager_v1</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_color_manager_v1_1a33f73cca7e3bd8a8afefa5a17f6223ea" kindref="member">ColorManagerV1</ref>(::wl_registry<sp/>*registry,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1ad85acfe1f9d7ee3655274bf2fc62d9a3" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_color_manager_v1_1a31b36a79ca6ed3f7132fafc5622a0367" kindref="member">~ColorManagerV1</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal">};</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="struct_k_win_1_1_test_1_1_connection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_test_1_1_connection" kindref="compound">Connection</ref></highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Connection&gt;<sp/><ref refid="struct_k_win_1_1_test_1_1_connection_1a51993d89cf2791852ebc586da335320c" kindref="member">setup</ref>(AdditionalWaylandInterfaces<sp/>interfaces<sp/>=<sp/>AdditionalWaylandInterfaces());</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_win_1_1_test_1_1_connection_1a49ac1111e931ac43f6dcb8ab0a5b920a" kindref="member">~Connection</ref>();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="struct_k_win_1_1_test_1_1_connection_1a1bfa2d664707dd58602fbefd2ac6a7cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::ConnectionThread<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a1bfa2d664707dd58602fbefd2ac6a7cd" kindref="member">connection</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692" refid="struct_k_win_1_1_test_1_1_connection_1a2a78af1832494de062f7c24215c4d559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::EventQueue<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a2a78af1832494de062f7c24215c4d559" kindref="member">queue</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693" refid="struct_k_win_1_1_test_1_1_connection_1a4d06661ae86d43eadf0473344b9dfabd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Compositor<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a4d06661ae86d43eadf0473344b9dfabd" kindref="member">compositor</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694" refid="struct_k_win_1_1_test_1_1_connection_1aca468f3782f65a114fe57b1ef018c4f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::SubCompositor<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1aca468f3782f65a114fe57b1ef018c4f1" kindref="member">subCompositor</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695" refid="struct_k_win_1_1_test_1_1_connection_1a631f96506be0cc26daefce07666aa0a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::ShadowManager<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a631f96506be0cc26daefce07666aa0a7" kindref="member">shadowManager</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="696" refid="struct_k_win_1_1_test_1_1_connection_1af09cf865a0da6418ad6f1ebd1c6d60e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_shell" kindref="compound">XdgShell</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1af09cf865a0da6418ad6f1ebd1c6d60e5" kindref="member">xdgShell</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697" refid="struct_k_win_1_1_test_1_1_connection_1a029cdf99df705a1e4f26c56b7258d4b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::ShmPool<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a029cdf99df705a1e4f26c56b7258d4b3" kindref="member">shm</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698" refid="struct_k_win_1_1_test_1_1_connection_1a3a7d1ebfd2fbec7bb43a6d4c03c1cb56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Seat<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a3a7d1ebfd2fbec7bb43a6d4c03c1cb56" kindref="member">seat</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699" refid="struct_k_win_1_1_test_1_1_connection_1ae2fa4e6cade68b2c8db81238eb2289fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::PlasmaShell<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1ae2fa4e6cade68b2c8db81238eb2289fa" kindref="member">plasmaShell</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700" refid="struct_k_win_1_1_test_1_1_connection_1a8f65db73a0388dfa417fe5998cdd8ae7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::PlasmaWindowManagement<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a8f65db73a0388dfa417fe5998cdd8ae7" kindref="member">windowManagement</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701" refid="struct_k_win_1_1_test_1_1_connection_1a285af3f31725b7577c425ebc744e29aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::PointerConstraints<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a285af3f31725b7577c425ebc744e29aa" kindref="member">pointerConstraints</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702" refid="struct_k_win_1_1_test_1_1_connection_1a6af6c970595db2f82b371d6e2b218692" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Registry<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a6af6c970595db2f82b371d6e2b218692" kindref="member">registry</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703" refid="struct_k_win_1_1_test_1_1_connection_1a2cee89d1bed111dadeab0e76b4545ffa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_wayland_output_management_v2" kindref="compound">WaylandOutputManagementV2</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a2cee89d1bed111dadeab0e76b4545ffa" kindref="member">outputManagementV2</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704" refid="struct_k_win_1_1_test_1_1_connection_1a2db4760576d29ec1539b72737c67774f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QThread<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a2db4760576d29ec1539b72737c67774f" kindref="member">thread</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705" refid="struct_k_win_1_1_test_1_1_connection_1a444a4d3536800b1617f751a2b4ee71e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;KWayland::Client::Output<sp/>*&gt;<sp/><ref refid="struct_k_win_1_1_test_1_1_connection_1a444a4d3536800b1617f751a2b4ee71e2" kindref="member">outputs</ref>;</highlight></codeline>
<codeline lineno="706" refid="struct_k_win_1_1_test_1_1_connection_1aca50a7f37a8888abddcd95225803fcc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;WaylandOutputDeviceV2<sp/>*&gt;<sp/><ref refid="struct_k_win_1_1_test_1_1_connection_1aca50a7f37a8888abddcd95225803fcc4" kindref="member">outputDevicesV2</ref>;</highlight></codeline>
<codeline lineno="707" refid="struct_k_win_1_1_test_1_1_connection_1a318ab72425b841ed2d5e39fbd3fdf212" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_idle_inhibit_manager_v1" kindref="compound">IdleInhibitManagerV1</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a318ab72425b841ed2d5e39fbd3fdf212" kindref="member">idleInhibitManagerV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708" refid="struct_k_win_1_1_test_1_1_connection_1a82ef2f311295efb6538a8b075170b6c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::AppMenuManager<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a82ef2f311295efb6538a8b075170b6c2" kindref="member">appMenu</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="709" refid="struct_k_win_1_1_test_1_1_connection_1a704723b4052e2af4c306137bf53fa645" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_decoration_manager_v1" kindref="compound">XdgDecorationManagerV1</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a704723b4052e2af4c306137bf53fa645" kindref="member">xdgDecorationManagerV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710" refid="struct_k_win_1_1_test_1_1_connection_1ac5939039d5510a3a843bb0fc54278c87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::TextInputManager<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1ac5939039d5510a3a843bb0fc54278c87" kindref="member">textInputManager</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711" refid="struct_k_win_1_1_test_1_1_connection_1ad7a2dda2a9ef7fb7e762e0035b54ae8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QtWayland::zwp_input_panel_v1<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1ad7a2dda2a9ef7fb7e762e0035b54ae8e" kindref="member">inputPanelV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712" refid="struct_k_win_1_1_test_1_1_connection_1ac6d3e7d28966b460690ee8e540f066e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method" kindref="compound">MockInputMethod</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1ac6d3e7d28966b460690ee8e540f066e7" kindref="member">inputMethodV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713" refid="struct_k_win_1_1_test_1_1_connection_1a41c1c9e805fa1c0428d4f3659bde9ff5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QtWayland::zwp_input_method_context_v1<sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a41c1c9e805fa1c0428d4f3659bde9ff5" kindref="member">inputMethodContextV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714" refid="struct_k_win_1_1_test_1_1_connection_1a20fa7561363678c75a363dce2a3dfdc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_layer_shell_v1" kindref="compound">LayerShellV1</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a20fa7561363678c75a363dce2a3dfdc8" kindref="member">layerShellV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="715" refid="struct_k_win_1_1_test_1_1_connection_1a31ed0e0b73e69149a21eff418db41eb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_text_input_manager_v3" kindref="compound">TextInputManagerV3</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a31ed0e0b73e69149a21eff418db41eb1" kindref="member">textInputManagerV3</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716" refid="struct_k_win_1_1_test_1_1_connection_1abb9d660cb565a49b36b7f73db75ed1db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_fractional_scale_manager_v1" kindref="compound">FractionalScaleManagerV1</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1abb9d660cb565a49b36b7f73db75ed1db" kindref="member">fractionalScaleManagerV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717" refid="struct_k_win_1_1_test_1_1_connection_1ab7c2eb47bdf01497f7291e28447d80d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_v1" kindref="compound">ScreencastingV1</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1ab7c2eb47bdf01497f7291e28447d80d6" kindref="member">screencastingV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718" refid="struct_k_win_1_1_test_1_1_connection_1ad3dd9581861c29cbf3c5b1bec36532ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_screen_edge_manager_v1" kindref="compound">ScreenEdgeManagerV1</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1ad3dd9581861c29cbf3c5b1bec36532ff" kindref="member">screenEdgeManagerV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719" refid="struct_k_win_1_1_test_1_1_connection_1a713bde57484d8f8b8df34e4e21ccc32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_cursor_shape_manager_v1" kindref="compound">CursorShapeManagerV1</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a713bde57484d8f8b8df34e4e21ccc32a" kindref="member">cursorShapeManagerV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720" refid="struct_k_win_1_1_test_1_1_connection_1a029ff30c4f000f8d1823923502e3b549" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_fake_input" kindref="compound">FakeInput</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a029ff30c4f000f8d1823923502e3b549" kindref="member">fakeInput</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721" refid="struct_k_win_1_1_test_1_1_connection_1a30c8c1b77bd9948e3cf3db1d6ff903ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_security_context_manager_v1" kindref="compound">SecurityContextManagerV1</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a30c8c1b77bd9948e3cf3db1d6ff903ca" kindref="member">securityContextManagerV1</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="722" refid="struct_k_win_1_1_test_1_1_connection_1a101f8ff3280068e8f266fd5a8d37b578" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_xdg_wm_dialog_v1" kindref="compound">XdgWmDialogV1</ref><sp/>*<ref refid="struct_k_win_1_1_test_1_1_connection_1a101f8ff3280068e8f266fd5a8d37b578" kindref="member">xdgWmDialogV1</ref>;</highlight></codeline>
<codeline lineno="723" refid="struct_k_win_1_1_test_1_1_connection_1a8ec952690dd95943e71622fd09d3e026" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ColorManagerV1&gt;<sp/><ref refid="struct_k_win_1_1_test_1_1_connection_1a8ec952690dd95943e71622fd09d3e026" kindref="member">colorManager</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">};</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a24e61eb6fba767f564d715bbae7a2e09" kindref="member">keyboardKeyPressed</ref>(quint32<sp/>key,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a0e41594af5bb5f89fd58919de458c7c5" kindref="member">keyboardKeyReleased</ref>(quint32<sp/>key,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a70eddb451bb36cb91ad9190b4df265ae" kindref="member">pointerAxisHorizontal</ref>(qreal<sp/>delta,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quint32<sp/>time,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qint32<sp/>discreteDelta<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248" kindref="member">PointerAxisSource</ref><sp/>source<sp/>=<sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248a88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">PointerAxisSource::Unknown</ref>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1af420d2992ffcd40de8c3f31a69f71ade" kindref="member">pointerAxisVertical</ref>(qreal<sp/>delta,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quint32<sp/>time,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qint32<sp/>discreteDelta<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248" kindref="member">PointerAxisSource</ref><sp/>source<sp/>=<sp/><ref refid="namespace_k_win_1a143704533be3f7be8a43b2b962600248a88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">PointerAxisSource::Unknown</ref>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a7ed1822cd70b207b310b8b892241d15e" kindref="member">pointerButtonPressed</ref>(quint32<sp/>button,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1abc9def44c9309a5e696d48288462bd08" kindref="member">pointerButtonReleased</ref>(quint32<sp/>button,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a86e49856d56b03d329f477b0df28cec2" kindref="member">pointerMotion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;position,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1aa213f799df23188372b414aceb5bc16c" kindref="member">pointerMotionRelative</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;delta,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a2207bfe1aedfab2e4366690c842d04b2" kindref="member">touchCancel</ref>();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a23de04a19c3519614786ab986c0c1e7c" kindref="member">touchDown</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a374744d98acd1329e4133c7ab30a1cb4" kindref="member">touchMotion</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1abe1cb34b00c3dce9daa8ba37ce7c402b" kindref="member">touchUp</ref>(qint32<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1ae7850dc4af47e1a9b478c4a2df576a6c" kindref="member">tabletPadButtonPressed</ref>(quint32<sp/>button,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1af4d8699667d5f322ed303102aac15955" kindref="member">tabletPadButtonReleased</ref>(quint32<sp/>button,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a4eee7a7f151fa9fbca3e968234190cd5" kindref="member">tabletToolButtonPressed</ref>(quint32<sp/>button,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1abc4b212371ebf87d77b09442ddfba60b" kindref="member">tabletToolButtonReleased</ref>(quint32<sp/>button,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a86fd3d965adff706d0732be23bce4018" kindref="member">tabletToolProximityEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/>qreal<sp/>xTilt,<sp/>qreal<sp/>yTilt,<sp/>qreal<sp/>rotation,<sp/>qreal<sp/>distance,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tipNear,<sp/>qreal<sp/>sliderPosition,<sp/>quint32<sp/>time);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a36c6e87757c3c97858c55b650c9d304c" kindref="member">setupWaylandConnection</ref>(AdditionalWaylandInterfaces<sp/>flags<sp/>=<sp/>AdditionalWaylandInterfaces());</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a12755bae9118cb958baf0efbd222d7c8" kindref="member">destroyWaylandConnection</ref>();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal">KWayland::Client::ConnectionThread<sp/>*<ref refid="namespace_k_win_1_1_test_1ab8d22dbd7b611aa83d13171c80dd821d" kindref="member">waylandConnection</ref>();</highlight></codeline>
<codeline lineno="767"><highlight class="normal">KWayland::Client::Compositor<sp/>*<ref refid="namespace_k_win_1_1_test_1a47e310e7cc96be89e999b633b01c62b0" kindref="member">waylandCompositor</ref>();</highlight></codeline>
<codeline lineno="768"><highlight class="normal">KWayland::Client::SubCompositor<sp/>*<ref refid="namespace_k_win_1_1_test_1a4d912080e33c3b7e290c0770d4b6a74d" kindref="member">waylandSubCompositor</ref>();</highlight></codeline>
<codeline lineno="769"><highlight class="normal">KWayland::Client::ShadowManager<sp/>*<ref refid="namespace_k_win_1_1_test_1a8196fdc512dee08594d21ac29ff714ea" kindref="member">waylandShadowManager</ref>();</highlight></codeline>
<codeline lineno="770"><highlight class="normal">KWayland::Client::ShmPool<sp/>*<ref refid="namespace_k_win_1_1_test_1aa0144fabdd618eb668c5d5382631bfe9" kindref="member">waylandShmPool</ref>();</highlight></codeline>
<codeline lineno="771"><highlight class="normal">KWayland::Client::Seat<sp/>*<ref refid="namespace_k_win_1_1_test_1a5f6b6eee3f6e90f7c4693e06af67d91d" kindref="member">waylandSeat</ref>();</highlight></codeline>
<codeline lineno="772"><highlight class="normal">KWayland::Client::PlasmaShell<sp/>*<ref refid="namespace_k_win_1_1_test_1ad1f84af09bf2790daf310b36b2ec12a3" kindref="member">waylandPlasmaShell</ref>();</highlight></codeline>
<codeline lineno="773"><highlight class="normal">KWayland::Client::PlasmaWindowManagement<sp/>*<ref refid="namespace_k_win_1_1_test_1a37f9b33442f29538d044473f18bcbcc1" kindref="member">waylandWindowManagement</ref>();</highlight></codeline>
<codeline lineno="774"><highlight class="normal">KWayland::Client::PointerConstraints<sp/>*<ref refid="namespace_k_win_1_1_test_1a517ef757df68b22a94b9c565a67710bd" kindref="member">waylandPointerConstraints</ref>();</highlight></codeline>
<codeline lineno="775"><highlight class="normal">KWayland::Client::AppMenuManager<sp/>*<ref refid="namespace_k_win_1_1_test_1aa8d74a9a8291f560dcc95673c7c6d0b1" kindref="member">waylandAppMenuManager</ref>();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_wayland_output_management_v2" kindref="compound">WaylandOutputManagementV2</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1a07b1c35303c0f89d7b3e98537ffdafdb" kindref="member">waylandOutputManagementV2</ref>();</highlight></codeline>
<codeline lineno="777"><highlight class="normal">KWayland::Client::TextInputManager<sp/>*<ref refid="namespace_k_win_1_1_test_1aba9aad15d03110344917226405ea7a6e" kindref="member">waylandTextInputManager</ref>();</highlight></codeline>
<codeline lineno="778"><highlight class="normal">QList&lt;KWayland::Client::Output<sp/>*&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a79662c163cb8eecaf6f4c19b0e63316e" kindref="member">waylandOutputs</ref>();</highlight></codeline>
<codeline lineno="779"><highlight class="normal">KWayland::Client::Output<sp/>*<ref refid="namespace_k_win_1_1_test_1aef97bdfef9391388689aa4c4bf50d8aa" kindref="member">waylandOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_screencasting_v1" kindref="compound">ScreencastingV1</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1a64d1f4d59675d814dafaa35cb026eeb6" kindref="member">screencasting</ref>();</highlight></codeline>
<codeline lineno="781"><highlight class="normal">QList&lt;WaylandOutputDeviceV2<sp/>*&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a3627732e55b6de7ce69153ec64447d62" kindref="member">waylandOutputDevicesV2</ref>();</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_fake_input" kindref="compound">FakeInput</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1af256d176be24b12c279c66f2154baaf8" kindref="member">waylandFakeInput</ref>();</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_security_context_manager_v1" kindref="compound">SecurityContextManagerV1</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1a63e86219391f6b56b91f2806477dbf02" kindref="member">waylandSecurityContextManagerV1</ref>();</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_color_manager_v1" kindref="compound">ColorManagerV1</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1aa2aeeed8707c8689f32965e0a606cad9" kindref="member">colorManager</ref>();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a567844737a26d3ce16f876573e87af57" kindref="member">waitForWaylandSurface</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1ab4cf52ccd596caf6af24eb259913c597" kindref="member">waitForWaylandPointer</ref>();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1ab4cf52ccd596caf6af24eb259913c597" kindref="member">waitForWaylandPointer</ref>(KWayland::Client::Seat<sp/>*seat);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a6988af2cc12a50695d71f199cb3b0565" kindref="member">waitForWaylandTouch</ref>();</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a6988af2cc12a50695d71f199cb3b0565" kindref="member">waitForWaylandTouch</ref>(KWayland::Client::Seat<sp/>*seat);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a3255b7f27e1f6075c53288186a919d00" kindref="member">waitForWaylandKeyboard</ref>();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a3255b7f27e1f6075c53288186a919d00" kindref="member">waitForWaylandKeyboard</ref>(KWayland::Client::Seat<sp/>*seat);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1ace6446b3dfb4032c38026e43ee355ff5" kindref="member">flushWaylandConnection</ref>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1ab48f9c39f88089daf08aaa45759f7299" kindref="member">waylandSync</ref>();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal">std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">createSurface</ref>();</highlight></codeline>
<codeline lineno="804"><highlight class="normal">std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a9ee27d765011e13e97bbd4c0920bc9cc" kindref="member">createSurface</ref>(KWayland::Client::Compositor<sp/>*compositor);</highlight></codeline>
<codeline lineno="805"><highlight class="normal">std::unique_ptr&lt;KWayland::Client::SubSurface&gt;<sp/><ref refid="namespace_k_win_1_1_test_1ab4faef15d7046070832101a3953fb0f1" kindref="member">createSubSurface</ref>(KWayland::Client::Surface<sp/>*surface,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KWayland::Client::Surface<sp/>*parentSurface);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal">std::unique_ptr&lt;LayerSurfaceV1&gt;<sp/><ref refid="namespace_k_win_1_1_test_1ac166b97d1f64154ee33256ab8d2d1369" kindref="member">createLayerSurfaceV1</ref>(KWayland::Client::Surface<sp/>*surface,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;scope,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KWayland::Client::Output<sp/>*output<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LayerShellV1::layer<sp/>layer<sp/>=<sp/>LayerShellV1::layer_top);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_text_input_manager_v3" kindref="compound">TextInputManagerV3</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1a283aa125534a50e9477ee94e47057e9d" kindref="member">waylandTextInputManagerV3</ref>();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815" refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924" kindref="member">CreationSetup</ref><sp/>{</highlight></codeline>
<codeline lineno="816" refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924a77185debc8f1119630b3a59c3384d69d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924a77185debc8f1119630b3a59c3384d69d" kindref="member">CreateOnly</ref>,</highlight></codeline>
<codeline lineno="817" refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924af1d9a0dc9e12b9129fc765725484aa11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924af1d9a0dc9e12b9129fc765725484aa11" kindref="member">CreateAndConfigure</ref>,<sp/></highlight></codeline>
<codeline lineno="818"><highlight class="normal">};</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal">std::unique_ptr&lt;QtWayland::zwp_input_panel_surface_v1&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a57430bcdf11495b59bdd1d6e45c949d8" kindref="member">createInputPanelSurfaceV1</ref>(KWayland::Client::Surface<sp/>*surface,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KWayland::Client::Output<sp/>*output,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_mock_input_method_1a619415e949a428ef118af4bea55fa7d7" kindref="member">MockInputMethod::Mode</ref><sp/>mode);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal">std::unique_ptr&lt;FractionalScaleV1&gt;<sp/><ref refid="namespace_k_win_1_1_test_1ad5d6ef68dc8af138ba9e75cf3844524b" kindref="member">createFractionalScaleV1</ref>(KWayland::Client::Surface<sp/>*surface);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal">std::unique_ptr&lt;XdgToplevel&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">createXdgToplevelSurface</ref>(KWayland::Client::Surface<sp/>*surface);</highlight></codeline>
<codeline lineno="827"><highlight class="normal">std::unique_ptr&lt;XdgToplevel&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">createXdgToplevelSurface</ref>(<ref refid="class_xdg_shell" kindref="compound">XdgShell</ref><sp/>*shell,<sp/>KWayland::Client::Surface<sp/>*surface);</highlight></codeline>
<codeline lineno="828"><highlight class="normal">std::unique_ptr&lt;XdgToplevel&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">createXdgToplevelSurface</ref>(KWayland::Client::Surface<sp/>*surface,<sp/><ref refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924" kindref="member">CreationSetup</ref><sp/>configureMode);</highlight></codeline>
<codeline lineno="829"><highlight class="normal">std::unique_ptr&lt;XdgToplevel&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">createXdgToplevelSurface</ref>(<ref refid="class_xdg_shell" kindref="compound">XdgShell</ref><sp/>*shell,<sp/>KWayland::Client::Surface<sp/>*surface,<sp/><ref refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924" kindref="member">CreationSetup</ref><sp/>configureMode);</highlight></codeline>
<codeline lineno="830"><highlight class="normal">std::unique_ptr&lt;XdgToplevel&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">createXdgToplevelSurface</ref>(KWayland::Client::Surface<sp/>*surface,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(XdgToplevel<sp/>*toplevel)&gt;<sp/>setup);</highlight></codeline>
<codeline lineno="831"><highlight class="normal">std::unique_ptr&lt;XdgToplevel&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a8bda443625951cf5813685da7a3119ce" kindref="member">createXdgToplevelSurface</ref>(<ref refid="class_xdg_shell" kindref="compound">XdgShell</ref><sp/>*shell,<sp/>KWayland::Client::Surface<sp/>*surface,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(XdgToplevel<sp/>*toplevel)&gt;<sp/>setup);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal">std::unique_ptr&lt;XdgPositioner&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a735a2b3ebb5e8d173daba48b745871a4" kindref="member">createXdgPositioner</ref>();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">std::unique_ptr&lt;XdgPopup&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a52039e32ae72c4329a4720d32469a385" kindref="member">createXdgPopupSurface</ref>(KWayland::Client::Surface<sp/>*surface,<sp/><ref refid="class_xdg_surface" kindref="compound">XdgSurface</ref><sp/>*parentSurface,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_xdg_positioner" kindref="compound">XdgPositioner</ref><sp/>*positioner,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924" kindref="member">CreationSetup</ref><sp/>configureMode<sp/>=<sp/><ref refid="namespace_k_win_1_1_test_1acc9401c7c509367c1bd5356379700924af1d9a0dc9e12b9129fc765725484aa11" kindref="member">CreationSetup::CreateAndConfigure</ref>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal">std::unique_ptr&lt;XdgToplevelDecorationV1&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a5b6ba1c532f1dec604fbb3a7bd44ee04" kindref="member">createXdgToplevelDecorationV1</ref>(XdgToplevel<sp/>*toplevel);</highlight></codeline>
<codeline lineno="840"><highlight class="normal">std::unique_ptr&lt;IdleInhibitorV1&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a0b5feede4405fb4f6fc9464a95288350" kindref="member">createIdleInhibitorV1</ref>(KWayland::Client::Surface<sp/>*surface);</highlight></codeline>
<codeline lineno="841"><highlight class="normal">std::unique_ptr&lt;AutoHideScreenEdgeV1&gt;<sp/><ref refid="namespace_k_win_1_1_test_1ad4feb97ed84e9de5df974bb8d485c9f0" kindref="member">createAutoHideScreenEdgeV1</ref>(KWayland::Client::Surface<sp/>*surface,<sp/>uint32_t<sp/>border);</highlight></codeline>
<codeline lineno="842"><highlight class="normal">std::unique_ptr&lt;CursorShapeDeviceV1&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a2d3ed1291cac418e44d9c114e5427d19" kindref="member">createCursorShapeDeviceV1</ref>(KWayland::Client::Pointer<sp/>*pointer);</highlight></codeline>
<codeline lineno="843"><highlight class="normal">std::unique_ptr&lt;XdgDialogV1&gt;<sp/><ref refid="namespace_k_win_1_1_test_1a71e6598e56997eed0fa80ed32ade7446" kindref="member">createXdgDialogV1</ref>(XdgToplevel<sp/>*toplevel);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">render</ref>(KWayland::Client::Surface<sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage::Format<sp/>&amp;<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>QImage::Format_ARGB32_Premultiplied);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">render</ref>(KWayland::Client::ShmPool<sp/>*shm,<sp/>KWayland::Client::Surface<sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage::Format<sp/>&amp;<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>QImage::Format_ARGB32_Premultiplied);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">render</ref>(KWayland::Client::Surface<sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage<sp/>&amp;img);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a52f3d8ae9752639a4364bf8fd8d5b8e6" kindref="member">render</ref>(KWayland::Client::ShmPool<sp/>*shm,<sp/>KWayland::Client::Surface<sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage<sp/>&amp;img);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1a6526dd5f17b3c80aa9dcb63e12ddb392" kindref="member">waitForWaylandWindowShown</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/>5000);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">renderAndWaitForShown</ref>(KWayland::Client::Surface<sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage::Format<sp/>&amp;<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>QImage::Format_ARGB32,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/>5000);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">renderAndWaitForShown</ref>(KWayland::Client::ShmPool<sp/>*shm,<sp/>KWayland::Client::Surface<sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage::Format<sp/>&amp;<ref refid="namespace_k_win_1a6ef3f38157c98f3fe83ae3ec855ee903" kindref="member">format</ref><sp/>=<sp/>QImage::Format_ARGB32,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/>5000);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">renderAndWaitForShown</ref>(KWayland::Client::Surface<sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage<sp/>&amp;img,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/>5000);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*<ref refid="namespace_k_win_1_1_test_1a0e1cd98b5ec744f0d5de36c224a91092" kindref="member">renderAndWaitForShown</ref>(KWayland::Client::ShmPool<sp/>*shm,<sp/>KWayland::Client::Surface<sp/>*surface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QImage<sp/>&amp;img,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/>5000);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1aea84309ec3fa292db3aba909e9b0b406" kindref="member">waitForWindowClosed</ref>(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref><sp/>*window);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="882" refid="namespace_k_win_1_1_test_1ab7915feb352e7c58be574a8a30f513d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1ab7915feb352e7c58be574a8a30f513d7" kindref="member">lockScreen</ref>();</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="888" refid="namespace_k_win_1_1_test_1a80923801c152ebe9d50f7b3ed392ad4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a80923801c152ebe9d50f7b3ed392ad4d" kindref="member">unlockScreen</ref>();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a92ed8ed368ec43eae0bf76b866e14b24" kindref="member">renderNodeAvailable</ref>();</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>KWIN_BUILD_X11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_xcb_connection_deleter" kindref="compound">XcbConnectionDeleter</ref></highlight></codeline>
<codeline lineno="905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(xcb_connection_t<sp/>*pointer);</highlight></codeline>
<codeline lineno="907"><highlight class="normal">};</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;xcb_connection_t,<sp/>XcbConnectionDeleter&gt;<sp/>XcbConnectionPtr;</highlight></codeline>
<codeline lineno="909"><highlight class="normal">XcbConnectionPtr<sp/>createX11Connection();</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal">MockInputMethod<sp/>*<ref refid="namespace_k_win_1_1_test_1a76fc6ee64cbcb1ad3cea2e670bf37f68" kindref="member">inputMethod</ref>();</highlight></codeline>
<codeline lineno="913"><highlight class="normal">KWayland::Client::Surface<sp/>*<ref refid="namespace_k_win_1_1_test_1a79a1e1551387419a4191a986f66c49b7" kindref="member">inputPanelSurface</ref>();</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1ad7c629b70897ef7fc88900aaa2569217" kindref="member">ScreencastingStreamV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zkde_screencast_stream_unstable_v1</highlight></codeline>
<codeline lineno="916"><highlight class="normal">{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="918" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a8d4e172011a5cad58f04316b9e0eeb64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a8d4e172011a5cad58f04316b9e0eeb64" kindref="member">ScreencastingV1</ref>;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="921" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1ad7c629b70897ef7fc88900aaa2569217" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1ad7c629b70897ef7fc88900aaa2569217" kindref="member">ScreencastingStreamV1</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a9cd0eb751cc43c9395170db9084f1ed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a9cd0eb751cc43c9395170db9084f1ed3" kindref="member">~ScreencastingStreamV1</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="927"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isInitialized())<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a87e17c2dbfe6d81a24173e71fa46cc0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a87e17c2dbfe6d81a24173e71fa46cc0d" kindref="member">nodeId</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="934"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(m_nodeId.has_value());</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_nodeId;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a46e27adc9645b319d5bb45f81a531424" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a46e27adc9645b319d5bb45f81a531424" kindref="member">zkde_screencast_stream_unstable_v1_created</ref>(uint32_t<sp/>node)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="940"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nodeId<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1aa329e80dde8c8c80fa6a1e826d733c1d" kindref="member">created</ref>(node);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a40d54a2d0aa15e147fdb4b0b0ea70830" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a40d54a2d0aa15e147fdb4b0b0ea70830" kindref="member">zkde_screencast_stream_unstable_v1_closed</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="946"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1ad8dc1b78d4fa02eb0cb3be8d69c8db90" kindref="member">closed</ref>();</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1ad90d0dbeb233f78df4d619ee60ac30d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1ad90d0dbeb233f78df4d619ee60ac30d7" kindref="member">zkde_screencast_stream_unstable_v1_failed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;error)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="951"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_EMIT<sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a4747ef3ca75bba4b059ca8dd32117e82" kindref="member">failed</ref>(error);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal">Q_SIGNALS:</highlight></codeline>
<codeline lineno="956" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1aa329e80dde8c8c80fa6a1e826d733c1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1aa329e80dde8c8c80fa6a1e826d733c1d" kindref="member">created</ref>(quint32<sp/>nodeid);</highlight></codeline>
<codeline lineno="957" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a4747ef3ca75bba4b059ca8dd32117e82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1a4747ef3ca75bba4b059ca8dd32117e82" kindref="member">failed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;error);</highlight></codeline>
<codeline lineno="958" refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1ad8dc1b78d4fa02eb0cb3be8d69c8db90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1_1ad8dc1b78d4fa02eb0cb3be8d69c8db90" kindref="member">closed</ref>();</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;uint&gt;<sp/>m_nodeId;</highlight></codeline>
<codeline lineno="962"><highlight class="normal">};</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964" refid="class_k_win_1_1_test_1_1_screencasting_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_test_1_1_screencasting_v1_1a06fb52fde85a74cb6450d6ad5174e885" kindref="member">ScreencastingV1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QtWayland::zkde_screencast_unstable_v1</highlight></codeline>
<codeline lineno="965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="968" refid="class_k_win_1_1_test_1_1_screencasting_v1_1a06fb52fde85a74cb6450d6ad5174e885" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_v1_1a06fb52fde85a74cb6450d6ad5174e885" kindref="member">ScreencastingV1</ref>(QObject<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>QObject(parent)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973" refid="class_k_win_1_1_test_1_1_screencasting_v1_1a2210bdc1a508abeb65d3bf5852abad6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1" kindref="compound">ScreencastingStreamV1</ref><sp/>*<ref refid="class_k_win_1_1_test_1_1_screencasting_v1_1a2210bdc1a508abeb65d3bf5852abad6b" kindref="member">createOutputStream</ref>(wl_output<sp/>*output,<sp/>pointer<sp/>mode)</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stream<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1" kindref="compound">ScreencastingStreamV1</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;init(stream_output(output,<sp/>mode));</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980" refid="class_k_win_1_1_test_1_1_screencasting_v1_1a93b0997a16acc2cbc56fc0354a906943" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1" kindref="compound">ScreencastingStreamV1</ref><sp/>*<ref refid="class_k_win_1_1_test_1_1_screencasting_v1_1a93b0997a16acc2cbc56fc0354a906943" kindref="member">createWindowStream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;uuid,<sp/>pointer<sp/>mode)</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stream<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_test_1_1_screencasting_stream_v1" kindref="compound">ScreencastingStreamV1</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;init(stream_window(uuid,<sp/>mode));</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal">};</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988" refid="struct_k_win_1_1_test_1_1_output_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_win_1_1_test_1_1_output_info" kindref="compound">OutputInfo</ref></highlight></codeline>
<codeline lineno="989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="990" refid="struct_k_win_1_1_test_1_1_output_info_1a708bd8401fccae7056ae504b8b03e781" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info_1a708bd8401fccae7056ae504b8b03e781" kindref="member">geometry</ref>;</highlight></codeline>
<codeline lineno="991" refid="struct_k_win_1_1_test_1_1_output_info_1a97772fdf390168b6d661c17669ae7bd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_test_1_1_output_info_1a97772fdf390168b6d661c17669ae7bd4" kindref="member">scale</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="992" refid="struct_k_win_1_1_test_1_1_output_info_1ae5c77453bbf62d2eba38223dd606017d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_win_1_1_test_1_1_output_info_1ae5c77453bbf62d2eba38223dd606017d" kindref="member">internal</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993" refid="struct_k_win_1_1_test_1_1_output_info_1a8ef18e0b211cc13a7b6d0fb906383371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info_1a8ef18e0b211cc13a7b6d0fb906383371" kindref="member">physicalSizeInMM</ref>;</highlight></codeline>
<codeline lineno="994" refid="struct_k_win_1_1_test_1_1_output_info_1a142afd661987126376a553a2c19770cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;std::tuple&lt;QSize,<sp/>uint64_t,<sp/>OutputMode::Flags&gt;&gt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info_1a142afd661987126376a553a2c19770cd" kindref="member">modes</ref>;</highlight></codeline>
<codeline lineno="995" refid="struct_k_win_1_1_test_1_1_output_info_1a3e0382841b55809569072cc45773ee28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_output_transform" kindref="compound">OutputTransform</ref><sp/><ref refid="struct_k_win_1_1_test_1_1_output_info_1a3e0382841b55809569072cc45773ee28" kindref="member">panelOrientation</ref><sp/>=<sp/><ref refid="class_k_win_1_1_output_transform_1af879a0d47e8ecd9c35f994252a7e7fd7a3973587033abbbbbaaddeb37d12f6700" kindref="member">OutputTransform::Kind::Normal</ref>;</highlight></codeline>
<codeline lineno="996" refid="struct_k_win_1_1_test_1_1_output_info_1aeea026cb9d6f5fc01bb7cbb946627c8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info_1aeea026cb9d6f5fc01bb7cbb946627c8c" kindref="member">edid</ref>;</highlight></codeline>
<codeline lineno="997" refid="struct_k_win_1_1_test_1_1_output_info_1a16909b49914a8b7ae8a940f4fdb961bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;QByteArray&gt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info_1a16909b49914a8b7ae8a940f4fdb961bc" kindref="member">edidIdentifierOverride</ref>;</highlight></codeline>
<codeline lineno="998" refid="struct_k_win_1_1_test_1_1_output_info_1a8087d2f966ec70b90d2a82d467637d36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;QString&gt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info_1a8087d2f966ec70b90d2a82d467637d36" kindref="member">connectorName</ref>;</highlight></codeline>
<codeline lineno="999" refid="struct_k_win_1_1_test_1_1_output_info_1a7de4403e29fdac6beed9b6cca9d44869" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;QByteArray&gt;<sp/><ref refid="struct_k_win_1_1_test_1_1_output_info_1a7de4403e29fdac6beed9b6cca9d44869" kindref="member">mstPath</ref>;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">setOutputConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QRect&gt;<sp/>&amp;geometries);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_k_win_1_1_test_1a1373c61710748fcde7e428e05bd5f2cb" kindref="member">setOutputConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;OutputInfo&gt;<sp/>&amp;infos);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal">Q_DECLARE_OPERATORS_FOR_FLAGS(KWin::Test::AdditionalWaylandInterfaces)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><ref refid="x11keyread_8cpp_1ac0925a94f4858115ad1f04be885ac3b3" kindref="member">Q_DECLARE_METATYPE</ref>(KWin::Test::XdgToplevel::States)</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><ref refid="x11keyread_8cpp_1ac0925a94f4858115ad1f04be885ac3b3" kindref="member">Q_DECLARE_METATYPE</ref>(QtWayland::zxdg_toplevel_decoration_v1::mode)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011" refid="kwin__wayland__test_8h_1a105fcd0c1d5eb52370ab30db8ad37c4c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WAYLANDTEST_MAIN(TestObject)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1012"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>main(int<sp/>argc,<sp/>char<sp/>*argv[])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1013"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1014"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setenv(&quot;QT_QPA_PLATFORM&quot;,<sp/>&quot;wayland-org.kde.kwin.qpa&quot;,<sp/>true);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1015"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setenv(&quot;QT_QPA_PLATFORM_PLUGIN_PATH&quot;,<sp/>QFileInfo(QString::fromLocal8Bit(argv[0])).absolutePath().toLocal8Bit().constData(),<sp/>true);<sp/>\</highlight></codeline>
<codeline lineno="1016"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setenv(&quot;KWIN_FORCE_OWN_QPA&quot;,<sp/>&quot;1&quot;,<sp/>true);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1017"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qunsetenv(&quot;KDE_FULL_SESSION&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1018"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qunsetenv(&quot;KDE_SESSION_VERSION&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1019"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qunsetenv(&quot;XDG_SESSION_DESKTOP&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1020"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qunsetenv(&quot;XDG_CURRENT_DESKTOP&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1021"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KWin::WaylandTestApplication<sp/>app(argc,<sp/>argv);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1022"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app.setAttribute(Qt::AA_Use96Dpi,<sp/>true);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1023"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TestObject<sp/>tc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1024"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>QTest::qExec(&amp;tc,<sp/>argc,<sp/>argv);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1025"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="kwin/autotests/integration/kwin_wayland_test.h"/>
  </compounddef>
</doxygen>
