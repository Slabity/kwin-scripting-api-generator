<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property" kind="class" language="C++" prot="public">
    <compoundname>KWin::Xcb::RandR::OutputProperty</compoundname>
    <basecompoundref refid="class_k_win_1_1_xcb_1_1_wrapper" prot="public" virt="non-virtual">KWin::Xcb::Wrapper&lt; OutputPropertyData, xcb_randr_output_t, xcb_atom_t, xcb_atom_t, uint32_t, uint32_t, uint8_t, uint8_t &gt;</basecompoundref>
    <includes refid="xcbutils_8h" local="no">xcbutils.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1ad6f78ca350313db473b124463ef1bb3f" prot="private" static="no" mutable="no">
        <type>xcb_atom_t</type>
        <definition>xcb_atom_t KWin::Xcb::RandR::OutputProperty::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <qualifiedname>KWin::Xcb::RandR::OutputProperty::m_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1463" column="16" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1463" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1ae0ae99eab4bd34c7c4deb505f17ae571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::RandR::OutputProperty::OutputProperty</definition>
        <argsstring>()=default</argsstring>
        <name>OutputProperty</name>
        <qualifiedname>KWin::Xcb::RandR::OutputProperty::OutputProperty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1378" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1aac4eac8c7ce5f98b113ec325064daa41" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KWin::Xcb::RandR::OutputProperty::OutputProperty</definition>
        <argsstring>(xcb_randr_output_t output, xcb_atom_t property, xcb_atom_t type, uint32_t offset, uint32_t length, uint8_t _delete, uint8_t pending)</argsstring>
        <name>OutputProperty</name>
        <qualifiedname>KWin::Xcb::RandR::OutputProperty::OutputProperty</qualifiedname>
        <param>
          <type>xcb_randr_output_t</type>
          <declname>output</declname>
        </param>
        <param>
          <type>xcb_atom_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>xcb_atom_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>_delete</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pending</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1379" column="14" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1379" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1ac9b79fdd9d1025f036832e698cff2b6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;!std::is_pointer&lt; T &gt;::value, T &gt;<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">::type</ref></type>
        <definition>std::enable_if&lt;!std::is_pointer&lt; T &gt;::value, T &gt;::type KWin::Xcb::RandR::OutputProperty::value</definition>
        <argsstring>(T defaultValue=T(), bool *ok=nullptr)</argsstring>
        <name>value</name>
        <qualifiedname>KWin::Xcb::RandR::OutputProperty::value</qualifiedname>
        <param>
          <type>T</type>
          <declname>defaultValue</declname>
          <defval>T()</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1385" column="44" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1385" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1a6e2cfdd93852c07688924b5b5721392d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_pointer&lt; T &gt;::value, T &gt;<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">::type</ref></type>
        <definition>std::enable_if&lt; std::is_pointer&lt; T &gt;::value, T &gt;::type KWin::Xcb::RandR::OutputProperty::value</definition>
        <argsstring>(T defaultValue=nullptr, bool *ok=nullptr)</argsstring>
        <name>value</name>
        <qualifiedname>KWin::Xcb::RandR::OutputProperty::value</qualifiedname>
        <param>
          <type>T</type>
          <declname>defaultValue</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1394" column="44" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1394" bodyend="1397"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1a17aea88164d2e62e4f02447380b37602" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_pointer&lt; T &gt;::value, T &gt;<ref refid="namespace_k_win_1a3223e96fea9ab917c25be94e2434013a" kindref="member">::type</ref></type>
        <definition>std::enable_if&lt; std::is_pointer&lt; T &gt;::value, T &gt;::type KWin::Xcb::RandR::OutputProperty::value</definition>
        <argsstring>(uint8_t format, xcb_atom_t type, T defaultValue=nullptr, bool *ok=nullptr)</argsstring>
        <name>value</name>
        <qualifiedname>KWin::Xcb::RandR::OutputProperty::value</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>format</declname>
        </param>
        <param>
          <type>xcb_atom_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>T</type>
          <declname>defaultValue</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1399" column="44" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1399" bodyend="1423"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1a28c0f9961355618ca01784aa55b75d88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray KWin::Xcb::RandR::OutputProperty::toByteArray</definition>
        <argsstring>(uint8_t format=8, xcb_atom_t type=XCB_ATOM_STRING, bool *ok=nullptr)</argsstring>
        <name>toByteArray</name>
        <qualifiedname>KWin::Xcb::RandR::OutputProperty::toByteArray</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>format</declname>
          <defval>8</defval>
        </param>
        <param>
          <type>xcb_atom_t</type>
          <declname>type</declname>
          <defval>XCB_ATOM_STRING</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1424" column="23" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1424" bodyend="1438"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1a1a66fe7ba47c4ed0e6b0f973a4bcab95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray KWin::Xcb::RandR::OutputProperty::toByteArray</definition>
        <argsstring>(bool *ok)</argsstring>
        <name>toByteArray</name>
        <qualifiedname>KWin::Xcb::RandR::OutputProperty::toByteArray</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1439" column="23" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1439" bodyend="1442"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1a0b0eec2d97224b16ae50b847f88209f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Xcb::RandR::OutputProperty::toBool</definition>
        <argsstring>(uint8_t format=32, xcb_atom_t type=XCB_ATOM_CARDINAL, bool *ok=nullptr)</argsstring>
        <name>toBool</name>
        <qualifiedname>KWin::Xcb::RandR::OutputProperty::toBool</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>format</declname>
          <defval>32</defval>
        </param>
        <param>
          <type>xcb_atom_t</type>
          <declname>type</declname>
          <defval>XCB_ATOM_CARDINAL</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1443" column="17" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1443" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1aedba9d2650f4353afd785ea45039bf76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Xcb::RandR::OutputProperty::toBool</definition>
        <argsstring>(bool *ok)</argsstring>
        <name>toBool</name>
        <qualifiedname>KWin::Xcb::RandR::OutputProperty::toBool</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/utils/xcbutils.h" line="1457" column="17" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1457" bodyend="1460"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Get an output property. <simplesect kind="see"><para><ref refid="class_k_win_1_1_xcb_1_1_property" kindref="compound">Property</ref> for documentation of member functions </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>KWin::Xcb::AbstractWrapper&lt; OutputPropertyData &gt;</label>
        <link refid="class_k_win_1_1_xcb_1_1_abstract_wrapper"/>
      </node>
      <node id="1">
        <label>KWin::Xcb::RandR::OutputProperty</label>
        <link refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::Xcb::Wrapper&lt; OutputPropertyData, xcb_randr_output_t, xcb_atom_t, xcb_atom_t, uint32_t, uint32_t, uint8_t, uint8_t &gt;</label>
        <link refid="class_k_win_1_1_xcb_1_1_wrapper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>KWin::Xcb::AbstractWrapper&lt; OutputPropertyData &gt;</label>
        <link refid="class_k_win_1_1_xcb_1_1_abstract_wrapper"/>
      </node>
      <node id="1">
        <label>KWin::Xcb::RandR::OutputProperty</label>
        <link refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KWin::Xcb::Wrapper&lt; OutputPropertyData, xcb_randr_output_t, xcb_atom_t, xcb_atom_t, uint32_t, uint32_t, uint8_t, uint8_t &gt;</label>
        <link refid="class_k_win_1_1_xcb_1_1_wrapper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="kwin/src/utils/xcbutils.h" line="1375" column="1" bodyfile="kwin/src/utils/xcbutils.h" bodystart="1376" bodyend="1464"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1abb699a4e3ea3f173e60d85ac002437b3" prot="protected" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>AbstractWrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a1f46aa9adb3a717c43737fc7fe7daab9" prot="protected" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>AbstractWrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1adfff363339b29090b2feef4879114d9f" prot="protected" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>AbstractWrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1ac521b3501b8dcfdbff4fb3298fcadb68" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>Cookie</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a6ba5713772402a437ad15f732268222c" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>data</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a3b2354e94544c999c88bf7b0be7954c8" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>data</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a5339f5d731224a1857bd61d8f5eb84ac" prot="protected" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>getReply</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a3a63032c158d81c214e7d09aa72a2e0f" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>isNull</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1ab2609efa22c0c5a1b46b2b0c015ed72c" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>isNull</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1abb8e0fe1808222260170b82f9830ac3f" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>isRetrieved</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1ad6f78ca350313db473b124463ef1bb3f" prot="private" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>m_type</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1acdb2ca786bff8a6b505e13e8b9975da5" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>operator bool</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a06a902b1ed009cf660351010813e1c38" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>operator bool</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1ad7b95ba92c89a4d20ec287e63ff3c2f3" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>operator-&gt;</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1aeff97879572d0ab9e7248d28eb39c348" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>operator=</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1ae0ae99eab4bd34c7c4deb505f17ae571" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>OutputProperty</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1aac4eac8c7ce5f98b113ec325064daa41" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>OutputProperty</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1afe263ed2fd2c80a29998e22d97b7b3fe" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>Reply</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a004fd9f828b0e012a779415670b1f40c" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>take</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1a0b0eec2d97224b16ae50b847f88209f3" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>toBool</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1aedba9d2650f4353afd785ea45039bf76" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>toBool</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1a28c0f9961355618ca01784aa55b75d88" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>toByteArray</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1a1a66fe7ba47c4ed0e6b0f973a4bcab95" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>toByteArray</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1ac9b79fdd9d1025f036832e698cff2b6a" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>value</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1a6e2cfdd93852c07688924b5b5721392d" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>value</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_rand_r_1_1_output_property_1a17aea88164d2e62e4f02447380b37602" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>value</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1aca5457de5f179ab7622756932df06f9a" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>window</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_wrapper_1a74d896264b1a1ae4bd6fe939a680357e" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>Wrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_wrapper_1a555f0bc8579000384237373469e688fd" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>Wrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_wrapper_1a78b0e612a535d3056272284e5503ca22" prot="public" virt="non-virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>Wrapper</name></member>
      <member refid="class_k_win_1_1_xcb_1_1_abstract_wrapper_1a9e7f67bc9b3fa6ce68217b17f910846e" prot="public" virt="virtual"><scope>KWin::Xcb::RandR::OutputProperty</scope><name>~AbstractWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
