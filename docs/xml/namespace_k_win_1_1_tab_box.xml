<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespace_k_win_1_1_tab_box" kind="namespace" language="C++">
    <compoundname>KWin::TabBox</compoundname>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_client_model" prot="public">KWin::TabBox::ClientModel</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_desktop_background" prot="public">KWin::TabBox::DesktopBackground</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_example_client_model" prot="public">KWin::TabBox::ExampleClientModel</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_k_win_tabbox_data" prot="public">KWin::TabBox::KWinTabboxData</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_layout_preview" prot="public">KWin::TabBox::LayoutPreview</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_shortcut_settings" prot="public">KWin::TabBox::ShortcutSettings</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_switcher_item" prot="public">KWin::TabBox::SwitcherItem</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_tab_box" prot="public">KWin::TabBox::TabBox</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_tab_box_config" prot="public">KWin::TabBox::TabBoxConfig</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_tab_box_config_private" prot="public">KWin::TabBox::TabBoxConfigPrivate</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_tab_box_handler" prot="public">KWin::TabBox::TabBoxHandler</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_impl" prot="public">KWin::TabBox::TabBoxHandlerImpl</innerclass>
    <innerclass refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_private" prot="public">KWin::TabBox::TabBoxHandlerPrivate</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_k_win_1_1_tab_box_1acd604a415aa2de1861bea6aa349f66af" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto KWin::TabBox::s_windows</definition>
        <argsstring></argsstring>
        <name>s_windows</name>
        <qualifiedname>KWin::TabBox::s_windows</qualifiedname>
        <initializer>= kli18n(&quot;Walk Through Windows&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.cpp" line="338" column="29" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_k_win_1_1_tab_box_1ae738d83e6dc223f4ec551be805ca40ef" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto KWin::TabBox::s_windowsRev</definition>
        <argsstring></argsstring>
        <name>s_windowsRev</name>
        <qualifiedname>KWin::TabBox::s_windowsRev</qualifiedname>
        <initializer>= kli18n(&quot;Walk Through Windows (Reverse)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.cpp" line="339" column="29" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_k_win_1_1_tab_box_1a6d4258b0e4e9faf27f1c49232b202721" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto KWin::TabBox::s_windowsAlt</definition>
        <argsstring></argsstring>
        <name>s_windowsAlt</name>
        <qualifiedname>KWin::TabBox::s_windowsAlt</qualifiedname>
        <initializer>= kli18n(&quot;Walk Through Windows Alternative&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.cpp" line="340" column="29" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_k_win_1_1_tab_box_1a82a28c4741d6127eeed2d7a32bafc4da" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto KWin::TabBox::s_windowsAltRev</definition>
        <argsstring></argsstring>
        <name>s_windowsAltRev</name>
        <qualifiedname>KWin::TabBox::s_windowsAltRev</qualifiedname>
        <initializer>= kli18n(&quot;Walk Through Windows Alternative (Reverse)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.cpp" line="341" column="29" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_k_win_1_1_tab_box_1a6f510596d946400e0d3021e99825fb60" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto KWin::TabBox::s_app</definition>
        <argsstring></argsstring>
        <name>s_app</name>
        <qualifiedname>KWin::TabBox::s_app</qualifiedname>
        <initializer>= kli18n(&quot;Walk Through Windows of Current Application&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.cpp" line="342" column="29" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_k_win_1_1_tab_box_1a90b3168b6abccf295be43b86d03984a4" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto KWin::TabBox::s_appRev</definition>
        <argsstring></argsstring>
        <name>s_appRev</name>
        <qualifiedname>KWin::TabBox::s_appRev</qualifiedname>
        <initializer>= kli18n(&quot;Walk Through Windows of Current <ref refid="class_k_win_1_1_application" kindref="compound">Application</ref> (Reverse)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.cpp" line="343" column="29" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_k_win_1_1_tab_box_1a21fcf91e262846bd282198d4d29b95c2" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto KWin::TabBox::s_appAlt</definition>
        <argsstring></argsstring>
        <name>s_appAlt</name>
        <qualifiedname>KWin::TabBox::s_appAlt</qualifiedname>
        <initializer>= kli18n(&quot;Walk Through Windows of Current <ref refid="class_k_win_1_1_application" kindref="compound">Application</ref> Alternative&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.cpp" line="344" column="29" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_k_win_1_1_tab_box_1a362966a5fe24cd6b33a6d1d96ee4a1ff" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto KWin::TabBox::s_appAltRev</definition>
        <argsstring></argsstring>
        <name>s_appAltRev</name>
        <qualifiedname>KWin::TabBox::s_appAltRev</qualifiedname>
        <initializer>= kli18n(&quot;Walk Through Windows of Current <ref refid="class_k_win_1_1_application" kindref="compound">Application</ref> Alternative (Reverse)&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.cpp" line="345" column="29" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_k_win_1_1_tab_box_1a77ae9ab90719bc7b7342e88a7e4f2036" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int</type>
        <definition>int KWin::TabBox::TABBOX_MODE_COUNT</definition>
        <argsstring></argsstring>
        <name>TABBOX_MODE_COUNT</name>
        <qualifiedname>KWin::TabBox::TABBOX_MODE_COUNT</qualifiedname>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.h" line="39" column="15" bodyfile="kwin/src/tabbox/tabbox.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_k_win_1_1_tab_box_1ab8e1cbfa02924a1537b961051b1a4038" prot="public" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler" kindref="compound">TabBoxHandler</ref> *</type>
        <definition>TabBoxHandler * KWin::TabBox::tabBox</definition>
        <argsstring></argsstring>
        <name>tabBox</name>
        <qualifiedname>KWin::TabBox::tabBox</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the global <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler" kindref="compound">TabBoxHandler</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabboxhandler.cpp" line="555" column="15" bodyfile="kwin/src/tabbox/tabboxhandler.cpp" bodystart="555" bodyend="-1" declfile="kwin/src/tabbox/tabboxhandler.h" declline="300" declcolumn="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_k_win_1_1_tab_box_1afb44776c9e8cbe2568c3ff1128549edb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool KWin::TabBox::areModKeysDepressed</definition>
        <argsstring>(const QKeySequence &amp;seq)</argsstring>
        <name>areModKeysDepressed</name>
        <qualifiedname>KWin::TabBox::areModKeysDepressed</qualifiedname>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/tabbox/tabbox.cpp" line="660" column="13" bodyfile="kwin/src/tabbox/tabbox.cpp" bodystart="660" bodyend="681"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> is a model based view for displaying a list while switching windows. This functionality is mostly referred to as Alt+Tab. <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> itself does not provide support for switching windows. This has to be done outside of <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> inside an independent controller.</para>
<para>The main entrance point to <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> is the class <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler" kindref="compound">TabBoxHandler</ref>, which has to be subclassed and implemented.</para>
<para>The behavior of the <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> is defined by the <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref> and has to be set in the <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler" kindref="compound">TabBoxHandler</ref>.</para>
<para>In order to use the <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> the <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref> has to be set. The model has to be initialized by calling <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a0ec37149b20e97a01c73622b776dad1d" kindref="member">TabBoxHandler::createModel()</ref>, as the model is undefined when the <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> is not active. The <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> is activated by <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a4474cf46a142bc64d418ecd68786a43a" kindref="member">TabBoxHandler::show()</ref>. Depending on the current set <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_config" kindref="compound">TabBoxConfig</ref> it is possible that the highlight windows effect activated and that the view is not displayed at all. As already mentioned the <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> does not handle any updating of the selected item. This has to be done by invoking <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1abe666340fa17a9b13d54d598444fad7b" kindref="member">TabBoxHandler::setCurrentIndex()</ref>. Nevertheless the <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler" kindref="compound">TabBoxHandler</ref> provides methods to query for the model index or the next or previous item, for a cursor position or for a given item. By invoking <ref refid="class_k_win_1_1_tab_box_1_1_tab_box_handler_1a4c2bb70440f803a93fdc1d86452fcddf" kindref="member">TabBoxHandler::hide()</ref> the view, the optional highlight windows effect are removed. The model is invalidated immediately. So if it is necessary to retrieve the last selected item this has to be done before calling the hide method.</para>
<para>The layout of the <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> View and the items is completely customizable. Therefore <ref refid="class_k_win_1_1_tab_box_1_1_tab_box" kindref="compound">TabBox</ref> provides a widget LayoutConfig which includes a live preview (in kcmkwin/kwintabbox). The layout of items can be defined by an xml document. That way the user is able to define own custom layouts. The view itself is made up of two widgets: one to show the complete list and one to show only the selected item. This way it is possible to have a view which shows for example a list containing only small icons and nevertheless show the title of the currently selected client. </para>
    </detaileddescription>
    <location file="kwin/src/kcms/tabbox/kwintabboxconfigform.h" line="27" column="1"/>
  </compounddef>
</doxygen>
