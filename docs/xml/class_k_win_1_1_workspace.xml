<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_workspace" kind="class" language="C++" prot="public">
    <compoundname>KWin::Workspace</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="workspace_8h" local="no">workspace.h</includes>
    <innerclass refid="struct_k_win_1_1_workspace_1_1_constraint" prot="private">KWin::Workspace::Constraint</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461" prot="public" static="no" strong="no">
        <type></type>
        <name>ActivityFlag</name>
        <qualifiedname>KWin::Workspace::ActivityFlag</qualifiedname>
        <enumvalue id="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" prot="public">
          <name>ActivityFocus</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461ac15f90b91a69d95617b1c1ff88bf1d14" prot="public">
          <name>ActivityFocusForce</name>
          <initializer>= 1 &lt;&lt; 1 | ActivityFocus</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a78fe29e8b597fd1711e6b95911549893" prot="public">
          <name>ActivityRaise</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="206" column="5" bodyfile="kwin/src/workspace.h" bodystart="206" bodyend="210"/>
      </memberdef>
      <memberdef kind="enum" id="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69" prot="public" static="no" strong="no">
        <type></type>
        <name>Direction</name>
        <qualifiedname>KWin::Workspace::Direction</qualifiedname>
        <enumvalue id="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a0addddb327e68da424c9afac55b41355" prot="public">
          <name>DirectionNorth</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a15f4c5efa2b0812013442472b1c3a8a8" prot="public">
          <name>DirectionEast</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69ab47c69147e9db336d33919ba7f6b7407" prot="public">
          <name>DirectionSouth</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69abbe324899c853ba3b231f973f844c426" prot="public">
          <name>DirectionWest</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a6f6aae4a8d6c7f7ad483034a351f1efe" prot="public">
          <name>DirectionPrev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69ae79e444678163cfc996bcc44c2038854" prot="public">
          <name>DirectionNext</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="358" column="5" bodyfile="kwin/src/workspace.h" bodystart="358" bodyend="365"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a4d6e2eb73e0b0b544661d5686c9af257" prot="private" static="no" mutable="no">
        <type>QList&lt; Constraint * &gt;</type>
        <definition>QList&lt;Constraint *&gt; KWin::Workspace::m_constraints</definition>
        <argsstring></argsstring>
        <name>m_constraints</name>
        <qualifiedname>KWin::Workspace::m_constraints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="671" column="11" bodyfile="kwin/src/workspace.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a9ad9e3c64f80ee13fdc2ebbdba100fd6" prot="private" static="no" mutable="no">
        <type>QWidget *</type>
        <definition>QWidget* KWin::Workspace::active_popup</definition>
        <argsstring></argsstring>
        <name>active_popup</name>
        <qualifiedname>KWin::Workspace::active_popup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="672" column="13" bodyfile="kwin/src/workspace.h" bodystart="672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ab8577a443946cc06135da34fe68741e5" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window* KWin::Workspace::m_activePopupWindow</definition>
        <argsstring></argsstring>
        <name>m_activePopupWindow</name>
        <qualifiedname>KWin::Workspace::m_activePopupWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="673" column="12" bodyfile="kwin/src/workspace.h" bodystart="673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a4943d4012d248f8ccb3b81e396461f93" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt;</type>
        <definition>QList&lt;Output *&gt; KWin::Workspace::m_outputs</definition>
        <argsstring></argsstring>
        <name>m_outputs</name>
        <qualifiedname>KWin::Workspace::m_outputs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="677" column="11" bodyfile="kwin/src/workspace.h" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a08cb2132c9823110aa89f30d52403cd2" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
        <definition>Output* KWin::Workspace::m_activeOutput</definition>
        <argsstring></argsstring>
        <name>m_activeOutput</name>
        <qualifiedname>KWin::Workspace::m_activeOutput</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="678" column="12" bodyfile="kwin/src/workspace.h" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1aad62591bb9af31bf9beef5751dce5f21" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt;</type>
        <definition>QList&lt;Output *&gt; KWin::Workspace::m_outputOrder</definition>
        <argsstring></argsstring>
        <name>m_outputOrder</name>
        <qualifiedname>KWin::Workspace::m_outputOrder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="679" column="11" bodyfile="kwin/src/workspace.h" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a6a0a5b526387aeededc82f7df8a60f8a" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window* KWin::Workspace::m_activeWindow</definition>
        <argsstring></argsstring>
        <name>m_activeWindow</name>
        <qualifiedname>KWin::Workspace::m_activeWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="681" column="12" bodyfile="kwin/src/workspace.h" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a0032dc02a6283849276e48adf95ee13b" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window* KWin::Workspace::m_lastActiveWindow</definition>
        <argsstring></argsstring>
        <name>m_lastActiveWindow</name>
        <qualifiedname>KWin::Workspace::m_lastActiveWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="682" column="12" bodyfile="kwin/src/workspace.h" bodystart="682" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a9507b9daaa6ace1a548f95178d0da11c" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window* KWin::Workspace::m_moveResizeWindow</definition>
        <argsstring></argsstring>
        <name>m_moveResizeWindow</name>
        <qualifiedname>KWin::Workspace::m_moveResizeWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="683" column="12" bodyfile="kwin/src/workspace.h" bodystart="683" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ab5b6d26f097defdba161baf521fecb8c" prot="private" static="no" mutable="no">
        <type>QTimer *</type>
        <definition>QTimer* KWin::Workspace::delayFocusTimer</definition>
        <argsstring></argsstring>
        <name>delayFocusTimer</name>
        <qualifiedname>KWin::Workspace::delayFocusTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="686" column="12" bodyfile="kwin/src/workspace.h" bodystart="686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a22c6db28ee8fe5175eb751a8766de9ab" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window* KWin::Workspace::m_delayFocusWindow</definition>
        <argsstring></argsstring>
        <name>m_delayFocusWindow</name>
        <qualifiedname>KWin::Workspace::m_delayFocusWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="687" column="12" bodyfile="kwin/src/workspace.h" bodystart="687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a9d95bfcedc18a95b0f24a26592a853bc" prot="private" static="no" mutable="no">
        <type>QPointF</type>
        <definition>QPointF KWin::Workspace::focusMousePos</definition>
        <argsstring></argsstring>
        <name>focusMousePos</name>
        <qualifiedname>KWin::Workspace::focusMousePos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="688" column="13" bodyfile="kwin/src/workspace.h" bodystart="688" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a3196fd83b4f4c90080493340dc599209" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt;Window *&gt; KWin::Workspace::m_windows</definition>
        <argsstring></argsstring>
        <name>m_windows</name>
        <qualifiedname>KWin::Workspace::m_windows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="690" column="11" bodyfile="kwin/src/workspace.h" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1aeec60010418e6d9b47a5d5d38f888721" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt;Window *&gt; KWin::Workspace::deleted</definition>
        <argsstring></argsstring>
        <name>deleted</name>
        <qualifiedname>KWin::Workspace::deleted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="691" column="11" bodyfile="kwin/src/workspace.h" bodystart="691" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a4f59ba3cc44bbe7d7b090bef86108649" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt;Window *&gt; KWin::Workspace::unconstrained_stacking_order</definition>
        <argsstring></argsstring>
        <name>unconstrained_stacking_order</name>
        <qualifiedname>KWin::Workspace::unconstrained_stacking_order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="693" column="11" bodyfile="kwin/src/workspace.h" bodystart="693" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a5991018e62129ed6dbf94c92f097699b" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt;Window *&gt; KWin::Workspace::stacking_order</definition>
        <argsstring></argsstring>
        <name>stacking_order</name>
        <qualifiedname>KWin::Workspace::stacking_order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="694" column="11" bodyfile="kwin/src/workspace.h" bodystart="694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a519288eebc54521bd52176017a236383" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Workspace::force_restacking</definition>
        <argsstring></argsstring>
        <name>force_restacking</name>
        <qualifiedname>KWin::Workspace::force_restacking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="695" column="10" bodyfile="kwin/src/workspace.h" bodystart="695" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a9f0428c2bcd1f0f30d269dd9bd7a37f1" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt;Window *&gt; KWin::Workspace::should_get_focus</definition>
        <argsstring></argsstring>
        <name>should_get_focus</name>
        <qualifiedname>KWin::Workspace::should_get_focus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="696" column="11" bodyfile="kwin/src/workspace.h" bodystart="696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a098ffc498e9972fd1aed82987952667c" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt;Window *&gt; KWin::Workspace::attention_chain</definition>
        <argsstring></argsstring>
        <name>attention_chain</name>
        <qualifiedname>KWin::Workspace::attention_chain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="697" column="11" bodyfile="kwin/src/workspace.h" bodystart="697" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1abbaef625b79714a22074c5531fad960d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Workspace::showing_desktop</definition>
        <argsstring></argsstring>
        <name>showing_desktop</name>
        <qualifiedname>KWin::Workspace::showing_desktop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="699" column="10" bodyfile="kwin/src/workspace.h" bodystart="699" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a254b80d431e5a103b0dba0d3315808ee" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_k_win_1_1_group" kindref="compound">Group</ref> * &gt;</type>
        <definition>QList&lt;Group *&gt; KWin::Workspace::groups</definition>
        <argsstring></argsstring>
        <name>groups</name>
        <qualifiedname>KWin::Workspace::groups</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="701" column="11" bodyfile="kwin/src/workspace.h" bodystart="701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a7fd49a69a8a7bb00c0ba7cb88292c2c0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Workspace::was_user_interaction</definition>
        <argsstring></argsstring>
        <name>was_user_interaction</name>
        <qualifiedname>KWin::Workspace::was_user_interaction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="703" column="10" bodyfile="kwin/src/workspace.h" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a2582b33741019f6577e01cc8957d8a66" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Workspace::block_focus</definition>
        <argsstring></argsstring>
        <name>block_focus</name>
        <qualifiedname>KWin::Workspace::block_focus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="710" column="9" bodyfile="kwin/src/workspace.h" bodystart="710" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ace2735120f9d47602268faee6f57c336" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_user_actions_menu" kindref="compound">UserActionsMenu</ref> *</type>
        <definition>UserActionsMenu* KWin::Workspace::m_userActionsMenu</definition>
        <argsstring></argsstring>
        <name>m_userActionsMenu</name>
        <qualifiedname>KWin::Workspace::m_userActionsMenu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Holds the menu containing the user actions which is shown on e.g. right click the window decoration. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="716" column="21" bodyfile="kwin/src/workspace.h" bodystart="716" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ad22b5cd4c40706e9ccf14e0f7b8ca4d6" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_shortcut_dialog" kindref="compound">ShortcutDialog</ref> *</type>
        <definition>ShortcutDialog* KWin::Workspace::m_windowKeysDialog</definition>
        <argsstring></argsstring>
        <name>m_windowKeysDialog</name>
        <qualifiedname>KWin::Workspace::m_windowKeysDialog</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="720" column="20" bodyfile="kwin/src/workspace.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1adf4155bb6953fd746e3a052356b9862b" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window* KWin::Workspace::m_windowKeysWindow</definition>
        <argsstring></argsstring>
        <name>m_windowKeysWindow</name>
        <qualifiedname>KWin::Workspace::m_windowKeysWindow</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="721" column="12" bodyfile="kwin/src/workspace.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a4cb35118a891f822a9821f2e1ae87488" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Workspace::m_globalShortcutsDisabledForWindow</definition>
        <argsstring></argsstring>
        <name>m_globalShortcutsDisabledForWindow</name>
        <qualifiedname>KWin::Workspace::m_globalShortcutsDisabledForWindow</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="722" column="10" bodyfile="kwin/src/workspace.h" bodystart="722" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a10d9cddb3026e376da6e548bea82a543" prot="private" static="no" mutable="no">
        <type>QTimer</type>
        <definition>QTimer KWin::Workspace::reconfigureTimer</definition>
        <argsstring></argsstring>
        <name>reconfigureTimer</name>
        <qualifiedname>KWin::Workspace::reconfigureTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="725" column="12" bodyfile="kwin/src/workspace.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a2e46c68c6d625e241c56f917954c4ca3" prot="private" static="no" mutable="no">
        <type>QHash&lt; const <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *, QRectF &gt;</type>
        <definition>QHash&lt;const VirtualDesktop *, QRectF&gt; KWin::Workspace::m_workAreas</definition>
        <argsstring></argsstring>
        <name>m_workAreas</name>
        <qualifiedname>KWin::Workspace::m_workAreas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="731" column="11" bodyfile="kwin/src/workspace.h" bodystart="731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a1bd3f5ddb8b5f5ef42e53ab7bb2a0c65" prot="private" static="no" mutable="no">
        <type>QHash&lt; const <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *, <ref refid="namespace_k_win_1a98fbb198fd4d068d56bb796e99bfe8c5" kindref="member">StrutRects</ref> &gt;</type>
        <definition>QHash&lt;const VirtualDesktop *, StrutRects&gt; KWin::Workspace::m_restrictedAreas</definition>
        <argsstring></argsstring>
        <name>m_restrictedAreas</name>
        <qualifiedname>KWin::Workspace::m_restrictedAreas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="732" column="11" bodyfile="kwin/src/workspace.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1acf452ecd0d8cfd61affc67a366348594" prot="private" static="no" mutable="no">
        <type>QHash&lt; const <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *, QHash&lt; const <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *, QRectF &gt; &gt;</type>
        <definition>QHash&lt;const VirtualDesktop *, QHash&lt;const Output *, QRectF&gt; &gt; KWin::Workspace::m_screenAreas</definition>
        <argsstring></argsstring>
        <name>m_screenAreas</name>
        <qualifiedname>KWin::Workspace::m_screenAreas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="733" column="11" bodyfile="kwin/src/workspace.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ac725c1ed51810a48538c42e85399b79f" prot="private" static="no" mutable="no">
        <type>QRect</type>
        <definition>QRect KWin::Workspace::m_geometry</definition>
        <argsstring></argsstring>
        <name>m_geometry</name>
        <qualifiedname>KWin::Workspace::m_geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="734" column="11" bodyfile="kwin/src/workspace.h" bodystart="734" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ac8b9321c85726436fb4e3385e5937491" prot="private" static="no" mutable="no">
        <type>QHash&lt; const <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *, QRect &gt;</type>
        <definition>QHash&lt;const Output *, QRect&gt; KWin::Workspace::m_oldScreenGeometries</definition>
        <argsstring></argsstring>
        <name>m_oldScreenGeometries</name>
        <qualifiedname>KWin::Workspace::m_oldScreenGeometries</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="736" column="11" bodyfile="kwin/src/workspace.h" bodystart="736" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ae5489499450903a09882baf326dfb85a" prot="private" static="no" mutable="no">
        <type>QHash&lt; const <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *, <ref refid="namespace_k_win_1a98fbb198fd4d068d56bb796e99bfe8c5" kindref="member">StrutRects</ref> &gt;</type>
        <definition>QHash&lt;const VirtualDesktop *, StrutRects&gt; KWin::Workspace::m_oldRestrictedAreas</definition>
        <argsstring></argsstring>
        <name>m_oldRestrictedAreas</name>
        <qualifiedname>KWin::Workspace::m_oldRestrictedAreas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="737" column="11" bodyfile="kwin/src/workspace.h" bodystart="737" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a5dd0701726188878f67530254e5b5253" prot="private" static="no" mutable="no">
        <type>QTimer</type>
        <definition>QTimer KWin::Workspace::m_rearrangeTimer</definition>
        <argsstring></argsstring>
        <name>m_rearrangeTimer</name>
        <qualifiedname>KWin::Workspace::m_rearrangeTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="738" column="12" bodyfile="kwin/src/workspace.h" bodystart="738" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ad674743799e5197d091621d5a7afad40" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Workspace::m_inRearrange</definition>
        <argsstring></argsstring>
        <name>m_inRearrange</name>
        <qualifiedname>KWin::Workspace::m_inRearrange</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="739" column="10" bodyfile="kwin/src/workspace.h" bodystart="739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1aac9dba0f1461e9d1439dd5cbf3e7abed" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Workspace::m_setActiveWindowRecursion</definition>
        <argsstring></argsstring>
        <name>m_setActiveWindowRecursion</name>
        <qualifiedname>KWin::Workspace::m_setActiveWindowRecursion</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="741" column="9" bodyfile="kwin/src/workspace.h" bodystart="741" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a9395bdd33e6dc1d8ff52ae1543626639" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KWin::Workspace::m_blockStackingUpdates</definition>
        <argsstring></argsstring>
        <name>m_blockStackingUpdates</name>
        <qualifiedname>KWin::Workspace::m_blockStackingUpdates</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="742" column="9" bodyfile="kwin/src/workspace.h" bodystart="742" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a2315cc57ae051564f787dd178287d3e7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KWin::Workspace::m_blockedPropagatingNewWindows</definition>
        <argsstring></argsstring>
        <name>m_blockedPropagatingNewWindows</name>
        <qualifiedname>KWin::Workspace::m_blockedPropagatingNewWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="743" column="10" bodyfile="kwin/src/workspace.h" bodystart="743" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a968213a1e1ec97dc6e8b677c76a6493b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_kill_window" kindref="compound">KillWindow</ref> &gt;</type>
        <definition>std::unique_ptr&lt;KillWindow&gt; KWin::Workspace::m_windowKiller</definition>
        <argsstring></argsstring>
        <name>m_windowKiller</name>
        <qualifiedname>KWin::Workspace::m_windowKiller</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="746" column="21" bodyfile="kwin/src/workspace.h" bodystart="746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a0846bc0c90e40189dfa61b3a4095a29c" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_session_manager" kindref="compound">SessionManager</ref> *</type>
        <definition>SessionManager* KWin::Workspace::m_sessionManager</definition>
        <argsstring></argsstring>
        <name>m_sessionManager</name>
        <qualifiedname>KWin::Workspace::m_sessionManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="748" column="20" bodyfile="kwin/src/workspace.h" bodystart="748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a560ca659902cc3524a807d091c350181" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_focus_chain" kindref="compound">FocusChain</ref> &gt;</type>
        <definition>std::unique_ptr&lt;FocusChain&gt; KWin::Workspace::m_focusChain</definition>
        <argsstring></argsstring>
        <name>m_focusChain</name>
        <qualifiedname>KWin::Workspace::m_focusChain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="749" column="21" bodyfile="kwin/src/workspace.h" bodystart="749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a0caa3bb2abdeeed3fec77dbfb279a10e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_application_menu" kindref="compound">ApplicationMenu</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ApplicationMenu&gt; KWin::Workspace::m_applicationMenu</definition>
        <argsstring></argsstring>
        <name>m_applicationMenu</name>
        <qualifiedname>KWin::Workspace::m_applicationMenu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="750" column="21" bodyfile="kwin/src/workspace.h" bodystart="750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a8e13d67b2156ff21993c9cfe2075d0e3" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_decoration_1_1_decoration_bridge" kindref="compound">Decoration::DecorationBridge</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Decoration::DecorationBridge&gt; KWin::Workspace::m_decorationBridge</definition>
        <argsstring></argsstring>
        <name>m_decorationBridge</name>
        <qualifiedname>KWin::Workspace::m_decorationBridge</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="751" column="21" bodyfile="kwin/src/workspace.h" bodystart="751" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ad9459557926cc4099a7a48a8181641e5" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_outline" kindref="compound">Outline</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Outline&gt; KWin::Workspace::m_outline</definition>
        <argsstring></argsstring>
        <name>m_outline</name>
        <qualifiedname>KWin::Workspace::m_outline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="752" column="21" bodyfile="kwin/src/workspace.h" bodystart="752" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a4268fbf38ac4c881c49c8a4486bed154" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_placement" kindref="compound">Placement</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Placement&gt; KWin::Workspace::m_placement</definition>
        <argsstring></argsstring>
        <name>m_placement</name>
        <qualifiedname>KWin::Workspace::m_placement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="753" column="21" bodyfile="kwin/src/workspace.h" bodystart="753" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ad4124d7f543146a5bfa1c4e8b05fc25c" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_rule_book" kindref="compound">RuleBook</ref> &gt;</type>
        <definition>std::unique_ptr&lt;RuleBook&gt; KWin::Workspace::m_rulebook</definition>
        <argsstring></argsstring>
        <name>m_rulebook</name>
        <qualifiedname>KWin::Workspace::m_rulebook</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="754" column="21" bodyfile="kwin/src/workspace.h" bodystart="754" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a5b960a38bab711e24c87a85673c2df5c" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_screen_edges" kindref="compound">ScreenEdges</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ScreenEdges&gt; KWin::Workspace::m_screenEdges</definition>
        <argsstring></argsstring>
        <name>m_screenEdges</name>
        <qualifiedname>KWin::Workspace::m_screenEdges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="755" column="21" bodyfile="kwin/src/workspace.h" bodystart="755" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a99e1ec3ee5047b86ef3ddaad2f6ba631" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_placement_tracker" kindref="compound">PlacementTracker</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PlacementTracker&gt; KWin::Workspace::m_placementTracker</definition>
        <argsstring></argsstring>
        <name>m_placementTracker</name>
        <qualifiedname>KWin::Workspace::m_placementTracker</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="762" column="21" bodyfile="kwin/src/workspace.h" bodystart="762" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1ad4bd4d7ece5aff1caf5659b4968b2faa" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_placeholder_output" kindref="compound">PlaceholderOutput</ref> *</type>
        <definition>PlaceholderOutput* KWin::Workspace::m_placeholderOutput</definition>
        <argsstring></argsstring>
        <name>m_placeholderOutput</name>
        <qualifiedname>KWin::Workspace::m_placeholderOutput</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="764" column="23" bodyfile="kwin/src/workspace.h" bodystart="764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a088677907c3eb1ea86d20104f15c3e02" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_placeholder_input_event_filter" kindref="compound">PlaceholderInputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PlaceholderInputEventFilter&gt; KWin::Workspace::m_placeholderFilter</definition>
        <argsstring></argsstring>
        <name>m_placeholderFilter</name>
        <qualifiedname>KWin::Workspace::m_placeholderFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="765" column="21" bodyfile="kwin/src/workspace.h" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a01407cc57b04933261447e8436686bc4" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *, std::unique_ptr&lt; <ref refid="class_k_win_1_1_tile_manager" kindref="compound">TileManager</ref> &gt; &gt;</type>
        <definition>std::map&lt;Output *, std::unique_ptr&lt;TileManager&gt; &gt; KWin::Workspace::m_tileManagers</definition>
        <argsstring></argsstring>
        <name>m_tileManagers</name>
        <qualifiedname>KWin::Workspace::m_tileManagers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="766" column="14" bodyfile="kwin/src/workspace.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1abde945b92c5b1936ba0d5a9b289ec5f4" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_output_configuration_store" kindref="compound">OutputConfigurationStore</ref> &gt;</type>
        <definition>std::unique_ptr&lt;OutputConfigurationStore&gt; KWin::Workspace::m_outputConfigStore</definition>
        <argsstring></argsstring>
        <name>m_outputConfigStore</name>
        <qualifiedname>KWin::Workspace::m_outputConfigStore</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="767" column="21" bodyfile="kwin/src/workspace.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a059233d3d8b7b5d8e678564c0433ce0b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_lid_switch_tracker" kindref="compound">LidSwitchTracker</ref> &gt;</type>
        <definition>std::unique_ptr&lt;LidSwitchTracker&gt; KWin::Workspace::m_lidSwitchTracker</definition>
        <argsstring></argsstring>
        <name>m_lidSwitchTracker</name>
        <qualifiedname>KWin::Workspace::m_lidSwitchTracker</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="768" column="21" bodyfile="kwin/src/workspace.h" bodystart="768" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1aea4e709e623f434e270cf6f361725647" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_orientation_sensor" kindref="compound">OrientationSensor</ref> &gt;</type>
        <definition>std::unique_ptr&lt;OrientationSensor&gt; KWin::Workspace::m_orientationSensor</definition>
        <argsstring></argsstring>
        <name>m_orientationSensor</name>
        <qualifiedname>KWin::Workspace::m_orientationSensor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="769" column="21" bodyfile="kwin/src/workspace.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a91d55b38bf5262e660bb5a347817142c" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_k_win_1_1_dpms_input_event_filter" kindref="compound">DpmsInputEventFilter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;DpmsInputEventFilter&gt; KWin::Workspace::m_dpmsFilter</definition>
        <argsstring></argsstring>
        <name>m_dpmsFilter</name>
        <qualifiedname>KWin::Workspace::m_dpmsFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="770" column="21" bodyfile="kwin/src/workspace.h" bodystart="770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a8d715506c6a622cb311d6c370891828d" prot="private" static="no" mutable="no">
        <type>KConfigWatcher::Ptr</type>
        <definition>KConfigWatcher::Ptr KWin::Workspace::m_kdeglobalsWatcher</definition>
        <argsstring></argsstring>
        <name>m_kdeglobalsWatcher</name>
        <qualifiedname>KWin::Workspace::m_kdeglobalsWatcher</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="771" column="25" bodyfile="kwin/src/workspace.h" bodystart="771" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_workspace_1a756becc8bce1d2302726eab8fd40dd93" prot="private" static="yes" mutable="no">
        <type><ref refid="class_k_win_1_1_workspace" kindref="compound">Workspace</ref> *</type>
        <definition>Workspace * KWin::Workspace::_self</definition>
        <argsstring></argsstring>
        <name>_self</name>
        <qualifiedname>KWin::Workspace::_self</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="727" column="22" bodyfile="kwin/src/workspace.h" bodystart="727" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_k_win_1_1_workspace_1abd680430e0a19c1a0806c197ce217a30" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class StackingUpdatesBlocker</definition>
        <argsstring></argsstring>
        <name>StackingUpdatesBlocker</name>
        <qualifiedname>KWin::Workspace::StackingUpdatesBlocker</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_stacking_updates_blocker" kindref="compound">StackingUpdatesBlocker</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="744" column="18" bodyfile="kwin/src/workspace.h" bodystart="744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_workspace_1a7175d6e6f28f86cbf7473fdaf05fafb2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool performTransiencyCheck</definition>
        <argsstring>()</argsstring>
        <name>performTransiencyCheck</name>
        <qualifiedname>KWin::Workspace::performTransiencyCheck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="774" column="17"/>
      </memberdef>
      <memberdef kind="friend" id="class_k_win_1_1_workspace_1a5d1ca94655caf88ecef91f95edd546ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_workspace" kindref="compound">Workspace</ref> *</type>
        <definition>Workspace * workspace</definition>
        <argsstring>()</argsstring>
        <name>workspace</name>
        <qualifiedname>KWin::Workspace::workspace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="775" column="22" bodyfile="kwin/src/workspace.h" bodystart="871" bodyend="874"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a108eca7df877d9ac73f744c18968e39a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Workspace::Workspace</definition>
        <argsstring>()</argsstring>
        <name>Workspace</name>
        <qualifiedname>KWin::Workspace::Workspace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="92" column="14" bodyfile="kwin/src/workspace.cpp" bodystart="103" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a1726fcb427270c67eec9affb5b79c316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Workspace::~Workspace</definition>
        <argsstring>() override</argsstring>
        <name>~Workspace</name>
        <qualifiedname>KWin::Workspace::~Workspace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="93" column="5" bodyfile="kwin/src/workspace.cpp" bodystart="383" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1abd7e75495fda80045e3dcae4dc3aa3c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::hasWindow</definition>
        <argsstring>(const Window *)</argsstring>
        <name>hasWindow</name>
        <qualifiedname>KWin::Workspace::hasWindow</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="100" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1955" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a3dbf8dfd7ca2f6e400f885294d11392c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::findWindow</definition>
        <argsstring>(const QUuid &amp;internalId) const</argsstring>
        <name>findWindow</name>
        <qualifiedname>KWin::Workspace::findWindow</qualifiedname>
        <param>
          <type>const QUuid &amp;</type>
          <declname>internalId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="154" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="1943" bodyend="1948"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ab0cf7f32dd8381d9788cf8963ac8c8af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::findWindow</definition>
        <argsstring>(std::function&lt; bool(const Window *)&gt; func) const</argsstring>
        <name>findWindow</name>
        <qualifiedname>KWin::Workspace::findWindow</qualifiedname>
        <param>
          <type>std::function&lt; bool(const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *)&gt;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="155" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="1938" bodyend="1941"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a386058ca536b6c5c61861fe9d634fc09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::forEachWindow</definition>
        <argsstring>(std::function&lt; void(Window *)&gt; func)</argsstring>
        <name>forEachWindow</name>
        <qualifiedname>KWin::Workspace::forEachWindow</qualifiedname>
        <param>
          <type>std::function&lt; void(<ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *)&gt;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="156" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1950" bodyend="1953"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a03c7a8cc39cb67397584eda6b7e3657b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::findInternal</definition>
        <argsstring>(QWindow *w) const</argsstring>
        <name>findInternal</name>
        <qualifiedname>KWin::Workspace::findInternal</qualifiedname>
        <param>
          <type>QWindow *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Finds a <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> for the internal window <computeroutput>w</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Internal window means a window created by <ref refid="namespace_k_win" kindref="compound">KWin</ref> itself. On X11 this is an Unmanaged and mapped by the window id, on <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref> a XdgShellClient mapped on the internal window id.</para>
<para><simplesect kind="return"><para><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="166" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="1963" bodyend="1976"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Workspace::clientArea</definition>
        <argsstring>(clientAreaOption, const Output *output, const VirtualDesktop *desktop) const</argsstring>
        <name>clientArea</name>
        <qualifiedname>KWin::Workspace::clientArea</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22" kindref="member">clientAreaOption</ref></type>
          <defname>opt</defname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the area available for windows. This is the desktop geometry minus windows on the dock. <ref refid="class_k_win_1_1_placement" kindref="compound">Placement</ref> algorithms should refer to this rather than Screens::geometry. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="168" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="2398" bodyend="2421"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a447fb8861ea3cade3afabb9a6b31aafb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Workspace::clientArea</definition>
        <argsstring>(clientAreaOption, const Window *window) const</argsstring>
        <name>clientArea</name>
        <qualifiedname>KWin::Workspace::clientArea</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22" kindref="member">clientAreaOption</ref></type>
          <defname>opt</defname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="169" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="2423" bodyend="2426"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a70432e1d03005a7d58c81cf5d0dd3928" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Workspace::clientArea</definition>
        <argsstring>(clientAreaOption, const Window *window, const Output *output) const</argsstring>
        <name>clientArea</name>
        <qualifiedname>KWin::Workspace::clientArea</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22" kindref="member">clientAreaOption</ref></type>
          <defname>opt</defname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="170" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="2428" bodyend="2437"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a771ff2f28d59f374a9abe733b9fb3828" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Workspace::clientArea</definition>
        <argsstring>(clientAreaOption, const Window *window, const QPointF &amp;pos) const</argsstring>
        <name>clientArea</name>
        <qualifiedname>KWin::Workspace::clientArea</qualifiedname>
        <param>
          <type><ref refid="namespace_k_win_1a443ac4eb2683c028e5f174031c12ce22" kindref="member">clientAreaOption</ref></type>
          <defname>opt</defname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="171" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="2439" bodyend="2442"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aca2679a62471e374db5227ae4491b4a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect KWin::Workspace::geometry</definition>
        <argsstring>() const</argsstring>
        <name>geometry</name>
        <qualifiedname>KWin::Workspace::geometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the geometry of this <ref refid="class_k_win_1_1_workspace" kindref="compound">Workspace</ref>, i.e. the bounding rectangle of all outputs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="176" column="11" bodyfile="kwin/src/workspace.cpp" bodystart="2444" bodyend="2447"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a9a4e6179b2a0380efac1a5c895348c8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a98fbb198fd4d068d56bb796e99bfe8c5" kindref="member">StrutRects</ref></type>
        <definition>StrutRects KWin::Workspace::restrictedMoveArea</definition>
        <argsstring>(const VirtualDesktop *desktop, StrutAreas areas=StrutAreaAll) const</argsstring>
        <name>restrictedMoveArea</name>
        <qualifiedname>KWin::Workspace::restrictedMoveArea</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type>StrutAreas</type>
          <declname>areas</declname>
          <defval><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1faeb2d1af5e7d3993721032b60c90ee565" kindref="member">StrutAreaAll</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="177" column="16" bodyfile="kwin/src/workspace.cpp" bodystart="2449" bodyend="2464"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ad9092913f404881543b9c3e4e44f22a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::initializing</definition>
        <argsstring>() const</argsstring>
        <name>initializing</name>
        <qualifiedname>KWin::Workspace::initializing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="179" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aef0b408ec096ffd9e3e63d507bfeeca6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
        <definition>Output * KWin::Workspace::xineramaIndexToOutput</definition>
        <argsstring>(int index) const</argsstring>
        <name>xineramaIndexToOutput</name>
        <qualifiedname>KWin::Workspace::xineramaIndexToOutput</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="181" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a953322eb1bc173122feaab3046b9aee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setOutputOrder</definition>
        <argsstring>(const QList&lt; Output * &gt; &amp;order)</argsstring>
        <name>setOutputOrder</name>
        <qualifiedname>KWin::Workspace::setOutputOrder</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &amp;</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="183" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2529" bodyend="2535"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a3b36987ac646fd260310ef4e95a7d236" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt;</type>
        <definition>QList&lt; Output * &gt; KWin::Workspace::outputOrder</definition>
        <argsstring>() const</argsstring>
        <name>outputOrder</name>
        <qualifiedname>KWin::Workspace::outputOrder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="184" column="11" bodyfile="kwin/src/workspace.cpp" bodystart="2537" bodyend="2540"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a5c706b5fddc7707a36576936450d86b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
        <definition>Output * KWin::Workspace::activeOutput</definition>
        <argsstring>() const</argsstring>
        <name>activeOutput</name>
        <qualifiedname>KWin::Workspace::activeOutput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="186" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="2542" bodyend="2545"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1abe694aeb41eaff7b515070ad0c11dba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setActiveOutput</definition>
        <argsstring>(Output *output)</argsstring>
        <name>setActiveOutput</name>
        <qualifiedname>KWin::Workspace::setActiveOutput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="187" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2547" bodyend="2550"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a9284bcfe646f63d1ce72f53fbeb04ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setActiveOutput</definition>
        <argsstring>(const QPointF &amp;pos)</argsstring>
        <name>setActiveOutput</name>
        <qualifiedname>KWin::Workspace::setActiveOutput</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="188" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2552" bodyend="2555"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::activeWindow</definition>
        <argsstring>() const</argsstring>
        <name>activeWindow</name>
        <qualifiedname>KWin::Workspace::activeWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the active window, i.e. the window that has the focus (or None if no window has the focus) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="194" column="12" bodyfile="kwin/src/workspace.h" bodystart="806" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a0a94c694f53fc655c0a257c0e17a7db3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::mostRecentlyActivatedWindow</definition>
        <argsstring>() const</argsstring>
        <name>mostRecentlyActivatedWindow</name>
        <qualifiedname>KWin::Workspace::mostRecentlyActivatedWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> that was activated, but it&apos;s not yet really <ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow()</ref>, because we didn&apos;t process yet the matching FocusIn event. Used mostly in focus stealing prevention code. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="200" column="12" bodyfile="kwin/src/workspace.h" bodystart="811" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a4097a6134a489cb0497843bd4ff73548" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::windowUnderMouse</definition>
        <argsstring>(Output *output) const</argsstring>
        <name>windowUnderMouse</name>
        <qualifiedname>KWin::Workspace::windowUnderMouse</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="202" column="12" bodyfile="kwin/src/activation.cpp" bodystart="440" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::activateWindow</definition>
        <argsstring>(Window *window, bool force=false)</argsstring>
        <name>activateWindow</name>
        <qualifiedname>KWin::Workspace::activateWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tries to activate the window <emphasis>window</emphasis>. This function performs what you expect when clicking the respective entry in a taskbar: showing and raising the window (this may imply switching to the another virtual desktop) and putting the focus onto it. Once X really gave focus to the window window as requested, the window itself will call <ref refid="class_k_win_1_1_workspace_1aafa49cabb69a96aef0140b23c791b5f7" kindref="member">setActiveWindow()</ref> and the operation is complete. This may not happen with certain focus policies, though.</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_workspace_1aafa49cabb69a96aef0140b23c791b5f7" kindref="member">setActiveWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" kindref="member">requestFocus</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="204" column="10" bodyfile="kwin/src/activation.cpp" bodystart="294" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::requestFocus</definition>
        <argsstring>(Window *window, bool force=false)</argsstring>
        <name>requestFocus</name>
        <qualifiedname>KWin::Workspace::requestFocus</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tries to activate the window by asking X for the input focus. This function does not perform any show, raise or desktop switching. See <ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">Workspace::activateWindow()</ref> instead.</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" kindref="member">activateWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="205" column="10" bodyfile="kwin/src/activation.cpp" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ac5270fc5d7e4887762c87015c4b92e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::takeActivity</definition>
        <argsstring>(Window *window, ActivityFlags flags)</argsstring>
        <name>takeActivity</name>
        <qualifiedname>KWin::Workspace::takeActivity</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>ActivityFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="212" column="10" bodyfile="kwin/src/activation.cpp" bodystart="372" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a92701686bcdf74405f2d12224e26ab9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::restoreFocus</definition>
        <argsstring>()</argsstring>
        <name>restoreFocus</name>
        <qualifiedname>KWin::Workspace::restoreFocus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called from <ref refid="class_k_win_1_1_x11_window" kindref="compound">X11Window</ref> after FocusIn that wasn&apos;t initiated by <ref refid="namespace_k_win" kindref="compound">KWin</ref> and the window wasn&apos;t allowed to activate.</para>
<para>Returns <computeroutput>true</computeroutput> if the focus has been restored successfully; otherwise returns <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="213" column="10" bodyfile="kwin/src/activation.cpp" bodystart="615" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a6c0fdb3d0f5b817bff878b4fdbd0527a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::gotFocusIn</definition>
        <argsstring>(const Window *window)</argsstring>
        <name>gotFocusIn</name>
        <qualifiedname>KWin::Workspace::gotFocusIn</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="214" column="10" bodyfile="kwin/src/activation.cpp" bodystart="552" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1afd242a3bcbbb827e19dbbcb1dce9d5e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setShouldGetFocus</definition>
        <argsstring>(Window *window)</argsstring>
        <name>setShouldGetFocus</name>
        <qualifiedname>KWin::Workspace::setShouldGetFocus</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="215" column="10" bodyfile="kwin/src/activation.cpp" bodystart="564" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ab8372aef950cf6ec71fc37e8b5b13d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::activateNextWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>activateNextWindow</name>
        <qualifiedname>KWin::Workspace::activateNextWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="216" column="10" bodyfile="kwin/src/activation.cpp" bodystart="463" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1afad02da0d5b5114e5f3259dca8499bc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::focusChangeEnabled</definition>
        <argsstring>()</argsstring>
        <name>focusChangeEnabled</name>
        <qualifiedname>KWin::Workspace::focusChangeEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="217" column="10" bodyfile="kwin/src/workspace.h" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aa847663e0f3e34c726ab2259866d2fb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setMoveResizeWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>setMoveResizeWindow</name>
        <qualifiedname>KWin::Workspace::setMoveResizeWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicates that the given <emphasis>window</emphasis> is being moved or resized by the user.</para>
<para>Marks the window as being moved or resized by the user. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="225" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2972" bodyend="2982"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a2a3f1825a379b19704a3af3fbbb0b0ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Workspace::adjustClientArea</definition>
        <argsstring>(Window *window, const QRectF &amp;area) const</argsstring>
        <name>adjustClientArea</name>
        <qualifiedname>KWin::Workspace::adjustClientArea</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>area</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="227" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="2226" bodyend="2280"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a517f5ba087aeb5064cd69f9e1c87e47d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF KWin::Workspace::adjustWindowPosition</definition>
        <argsstring>(const Window *window, QPointF pos, bool unrestricted, double snapAdjust=1.0) const</argsstring>
        <name>adjustWindowPosition</name>
        <qualifiedname>KWin::Workspace::adjustWindowPosition</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unrestricted</declname>
        </param>
        <param>
          <type>double</type>
          <declname>snapAdjust</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><emphasis>window</emphasis> is moved around to position <emphasis>pos</emphasis>. This gives the workspace the opportunity to interveniate and to implement snap-to-windows functionality.</para>
<para>The parameter <emphasis>snapAdjust</emphasis> is a multiplier used to calculate the effective snap zones. When 1.0, it means that the snap zones will be used without change. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="228" column="13" bodyfile="kwin/src/workspace.cpp" bodystart="2583" bodyend="2733"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a8b3f56620794842b781e94a5d22cee44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF KWin::Workspace::adjustWindowSize</definition>
        <argsstring>(const Window *window, QRectF moveResizeGeom, Gravity gravity) const</argsstring>
        <name>adjustWindowSize</name>
        <qualifiedname>KWin::Workspace::adjustWindowSize</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>QRectF</type>
          <declname>moveResizeGeom</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_win_1a09aef7c112a8b0cdfb6e27a081d50dc8" kindref="member">Gravity</ref></type>
          <declname>gravity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="229" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="2735" bodyend="2967"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a7af0e246269d807f7f29527ba90613ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::raiseWindow</definition>
        <argsstring>(Window *window, bool nogroup=false)</argsstring>
        <name>raiseWindow</name>
        <qualifiedname>KWin::Workspace::raiseWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nogroup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="230" column="10" bodyfile="kwin/src/layers.cpp" bodystart="410" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aac64d498c63fc4cc5ce08700d7f311b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::lowerWindow</definition>
        <argsstring>(Window *window, bool nogroup=false)</argsstring>
        <name>lowerWindow</name>
        <qualifiedname>KWin::Workspace::lowerWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nogroup</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="231" column="10" bodyfile="kwin/src/layers.cpp" bodystart="344" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1addfc730c9bf5ef27eb67b927f87c07be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::restackWindowUnderActive</definition>
        <argsstring>(Window *window)</argsstring>
        <name>restackWindowUnderActive</name>
        <qualifiedname>KWin::Workspace::restackWindowUnderActive</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="237" column="10" bodyfile="kwin/src/layers.cpp" bodystart="528" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1abf31c3a83a38f58b6c29718c3a7f16df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::stackBelow</definition>
        <argsstring>(Window *window, Window *reference)</argsstring>
        <name>stackBelow</name>
        <qualifiedname>KWin::Workspace::stackBelow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="238" column="10" bodyfile="kwin/src/layers.cpp" bodystart="490" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1acd2cbfc77d22267e35eb2ec8b9b28171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::stackAbove</definition>
        <argsstring>(Window *window, Window *reference)</argsstring>
        <name>stackAbove</name>
        <qualifiedname>KWin::Workspace::stackAbove</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="239" column="10" bodyfile="kwin/src/layers.cpp" bodystart="509" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1adfc9cfb57c673882febf1f510cd9d2d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::raiseOrLowerWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>raiseOrLowerWindow</name>
        <qualifiedname>KWin::Workspace::raiseOrLowerWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="240" column="10" bodyfile="kwin/src/layers.cpp" bodystart="305" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a72563ede9d7e32e742e475b8d47fdbe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::updateStackingOrder</definition>
        <argsstring>(bool propagate_new_windows=false)</argsstring>
        <name>updateStackingOrder</name>
        <qualifiedname>KWin::Workspace::updateStackingOrder</qualifiedname>
        <param>
          <type>bool</type>
          <declname>propagate_new_windows</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="241" column="10" bodyfile="kwin/src/layers.cpp" bodystart="94" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1adb51e7dfaae8284674514d9c85e8e54d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::forceRestacking</definition>
        <argsstring>()</argsstring>
        <name>forceRestacking</name>
        <qualifiedname>KWin::Workspace::forceRestacking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="242" column="10" bodyfile="kwin/src/workspace.h" bodystart="855" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a2aa92ec44e02155532a4dc2eca7ed648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::constrain</definition>
        <argsstring>(Window *below, Window *above)</argsstring>
        <name>constrain</name>
        <qualifiedname>KWin::Workspace::constrain</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>below</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>above</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="244" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="547" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ad6e40ee8a14a3dd99a33ae48b5125966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::unconstrain</definition>
        <argsstring>(Window *below, Window *above)</argsstring>
        <name>unconstrain</name>
        <qualifiedname>KWin::Workspace::unconstrain</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>below</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>above</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="245" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="584" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a099d6af05ac9dc5aa21a9ce02fd3fd34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::windowAttentionChanged</definition>
        <argsstring>(Window *, bool set)</argsstring>
        <name>windowAttentionChanged</name>
        <qualifiedname>KWin::Workspace::windowAttentionChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <defname>window</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="247" column="10" bodyfile="kwin/src/activation.cpp" bodystart="632" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a56ba55626239671625164a73ef19f775" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt; Window * &gt; KWin::Workspace::windows</definition>
        <argsstring>() const</argsstring>
        <name>windows</name>
        <qualifiedname>KWin::Workspace::windows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>List of all windows (either X11 or <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref>) currently managed by <ref refid="class_k_win_1_1_workspace" kindref="compound">Workspace</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="252" column="11" bodyfile="kwin/src/workspace.h" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1adbf79458e8db9c18b4144a8755d63a47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_session_manager" kindref="compound">SessionManager</ref> *</type>
        <definition>SessionManager * KWin::Workspace::sessionManager</definition>
        <argsstring>() const</argsstring>
        <name>sessionManager</name>
        <qualifiedname>KWin::Workspace::sessionManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="257" column="20" bodyfile="kwin/src/workspace.h" bodystart="840" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aeb8fa011ed32e566188e34d93e25ebef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_tile_manager" kindref="compound">TileManager</ref> *</type>
        <definition>TileManager * KWin::Workspace::tileManager</definition>
        <argsstring>(Output *output) const</argsstring>
        <name>tileManager</name>
        <qualifiedname>KWin::Workspace::tileManager</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the <ref refid="class_k_win_1_1_tile_manager" kindref="compound">TileManager</ref> associated to a given output </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="262" column="17" bodyfile="kwin/src/workspace.cpp" bodystart="3038" bodyend="3045"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a1d3b4ba05e0d7a110ab5603096deb4c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_root_tile" kindref="compound">RootTile</ref> *</type>
        <definition>RootTile * KWin::Workspace::rootTile</definition>
        <argsstring>(Output *output) const</argsstring>
        <name>rootTile</name>
        <qualifiedname>KWin::Workspace::rootTile</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the root tile for the given <emphasis>output</emphasis> on the current virtual desktop. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="267" column="14" bodyfile="kwin/src/workspace.cpp" bodystart="3047" bodyend="3050"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a3b29d3a12fbd0b094b4b525feae8bdb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_root_tile" kindref="compound">RootTile</ref> *</type>
        <definition>RootTile * KWin::Workspace::rootTile</definition>
        <argsstring>(Output *output, VirtualDesktop *desktop) const</argsstring>
        <name>rootTile</name>
        <qualifiedname>KWin::Workspace::rootTile</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the root tile for the given <emphasis>output</emphasis> and <emphasis>desktop</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="272" column="14" bodyfile="kwin/src/workspace.cpp" bodystart="3052" bodyend="3058"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aeec0fc3dc0cd5a7b5526148a602053d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPoint</type>
        <definition>QPoint KWin::Workspace::cascadeOffset</definition>
        <argsstring>(const QRectF &amp;area) const</argsstring>
        <name>cascadeOffset</name>
        <qualifiedname>KWin::Workspace::cascadeOffset</qualifiedname>
        <param>
          <type>const QRectF &amp;</type>
          <declname>area</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="275" column="12" bodyfile="kwin/src/placement.cpp" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a417632c2c422b30f2e750947acf30911" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a98fbb198fd4d068d56bb796e99bfe8c5" kindref="member">StrutRects</ref></type>
        <definition>StrutRects KWin::Workspace::previousRestrictedMoveArea</definition>
        <argsstring>(const VirtualDesktop *desktop, StrutAreas areas=StrutAreaAll) const</argsstring>
        <name>previousRestrictedMoveArea</name>
        <qualifiedname>KWin::Workspace::previousRestrictedMoveArea</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type>StrutAreas</type>
          <declname>areas</declname>
          <defval><ref refid="namespace_k_win_1a5e1f12b4f6fe1e98672dabf86c00fd1faeb2d1af5e7d3993721032b60c90ee565" kindref="member">StrutAreaAll</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="281" column="16" bodyfile="kwin/src/workspace.cpp" bodystart="2471" bodyend="2486"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ae4d94cbd8cec24b7506f6f5d4b57117a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QHash&lt; const <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *, QRect &gt;</type>
        <definition>QHash&lt; const Output *, QRect &gt; KWin::Workspace::previousScreenSizes</definition>
        <argsstring>() const</argsstring>
        <name>previousScreenSizes</name>
        <qualifiedname>KWin::Workspace::previousScreenSizes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="282" column="11" bodyfile="kwin/src/workspace.cpp" bodystart="2488" bodyend="2491"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ad13932cebdeacf0ecce08e685b331ebc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::inRearrange</definition>
        <argsstring>() const</argsstring>
        <name>inRearrange</name>
        <qualifiedname>KWin::Workspace::inRearrange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if the workspace is currently being rearranged; otherwise returns <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="287" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2466" bodyend="2469"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a2f699b6a656b4136992bc050b8470fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::rearrange</definition>
        <argsstring>()</argsstring>
        <name>rearrange</name>
        <qualifiedname>KWin::Workspace::rearrange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Re-arranges the workspace, it includes computing restricted areas, moving windows out of the restricted areas, and so on.</para>
<para>The client area is the area that is available for windows (that which is not taken by windows like panels, the top-of-screen menu etc).</para>
<para><simplesect kind="see"><para><ref refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" kindref="member">clientArea()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="298" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2287" bodyend="2391"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ac71fcb686f84fc4357e33a9561fb7548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::scheduleRearrange</definition>
        <argsstring>()</argsstring>
        <name>scheduleRearrange</name>
        <qualifiedname>KWin::Workspace::scheduleRearrange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Schedules the workspace to be re-arranged at the next available opportunity. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="303" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2282" bodyend="2285"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt; &amp;</type>
        <definition>const QList&lt; Window * &gt; &amp; KWin::Workspace::stackingOrder</definition>
        <argsstring>() const</argsstring>
        <name>stackingOrder</name>
        <qualifiedname>KWin::Workspace::stackingOrder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the list of windows sorted in stacking order, with topmost window at the last position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="309" column="17" bodyfile="kwin/src/workspace.h" bodystart="829" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a8e43ad54cbbb9a0f270fb414ad4d2cfb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt; Window * &gt; KWin::Workspace::unconstrainedStackingOrder</definition>
        <argsstring>() const</argsstring>
        <name>unconstrainedStackingOrder</name>
        <qualifiedname>KWin::Workspace::unconstrainedStackingOrder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="310" column="11" bodyfile="kwin/src/layers.cpp" bodystart="692" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a95a97e34f6f0ebd4037ff0dfc4b82139" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt; Window * &gt; KWin::Workspace::ensureStackingOrder</definition>
        <argsstring>(const QList&lt; Window * &gt; &amp;windows) const</argsstring>
        <name>ensureStackingOrder</name>
        <qualifiedname>KWin::Workspace::ensureStackingOrder</qualifiedname>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt; &amp;</type>
          <declname>windows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="311" column="11" bodyfile="kwin/src/layers.cpp" bodystart="687" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a8d90b711536ca0e2c5d13b7ab98dd3ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::topWindowOnDesktop</definition>
        <argsstring>(VirtualDesktop *desktop, Output *output=nullptr, bool unconstrained=false, bool only_normal=true) const</argsstring>
        <name>topWindowOnDesktop</name>
        <qualifiedname>KWin::Workspace::topWindowOnDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>unconstrained</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>only_normal</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns topmost visible window. Windows on the dock, the desktop or of any other special kind are excluded. Also if the window doesn&apos;t accept focus it&apos;s excluded. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="313" column="12" bodyfile="kwin/src/layers.cpp" bodystart="204" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1adf4d93ea33e9e508acb82ab24766d8cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::findDesktop</definition>
        <argsstring>(VirtualDesktop *desktop, Output *output) const</argsstring>
        <name>findDesktop</name>
        <qualifiedname>KWin::Workspace::findDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="315" column="12" bodyfile="kwin/src/layers.cpp" bodystart="233" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1adc6d7a7c79a2f35b4075a8e0098c2d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::addWindowToDesktop</definition>
        <argsstring>(Window *window, VirtualDesktop *desktop)</argsstring>
        <name>addWindowToDesktop</name>
        <qualifiedname>KWin::Workspace::addWindowToDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="316" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1459" bodyend="1467"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a648bb2c9800b2fcf76b189dd37870f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::removeWindowFromDesktop</definition>
        <argsstring>(Window *window, VirtualDesktop *desktop)</argsstring>
        <name>removeWindowFromDesktop</name>
        <qualifiedname>KWin::Workspace::removeWindowFromDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="317" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1469" bodyend="1477"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aafd74ab8d80e9d862429bcbab25838e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::sendWindowToDesktops</definition>
        <argsstring>(Window *window, const QList&lt; VirtualDesktop * &gt; &amp;desktops, bool dont_activate)</argsstring>
        <name>sendWindowToDesktops</name>
        <qualifiedname>KWin::Workspace::sendWindowToDesktops</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> * &gt; &amp;</type>
          <declname>desktops</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dont_activate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends window <emphasis>window</emphasis> to desktop <emphasis>desk</emphasis>.</para>
<para>Takes care of transients as well. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="318" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1484" bodyend="1518"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ad5b8bf8cfc01c5e77d3968f5c943a4fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::windowToPreviousDesktop</definition>
        <argsstring>(Window *window)</argsstring>
        <name>windowToPreviousDesktop</name>
        <qualifiedname>KWin::Workspace::windowToPreviousDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="319" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1526" bodyend="1529"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a3c35c033a996766f63b1be0c15099101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::windowToNextDesktop</definition>
        <argsstring>(Window *window)</argsstring>
        <name>windowToNextDesktop</name>
        <qualifiedname>KWin::Workspace::windowToNextDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="320" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1511" bodyend="1514"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a47328bf65fdfe34cb84491b967d28292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::showWindowMenu</definition>
        <argsstring>(const QRect &amp;pos, Window *cl)</argsstring>
        <name>showWindowMenu</name>
        <qualifiedname>KWin::Workspace::showWindowMenu</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shows the menu operations menu for the window and makes it active if it&apos;s not already. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="339" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1693" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a96eaf61a7f65ac0a5b2f7e3a51ad0998" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_user_actions_menu" kindref="compound">UserActionsMenu</ref> *</type>
        <definition>UserActionsMenu * KWin::Workspace::userActionsMenu</definition>
        <argsstring>() const</argsstring>
        <name>userActionsMenu</name>
        <qualifiedname>KWin::Workspace::userActionsMenu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="340" column="21" bodyfile="kwin/src/workspace.h" bodystart="340" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a0dfc7bf61f28f3c5b2bc0a8ed8376527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::showApplicationMenu</definition>
        <argsstring>(const QRect &amp;pos, Window *window, int actionId)</argsstring>
        <name>showApplicationMenu</name>
        <qualifiedname>KWin::Workspace::showApplicationMenu</qualifiedname>
        <param>
          <type>const QRect &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>actionId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="345" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1698" bodyend="1701"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a3053637d6d507467b0806746edc57db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::updateMinimizedOfTransients</definition>
        <argsstring>(Window *)</argsstring>
        <name>updateMinimizedOfTransients</name>
        <qualifiedname>KWin::Workspace::updateMinimizedOfTransients</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <defname>window</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="347" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2066" bodyend="2101"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a0ec3b510144155afa123830c35869dd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::updateOnAllDesktopsOfTransients</definition>
        <argsstring>(Window *)</argsstring>
        <name>updateOnAllDesktopsOfTransients</name>
        <qualifiedname>KWin::Workspace::updateOnAllDesktopsOfTransients</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <defname>window</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the <emphasis>window&apos;s</emphasis> transient windows&apos; on_all_desktops property to <emphasis>on_all_desktops</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="348" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2106" bodyend="2113"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1afdb77bae789811416e3482f64025e0c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Workspace::supportInformation</definition>
        <argsstring>() const</argsstring>
        <name>supportInformation</name>
        <qualifiedname>KWin::Workspace::supportInformation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="356" column="13" bodyfile="kwin/src/workspace.cpp" bodystart="1624" bodyend="1876"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1adaab21158dc0f383f41c5a6eacaa0675" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
        <definition>Output * KWin::Workspace::findOutput</definition>
        <argsstring>(Output *reference, Direction direction, bool wrapAround=false) const</argsstring>
        <name>findOutput</name>
        <qualifiedname>KWin::Workspace::findOutput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>reference</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69" kindref="member">Direction</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrapAround</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="366" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="1142" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a710bf3a9516abb7ff66c8a31cca92c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::switchToOutput</definition>
        <argsstring>(Output *output)</argsstring>
        <name>switchToOutput</name>
        <qualifiedname>KWin::Workspace::switchToOutput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="367" column="10" bodyfile="kwin/src/activation.cpp" bodystart="535" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt;</type>
        <definition>QList&lt; Output * &gt; KWin::Workspace::outputs</definition>
        <argsstring>() const</argsstring>
        <name>outputs</name>
        <qualifiedname>KWin::Workspace::outputs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="369" column="11" bodyfile="kwin/src/workspace.h" bodystart="801" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1acaee43b5ca7a189e5f84b6361da672c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
        <definition>Output * KWin::Workspace::outputAt</definition>
        <argsstring>(const QPointF &amp;pos) const</argsstring>
        <name>outputAt</name>
        <qualifiedname>KWin::Workspace::outputAt</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="370" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="1121" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ac6fe3f106ae7cdbb81d38ecf31e2ba54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setShowingDesktop</definition>
        <argsstring>(bool showing, bool animated=true)</argsstring>
        <name>setShowingDesktop</name>
        <qualifiedname>KWin::Workspace::setShowingDesktop</qualifiedname>
        <param>
          <type>bool</type>
          <declname>showing</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>animated</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set &quot;Show Desktop&quot; status</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>showing</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to show the desktop, <computeroutput>false</computeroutput> to restore the window positions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>animated</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> if the &quot;Show Desktop Animation&quot; should be played, otherwise <computeroutput>false</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="378" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1572" bodyend="1607"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aa4351f52e20146156f8515450b186c8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::showingDesktop</definition>
        <argsstring>() const</argsstring>
        <name>showingDesktop</name>
        <qualifiedname>KWin::Workspace::showingDesktop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="379" column="10" bodyfile="kwin/src/workspace.h" bodystart="845" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aafa49cabb69a96aef0140b23c791b5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setActiveWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>setActiveWindow</name>
        <qualifiedname>KWin::Workspace::setActiveWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Informs the workspace about the active window, i.e. the window that has the focus (or None if no window has the focus). This functions is called by the window itself that gets focus. It has no other effect than fixing the focus chain and the return value of <ref refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" kindref="member">activeWindow()</ref>. And of course, to propagate the active window to the world. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="381" column="10" bodyfile="kwin/src/activation.cpp" bodystart="220" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ad4e5231fe7b66b90cf49eeaf9046b408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::removeDeleted</definition>
        <argsstring>(Window *)</argsstring>
        <name>removeDeleted</name>
        <qualifiedname>KWin::Workspace::removeDeleted</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="393" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="756" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1adb31571a577b74274ceb2e93eca5173f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::addDeleted</definition>
        <argsstring>(Window *)</argsstring>
        <name>addDeleted</name>
        <qualifiedname>KWin::Workspace::addDeleted</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="394" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="750" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a3c21fc7f0bfcf2ccb5bd7a0b90ba9e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::focusToNull</definition>
        <argsstring>()</argsstring>
        <name>focusToNull</name>
        <qualifiedname>KWin::Workspace::focusToNull</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Puts the focus on a dummy window Just using XSetInputFocus() with None would block keyboard input </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="396" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1557" bodyend="1565"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a1eaf4d87030b43f87e63161e3a5edc64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::windowShortcutUpdated</definition>
        <argsstring>(Window *window)</argsstring>
        <name>windowShortcutUpdated</name>
        <qualifiedname>KWin::Workspace::windowShortcutUpdated</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="398" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1109" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ad7d933840f241ebc660b5a79f0796d97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::shortcutAvailable</definition>
        <argsstring>(const QKeySequence &amp;cut, Window *ignore=nullptr) const</argsstring>
        <name>shortcutAvailable</name>
        <qualifiedname>KWin::Workspace::shortcutAvailable</qualifiedname>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>cut</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>ignore</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="399" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1808" bodyend="1829"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a9f2dd0c7b1fbe35e6e6cd1ec89d169b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::globalShortcutsDisabled</definition>
        <argsstring>() const</argsstring>
        <name>globalShortcutsDisabled</name>
        <qualifiedname>KWin::Workspace::globalShortcutsDisabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="400" column="10" bodyfile="kwin/src/workspace.h" bodystart="850" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ae2f34bd6de87a53116c7b152ac3b58e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::disableGlobalShortcutsForClient</definition>
        <argsstring>(bool disable)</argsstring>
        <name>disableGlobalShortcutsForClient</name>
        <qualifiedname>KWin::Workspace::disableGlobalShortcutsForClient</qualifiedname>
        <param>
          <type>bool</type>
          <declname>disable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="401" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1609" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ae429c0def62c2cfef0de8613be7c5802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setWasUserInteraction</definition>
        <argsstring>()</argsstring>
        <name>setWasUserInteraction</name>
        <qualifiedname>KWin::Workspace::setWasUserInteraction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="403" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1978" bodyend="1981"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a4d5d4700d08dbc47bb74f740d54e2c9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::wasUserInteraction</definition>
        <argsstring>() const</argsstring>
        <name>wasUserInteraction</name>
        <qualifiedname>KWin::Workspace::wasUserInteraction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="404" column="10" bodyfile="kwin/src/workspace.h" bodystart="835" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ae7a259547d1f1a226a7dd41ce2ae0b37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::Workspace::packPositionLeft</definition>
        <argsstring>(const Window *window, qreal oldX, bool leftEdge) const</argsstring>
        <name>packPositionLeft</name>
        <qualifiedname>KWin::Workspace::packPositionLeft</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>oldX</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>leftEdge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="406" column="11" bodyfile="kwin/src/placement.cpp" bodystart="910" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ab7d325e0d6ebca3a9dbda862d3464682" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::Workspace::packPositionRight</definition>
        <argsstring>(const Window *window, qreal oldX, bool rightEdge) const</argsstring>
        <name>packPositionRight</name>
        <qualifiedname>KWin::Workspace::packPositionRight</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>oldX</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rightEdge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="407" column="11" bodyfile="kwin/src/placement.cpp" bodystart="937" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ae1bc5892e767f8192c806df5c3eefcd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::Workspace::packPositionUp</definition>
        <argsstring>(const Window *window, qreal oldY, bool topEdge) const</argsstring>
        <name>packPositionUp</name>
        <qualifiedname>KWin::Workspace::packPositionUp</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>oldY</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>topEdge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="408" column="11" bodyfile="kwin/src/placement.cpp" bodystart="965" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a44fea8fa5dee07497df1290f1bc7db8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal KWin::Workspace::packPositionDown</definition>
        <argsstring>(const Window *window, qreal oldY, bool bottomEdge) const</argsstring>
        <name>packPositionDown</name>
        <qualifiedname>KWin::Workspace::packPositionDown</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>oldY</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bottomEdge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="409" column="11" bodyfile="kwin/src/placement.cpp" bodystart="992" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ac057ef8d7929830aabc2382723dda763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::cancelDelayFocus</definition>
        <argsstring>()</argsstring>
        <name>cancelDelayFocus</name>
        <qualifiedname>KWin::Workspace::cancelDelayFocus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="411" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1539" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aeaf4a3171b0de69a0ed0c296a385c389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::requestDelayFocus</definition>
        <argsstring>(Window *)</argsstring>
        <name>requestDelayFocus</name>
        <qualifiedname>KWin::Workspace::requestDelayFocus</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <defname>window</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="412" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1529" bodyend="1537"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a9d46ff69d3fe34c0691f5f1f4d271bca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::updateFocusMousePosition</definition>
        <argsstring>(const QPointF &amp;pos)</argsstring>
        <name>updateFocusMousePosition</name>
        <qualifiedname>KWin::Workspace::updateFocusMousePosition</qualifiedname>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>updates the mouse position to track whether a focus follow mouse focus change was caused by an actual mouse move is esp. called on enter/motion events of inactive windows since an active window doesn&apos;t receive mouse events, it must also be invoked if a (potentially) active window might be moved/resize away from the cursor (causing a leave event) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="421" column="10" bodyfile="kwin/src/workspace.h" bodystart="861" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ad4e6175b01bae1408f602ef03e7e453c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF KWin::Workspace::focusMousePosition</definition>
        <argsstring>() const</argsstring>
        <name>focusMousePosition</name>
        <qualifiedname>KWin::Workspace::focusMousePosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="422" column="13" bodyfile="kwin/src/workspace.h" bodystart="866" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::moveResizeWindow</definition>
        <argsstring>()</argsstring>
        <name>moveResizeWindow</name>
        <qualifiedname>KWin::Workspace::moveResizeWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a window that is currently being moved or resized by the user.</para>
<para>If none of windows is being moved or resized, <computeroutput>null</computeroutput> will be returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="429" column="12" bodyfile="kwin/src/workspace.h" bodystart="429" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a1861c636010a4c41f0ab9b51e8e33869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::quickTileWindow</definition>
        <argsstring>(QuickTileMode mode)</argsstring>
        <name>quickTileWindow</name>
        <qualifiedname>KWin::Workspace::quickTileWindow</qualifiedname>
        <param>
          <type>QuickTileMode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="434" column="10" bodyfile="kwin/src/placement.cpp" bodystart="892" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a4188b9bf56947425049cc2c19e2dd1e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::customQuickTileWindow</definition>
        <argsstring>(QuickTileMode mode)</argsstring>
        <name>customQuickTileWindow</name>
        <qualifiedname>KWin::Workspace::customQuickTileWindow</qualifiedname>
        <param>
          <type>QuickTileMode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="435" column="10" bodyfile="kwin/src/placement.cpp" bodystart="901" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::switchWindow</definition>
        <argsstring>(Direction direction)</argsstring>
        <name>switchWindow</name>
        <qualifiedname>KWin::Workspace::switchWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69" kindref="member">Direction</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Switches to the nearest window in given direction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="436" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1593" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aa34d6f0cd9abfec3fe1502d3a69a9659" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_shortcut_dialog" kindref="compound">ShortcutDialog</ref> *</type>
        <definition>ShortcutDialog * KWin::Workspace::shortcutDialog</definition>
        <argsstring>() const</argsstring>
        <name>shortcutDialog</name>
        <qualifiedname>KWin::Workspace::shortcutDialog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="438" column="20" bodyfile="kwin/src/workspace.h" bodystart="438" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a8c9a69e4d99aafd02ce6a15607e62a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::addInternalWindow</definition>
        <argsstring>(InternalWindow *window)</argsstring>
        <name>addInternalWindow</name>
        <qualifiedname>KWin::Workspace::addInternalWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_internal_window" kindref="compound">InternalWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="443" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1992" bodyend="2011"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a94f4ad6e71a7cb5de853255897a7af6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::removeInternalWindow</definition>
        <argsstring>(InternalWindow *window)</argsstring>
        <name>removeInternalWindow</name>
        <qualifiedname>KWin::Workspace::removeInternalWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_internal_window" kindref="compound">InternalWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="444" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2013" bodyend="2019"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a9ac33098b5ba87629de700bf9dc812f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::inShouldGetFocus</definition>
        <argsstring>(Window *w) const</argsstring>
        <name>inShouldGetFocus</name>
        <qualifiedname>KWin::Workspace::inShouldGetFocus</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="450" column="10" bodyfile="kwin/src/workspace.h" bodystart="450" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a80eadeda591ad89e37f55295023d7f1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::lastActiveWindow</definition>
        <argsstring>() const</argsstring>
        <name>lastActiveWindow</name>
        <qualifiedname>KWin::Workspace::lastActiveWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="454" column="12" bodyfile="kwin/src/workspace.h" bodystart="454" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a9cdd73f71ccdefa9152c49ad16ad2be9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_focus_chain" kindref="compound">FocusChain</ref> *</type>
        <definition>FocusChain * KWin::Workspace::focusChain</definition>
        <argsstring>() const</argsstring>
        <name>focusChain</name>
        <qualifiedname>KWin::Workspace::focusChain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="458" column="16" bodyfile="kwin/src/workspace.cpp" bodystart="3003" bodyend="3006"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a13e4349bd55c2aea03898312f35aa5c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_application_menu" kindref="compound">ApplicationMenu</ref> *</type>
        <definition>ApplicationMenu * KWin::Workspace::applicationMenu</definition>
        <argsstring>() const</argsstring>
        <name>applicationMenu</name>
        <qualifiedname>KWin::Workspace::applicationMenu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="459" column="21" bodyfile="kwin/src/workspace.cpp" bodystart="3008" bodyend="3011"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a83a4d2853a17494f680716e42f2d9799" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_decoration_1_1_decoration_bridge" kindref="compound">Decoration::DecorationBridge</ref> *</type>
        <definition>Decoration::DecorationBridge * KWin::Workspace::decorationBridge</definition>
        <argsstring>() const</argsstring>
        <name>decorationBridge</name>
        <qualifiedname>KWin::Workspace::decorationBridge</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="460" column="34" bodyfile="kwin/src/workspace.cpp" bodystart="3013" bodyend="3016"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a671835e2cd6b50e22a103101524a56c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_outline" kindref="compound">Outline</ref> *</type>
        <definition>Outline * KWin::Workspace::outline</definition>
        <argsstring>() const</argsstring>
        <name>outline</name>
        <qualifiedname>KWin::Workspace::outline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="461" column="13" bodyfile="kwin/src/workspace.cpp" bodystart="3018" bodyend="3021"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a895516d998d121ec543bce0b65cd5ddf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_placement" kindref="compound">Placement</ref> *</type>
        <definition>Placement * KWin::Workspace::placement</definition>
        <argsstring>() const</argsstring>
        <name>placement</name>
        <qualifiedname>KWin::Workspace::placement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="462" column="15" bodyfile="kwin/src/workspace.cpp" bodystart="3023" bodyend="3026"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aa6d9b69aa8a43a168a1948f23db0d48e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_rule_book" kindref="compound">RuleBook</ref> *</type>
        <definition>RuleBook * KWin::Workspace::rulebook</definition>
        <argsstring>() const</argsstring>
        <name>rulebook</name>
        <qualifiedname>KWin::Workspace::rulebook</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="463" column="14" bodyfile="kwin/src/workspace.cpp" bodystart="3028" bodyend="3031"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_screen_edges" kindref="compound">ScreenEdges</ref> *</type>
        <definition>ScreenEdges * KWin::Workspace::screenEdges</definition>
        <argsstring>() const</argsstring>
        <name>screenEdges</name>
        <qualifiedname>KWin::Workspace::screenEdges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="464" column="17" bodyfile="kwin/src/workspace.cpp" bodystart="3033" bodyend="3036"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_k_win_1a2d21f95f143c2ccab4d2a9448e14d6ec" kindref="member">OutputConfigurationError</ref></type>
        <definition>OutputConfigurationError KWin::Workspace::applyOutputConfiguration</definition>
        <argsstring>(const OutputConfiguration &amp;config, const std::optional&lt; QList&lt; Output * &gt; &gt; &amp;outputOrder=std::nullopt)</argsstring>
        <name>applyOutputConfiguration</name>
        <qualifiedname>KWin::Workspace::applyOutputConfiguration</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const std::optional&lt; QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &gt; &amp;</type>
          <declname>outputOrder</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the requested output configuration. Note that you must use this function instead of Platform::applyOutputChanges(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="476" column="30" bodyfile="kwin/src/workspace.cpp" bodystart="419" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ae837916abeb94a44cc9da64650a7db62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::updateXwaylandScale</definition>
        <argsstring>()</argsstring>
        <name>updateXwaylandScale</name>
        <qualifiedname>KWin::Workspace::updateXwaylandScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="477" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="438" bodyend="451"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_workspace" kindref="compound">Workspace</ref> *</type>
        <definition>static Workspace * KWin::Workspace::self</definition>
        <argsstring>()</argsstring>
        <name>self</name>
        <qualifiedname>KWin::Workspace::self</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="95" column="22" bodyfile="kwin/src/workspace.h" bodystart="95" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a682f0605b16a7a10d21cf6cae954f84e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::performWindowOperation</definition>
        <argsstring>(KWin::Window *window, Options::WindowOperation op)</argsstring>
        <name>performWindowOperation</name>
        <qualifiedname>KWin::Workspace::performWindowOperation</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_options_1a47885bbac9ddb7f8fc6b945369275075" kindref="member">Options::WindowOperation</ref></type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="480" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1138" bodyend="1236"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1afbb3df3d37cb7e389ed825975b2dbea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToDesktop</definition>
        <argsstring>(VirtualDesktop *desktop)</argsstring>
        <name>slotWindowToDesktop</name>
        <qualifiedname>KWin::Workspace::slotWindowToDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="483" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1247" bodyend="1252"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a8459dc23c3457482bdf76b45a2072e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotSwitchToScreen</definition>
        <argsstring>(Output *output)</argsstring>
        <name>slotSwitchToScreen</name>
        <qualifiedname>KWin::Workspace::slotSwitchToScreen</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="486" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1254" bodyend="1257"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1acb81d92ccab2b010763e431e679c9de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToScreen</definition>
        <argsstring>(Output *output)</argsstring>
        <name>slotWindowToScreen</name>
        <qualifiedname>KWin::Workspace::slotWindowToScreen</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="487" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1289" bodyend="1294"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a50f90e638ea003626ddf12d68120df48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotSwitchToLeftScreen</definition>
        <argsstring>()</argsstring>
        <name>slotSwitchToLeftScreen</name>
        <qualifiedname>KWin::Workspace::slotSwitchToLeftScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="488" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1259" bodyend="1262"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a5c5c63c7d99ace766e8afb3e017b6878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotSwitchToRightScreen</definition>
        <argsstring>()</argsstring>
        <name>slotSwitchToRightScreen</name>
        <qualifiedname>KWin::Workspace::slotSwitchToRightScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="489" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1264" bodyend="1267"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a9caef8ddd4bac4e3e7418180f19cf33f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotSwitchToAboveScreen</definition>
        <argsstring>()</argsstring>
        <name>slotSwitchToAboveScreen</name>
        <qualifiedname>KWin::Workspace::slotSwitchToAboveScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="490" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1269" bodyend="1272"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1acdacf77f0ac5607e4512058f406b8b3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotSwitchToBelowScreen</definition>
        <argsstring>()</argsstring>
        <name>slotSwitchToBelowScreen</name>
        <qualifiedname>KWin::Workspace::slotSwitchToBelowScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="491" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1274" bodyend="1277"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a88e97b459eb46b4472d7c4e84cce4f4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotSwitchToPrevScreen</definition>
        <argsstring>()</argsstring>
        <name>slotSwitchToPrevScreen</name>
        <qualifiedname>KWin::Workspace::slotSwitchToPrevScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="492" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1279" bodyend="1282"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a024c926e03303ec0f0aded6d430a54a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotSwitchToNextScreen</definition>
        <argsstring>()</argsstring>
        <name>slotSwitchToNextScreen</name>
        <qualifiedname>KWin::Workspace::slotSwitchToNextScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="493" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1284" bodyend="1287"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a06367663ff43f4cd8546e6951cdaa34c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToLeftScreen</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToLeftScreen</name>
        <qualifiedname>KWin::Workspace::slotWindowToLeftScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="494" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1296" bodyend="1301"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1aa8c73506724df9ac4a5166e37eedbd38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToRightScreen</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToRightScreen</name>
        <qualifiedname>KWin::Workspace::slotWindowToRightScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="495" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1303" bodyend="1308"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1acfe06bf4dbba90f73327c324a6e9a99d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToAboveScreen</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToAboveScreen</name>
        <qualifiedname>KWin::Workspace::slotWindowToAboveScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="496" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1310" bodyend="1315"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a8149299cc88c160637264b41ca6ec953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToBelowScreen</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToBelowScreen</name>
        <qualifiedname>KWin::Workspace::slotWindowToBelowScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="497" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1317" bodyend="1322"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1aa6a13c6fe3f4197dd4f30a6963b4b433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToNextScreen</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToNextScreen</name>
        <qualifiedname>KWin::Workspace::slotWindowToNextScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="498" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1331" bodyend="1336"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a4bd27276cce71c7c341183f1c5ea9fa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToPrevScreen</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToPrevScreen</name>
        <qualifiedname>KWin::Workspace::slotWindowToPrevScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="499" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1324" bodyend="1329"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a006f0f96142b8ccb882aa05eea0f1a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotToggleShowDesktop</definition>
        <argsstring>()</argsstring>
        <name>slotToggleShowDesktop</name>
        <qualifiedname>KWin::Workspace::slotToggleShowDesktop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Toggles show desktop. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="501" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1475" bodyend="1478"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a6275eab1e7d8c5270d6d1d526b6a505c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowMaximize</definition>
        <argsstring>()</argsstring>
        <name>slotWindowMaximize</name>
        <qualifiedname>KWin::Workspace::slotWindowMaximize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximizes the active window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="503" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1341" bodyend="1346"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a534516cead522fa6237ced7ef5e9c8f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowMaximizeVertical</definition>
        <argsstring>()</argsstring>
        <name>slotWindowMaximizeVertical</name>
        <qualifiedname>KWin::Workspace::slotWindowMaximizeVertical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximizes the active window vertically. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="504" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1351" bodyend="1356"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1ac80d2da241bb5d8e0802f3f5885f3ee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowMaximizeHorizontal</definition>
        <argsstring>()</argsstring>
        <name>slotWindowMaximizeHorizontal</name>
        <qualifiedname>KWin::Workspace::slotWindowMaximizeHorizontal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximizes the active window horiozontally. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="505" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1361" bodyend="1366"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a3c6dad0c89221aafe580d298f7a2bab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowMinimize</definition>
        <argsstring>()</argsstring>
        <name>slotWindowMinimize</name>
        <qualifiedname>KWin::Workspace::slotWindowMinimize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimizes the active window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="506" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1371" bodyend="1376"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a752ec56dd2d4aa4ffd6e7bc900672cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowShade</definition>
        <argsstring>()</argsstring>
        <name>slotWindowShade</name>
        <qualifiedname>KWin::Workspace::slotWindowShade</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shades/unshades the active window respectively. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="507" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1381" bodyend="1386"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a1a00fb9001fe151f9a5ae44aa2294867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowRaise</definition>
        <argsstring>()</argsstring>
        <name>slotWindowRaise</name>
        <qualifiedname>KWin::Workspace::slotWindowRaise</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raises the active window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="508" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1391" bodyend="1396"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a78fbde2a45d5c03b22880051f11427cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowLower</definition>
        <argsstring>()</argsstring>
        <name>slotWindowLower</name>
        <qualifiedname>KWin::Workspace::slotWindowLower</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lowers the active window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="509" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1401" bodyend="1419"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1adf6acf02deae734d4c6cc71f5cfb9250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowRaiseOrLower</definition>
        <argsstring>()</argsstring>
        <name>slotWindowRaiseOrLower</name>
        <qualifiedname>KWin::Workspace::slotWindowRaiseOrLower</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does a toggle-raise-and-lower on the active window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="510" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1424" bodyend="1429"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1ae5596c26d968b0ec9e459f4c6ab10c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotActivateAttentionWindow</definition>
        <argsstring>()</argsstring>
        <name>slotActivateAttentionWindow</name>
        <qualifiedname>KWin::Workspace::slotActivateAttentionWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="511" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1238" bodyend="1243"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a6ca662f16e256158bc9243c89ee7e48e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowCenter</definition>
        <argsstring>()</argsstring>
        <name>slotWindowCenter</name>
        <qualifiedname>KWin::Workspace::slotWindowCenter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the active window to the center of the screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="513" column="10" bodyfile="kwin/src/placement.cpp" bodystart="770" bodyend="778"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1af05234f86f1bb659cf848b41ed8257d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowMoveLeft</definition>
        <argsstring>()</argsstring>
        <name>slotWindowMoveLeft</name>
        <qualifiedname>KWin::Workspace::slotWindowMoveLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves active window left until in bumps into another window or workarea edge. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="515" column="10" bodyfile="kwin/src/placement.cpp" bodystart="733" bodyend="740"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1aae89cd70029d5b875cb6ac6873bf14e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowMoveRight</definition>
        <argsstring>()</argsstring>
        <name>slotWindowMoveRight</name>
        <qualifiedname>KWin::Workspace::slotWindowMoveRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="516" column="10" bodyfile="kwin/src/placement.cpp" bodystart="742" bodyend="749"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a5e40cf9ac2f27f08d67b0c2170fea37e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowMoveUp</definition>
        <argsstring>()</argsstring>
        <name>slotWindowMoveUp</name>
        <qualifiedname>KWin::Workspace::slotWindowMoveUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="517" column="10" bodyfile="kwin/src/placement.cpp" bodystart="751" bodyend="758"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a9c3f2a6bf30466d6724f7d0b272bd53c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowMoveDown</definition>
        <argsstring>()</argsstring>
        <name>slotWindowMoveDown</name>
        <qualifiedname>KWin::Workspace::slotWindowMoveDown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="518" column="10" bodyfile="kwin/src/placement.cpp" bodystart="760" bodyend="767"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a4d759497b50f941fd3fe0c030576653e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowExpandHorizontal</definition>
        <argsstring>()</argsstring>
        <name>slotWindowExpandHorizontal</name>
        <qualifiedname>KWin::Workspace::slotWindowExpandHorizontal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="519" column="10" bodyfile="kwin/src/placement.cpp" bodystart="780" bodyend="785"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1ac3387c35afc845e3f8a9b3b37e74d420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowExpandVertical</definition>
        <argsstring>()</argsstring>
        <name>slotWindowExpandVertical</name>
        <qualifiedname>KWin::Workspace::slotWindowExpandVertical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="520" column="10" bodyfile="kwin/src/placement.cpp" bodystart="837" bodyend="842"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a4657b9f4a71fdc29d858651cb381f32e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowShrinkHorizontal</definition>
        <argsstring>()</argsstring>
        <name>slotWindowShrinkHorizontal</name>
        <qualifiedname>KWin::Workspace::slotWindowShrinkHorizontal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="521" column="10" bodyfile="kwin/src/placement.cpp" bodystart="813" bodyend="818"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1aaeb78b08af857a9c2a13632dcef203da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowShrinkVertical</definition>
        <argsstring>()</argsstring>
        <name>slotWindowShrinkVertical</name>
        <qualifiedname>KWin::Workspace::slotWindowShrinkVertical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="522" column="10" bodyfile="kwin/src/placement.cpp" bodystart="868" bodyend="873"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1acd330cb42a448a6ee82cc04c06cc0ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotIncreaseWindowOpacity</definition>
        <argsstring>()</argsstring>
        <name>slotIncreaseWindowOpacity</name>
        <qualifiedname>KWin::Workspace::slotIncreaseWindowOpacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="524" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="838" bodyend="844"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a5b4563a159df9f78b993586679c6cbf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotLowerWindowOpacity</definition>
        <argsstring>()</argsstring>
        <name>slotLowerWindowOpacity</name>
        <qualifiedname>KWin::Workspace::slotLowerWindowOpacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="525" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="846" bodyend="852"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a3af5c7f007e3fc4a14aae62491f4b757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowOperations</definition>
        <argsstring>()</argsstring>
        <name>slotWindowOperations</name>
        <qualifiedname>KWin::Workspace::slotWindowOperations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shows the window operations popup menu for the active window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="527" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1683" bodyend="1691"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1ac6b42f7a894948a7fef6aceb2899ae22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowClose</definition>
        <argsstring>()</argsstring>
        <name>slotWindowClose</name>
        <qualifiedname>KWin::Workspace::slotWindowClose</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Closes the active window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="528" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1706" bodyend="1714"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1aa6434d76d6ec1bc06d939859517848cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowMove</definition>
        <argsstring>()</argsstring>
        <name>slotWindowMove</name>
        <qualifiedname>KWin::Workspace::slotWindowMove</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts keyboard move mode for the active window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="529" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1719" bodyend="1724"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1af2ff89705cde1c8147baa542af320f57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowResize</definition>
        <argsstring>()</argsstring>
        <name>slotWindowResize</name>
        <qualifiedname>KWin::Workspace::slotWindowResize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts keyboard resize mode for the active window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="530" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1729" bodyend="1734"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a4fee54ded2433f01199adddd3ea80dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowAbove</definition>
        <argsstring>()</argsstring>
        <name>slotWindowAbove</name>
        <qualifiedname>KWin::Workspace::slotWindowAbove</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="531" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1452" bodyend="1457"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a4f60f7442a63aaf1e6515cd6754e557a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowBelow</definition>
        <argsstring>()</argsstring>
        <name>slotWindowBelow</name>
        <qualifiedname>KWin::Workspace::slotWindowBelow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="532" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1459" bodyend="1464"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a77b24984de50b443ebc73ba0788638e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowOnAllDesktops</definition>
        <argsstring>()</argsstring>
        <name>slotWindowOnAllDesktops</name>
        <qualifiedname>KWin::Workspace::slotWindowOnAllDesktops</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="533" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1431" bodyend="1436"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a9995140fe55894b5085c5cfb84243caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowFullScreen</definition>
        <argsstring>()</argsstring>
        <name>slotWindowFullScreen</name>
        <qualifiedname>KWin::Workspace::slotWindowFullScreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="534" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1438" bodyend="1443"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a88900881178bea9c9c8ba0d957bb4e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowNoBorder</definition>
        <argsstring>()</argsstring>
        <name>slotWindowNoBorder</name>
        <qualifiedname>KWin::Workspace::slotWindowNoBorder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="535" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1445" bodyend="1450"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a5d979e3a2cb452b9132781ac00b172eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToNextDesktop</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToNextDesktop</name>
        <qualifiedname>KWin::Workspace::slotWindowToNextDesktop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the active window to the next desktop. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="537" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1504" bodyend="1509"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a8454478fcfcbe02bf3155dd53ac4816b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToPreviousDesktop</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToPreviousDesktop</name>
        <qualifiedname>KWin::Workspace::slotWindowToPreviousDesktop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves the active window to the previous desktop. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="538" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1519" bodyend="1524"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1ae4ca855547a553ff7356d379c29e529d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToDesktopRight</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToDesktopRight</name>
        <qualifiedname>KWin::Workspace::slotWindowToDesktopRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="539" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1551" bodyend="1556"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a9fd6fdc2231bdfab6965b1e9a794b5c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToDesktopLeft</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToDesktopLeft</name>
        <qualifiedname>KWin::Workspace::slotWindowToDesktopLeft</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="540" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1558" bodyend="1563"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1ab0abb9c5b62d373b2711e48622cbafaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToDesktopUp</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToDesktopUp</name>
        <qualifiedname>KWin::Workspace::slotWindowToDesktopUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="541" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1565" bodyend="1570"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a932d356dcf0eba93fb2c88175700301d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotWindowToDesktopDown</definition>
        <argsstring>()</argsstring>
        <name>slotWindowToDesktopDown</name>
        <qualifiedname>KWin::Workspace::slotWindowToDesktopDown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="542" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1572" bodyend="1577"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a5e9d8ec5a02cb798b27d45d912765e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::reconfigure</definition>
        <argsstring>()</argsstring>
        <name>reconfigure</name>
        <qualifiedname>KWin::Workspace::reconfigure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="544" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="856" bodyend="859"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1ae78f215cb85fe7ea6cadea0067efbc72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotReconfigure</definition>
        <argsstring>()</argsstring>
        <name>slotReconfigure</name>
        <qualifiedname>KWin::Workspace::slotReconfigure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reread settings </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="545" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="865" bodyend="895"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a4e6e905373105e89e30787cacbfba753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotKillWindow</definition>
        <argsstring>()</argsstring>
        <name>slotKillWindow</name>
        <qualifiedname>KWin::Workspace::slotKillWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Kill <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> feature, similar to xkill. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="547" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1582" bodyend="1588"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1ad32a0ab6b83a1406fe600d8f44543479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotSetupWindowShortcut</definition>
        <argsstring>()</argsstring>
        <name>slotSetupWindowShortcut</name>
        <qualifiedname>KWin::Workspace::slotSetupWindowShortcut</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="549" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1465" bodyend="1470"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a6144f664ec43d5392e9faf010d096bf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setupWindowShortcutDone</definition>
        <argsstring>(bool)</argsstring>
        <name>setupWindowShortcutDone</name>
        <qualifiedname>KWin::Workspace::setupWindowShortcutDone</qualifiedname>
        <param>
          <type>bool</type>
          <defname>ok</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="550" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1092" bodyend="1107"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a3b23fcd81d49131a9088d4184c83e5ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotEndInteractiveMoveResize</definition>
        <argsstring>()</argsstring>
        <name>slotEndInteractiveMoveResize</name>
        <qualifiedname>KWin::Workspace::slotEndInteractiveMoveResize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="552" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1427" bodyend="1433"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-slot">
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1aa73b8caf82b587653e019b796a4065aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::desktopResized</definition>
        <argsstring>()</argsstring>
        <name>desktopResized</name>
        <qualifiedname>KWin::Workspace::desktopResized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resizes the workspace after an XRANDR screen size change </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="555" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2130" bodyend="2187"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a7756fa8e1f0760e4624a17588621f907" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::delayFocus</definition>
        <argsstring>()</argsstring>
        <name>delayFocus</name>
        <qualifiedname>KWin::Workspace::delayFocus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delayed focus functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="559" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1523" bodyend="1527"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1af55c20be4db9b52921ab11d45e6ff2f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotReloadConfig</definition>
        <argsstring>()</argsstring>
        <name>slotReloadConfig</name>
        <qualifiedname>KWin::Workspace::slotReloadConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="560" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="851" bodyend="854"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a64de3e26f6a879b3f886ae5ee51b7b2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::updateCurrentActivity</definition>
        <argsstring>(const QString &amp;new_activity)</argsstring>
        <name>updateCurrentActivity</name>
        <qualifiedname>KWin::Workspace::updateCurrentActivity</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>new_activity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates the current activity when it changes do <emphasis>not</emphasis> call this directly; it does not set the activity.</para>
<para>Shows/Hides windows according to the stacking order </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="561" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1039" bodyend="1119"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a951238d5ec2e515b3e12b06b46a90228" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotCurrentDesktopChanged</definition>
        <argsstring>(VirtualDesktop *previousDesktop, VirtualDesktop *newDesktop)</argsstring>
        <name>slotCurrentDesktopChanged</name>
        <qualifiedname>KWin::Workspace::slotCurrentDesktopChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>previousDesktop</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>newDesktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="563" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="897" bodyend="923"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a720bfd8657bc9899ae0bcfb8f4c331c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotCurrentDesktopChanging</definition>
        <argsstring>(VirtualDesktop *currentDesktop, QPointF delta)</argsstring>
        <name>slotCurrentDesktopChanging</name>
        <qualifiedname>KWin::Workspace::slotCurrentDesktopChanging</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>currentDesktop</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="564" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="925" bodyend="929"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a55530f52e5384ef86bc8835970c5de0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotCurrentDesktopChangingCancelled</definition>
        <argsstring>()</argsstring>
        <name>slotCurrentDesktopChangingCancelled</name>
        <qualifiedname>KWin::Workspace::slotCurrentDesktopChangingCancelled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="565" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="931" bodyend="934"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a7ee57715ccbe4920fa75fa7373371a0b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotDesktopAdded</definition>
        <argsstring>(VirtualDesktop *desktop)</argsstring>
        <name>slotDesktopAdded</name>
        <qualifiedname>KWin::Workspace::slotDesktopAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="566" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1395" bodyend="1400"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a89ae5f5f1e4d0d069d3e1e8d878957c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotDesktopRemoved</definition>
        <argsstring>(VirtualDesktop *desktop)</argsstring>
        <name>slotDesktopRemoved</name>
        <qualifiedname>KWin::Workspace::slotDesktopRemoved</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="567" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1402" bodyend="1425"/>
      </memberdef>
      <memberdef kind="slot" id="class_k_win_1_1_workspace_1a567a7b59bd0864ac20a529c32a715fe2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::slotOutputBackendOutputsQueried</definition>
        <argsstring>()</argsstring>
        <name>slotOutputBackendOutputsQueried</name>
        <qualifiedname>KWin::Workspace::slotOutputBackendOutputsQueried</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="568" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1197" bodyend="1203"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="signal">
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a40a0c2857a176b5288406b0aaa5b79d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::workspaceInitialized</definition>
        <argsstring>()</argsstring>
        <name>workspaceInitialized</name>
        <qualifiedname>KWin::Workspace::workspaceInitialized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emitted after the <ref refid="class_k_win_1_1_workspace" kindref="compound">Workspace</ref> has setup the complete initialization process. This can be used to connect to for performing post-workspace initialization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="575" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1acd184adfbb27f515c16e899192fbfe40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::geometryChanged</definition>
        <argsstring>()</argsstring>
        <name>geometryChanged</name>
        <qualifiedname>KWin::Workspace::geometryChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="576" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1aba1fb5ecc5c9747f0c7e637b57c5c94a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::currentActivityChanged</definition>
        <argsstring>()</argsstring>
        <name>currentActivityChanged</name>
        <qualifiedname>KWin::Workspace::currentActivityChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="579" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a6b3280a21aab25e4b281825ac80cc03c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::currentDesktopChanged</definition>
        <argsstring>(KWin::VirtualDesktop *previousDesktop, KWin::Window *)</argsstring>
        <name>currentDesktopChanged</name>
        <qualifiedname>KWin::Workspace::currentDesktopChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">KWin::VirtualDesktop</ref> *</type>
          <declname>previousDesktop</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="580" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a7862ecb48b5771a771a8bd49ccc446c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::currentDesktopChanging</definition>
        <argsstring>(KWin::VirtualDesktop *currentDesktop, QPointF delta, KWin::Window *)</argsstring>
        <name>currentDesktopChanging</name>
        <qualifiedname>KWin::Workspace::currentDesktopChanging</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">KWin::VirtualDesktop</ref> *</type>
          <declname>currentDesktop</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>delta</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="581" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a313825797f477b7a9f6f427a8c4b8b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::currentDesktopChangingCancelled</definition>
        <argsstring>()</argsstring>
        <name>currentDesktopChangingCancelled</name>
        <qualifiedname>KWin::Workspace::currentDesktopChangingCancelled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="582" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a8f82a0ac5517ddb86629fa3f8243e388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::windowAdded</definition>
        <argsstring>(KWin::Window *)</argsstring>
        <name>windowAdded</name>
        <qualifiedname>KWin::Workspace::windowAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="583" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a56e58d6f7f7b1c0cca13384068f2cdd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::windowRemoved</definition>
        <argsstring>(KWin::Window *)</argsstring>
        <name>windowRemoved</name>
        <qualifiedname>KWin::Workspace::windowRemoved</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="584" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a7b90a95e89c3140a7af30e853e5359c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::windowActivated</definition>
        <argsstring>(KWin::Window *)</argsstring>
        <name>windowActivated</name>
        <qualifiedname>KWin::Workspace::windowActivated</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="585" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1aca2c97c1f18951364978827022677849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::windowMinimizedChanged</definition>
        <argsstring>(KWin::Window *)</argsstring>
        <name>windowMinimizedChanged</name>
        <qualifiedname>KWin::Workspace::windowMinimizedChanged</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="586" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1ae10af479c806f190fb52cc434eef9fb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::deletedRemoved</definition>
        <argsstring>(KWin::Window *)</argsstring>
        <name>deletedRemoved</name>
        <qualifiedname>KWin::Workspace::deletedRemoved</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">KWin::Window</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="590" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1abd94bbc1291ecb4698c459980e158ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::configChanged</definition>
        <argsstring>()</argsstring>
        <name>configChanged</name>
        <qualifiedname>KWin::Workspace::configChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="591" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a683e1ce1a2cb1301a7096a323e2111e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::showingDesktopChanged</definition>
        <argsstring>(bool showing, bool animated)</argsstring>
        <name>showingDesktopChanged</name>
        <qualifiedname>KWin::Workspace::showingDesktopChanged</qualifiedname>
        <param>
          <type>bool</type>
          <declname>showing</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>animated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="592" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a0477e859f40c82767596a385af294ced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::outputOrderChanged</definition>
        <argsstring>()</argsstring>
        <name>outputOrderChanged</name>
        <qualifiedname>KWin::Workspace::outputOrderChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="593" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a2ca59e0d2a0634945e4c160547a20f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::outputAdded</definition>
        <argsstring>(KWin::Output *)</argsstring>
        <name>outputAdded</name>
        <qualifiedname>KWin::Workspace::outputAdded</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">KWin::Output</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="594" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1acb430f5b2b96c6386636d80a89e33f81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::outputRemoved</definition>
        <argsstring>(KWin::Output *)</argsstring>
        <name>outputRemoved</name>
        <qualifiedname>KWin::Workspace::outputRemoved</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">KWin::Output</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="595" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1afd27bc2d5c3bd0272375f09238f779f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::outputsChanged</definition>
        <argsstring>()</argsstring>
        <name>outputsChanged</name>
        <qualifiedname>KWin::Workspace::outputsChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="596" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a47f5cff26f9f97c938e9adb15c8f643b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::stackingOrderChanged</definition>
        <argsstring>()</argsstring>
        <name>stackingOrderChanged</name>
        <qualifiedname>KWin::Workspace::stackingOrderChanged</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This signal is emitted when the stacking order changed, i.e. a window is risen or lowered </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="601" column="10"/>
      </memberdef>
      <memberdef kind="signal" id="class_k_win_1_1_workspace_1a7e9f6c5485b19c544dfee95c60352e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::aboutToRearrange</definition>
        <argsstring>()</argsstring>
        <name>aboutToRearrange</name>
        <qualifiedname>KWin::Workspace::aboutToRearrange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="602" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a72a264090477036fecd936dfcc9c24fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>KWin::Workspace::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="605" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="174" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a38b565e77975a1c7c285e8faff4e47be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::initShortcuts</definition>
        <argsstring>()</argsstring>
        <name>initShortcuts</name>
        <qualifiedname>KWin::Workspace::initShortcuts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates the global accel object <computeroutput>keys</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="606" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="885" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a6921e66e63f02ebf4f055f24bb338128" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Slot</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void KWin::Workspace::initShortcut</definition>
        <argsstring>(const QString &amp;actionName, const QString &amp;description, const QKeySequence &amp;shortcut, Slot slot)</argsstring>
        <name>initShortcut</name>
        <qualifiedname>KWin::Workspace::initShortcut</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>description</declname>
        </param>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>shortcut</declname>
        </param>
        <param>
          <type>Slot</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="608" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="865" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a02214ded8ff593bfbc58c57f83a36165" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Slot</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void KWin::Workspace::initShortcut</definition>
        <argsstring>(const QString &amp;actionName, const QString &amp;description, const QKeySequence &amp;shortcut, T *receiver, Slot slot)</argsstring>
        <name>initShortcut</name>
        <qualifiedname>KWin::Workspace::initShortcut</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>description</declname>
        </param>
        <param>
          <type>const QKeySequence &amp;</type>
          <declname>shortcut</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>Slot</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="610" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="871" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aff318ab859e9eb76af902f0e16d65aa0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setupWindowShortcut</definition>
        <argsstring>(Window *window)</argsstring>
        <name>setupWindowShortcut</name>
        <qualifiedname>KWin::Workspace::setupWindowShortcut</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="611" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1064" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ad1fcbad167126fa6ac2cfaf0ae8440f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::switchWindow</definition>
        <argsstring>(Window *window, Direction direction, QPoint curPos, VirtualDesktop *desktop)</argsstring>
        <name>switchWindow</name>
        <qualifiedname>KWin::Workspace::switchWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69" kindref="member">Direction</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>QPoint</type>
          <declname>curPos</declname>
        </param>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="612" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="1624" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1adcce1a65cbefa89be29a2523b0552d0e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> * &gt;</type>
        <definition>QList&lt; Window * &gt; KWin::Workspace::constrainedStackingOrder</definition>
        <argsstring>()</argsstring>
        <name>constrainedStackingOrder</name>
        <qualifiedname>KWin::Workspace::constrainedStackingOrder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a stacking order based upon <emphasis>list</emphasis> that fulfills certain contained. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="614" column="11" bodyfile="kwin/src/layers.cpp" bodystart="575" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a7b4befd7c2a509a8847122244b76f199" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::areConstrained</definition>
        <argsstring>(const Window *below, const Window *above) const</argsstring>
        <name>areConstrained</name>
        <qualifiedname>KWin::Workspace::areConstrained</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>below</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>above</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="615" column="10" bodyfile="kwin/src/layers.cpp" bodystart="286" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a6e0ec76d058ce55f7708b4073d753107" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::raiseWindowWithinApplication</definition>
        <argsstring>(Window *window)</argsstring>
        <name>raiseWindowWithinApplication</name>
        <qualifiedname>KWin::Workspace::raiseWindowWithinApplication</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="616" column="10" bodyfile="kwin/src/layers.cpp" bodystart="436" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aca6cd1ca892d92b83d5c7914a1d8ea70" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::lowerWindowWithinApplication</definition>
        <argsstring>(Window *window)</argsstring>
        <name>lowerWindowWithinApplication</name>
        <qualifiedname>KWin::Workspace::lowerWindowWithinApplication</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="617" column="10" bodyfile="kwin/src/layers.cpp" bodystart="379" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1af32704c87ddd418ec46cf523f367941f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::allowFullClientRaising</definition>
        <argsstring>(const Window *window, uint32_t timestamp)</argsstring>
        <name>allowFullClientRaising</name>
        <qualifiedname>KWin::Workspace::allowFullClientRaising</qualifiedname>
        <param>
          <type>const <ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="618" column="10" bodyfile="kwin/src/activation.cpp" bodystart="574" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1af2817ebd62c84f996614684a25e7e33c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::blockStackingUpdates</definition>
        <argsstring>(bool block)</argsstring>
        <name>blockStackingUpdates</name>
        <qualifiedname>KWin::Workspace::blockStackingUpdates</qualifiedname>
        <param>
          <type>bool</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="619" column="10" bodyfile="kwin/src/layers.cpp" bodystart="640" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a4467165080b37f9189c14f015b91e9e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::saveOldScreenSizes</definition>
        <argsstring>()</argsstring>
        <name>saveOldScreenSizes</name>
        <qualifiedname>KWin::Workspace::saveOldScreenSizes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="620" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="2189" bodyend="2195"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1af8e2eccbf55e561b467685a44bc7f517" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::addToStack</definition>
        <argsstring>(Window *window)</argsstring>
        <name>addToStack</name>
        <qualifiedname>KWin::Workspace::addToStack</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="621" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="612" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a2f9bdee1f384979bdb3556ad66e926b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::removeFromStack</definition>
        <argsstring>(Window *window)</argsstring>
        <name>removeFromStack</name>
        <qualifiedname>KWin::Workspace::removeFromStack</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="622" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="624" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ab769d76239e524ac4a9db00f052f25a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::setupWindowConnections</definition>
        <argsstring>(Window *window)</argsstring>
        <name>setupWindowConnections</name>
        <qualifiedname>KWin::Workspace::setupWindowConnections</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="637" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="541" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a5567177082f0ec197d97eba2c4f8afc0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::addWaylandWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>addWaylandWindow</name>
        <qualifiedname>KWin::Workspace::addWaylandWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="639" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="764" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ac4f35efa96f75fdff28d3c779edb8a26" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::removeWaylandWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>removeWaylandWindow</name>
        <qualifiedname>KWin::Workspace::removeWaylandWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="640" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="811" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ac587c2cc8ed6eb35131567f5c9dccb69" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::closeActivePopup</definition>
        <argsstring>()</argsstring>
        <name>closeActivePopup</name>
        <qualifiedname>KWin::Workspace::closeActivePopup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="644" column="10" bodyfile="kwin/src/useractions.cpp" bodystart="854" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a5e084d782c6978f5c1347816c0a419c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::updateWindowVisibilityOnDesktopChange</definition>
        <argsstring>(VirtualDesktop *newDesktop)</argsstring>
        <name>updateWindowVisibilityOnDesktopChange</name>
        <qualifiedname>KWin::Workspace::updateWindowVisibilityOnDesktopChange</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>newDesktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="645" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="936" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1aa8bedbac36235ba47b6927c852bb9b2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::activateWindowOnDesktop</definition>
        <argsstring>(VirtualDesktop *desktop)</argsstring>
        <name>activateWindowOnDesktop</name>
        <qualifiedname>KWin::Workspace::activateWindowOnDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="646" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="974" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ae31749958159c39457822bac1bc3f5c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
        <definition>Window * KWin::Workspace::findWindowToActivateOnDesktop</definition>
        <argsstring>(VirtualDesktop *desktop)</argsstring>
        <name>findWindowToActivateOnDesktop</name>
        <qualifiedname>KWin::Workspace::findWindowToActivateOnDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_virtual_desktop" kindref="compound">VirtualDesktop</ref> *</type>
          <declname>desktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="647" column="12" bodyfile="kwin/src/workspace.cpp" bodystart="1002" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1af093a091c0fee73236c0ff22f0d97d53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::removeWindow</definition>
        <argsstring>(Window *window)</argsstring>
        <name>removeWindow</name>
        <qualifiedname>KWin::Workspace::removeWindow</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="648" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="817" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ad5650800e2b9da647402d297f12521e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString KWin::Workspace::getPlacementTrackerHash</definition>
        <argsstring>()</argsstring>
        <name>getPlacementTrackerHash</name>
        <qualifiedname>KWin::Workspace::getPlacementTrackerHash</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="649" column="13" bodyfile="kwin/src/workspace.cpp" bodystart="288" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a0166fe1390b3b861a293dff98c60170c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::updateOutputConfiguration</definition>
        <argsstring>()</argsstring>
        <name>updateOutputConfiguration</name>
        <qualifiedname>KWin::Workspace::updateOutputConfiguration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="651" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="453" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1af4c0241d124571736069f3f30e6a5185" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::updateOutputs</definition>
        <argsstring>(const std::optional&lt; QList&lt; Output * &gt; &gt; &amp;outputOrder=std::nullopt)</argsstring>
        <name>updateOutputs</name>
        <qualifiedname>KWin::Workspace::updateOutputs</qualifiedname>
        <param>
          <type>const std::optional&lt; QList&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> * &gt; &gt; &amp;</type>
          <declname>outputOrder</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="652" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1205" bodyend="1335"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1ada954f872c773c4215649d34e4030d7c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::createDpmsFilter</definition>
        <argsstring>()</argsstring>
        <name>createDpmsFilter</name>
        <qualifiedname>KWin::Workspace::createDpmsFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="653" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1337" bodyend="1343"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a06c4ec9b62bd306076fbb4cafdab5040" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::maybeDestroyDpmsFilter</definition>
        <argsstring>()</argsstring>
        <name>maybeDestroyDpmsFilter</name>
        <qualifiedname>KWin::Workspace::maybeDestroyDpmsFilter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="654" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1345" bodyend="1353"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1abb0c40a7f44b4ad73fadec754483ff2c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::assignBrightnessDevices</definition>
        <argsstring>()</argsstring>
        <name>assignBrightnessDevices</name>
        <qualifiedname>KWin::Workspace::assignBrightnessDevices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="655" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1355" bodyend="1393"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1afeb7b4387888fea22954c163a4862eb1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Workspace::breaksShowingDesktop</definition>
        <argsstring>(Window *window) const</argsstring>
        <name>breaksShowingDesktop</name>
        <qualifiedname>KWin::Workspace::breaksShowingDesktop</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="657" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1567" bodyend="1570"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1abc68ea8b5869b2d087109c167ffd659e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::updateTabbox</definition>
        <argsstring>()</argsstring>
        <name>updateTabbox</name>
        <qualifiedname>KWin::Workspace::updateTabbox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="675" column="10" bodyfile="kwin/src/workspace.cpp" bodystart="1983" bodyend="1990"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_workspace_1a6a8e1ef1659b71f0ba16ce640ff4a502" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::Workspace::modalActionsSwitch</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>modalActionsSwitch</name>
        <qualifiedname>KWin::Workspace::modalActionsSwitch</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/workspace.h" line="718" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KWin::Workspace</label>
        <link refid="class_k_win_1_1_workspace"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KWin::Workspace</label>
        <link refid="class_k_win_1_1_workspace"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/workspace.h" line="88" column="1" bodyfile="kwin/src/workspace.h" bodystart="89" bodyend="776"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_workspace_1a756becc8bce1d2302726eab8fd40dd93" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>_self</name></member>
      <member refid="class_k_win_1_1_workspace_1a7e9f6c5485b19c544dfee95c60352e53" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>aboutToRearrange</name></member>
      <member refid="class_k_win_1_1_workspace_1ab8372aef950cf6ec71fc37e8b5b13d4f" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>activateNextWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a310f6402f9da20ba7b69c2327680b43e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>activateWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1aa8bedbac36235ba47b6927c852bb9b2f" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>activateWindowOnDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1a9ad9e3c64f80ee13fdc2ebbdba100fd6" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>active_popup</name></member>
      <member refid="class_k_win_1_1_workspace_1a5c706b5fddc7707a36576936450d86b9" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>activeOutput</name></member>
      <member refid="class_k_win_1_1_workspace_1a0fcebcde2aaab133120f33d412e34fd6" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>activeWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>ActivityFlag</name></member>
      <member refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a473e62c8bd1d0d14cd289ab6353abdbf" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>ActivityFocus</name></member>
      <member refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461ac15f90b91a69d95617b1c1ff88bf1d14" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>ActivityFocusForce</name></member>
      <member refid="class_k_win_1_1_workspace_1aa7b68eb74e4bab398b47e15ef50ca461a78fe29e8b597fd1711e6b95911549893" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>ActivityRaise</name></member>
      <member refid="class_k_win_1_1_workspace_1adb31571a577b74274ceb2e93eca5173f" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>addDeleted</name></member>
      <member refid="class_k_win_1_1_workspace_1a8c9a69e4d99aafd02ce6a15607e62a05" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>addInternalWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1af8e2eccbf55e561b467685a44bc7f517" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>addToStack</name></member>
      <member refid="class_k_win_1_1_workspace_1a5567177082f0ec197d97eba2c4f8afc0" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>addWaylandWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1adc6d7a7c79a2f35b4075a8e0098c2d01" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>addWindowToDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1a2a3f1825a379b19704a3af3fbbb0b0ca" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>adjustClientArea</name></member>
      <member refid="class_k_win_1_1_workspace_1a517f5ba087aeb5064cd69f9e1c87e47d" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>adjustWindowPosition</name></member>
      <member refid="class_k_win_1_1_workspace_1a8b3f56620794842b781e94a5d22cee44" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>adjustWindowSize</name></member>
      <member refid="class_k_win_1_1_workspace_1af32704c87ddd418ec46cf523f367941f" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>allowFullClientRaising</name></member>
      <member refid="class_k_win_1_1_workspace_1a13e4349bd55c2aea03898312f35aa5c4" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>applicationMenu</name></member>
      <member refid="class_k_win_1_1_workspace_1afb168b88a992a83e3bffa07ac13416a6" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>applyOutputConfiguration</name></member>
      <member refid="class_k_win_1_1_workspace_1a7b4befd7c2a509a8847122244b76f199" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>areConstrained</name></member>
      <member refid="class_k_win_1_1_workspace_1abb0c40a7f44b4ad73fadec754483ff2c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>assignBrightnessDevices</name></member>
      <member refid="class_k_win_1_1_workspace_1a098ffc498e9972fd1aed82987952667c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>attention_chain</name></member>
      <member refid="class_k_win_1_1_workspace_1a2582b33741019f6577e01cc8957d8a66" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>block_focus</name></member>
      <member refid="class_k_win_1_1_workspace_1af2817ebd62c84f996614684a25e7e33c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>blockStackingUpdates</name></member>
      <member refid="class_k_win_1_1_workspace_1afeb7b4387888fea22954c163a4862eb1" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>breaksShowingDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1ac057ef8d7929830aabc2382723dda763" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>cancelDelayFocus</name></member>
      <member refid="class_k_win_1_1_workspace_1aeec0fc3dc0cd5a7b5526148a602053d0" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>cascadeOffset</name></member>
      <member refid="class_k_win_1_1_workspace_1a1efc2ac8ca9fc5e3accf195e0e0b708e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>clientArea</name></member>
      <member refid="class_k_win_1_1_workspace_1a447fb8861ea3cade3afabb9a6b31aafb" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>clientArea</name></member>
      <member refid="class_k_win_1_1_workspace_1a70432e1d03005a7d58c81cf5d0dd3928" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>clientArea</name></member>
      <member refid="class_k_win_1_1_workspace_1a771ff2f28d59f374a9abe733b9fb3828" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>clientArea</name></member>
      <member refid="class_k_win_1_1_workspace_1ac587c2cc8ed6eb35131567f5c9dccb69" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>closeActivePopup</name></member>
      <member refid="class_k_win_1_1_workspace_1abd94bbc1291ecb4698c459980e158ace" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>configChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1a2aa92ec44e02155532a4dc2eca7ed648" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>constrain</name></member>
      <member refid="class_k_win_1_1_workspace_1adcce1a65cbefa89be29a2523b0552d0e" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>constrainedStackingOrder</name></member>
      <member refid="class_k_win_1_1_workspace_1ada954f872c773c4215649d34e4030d7c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>createDpmsFilter</name></member>
      <member refid="class_k_win_1_1_workspace_1aba1fb5ecc5c9747f0c7e637b57c5c94a" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>currentActivityChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1a6b3280a21aab25e4b281825ac80cc03c" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>currentDesktopChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1a7862ecb48b5771a771a8bd49ccc446c2" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>currentDesktopChanging</name></member>
      <member refid="class_k_win_1_1_workspace_1a313825797f477b7a9f6f427a8c4b8b0f" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>currentDesktopChangingCancelled</name></member>
      <member refid="class_k_win_1_1_workspace_1a4188b9bf56947425049cc2c19e2dd1e1" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>customQuickTileWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a83a4d2853a17494f680716e42f2d9799" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>decorationBridge</name></member>
      <member refid="class_k_win_1_1_workspace_1a7756fa8e1f0760e4624a17588621f907" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>delayFocus</name></member>
      <member refid="class_k_win_1_1_workspace_1ab5b6d26f097defdba161baf521fecb8c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>delayFocusTimer</name></member>
      <member refid="class_k_win_1_1_workspace_1aeec60010418e6d9b47a5d5d38f888721" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>deleted</name></member>
      <member refid="class_k_win_1_1_workspace_1ae10af479c806f190fb52cc434eef9fb5" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>deletedRemoved</name></member>
      <member refid="class_k_win_1_1_workspace_1aa73b8caf82b587653e019b796a4065aa" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>desktopResized</name></member>
      <member refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>Direction</name></member>
      <member refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a15f4c5efa2b0812013442472b1c3a8a8" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>DirectionEast</name></member>
      <member refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69ae79e444678163cfc996bcc44c2038854" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>DirectionNext</name></member>
      <member refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a0addddb327e68da424c9afac55b41355" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>DirectionNorth</name></member>
      <member refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69a6f6aae4a8d6c7f7ad483034a351f1efe" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>DirectionPrev</name></member>
      <member refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69ab47c69147e9db336d33919ba7f6b7407" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>DirectionSouth</name></member>
      <member refid="class_k_win_1_1_workspace_1a75a4c472ed6068c76df3b4066f03ac69abbe324899c853ba3b231f973f844c426" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>DirectionWest</name></member>
      <member refid="class_k_win_1_1_workspace_1ae2f34bd6de87a53116c7b152ac3b58e5" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>disableGlobalShortcutsForClient</name></member>
      <member refid="class_k_win_1_1_workspace_1a95a97e34f6f0ebd4037ff0dfc4b82139" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>ensureStackingOrder</name></member>
      <member refid="class_k_win_1_1_workspace_1adf4d93ea33e9e508acb82ab24766d8cf" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>findDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1a03c7a8cc39cb67397584eda6b7e3657b" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>findInternal</name></member>
      <member refid="class_k_win_1_1_workspace_1adaab21158dc0f383f41c5a6eacaa0675" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>findOutput</name></member>
      <member refid="class_k_win_1_1_workspace_1a3dbf8dfd7ca2f6e400f885294d11392c" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>findWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1ab0cf7f32dd8381d9788cf8963ac8c8af" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>findWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1ae31749958159c39457822bac1bc3f5c5" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>findWindowToActivateOnDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1a9cdd73f71ccdefa9152c49ad16ad2be9" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>focusChain</name></member>
      <member refid="class_k_win_1_1_workspace_1afad02da0d5b5114e5f3259dca8499bc3" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>focusChangeEnabled</name></member>
      <member refid="class_k_win_1_1_workspace_1a9d95bfcedc18a95b0f24a26592a853bc" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>focusMousePos</name></member>
      <member refid="class_k_win_1_1_workspace_1ad4e6175b01bae1408f602ef03e7e453c" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>focusMousePosition</name></member>
      <member refid="class_k_win_1_1_workspace_1a3c21fc7f0bfcf2ccb5bd7a0b90ba9e54" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>focusToNull</name></member>
      <member refid="class_k_win_1_1_workspace_1a519288eebc54521bd52176017a236383" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>force_restacking</name></member>
      <member refid="class_k_win_1_1_workspace_1adb51e7dfaae8284674514d9c85e8e54d" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>forceRestacking</name></member>
      <member refid="class_k_win_1_1_workspace_1a386058ca536b6c5c61861fe9d634fc09" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>forEachWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1aca2679a62471e374db5227ae4491b4a8" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>geometry</name></member>
      <member refid="class_k_win_1_1_workspace_1acd184adfbb27f515c16e899192fbfe40" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>geometryChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1ad5650800e2b9da647402d297f12521e4" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>getPlacementTrackerHash</name></member>
      <member refid="class_k_win_1_1_workspace_1a9f2dd0c7b1fbe35e6e6cd1ec89d169b1" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>globalShortcutsDisabled</name></member>
      <member refid="class_k_win_1_1_workspace_1a6c0fdb3d0f5b817bff878b4fdbd0527a" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>gotFocusIn</name></member>
      <member refid="class_k_win_1_1_workspace_1a254b80d431e5a103b0dba0d3315808ee" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>groups</name></member>
      <member refid="class_k_win_1_1_workspace_1abd7e75495fda80045e3dcae4dc3aa3c3" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>hasWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a72a264090477036fecd936dfcc9c24fd" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>init</name></member>
      <member refid="class_k_win_1_1_workspace_1ad9092913f404881543b9c3e4e44f22a0" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>initializing</name></member>
      <member refid="class_k_win_1_1_workspace_1a6921e66e63f02ebf4f055f24bb338128" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>initShortcut</name></member>
      <member refid="class_k_win_1_1_workspace_1a02214ded8ff593bfbc58c57f83a36165" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>initShortcut</name></member>
      <member refid="class_k_win_1_1_workspace_1a38b565e77975a1c7c285e8faff4e47be" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>initShortcuts</name></member>
      <member refid="class_k_win_1_1_workspace_1ad13932cebdeacf0ecce08e685b331ebc" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>inRearrange</name></member>
      <member refid="class_k_win_1_1_workspace_1a9ac33098b5ba87629de700bf9dc812f9" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>inShouldGetFocus</name></member>
      <member refid="class_k_win_1_1_workspace_1a80eadeda591ad89e37f55295023d7f1a" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>lastActiveWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1aac64d498c63fc4cc5ce08700d7f311b9" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>lowerWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1aca6cd1ca892d92b83d5c7914a1d8ea70" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>lowerWindowWithinApplication</name></member>
      <member refid="class_k_win_1_1_workspace_1a08cb2132c9823110aa89f30d52403cd2" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_activeOutput</name></member>
      <member refid="class_k_win_1_1_workspace_1ab8577a443946cc06135da34fe68741e5" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_activePopupWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a6a0a5b526387aeededc82f7df8a60f8a" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_activeWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a0caa3bb2abdeeed3fec77dbfb279a10e" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_applicationMenu</name></member>
      <member refid="class_k_win_1_1_workspace_1a2315cc57ae051564f787dd178287d3e7" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_blockedPropagatingNewWindows</name></member>
      <member refid="class_k_win_1_1_workspace_1a9395bdd33e6dc1d8ff52ae1543626639" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_blockStackingUpdates</name></member>
      <member refid="class_k_win_1_1_workspace_1a4d6e2eb73e0b0b544661d5686c9af257" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_constraints</name></member>
      <member refid="class_k_win_1_1_workspace_1a8e13d67b2156ff21993c9cfe2075d0e3" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_decorationBridge</name></member>
      <member refid="class_k_win_1_1_workspace_1a22c6db28ee8fe5175eb751a8766de9ab" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_delayFocusWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a91d55b38bf5262e660bb5a347817142c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_dpmsFilter</name></member>
      <member refid="class_k_win_1_1_workspace_1a560ca659902cc3524a807d091c350181" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_focusChain</name></member>
      <member refid="class_k_win_1_1_workspace_1ac725c1ed51810a48538c42e85399b79f" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_geometry</name></member>
      <member refid="class_k_win_1_1_workspace_1a4cb35118a891f822a9821f2e1ae87488" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_globalShortcutsDisabledForWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1ad674743799e5197d091621d5a7afad40" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_inRearrange</name></member>
      <member refid="class_k_win_1_1_workspace_1a8d715506c6a622cb311d6c370891828d" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_kdeglobalsWatcher</name></member>
      <member refid="class_k_win_1_1_workspace_1a0032dc02a6283849276e48adf95ee13b" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_lastActiveWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a059233d3d8b7b5d8e678564c0433ce0b" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_lidSwitchTracker</name></member>
      <member refid="class_k_win_1_1_workspace_1a9507b9daaa6ace1a548f95178d0da11c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_moveResizeWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1ae5489499450903a09882baf326dfb85a" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_oldRestrictedAreas</name></member>
      <member refid="class_k_win_1_1_workspace_1ac8b9321c85726436fb4e3385e5937491" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_oldScreenGeometries</name></member>
      <member refid="class_k_win_1_1_workspace_1aea4e709e623f434e270cf6f361725647" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_orientationSensor</name></member>
      <member refid="class_k_win_1_1_workspace_1ad9459557926cc4099a7a48a8181641e5" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_outline</name></member>
      <member refid="class_k_win_1_1_workspace_1abde945b92c5b1936ba0d5a9b289ec5f4" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_outputConfigStore</name></member>
      <member refid="class_k_win_1_1_workspace_1aad62591bb9af31bf9beef5751dce5f21" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_outputOrder</name></member>
      <member refid="class_k_win_1_1_workspace_1a4943d4012d248f8ccb3b81e396461f93" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_outputs</name></member>
      <member refid="class_k_win_1_1_workspace_1a088677907c3eb1ea86d20104f15c3e02" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_placeholderFilter</name></member>
      <member refid="class_k_win_1_1_workspace_1ad4bd4d7ece5aff1caf5659b4968b2faa" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_placeholderOutput</name></member>
      <member refid="class_k_win_1_1_workspace_1a4268fbf38ac4c881c49c8a4486bed154" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_placement</name></member>
      <member refid="class_k_win_1_1_workspace_1a99e1ec3ee5047b86ef3ddaad2f6ba631" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_placementTracker</name></member>
      <member refid="class_k_win_1_1_workspace_1a5dd0701726188878f67530254e5b5253" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_rearrangeTimer</name></member>
      <member refid="class_k_win_1_1_workspace_1a1bd3f5ddb8b5f5ef42e53ab7bb2a0c65" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_restrictedAreas</name></member>
      <member refid="class_k_win_1_1_workspace_1ad4124d7f543146a5bfa1c4e8b05fc25c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_rulebook</name></member>
      <member refid="class_k_win_1_1_workspace_1acf452ecd0d8cfd61affc67a366348594" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_screenAreas</name></member>
      <member refid="class_k_win_1_1_workspace_1a5b960a38bab711e24c87a85673c2df5c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_screenEdges</name></member>
      <member refid="class_k_win_1_1_workspace_1a0846bc0c90e40189dfa61b3a4095a29c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_sessionManager</name></member>
      <member refid="class_k_win_1_1_workspace_1aac9dba0f1461e9d1439dd5cbf3e7abed" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_setActiveWindowRecursion</name></member>
      <member refid="class_k_win_1_1_workspace_1a01407cc57b04933261447e8436686bc4" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_tileManagers</name></member>
      <member refid="class_k_win_1_1_workspace_1ace2735120f9d47602268faee6f57c336" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_userActionsMenu</name></member>
      <member refid="class_k_win_1_1_workspace_1ad22b5cd4c40706e9ccf14e0f7b8ca4d6" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_windowKeysDialog</name></member>
      <member refid="class_k_win_1_1_workspace_1adf4155bb6953fd746e3a052356b9862b" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_windowKeysWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a968213a1e1ec97dc6e8b677c76a6493b" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_windowKiller</name></member>
      <member refid="class_k_win_1_1_workspace_1a3196fd83b4f4c90080493340dc599209" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_windows</name></member>
      <member refid="class_k_win_1_1_workspace_1a2e46c68c6d625e241c56f917954c4ca3" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>m_workAreas</name></member>
      <member refid="class_k_win_1_1_workspace_1a06c4ec9b62bd306076fbb4cafdab5040" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>maybeDestroyDpmsFilter</name></member>
      <member refid="class_k_win_1_1_workspace_1a6a8e1ef1659b71f0ba16ce640ff4a502" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>modalActionsSwitch</name></member>
      <member refid="class_k_win_1_1_workspace_1a0a94c694f53fc655c0a257c0e17a7db3" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>mostRecentlyActivatedWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a68fb368cbc7f8a07e490bde1b8b05f86" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>moveResizeWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a671835e2cd6b50e22a103101524a56c5" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>outline</name></member>
      <member refid="class_k_win_1_1_workspace_1a2ca59e0d2a0634945e4c160547a20f72" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>outputAdded</name></member>
      <member refid="class_k_win_1_1_workspace_1acaee43b5ca7a189e5f84b6361da672c3" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>outputAt</name></member>
      <member refid="class_k_win_1_1_workspace_1a3b36987ac646fd260310ef4e95a7d236" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>outputOrder</name></member>
      <member refid="class_k_win_1_1_workspace_1a0477e859f40c82767596a385af294ced" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>outputOrderChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1acb430f5b2b96c6386636d80a89e33f81" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>outputRemoved</name></member>
      <member refid="class_k_win_1_1_workspace_1aaee7f44422f40ea8256b2f54e83a2b37" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>outputs</name></member>
      <member refid="class_k_win_1_1_workspace_1afd27bc2d5c3bd0272375f09238f779f2" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>outputsChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1a44fea8fa5dee07497df1290f1bc7db8c" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>packPositionDown</name></member>
      <member refid="class_k_win_1_1_workspace_1ae7a259547d1f1a226a7dd41ce2ae0b37" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>packPositionLeft</name></member>
      <member refid="class_k_win_1_1_workspace_1ab7d325e0d6ebca3a9dbda862d3464682" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>packPositionRight</name></member>
      <member refid="class_k_win_1_1_workspace_1ae1bc5892e767f8192c806df5c3eefcd3" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>packPositionUp</name></member>
      <member refid="class_k_win_1_1_workspace_1a7175d6e6f28f86cbf7473fdaf05fafb2" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>performTransiencyCheck</name></member>
      <member refid="class_k_win_1_1_workspace_1a682f0605b16a7a10d21cf6cae954f84e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>performWindowOperation</name></member>
      <member refid="class_k_win_1_1_workspace_1a895516d998d121ec543bce0b65cd5ddf" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>placement</name></member>
      <member refid="class_k_win_1_1_workspace_1a417632c2c422b30f2e750947acf30911" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>previousRestrictedMoveArea</name></member>
      <member refid="class_k_win_1_1_workspace_1ae4d94cbd8cec24b7506f6f5d4b57117a" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>previousScreenSizes</name></member>
      <member refid="class_k_win_1_1_workspace_1a1861c636010a4c41f0ab9b51e8e33869" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>quickTileWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1adfc9cfb57c673882febf1f510cd9d2d3" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>raiseOrLowerWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a7af0e246269d807f7f29527ba90613ee" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>raiseWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a6e0ec76d058ce55f7708b4073d753107" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>raiseWindowWithinApplication</name></member>
      <member refid="class_k_win_1_1_workspace_1a2f699b6a656b4136992bc050b8470fed" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>rearrange</name></member>
      <member refid="class_k_win_1_1_workspace_1a5e9d8ec5a02cb798b27d45d912765e7c" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>reconfigure</name></member>
      <member refid="class_k_win_1_1_workspace_1a10d9cddb3026e376da6e548bea82a543" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>reconfigureTimer</name></member>
      <member refid="class_k_win_1_1_workspace_1ad4e5231fe7b66b90cf49eeaf9046b408" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>removeDeleted</name></member>
      <member refid="class_k_win_1_1_workspace_1a2f9bdee1f384979bdb3556ad66e926b8" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>removeFromStack</name></member>
      <member refid="class_k_win_1_1_workspace_1a94f4ad6e71a7cb5de853255897a7af6d" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>removeInternalWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1ac4f35efa96f75fdff28d3c779edb8a26" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>removeWaylandWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1af093a091c0fee73236c0ff22f0d97d53" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>removeWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a648bb2c9800b2fcf76b189dd37870f7c" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>removeWindowFromDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1aeaf4a3171b0de69a0ed0c296a385c389" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>requestDelayFocus</name></member>
      <member refid="class_k_win_1_1_workspace_1abb14aa92b6473b4e8e06388d34460b90" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>requestFocus</name></member>
      <member refid="class_k_win_1_1_workspace_1addfc730c9bf5ef27eb67b927f87c07be" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>restackWindowUnderActive</name></member>
      <member refid="class_k_win_1_1_workspace_1a92701686bcdf74405f2d12224e26ab9f" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>restoreFocus</name></member>
      <member refid="class_k_win_1_1_workspace_1a9a4e6179b2a0380efac1a5c895348c8f" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>restrictedMoveArea</name></member>
      <member refid="class_k_win_1_1_workspace_1a1d3b4ba05e0d7a110ab5603096deb4c7" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>rootTile</name></member>
      <member refid="class_k_win_1_1_workspace_1a3b29d3a12fbd0b094b4b525feae8bdb3" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>rootTile</name></member>
      <member refid="class_k_win_1_1_workspace_1aa6d9b69aa8a43a168a1948f23db0d48e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>rulebook</name></member>
      <member refid="class_k_win_1_1_workspace_1a4467165080b37f9189c14f015b91e9e0" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>saveOldScreenSizes</name></member>
      <member refid="class_k_win_1_1_workspace_1ac71fcb686f84fc4357e33a9561fb7548" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>scheduleRearrange</name></member>
      <member refid="class_k_win_1_1_workspace_1a21cf494fbdd48523724bd6f35bf5547e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>screenEdges</name></member>
      <member refid="class_k_win_1_1_workspace_1a8ca8f8a3904f007fd6a256c0d6996201" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>self</name></member>
      <member refid="class_k_win_1_1_workspace_1aafd74ab8d80e9d862429bcbab25838e3" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>sendWindowToDesktops</name></member>
      <member refid="class_k_win_1_1_workspace_1adbf79458e8db9c18b4144a8755d63a47" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>sessionManager</name></member>
      <member refid="class_k_win_1_1_workspace_1abe694aeb41eaff7b515070ad0c11dba4" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>setActiveOutput</name></member>
      <member refid="class_k_win_1_1_workspace_1a9284bcfe646f63d1ce72f53fbeb04ed9" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>setActiveOutput</name></member>
      <member refid="class_k_win_1_1_workspace_1aafa49cabb69a96aef0140b23c791b5f7" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>setActiveWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1aa847663e0f3e34c726ab2259866d2fb2" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>setMoveResizeWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a953322eb1bc173122feaab3046b9aee8" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>setOutputOrder</name></member>
      <member refid="class_k_win_1_1_workspace_1afd242a3bcbbb827e19dbbcb1dce9d5e7" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>setShouldGetFocus</name></member>
      <member refid="class_k_win_1_1_workspace_1ac6fe3f106ae7cdbb81d38ecf31e2ba54" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>setShowingDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1ab769d76239e524ac4a9db00f052f25a1" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>setupWindowConnections</name></member>
      <member refid="class_k_win_1_1_workspace_1aff318ab859e9eb76af902f0e16d65aa0" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>setupWindowShortcut</name></member>
      <member refid="class_k_win_1_1_workspace_1a6144f664ec43d5392e9faf010d096bf0" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>setupWindowShortcutDone</name></member>
      <member refid="class_k_win_1_1_workspace_1ae429c0def62c2cfef0de8613be7c5802" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>setWasUserInteraction</name></member>
      <member refid="class_k_win_1_1_workspace_1ad7d933840f241ebc660b5a79f0796d97" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>shortcutAvailable</name></member>
      <member refid="class_k_win_1_1_workspace_1aa34d6f0cd9abfec3fe1502d3a69a9659" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>shortcutDialog</name></member>
      <member refid="class_k_win_1_1_workspace_1a9f0428c2bcd1f0f30d269dd9bd7a37f1" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>should_get_focus</name></member>
      <member refid="class_k_win_1_1_workspace_1a0dfc7bf61f28f3c5b2bc0a8ed8376527" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>showApplicationMenu</name></member>
      <member refid="class_k_win_1_1_workspace_1abbaef625b79714a22074c5531fad960d" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>showing_desktop</name></member>
      <member refid="class_k_win_1_1_workspace_1aa4351f52e20146156f8515450b186c8a" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>showingDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1a683e1ce1a2cb1301a7096a323e2111e2" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>showingDesktopChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1a47328bf65fdfe34cb84491b967d28292" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>showWindowMenu</name></member>
      <member refid="class_k_win_1_1_workspace_1ae5596c26d968b0ec9e459f4c6ab10c6e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotActivateAttentionWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a951238d5ec2e515b3e12b06b46a90228" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotCurrentDesktopChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1a720bfd8657bc9899ae0bcfb8f4c331c1" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotCurrentDesktopChanging</name></member>
      <member refid="class_k_win_1_1_workspace_1a55530f52e5384ef86bc8835970c5de0f" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotCurrentDesktopChangingCancelled</name></member>
      <member refid="class_k_win_1_1_workspace_1a7ee57715ccbe4920fa75fa7373371a0b" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotDesktopAdded</name></member>
      <member refid="class_k_win_1_1_workspace_1a89ae5f5f1e4d0d069d3e1e8d878957c3" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotDesktopRemoved</name></member>
      <member refid="class_k_win_1_1_workspace_1a3b23fcd81d49131a9088d4184c83e5ce" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotEndInteractiveMoveResize</name></member>
      <member refid="class_k_win_1_1_workspace_1acd330cb42a448a6ee82cc04c06cc0ac8" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotIncreaseWindowOpacity</name></member>
      <member refid="class_k_win_1_1_workspace_1a4e6e905373105e89e30787cacbfba753" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotKillWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1a5b4563a159df9f78b993586679c6cbf4" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotLowerWindowOpacity</name></member>
      <member refid="class_k_win_1_1_workspace_1a567a7b59bd0864ac20a529c32a715fe2" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotOutputBackendOutputsQueried</name></member>
      <member refid="class_k_win_1_1_workspace_1ae78f215cb85fe7ea6cadea0067efbc72" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotReconfigure</name></member>
      <member refid="class_k_win_1_1_workspace_1af55c20be4db9b52921ab11d45e6ff2f9" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotReloadConfig</name></member>
      <member refid="class_k_win_1_1_workspace_1ad32a0ab6b83a1406fe600d8f44543479" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotSetupWindowShortcut</name></member>
      <member refid="class_k_win_1_1_workspace_1a9caef8ddd4bac4e3e7418180f19cf33f" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotSwitchToAboveScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1acdacf77f0ac5607e4512058f406b8b3e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotSwitchToBelowScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1a50f90e638ea003626ddf12d68120df48" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotSwitchToLeftScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1a024c926e03303ec0f0aded6d430a54a4" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotSwitchToNextScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1a88e97b459eb46b4472d7c4e84cce4f4b" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotSwitchToPrevScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1a5c5c63c7d99ace766e8afb3e017b6878" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotSwitchToRightScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1a8459dc23c3457482bdf76b45a2072e68" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotSwitchToScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1a006f0f96142b8ccb882aa05eea0f1a73" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotToggleShowDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1a4fee54ded2433f01199adddd3ea80dcc" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowAbove</name></member>
      <member refid="class_k_win_1_1_workspace_1a4f60f7442a63aaf1e6515cd6754e557a" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowBelow</name></member>
      <member refid="class_k_win_1_1_workspace_1a6ca662f16e256158bc9243c89ee7e48e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowCenter</name></member>
      <member refid="class_k_win_1_1_workspace_1ac6b42f7a894948a7fef6aceb2899ae22" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowClose</name></member>
      <member refid="class_k_win_1_1_workspace_1a4d759497b50f941fd3fe0c030576653e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowExpandHorizontal</name></member>
      <member refid="class_k_win_1_1_workspace_1ac3387c35afc845e3f8a9b3b37e74d420" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowExpandVertical</name></member>
      <member refid="class_k_win_1_1_workspace_1a9995140fe55894b5085c5cfb84243caa" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowFullScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1a78fbde2a45d5c03b22880051f11427cf" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowLower</name></member>
      <member refid="class_k_win_1_1_workspace_1a6275eab1e7d8c5270d6d1d526b6a505c" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowMaximize</name></member>
      <member refid="class_k_win_1_1_workspace_1ac80d2da241bb5d8e0802f3f5885f3ee5" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowMaximizeHorizontal</name></member>
      <member refid="class_k_win_1_1_workspace_1a534516cead522fa6237ced7ef5e9c8f1" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowMaximizeVertical</name></member>
      <member refid="class_k_win_1_1_workspace_1a3c6dad0c89221aafe580d298f7a2bab5" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowMinimize</name></member>
      <member refid="class_k_win_1_1_workspace_1aa6434d76d6ec1bc06d939859517848cc" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowMove</name></member>
      <member refid="class_k_win_1_1_workspace_1a9c3f2a6bf30466d6724f7d0b272bd53c" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowMoveDown</name></member>
      <member refid="class_k_win_1_1_workspace_1af05234f86f1bb659cf848b41ed8257d5" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowMoveLeft</name></member>
      <member refid="class_k_win_1_1_workspace_1aae89cd70029d5b875cb6ac6873bf14e1" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowMoveRight</name></member>
      <member refid="class_k_win_1_1_workspace_1a5e40cf9ac2f27f08d67b0c2170fea37e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowMoveUp</name></member>
      <member refid="class_k_win_1_1_workspace_1a88900881178bea9c9c8ba0d957bb4e7f" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowNoBorder</name></member>
      <member refid="class_k_win_1_1_workspace_1a77b24984de50b443ebc73ba0788638e0" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowOnAllDesktops</name></member>
      <member refid="class_k_win_1_1_workspace_1a3af5c7f007e3fc4a14aae62491f4b757" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowOperations</name></member>
      <member refid="class_k_win_1_1_workspace_1a1a00fb9001fe151f9a5ae44aa2294867" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowRaise</name></member>
      <member refid="class_k_win_1_1_workspace_1adf6acf02deae734d4c6cc71f5cfb9250" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowRaiseOrLower</name></member>
      <member refid="class_k_win_1_1_workspace_1af2ff89705cde1c8147baa542af320f57" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowResize</name></member>
      <member refid="class_k_win_1_1_workspace_1a752ec56dd2d4aa4ffd6e7bc900672cc9" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowShade</name></member>
      <member refid="class_k_win_1_1_workspace_1a4657b9f4a71fdc29d858651cb381f32e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowShrinkHorizontal</name></member>
      <member refid="class_k_win_1_1_workspace_1aaeb78b08af857a9c2a13632dcef203da" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowShrinkVertical</name></member>
      <member refid="class_k_win_1_1_workspace_1acfe06bf4dbba90f73327c324a6e9a99d" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToAboveScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1a8149299cc88c160637264b41ca6ec953" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToBelowScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1afbb3df3d37cb7e389ed825975b2dbea6" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1a932d356dcf0eba93fb2c88175700301d" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToDesktopDown</name></member>
      <member refid="class_k_win_1_1_workspace_1a9fd6fdc2231bdfab6965b1e9a794b5c0" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToDesktopLeft</name></member>
      <member refid="class_k_win_1_1_workspace_1ae4ca855547a553ff7356d379c29e529d" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToDesktopRight</name></member>
      <member refid="class_k_win_1_1_workspace_1ab0abb9c5b62d373b2711e48622cbafaf" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToDesktopUp</name></member>
      <member refid="class_k_win_1_1_workspace_1a06367663ff43f4cd8546e6951cdaa34c" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToLeftScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1a5d979e3a2cb452b9132781ac00b172eb" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToNextDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1aa6a13c6fe3f4197dd4f30a6963b4b433" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToNextScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1a8454478fcfcbe02bf3155dd53ac4816b" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToPreviousDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1a4bd27276cce71c7c341183f1c5ea9fa9" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToPrevScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1aa8c73506724df9ac4a5166e37eedbd38" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToRightScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1acb81d92ccab2b010763e431e679c9de5" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>slotWindowToScreen</name></member>
      <member refid="class_k_win_1_1_workspace_1acd2cbfc77d22267e35eb2ec8b9b28171" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>stackAbove</name></member>
      <member refid="class_k_win_1_1_workspace_1abf31c3a83a38f58b6c29718c3a7f16df" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>stackBelow</name></member>
      <member refid="class_k_win_1_1_workspace_1a5991018e62129ed6dbf94c92f097699b" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>stacking_order</name></member>
      <member refid="class_k_win_1_1_workspace_1a376b811ccbcdce840e1a9838d62f802e" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>stackingOrder</name></member>
      <member refid="class_k_win_1_1_workspace_1a47f5cff26f9f97c938e9adb15c8f643b" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>stackingOrderChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1abd680430e0a19c1a0806c197ce217a30" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>StackingUpdatesBlocker</name></member>
      <member refid="class_k_win_1_1_workspace_1afdb77bae789811416e3482f64025e0c3" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>supportInformation</name></member>
      <member refid="class_k_win_1_1_workspace_1a710bf3a9516abb7ff66c8a31cca92c09" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>switchToOutput</name></member>
      <member refid="class_k_win_1_1_workspace_1a7c98c4f9cf9f54bb7cd440c27f80ce40" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>switchWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1ad1fcbad167126fa6ac2cfaf0ae8440f0" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>switchWindow</name></member>
      <member refid="class_k_win_1_1_workspace_1ac5270fc5d7e4887762c87015c4b92e04" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>takeActivity</name></member>
      <member refid="class_k_win_1_1_workspace_1aeb8fa011ed32e566188e34d93e25ebef" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>tileManager</name></member>
      <member refid="class_k_win_1_1_workspace_1a8d90b711536ca0e2c5d13b7ab98dd3ca" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>topWindowOnDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1ad6e40ee8a14a3dd99a33ae48b5125966" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>unconstrain</name></member>
      <member refid="class_k_win_1_1_workspace_1a4f59ba3cc44bbe7d7b090bef86108649" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>unconstrained_stacking_order</name></member>
      <member refid="class_k_win_1_1_workspace_1a8e43ad54cbbb9a0f270fb414ad4d2cfb" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>unconstrainedStackingOrder</name></member>
      <member refid="class_k_win_1_1_workspace_1a64de3e26f6a879b3f886ae5ee51b7b2f" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>updateCurrentActivity</name></member>
      <member refid="class_k_win_1_1_workspace_1a9d46ff69d3fe34c0691f5f1f4d271bca" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>updateFocusMousePosition</name></member>
      <member refid="class_k_win_1_1_workspace_1a3053637d6d507467b0806746edc57db2" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>updateMinimizedOfTransients</name></member>
      <member refid="class_k_win_1_1_workspace_1a0ec3b510144155afa123830c35869dd3" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>updateOnAllDesktopsOfTransients</name></member>
      <member refid="class_k_win_1_1_workspace_1a0166fe1390b3b861a293dff98c60170c" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>updateOutputConfiguration</name></member>
      <member refid="class_k_win_1_1_workspace_1af4c0241d124571736069f3f30e6a5185" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>updateOutputs</name></member>
      <member refid="class_k_win_1_1_workspace_1a72563ede9d7e32e742e475b8d47fdbe2" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>updateStackingOrder</name></member>
      <member refid="class_k_win_1_1_workspace_1abc68ea8b5869b2d087109c167ffd659e" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>updateTabbox</name></member>
      <member refid="class_k_win_1_1_workspace_1a5e084d782c6978f5c1347816c0a419c2" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>updateWindowVisibilityOnDesktopChange</name></member>
      <member refid="class_k_win_1_1_workspace_1ae837916abeb94a44cc9da64650a7db62" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>updateXwaylandScale</name></member>
      <member refid="class_k_win_1_1_workspace_1a96eaf61a7f65ac0a5b2f7e3a51ad0998" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>userActionsMenu</name></member>
      <member refid="class_k_win_1_1_workspace_1a7fd49a69a8a7bb00c0ba7cb88292c2c0" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>was_user_interaction</name></member>
      <member refid="class_k_win_1_1_workspace_1a4d5d4700d08dbc47bb74f740d54e2c9b" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>wasUserInteraction</name></member>
      <member refid="class_k_win_1_1_workspace_1a7b90a95e89c3140a7af30e853e5359c6" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>windowActivated</name></member>
      <member refid="class_k_win_1_1_workspace_1a8f82a0ac5517ddb86629fa3f8243e388" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>windowAdded</name></member>
      <member refid="class_k_win_1_1_workspace_1a099d6af05ac9dc5aa21a9ce02fd3fd34" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>windowAttentionChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1aca2c97c1f18951364978827022677849" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>windowMinimizedChanged</name></member>
      <member refid="class_k_win_1_1_workspace_1a56e58d6f7f7b1c0cca13384068f2cdd2" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>windowRemoved</name></member>
      <member refid="class_k_win_1_1_workspace_1a56ba55626239671625164a73ef19f775" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>windows</name></member>
      <member refid="class_k_win_1_1_workspace_1a1eaf4d87030b43f87e63161e3a5edc64" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>windowShortcutUpdated</name></member>
      <member refid="class_k_win_1_1_workspace_1a3c35c033a996766f63b1be0c15099101" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>windowToNextDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1ad5b8bf8cfc01c5e77d3968f5c943a4fa" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>windowToPreviousDesktop</name></member>
      <member refid="class_k_win_1_1_workspace_1a4097a6134a489cb0497843bd4ff73548" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>windowUnderMouse</name></member>
      <member refid="class_k_win_1_1_workspace_1a108eca7df877d9ac73f744c18968e39a" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>Workspace</name></member>
      <member refid="class_k_win_1_1_workspace_1a5d1ca94655caf88ecef91f95edd546ac" prot="private" virt="non-virtual"><scope>KWin::Workspace</scope><name>workspace</name></member>
      <member refid="class_k_win_1_1_workspace_1a40a0c2857a176b5288406b0aaa5b79d6" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>workspaceInitialized</name></member>
      <member refid="class_k_win_1_1_workspace_1aef0b408ec096ffd9e3e63d507bfeeca6" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>xineramaIndexToOutput</name></member>
      <member refid="class_k_win_1_1_workspace_1a1726fcb427270c67eec9affb5b79c316" prot="public" virt="non-virtual"><scope>KWin::Workspace</scope><name>~Workspace</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
