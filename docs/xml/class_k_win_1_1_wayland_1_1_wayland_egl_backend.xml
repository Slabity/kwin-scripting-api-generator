<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_k_win_1_1_wayland_1_1_wayland_egl_backend" kind="class" language="C++" prot="public">
    <compoundname>KWin::Wayland::WaylandEglBackend</compoundname>
    <basecompoundref refid="class_k_win_1_1_abstract_egl_backend" prot="public" virt="non-virtual">KWin::AbstractEglBackend</basecompoundref>
    <includes refid="wayland__egl__backend_8h" local="no">wayland_egl_backend.h</includes>
    <innerclass refid="struct_k_win_1_1_wayland_1_1_wayland_egl_backend_1_1_layers" prot="private">KWin::Wayland::WaylandEglBackend::Layers</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1ac0340b4937c9ef03eb61c4c90a0b91f6" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref> *</type>
        <definition>WaylandBackend* KWin::Wayland::WaylandEglBackend::m_backend</definition>
        <argsstring></argsstring>
        <name>m_backend</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::m_backend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="121" column="20" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1aefe99367092eed9feca76897252461f1" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *, Layers &gt;</type>
        <definition>std::map&lt;Output *, Layers&gt; KWin::Wayland::WaylandEglBackend::m_outputs</definition>
        <argsstring></argsstring>
        <name>m_outputs</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::m_outputs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="122" column="14" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.h" bodystart="122" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1afe5e1a587ad632b492664b88e5f72799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Wayland::WaylandEglBackend::WaylandEglBackend</definition>
        <argsstring>(WaylandBackend *b)</argsstring>
        <name>WaylandEglBackend</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::WaylandEglBackend</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="96" column="5" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="223" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1ac14689bccf52d9005748983f4fa1a676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KWin::Wayland::WaylandEglBackend::~WaylandEglBackend</definition>
        <argsstring>() override</argsstring>
        <name>~WaylandEglBackend</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::~WaylandEglBackend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="97" column="5" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1ac1e9c1c5c1a5c73269b388f3c8d0b3db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref> *</type>
        <definition>WaylandBackend * KWin::Wayland::WaylandEglBackend::backend</definition>
        <argsstring>() const</argsstring>
        <name>backend</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::backend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="99" column="20" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a6ee85ab80ecd21d86bf2f9b265f0d709" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_drm_device" kindref="compound">DrmDevice</ref> *</type>
        <definition>DrmDevice * KWin::Wayland::WaylandEglBackend::drmDevice</definition>
        <argsstring>() const override</argsstring>
        <name>drmDevice</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::drmDevice</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1a9135e39ee4f8aed8dcfd2771fe0a7773">drmDevice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="100" column="15" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1afa8e7a87e66aa33665aadf7f6e8c17fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::Wayland::WaylandEglBackend::init</definition>
        <argsstring>() override</argsstring>
        <name>init</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::init</qualifiedname>
        <reimplements refid="class_k_win_1_1_open_g_l_backend_1aa2bb44d4bb6e8fcb630552cc5d06b036">init</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="102" column="10" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="287" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a955c2fccd1e609d7e49815bfa300c6c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandEglBackend::present</definition>
        <argsstring>(Output *output, const std::shared_ptr&lt; OutputFrame &gt; &amp;frame) override</argsstring>
        <name>present</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::present</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1ad9736308199d71cdd97755a111f5abbe">present</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref> &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="103" column="10" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="333" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a7d6f6ceef3324c8cd79748d0fa8c4b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref> *</type>
        <definition>OutputLayer * KWin::Wayland::WaylandEglBackend::primaryLayer</definition>
        <argsstring>(Output *output) override</argsstring>
        <name>primaryLayer</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::primaryLayer</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1a0862ffb5aba97ee2d82e6488e4d1471d">primaryLayer</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="104" column="17" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a1ef7ec6cbab7e83b9af307c7762442fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_k_win_1_1_output_layer" kindref="compound">OutputLayer</ref> *</type>
        <definition>OutputLayer * KWin::Wayland::WaylandEglBackend::cursorLayer</definition>
        <argsstring>(Output *output) override</argsstring>
        <name>cursorLayer</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::cursorLayer</qualifiedname>
        <reimplements refid="class_k_win_1_1_render_backend_1abe178a184592ff07e972f4971de5f964">cursorLayer</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="105" column="17" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="344" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a821d4c7187631aba74e4d7c956ffd7e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::pair&lt; std::shared_ptr&lt; <ref refid="class_k_win_1_1_g_l_texture" kindref="compound">KWin::GLTexture</ref> &gt;, <ref refid="class_k_win_1_1_color_description" kindref="compound">ColorDescription</ref> &gt;</type>
        <definition>std::pair&lt; std::shared_ptr&lt; KWin::GLTexture &gt;, ColorDescription &gt; KWin::Wayland::WaylandEglBackend::textureForOutput</definition>
        <argsstring>(KWin::Output *output) const override</argsstring>
        <name>textureForOutput</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::textureForOutput</qualifiedname>
        <reimplements refid="class_k_win_1_1_open_g_l_backend_1a65640228a4a3f4907c64dadb7d077f83">textureForOutput</reimplements>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">KWin::Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="107" column="15" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="328" bodyend="331"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a143a7abaf1f26eef1882fd06d57b6ed2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandEglBackend::initializeEgl</definition>
        <argsstring>()</argsstring>
        <name>initializeEgl</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::initializeEgl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="110" column="10" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="264" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a2cbebb1f851af17182b12bb3a28d9cdb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandEglBackend::initRenderingContext</definition>
        <argsstring>()</argsstring>
        <name>initRenderingContext</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::initRenderingContext</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="111" column="10" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="301" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a6c83492d3bf07196888b5be4dccd29e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KWin::Wayland::WaylandEglBackend::createEglWaylandOutput</definition>
        <argsstring>(Output *output)</argsstring>
        <name>createEglWaylandOutput</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::createEglWaylandOutput</qualifiedname>
        <param>
          <type><ref refid="class_k_win_1_1_output" kindref="compound">Output</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="112" column="10" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="255" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a258e4026a07ac1b87b7c48dc4e658690" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void KWin::Wayland::WaylandEglBackend::cleanupSurfaces</definition>
        <argsstring>() override</argsstring>
        <name>cleanupSurfaces</name>
        <qualifiedname>KWin::Wayland::WaylandEglBackend::cleanupSurfaces</qualifiedname>
        <reimplements refid="class_k_win_1_1_abstract_egl_backend_1a0858fbe5842791a18b1d2203263e7596">cleanupSurfaces</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="113" column="10" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.cpp" bodystart="250" bodyend="253"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>OpenGL Backend using Egl on a <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref> surface. </para>
    </briefdescription>
    <detaileddescription>
<para>This Backend is the basis for a session compositor running on top of a <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref> system compositor. It creates a Surface as large as the screen and maps it as a fullscreen shell surface on the system compositor. The OpenGL context is created on the <ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref> surface, so for rendering X11 is not involved.</para>
<para>Also in repainting the backend is currently still rather limited. Only supported mode is fullscreen repaints, which is obviously not optimal. Best solution is probably to go for buffer_age extension and make it the only available solution next to fullscreen repaints. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>KWin::AbstractEglBackend</label>
        <link refid="class_k_win_1_1_abstract_egl_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KWin::OpenGLBackend</label>
        <link refid="class_k_win_1_1_open_g_l_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::RenderBackend</label>
        <link refid="class_k_win_1_1_render_backend"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::Wayland::WaylandEglBackend</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>KWin::AbstractEglBackend</label>
        <link refid="class_k_win_1_1_abstract_egl_backend"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_display</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>KWin::EglDisplay</label>
        <link refid="class_k_win_1_1_egl_display"/>
      </node>
      <node id="3">
        <label>KWin::OpenGLBackend</label>
        <link refid="class_k_win_1_1_open_g_l_backend"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>KWin::RenderBackend</label>
        <link refid="class_k_win_1_1_render_backend"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KWin::Wayland::WaylandEglBackend</label>
        <link refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="kwin/src/backends/wayland/wayland_egl_backend.h" line="92" column="1" bodyfile="kwin/src/backends/wayland/wayland_egl_backend.h" bodystart="93" bodyend="123"/>
    <listofallmembers>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a0c5c133460c0f595b4501319bdc9cea9" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>AbstractEglBackend</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1ac1e9c1c5c1a5c73269b388f3c8d0b3db" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>backend</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1a237ff28011d49332970f9dc347f8608a" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>checkGraphicsReset</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a9a2734bb6daddb796b4675f20c90c6ad" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>cleanup</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a258e4026a07ac1b87b7c48dc4e658690" prot="private" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>cleanupSurfaces</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1a068a4aa41e2476b9d25fdbd32e7f8e4a" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>compositingType</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a011c5666393a672e5748f2e8514bc06c" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>config</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1a9899fa006dcf2fcd960dd4f236af080f" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>copyPixels</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1ac0da7fcdabd3d0a81845f22428324f1c" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>createContext</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a2756e7a5d7409456bd3c57f684cb3a34" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>createContextInternal</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a6c83492d3bf07196888b5be4dccd29e8" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>createEglWaylandOutput</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a1e9e39ced4836a1d2cffe7f3aba2cc81" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>createSurfaceTextureWayland</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a1ef7ec6cbab7e83b9af307c7762442fb" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>cursorLayer</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1ae00b1c4dce13d28425a44539dec8eacd" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>destroyGlobalShareContext</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a818e5dd07cae51bbab8232b0a106cfa8" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>doneCurrent</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a6ee85ab80ecd21d86bf2f9b265f0d709" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>drmDevice</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a2183747e21f79419844e2fd9eb4ec40e" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>eglDisplayObject</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a9e46c68477be19c347b1ccc843dff6ea" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>ensureGlobalShareContext</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1a6d81c83b244e8f05405e6df277934a66" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>extensions</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a1410486b6a1eb589dc2609b587e33116" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>hasClientExtension</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1ac4cb45de1fc2bf18e0af9f3efb64ce02" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>hasExtension</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a4be72c18b1366c52a16905253820799f" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>importBufferAsImage</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a6a3de2bd412e6b415e958104174e5b50" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>importBufferAsImage</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a8a98a67a9958204ebad9d5b828464709" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>importDmaBufAsImage</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a68d4d41343c2667b258beedc1496f162" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>importDmaBufAsImage</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a95b2517e369cec56c2bc14f76b469b6d" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>importDmaBufAsTexture</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1afa8e7a87e66aa33665aadf7f6e8c17fc" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>init</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a01975a2b1049b42a21a0cc25f7dbcaee" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>initClientExtensions</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a143a7abaf1f26eef1882fd06d57b6ed2" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>initializeEgl</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a2cbebb1f851af17182b12bb3a28d9cdb" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>initRenderingContext</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1adb84cfda99d103cd0b8f424d5a8eefd5" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>initWayland</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1a1528840fc1ef6bfe43a68b8db496e060" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>isFailed</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a76eb19498e7245f22efd7a3e3f538f5e" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>isOpenGLES</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1ac0340b4937c9ef03eb61c4c90a0b91f6" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>m_backend</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1aeace9e159ed198e36d5f2148468da7e6" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>m_clientExtensions</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1ac1472c2afce5cb0457849ba6763536ac" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>m_context</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a382bbd29bb9867a9846ba59f80bd06e3" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>m_display</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a6260efbdc7a6e25bcac9d7e2911b09b6" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>m_importedBuffers</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1aefe99367092eed9feca76897252461f1" prot="private" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>m_outputs</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a8b0084c301aa27eea7c5885215abf136" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>m_tranches</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a139917a79035d3f5d755332773642fc7" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>makeCurrent</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1acd3db9f68fc0bdd2b778b8d8905a7d32" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>OpenGLBackend</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1abd1a853f77f0374ea89a68fded26c61b" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>openglContext</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a66b92437df50c1b7d72ac05dca695a50" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>openglContextRef</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a955c2fccd1e609d7e49815bfa300c6c3" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>present</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a7d6f6ceef3324c8cd79748d0fa8c4b43" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>primaryLayer</name></member>
      <member refid="class_k_win_1_1_render_backend_1a64651d2ee05d39d5e1df7391036198d8" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>repairPresentation</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a354d6a5a43660c0fff3b5f15b5ceb4a4" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>setEglDisplay</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1aaffb8a9ea4bc06515bece7d7563dab21" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>setExtensions</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1a680916d9d3de7bcf5c1c3ad6338fde5b" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>setFailed</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1a11bcb8552fa007ee192a0c036afa9051" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>setSupportsBufferAge</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1a15bebb46135c0337136ef9aee262f6f6" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>setSupportsNativeFence</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1aaa797548c180d8321f431322e00e063f" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>supportedFormats</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1adb44469a10be59741ca090c0e4141ac9" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>supportsBufferAge</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1aa6da121c522e644b768f2522cb3c1578" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>supportsNativeFence</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1aa4c55efbc706b97974ee8a7726dde133" prot="protected" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>teardown</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1ae899fcb2071701328a9d2d346bea4793" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>testImportBuffer</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1a821d4c7187631aba74e4d7c956ffd7e2" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>textureForOutput</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1a202dca8a83ea2bdf4aa54092f92d774e" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>tranches</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1afe5e1a587ad632b492664b88e5f72799" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>WaylandEglBackend</name></member>
      <member refid="class_k_win_1_1_abstract_egl_backend_1ad3dd9e8f7b7182d864414443d1d71b07" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>~AbstractEglBackend</name></member>
      <member refid="class_k_win_1_1_open_g_l_backend_1a0e1f2fd9fc0b1321b11a611b1cab37bd" prot="public" virt="virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>~OpenGLBackend</name></member>
      <member refid="class_k_win_1_1_wayland_1_1_wayland_egl_backend_1ac14689bccf52d9005748983f4fa1a676" prot="public" virt="non-virtual"><scope>KWin::Wayland::WaylandEglBackend</scope><name>~WaylandEglBackend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
