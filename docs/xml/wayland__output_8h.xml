<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="wayland__output_8h" kind="file" language="C++">
    <compoundname>wayland_output.h</compoundname>
    <includes refid="core_2output_8h" local="yes">core/output.h</includes>
    <includes local="no">KWayland/Client/xdgshell.h</includes>
    <includes local="no">QObject</includes>
    <includes local="no">QTimer</includes>
    <includedby refid="wayland__backend_8cpp" local="yes">kwin/src/backends/wayland/wayland_backend.cpp</includedby>
    <includedby refid="wayland__egl__backend_8cpp" local="yes">kwin/src/backends/wayland/wayland_egl_backend.cpp</includedby>
    <includedby refid="wayland__output_8cpp" local="yes">kwin/src/backends/wayland/wayland_output.cpp</includedby>
    <includedby refid="wayland__qpainter__backend_8cpp" local="yes">kwin/src/backends/wayland/wayland_qpainter_backend.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>kwin/src/backends/wayland/wayland_output.h</label>
        <link refid="wayland__output_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>core/colorspace.h</label>
        <link refid="colorspace_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/output.h</label>
        <link refid="core_2output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>renderloop.h</label>
        <link refid="renderloop_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>effect/globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>utils/edid.h</label>
        <link refid="edid_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>KWayland/Client/xdgshell.h</label>
      </node>
      <node id="17">
        <label>QByteArray</label>
      </node>
      <node id="7">
        <label>QCoreApplication</label>
      </node>
      <node id="20">
        <label>QDebug</label>
      </node>
      <node id="8">
        <label>QImage</label>
      </node>
      <node id="18">
        <label>QList</label>
      </node>
      <node id="16">
        <label>QMatrix4x4</label>
      </node>
      <node id="12">
        <label>QObject</label>
      </node>
      <node id="9">
        <label>QPoint</label>
      </node>
      <node id="21">
        <label>QRect</label>
      </node>
      <node id="19">
        <label>QSize</label>
      </node>
      <node id="24">
        <label>QTimer</label>
      </node>
      <node id="22">
        <label>QUuid</label>
      </node>
      <node id="10">
        <label>QVariant</label>
      </node>
      <node id="11">
        <label>QVector2D</label>
      </node>
      <node id="6">
        <label>config-kwin.h</label>
      </node>
      <node id="3">
        <label>kwin_export.h</label>
      </node>
      <node id="15">
        <label>optional</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>kwin/src/backends/wayland/wayland_backend.cpp</label>
        <link refid="wayland__backend_8cpp"/>
      </node>
      <node id="3">
        <label>kwin/src/backends/wayland/wayland_egl_backend.cpp</label>
        <link refid="wayland__egl__backend_8cpp"/>
      </node>
      <node id="4">
        <label>kwin/src/backends/wayland/wayland_output.cpp</label>
        <link refid="wayland__output_8cpp"/>
      </node>
      <node id="1">
        <label>kwin/src/backends/wayland/wayland_output.h</label>
        <link refid="wayland__output_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>kwin/src/backends/wayland/wayland_qpainter_backend.cpp</label>
        <link refid="wayland__qpainter__backend_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_k_win_1_1_wayland_1_1_wayland_cursor" prot="public">KWin::Wayland::WaylandCursor</innerclass>
    <innerclass refid="class_k_win_1_1_wayland_1_1_wayland_output" prot="public">KWin::Wayland::WaylandOutput</innerclass>
    <innernamespace refid="namespace_k_wayland">KWayland</innernamespace>
    <innernamespace refid="namespace_k_wayland_1_1_client">KWayland::Client</innernamespace>
    <innernamespace refid="namespace_k_win">KWin</innernamespace>
    <innernamespace refid="namespace_k_win_1_1_wayland">KWin::Wayland</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>KWin<sp/>-<sp/>the<sp/>KDE<sp/>window<sp/>manager</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>KDE<sp/>project.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-FileCopyrightText:<sp/>2019<sp/>Roman<sp/>Gilg<sp/>&lt;subdiff@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>SPDX-License-Identifier:<sp/>GPL-2.0-or-later</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2output_8h" kindref="compound">core/output.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;KWayland/Client/xdgshell.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_wayland" kindref="compound">KWayland</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_wayland_1_1_client" kindref="compound">Client</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Surface;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Pointer;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LockedPointer;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">XdgDecoration;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wl_buffer;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wp_presentation_feedback;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wp_tearing_control_v1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wp_color_management_surface_v1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win" kindref="compound">KWin</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_output_frame" kindref="compound">OutputFrame</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_win_1_1_wayland" kindref="compound">Wayland</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_k_win_1_1_wayland_1_1_wayland_cursor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_cursor_1a30accc485c83a7e9e5fdeb3862087643" kindref="member">WaylandCursor</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_cursor_1a30accc485c83a7e9e5fdeb3862087643" kindref="member">WaylandCursor</ref>(<ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*backend);</highlight></codeline>
<codeline lineno="46" refid="class_k_win_1_1_wayland_1_1_wayland_cursor_1abd88c6f3be4f32d693e63ad9f014dbae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_cursor_1abd88c6f3be4f32d693e63ad9f014dbae" kindref="member">~WaylandCursor</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Pointer<sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_cursor_1a21dc999d01a5d0da3a18fdaada541949" kindref="member">pointer</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_cursor_1a997bb7687e5c0ad1905f555e8c6252a1" kindref="member">setPointer</ref>(KWayland::Client::Pointer<sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_cursor_1a21dc999d01a5d0da3a18fdaada541949" kindref="member">pointer</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_cursor_1a7b6f601b3a2dc506727d2cd7b1df22ce" kindref="member">setEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_cursor_1a5cb18d2bf58a2fa8a52487ab0cb58fd1" kindref="member">update</ref>(wl_buffer<sp/>*buffer,<sp/>qreal<sp/>scale,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;hotspot);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sync();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Pointer<sp/>*m_pointer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>m_surface;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_buffer<sp/>*m_buffer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/>m_hotspot;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>m_scale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_k_win_1_1_wayland_1_1_wayland_output" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1ae9c3b0713940dbd373c285a1ea80aeb7" kindref="member">WaylandOutput</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_1adb8f18f47c547aad3325e08e1f3617f4" kindref="member">Output</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1ae9c3b0713940dbd373c285a1ea80aeb7" kindref="member">WaylandOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;<ref refid="class_k_win_1_1_output_1ad56a9a779a9bbe7149428a1aa42abeee" kindref="member">name</ref>,<sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1aa12363890df03c9aa04e8663c17e72a8" kindref="member">backend</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1ad9fba0df188977f307ba95a51da38a23" kindref="member">~WaylandOutput</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_render_loop" kindref="compound">RenderLoop</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1af77c1cd87eb830e18cea44ca63c56b25" kindref="member">renderLoop</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1a4d7e838e17d654e89eaec4e25a0b1ab3" kindref="member">updateCursorLayer</ref>(std::optional&lt;std::chrono::nanoseconds&gt;<sp/>allowedVrrDelay)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1a11e5cac516f4220f572e1aa04b922643" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;<ref refid="class_k_win_1_1_output_1aedc965facd9be832eb827ab0fe5a6fd9" kindref="member">pixelSize</ref>,<sp/>qreal<sp/><ref refid="class_k_win_1_1_output_1a26b1c3dcc612487192f4f23d11bc72b0" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1aad2167bd515610f9dd9a64032a1705c7" kindref="member">isReady</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>KWayland::Client::Surface<sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1af9a6bc47f53b95c6fe7cb474268403d3" kindref="member">surface</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_cursor" kindref="compound">WaylandCursor</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1a1493800def1b30fd420e620a29d469db" kindref="member">cursor</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*<ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1aa12363890df03c9aa04e8663c17e72a8" kindref="member">backend</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1a00acb0a1fc74dc3c320e59f5bed634e4" kindref="member">lockPointer</ref>(KWayland::Client::Pointer<sp/>*pointer,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lock);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1a249c03e6e2f03e7a6816dcb751d3b2ca" kindref="member">resize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;<ref refid="class_k_win_1_1_output_1aedc965facd9be832eb827ab0fe5a6fd9" kindref="member">pixelSize</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1ab71f863584545570c2791e43f92104b3" kindref="member">setDpmsMode</ref>(<ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" kindref="member">DpmsMode</ref><sp/>mode)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1aa675dfee64f5733b265b530954fbbc44" kindref="member">updateDpmsMode</ref>(<ref refid="class_k_win_1_1_output_1a4c33fb5b1f01c8358c76a57a238336d1" kindref="member">DpmsMode</ref><sp/><ref refid="class_k_win_1_1_output_1af206c9aa8a7591fbcfe7e9aaeb9ce57e" kindref="member">dpmsMode</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1ad443f0d24753e883113b68604e1ece5b" kindref="member">updateEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1a54cd85d4b6954ca7a022c114c00538bd" kindref="member">present</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>&amp;frame);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1a5e5eb8135a8b5c21827f15845f959778" kindref="member">setPrimaryBuffer</ref>(wl_buffer<sp/>*buffer);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1a1daf1aab56b4a49eeeed374e597c4f82" kindref="member">frameDiscarded</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1a450d177e4982c99c898d354a08173f7e" kindref="member">framePresented</ref>(std::chrono::nanoseconds<sp/>timestamp,<sp/>uint32_t<sp/><ref refid="class_k_win_1_1_output_1a3e1d2698295c7897ca32593d1022449d" kindref="member">refreshRate</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_output_1a21f772e516bd3a0d4f3765ceb31de2ab" kindref="member">applyChanges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_win_1_1_output_configuration" kindref="compound">OutputConfiguration</ref><sp/>&amp;config)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleConfigure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/>KWayland::Client::XdgShellSurface::States<sp/>states,<sp/>quint32<sp/>serial);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateWindowTitle();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyConfigure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size,<sp/>quint32<sp/>serial);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;RenderLoop&gt;<sp/>m_renderLoop;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::Surface&gt;<sp/>m_surface;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::XdgShellSurface&gt;<sp/>m_xdgShellSurface;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::LockedPointer&gt;<sp/>m_pointerLock;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;KWayland::Client::XdgDecoration&gt;<sp/>m_xdgDecoration;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_win_1_1_wayland_1_1_wayland_backend" kindref="compound">WaylandBackend</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m_backend;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;WaylandCursor&gt;<sp/>m_cursor;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>QTimer<sp/>m_turnOffTimer;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_hasPointerLock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_ready<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OutputFrame&gt;<sp/>m_frame;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>wl_buffer<sp/>*m_presentationBuffer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>quint32<sp/>m_pendingConfigureSerial<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>m_pendingConfigureSize;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>QTimer<sp/>m_configureThrottleTimer;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>wp_presentation_feedback<sp/>*m_presentationFeedback<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>wp_tearing_control_v1<sp/>*m_tearingControl<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>wp_color_management_surface_v1<sp/>*m_colorSurface<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_refreshRate<sp/>=<sp/>60&apos;000;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Wayland</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KWin</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="kwin/src/backends/wayland/wayland_output.h"/>
  </compounddef>
</doxygen>
