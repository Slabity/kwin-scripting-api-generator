<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespace_k_win_1_1_o_s_d" kind="namespace" language="C++">
    <compoundname>KWin::OSD</compoundname>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_k_win_1_1_o_s_d_1a5a244bc014f369a85121e950bc15c296" prot="public" static="no" strong="yes">
        <type></type>
        <name>HideFlag</name>
        <qualifiedname>KWin::OSD::HideFlag</qualifiedname>
        <enumvalue id="namespace_k_win_1_1_o_s_d_1a5a244bc014f369a85121e950bc15c296a239a01fdde871f0a54199dcb56eca3b3" prot="public">
          <name>SkipCloseAnimation</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/osd.h" line="21" column="1" bodyfile="kwin/src/osd.h" bodystart="21" bodyend="23"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_k_win_1_1_o_s_d_1acea68f23428da3bb071ff5b2952b1faf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_on_screen_notification" kindref="compound">OnScreenNotification</ref> *</type>
        <definition>static OnScreenNotification * KWin::OSD::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <qualifiedname>KWin::OSD::create</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/osd.cpp" line="21" column="29" bodyfile="kwin/src/osd.cpp" bodystart="21" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_o_s_d_1a60fb7fffdd7691f28f3a0a1160dc2817" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_win_1_1_on_screen_notification" kindref="compound">OnScreenNotification</ref> *</type>
        <definition>static OnScreenNotification * KWin::OSD::osd</definition>
        <argsstring>()</argsstring>
        <name>osd</name>
        <qualifiedname>KWin::OSD::osd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/osd.cpp" line="29" column="29" bodyfile="kwin/src/osd.cpp" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_o_s_d_1ad9bf32b8e07b607da8f7976f9dd98719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OSD::show</definition>
        <argsstring>(const QString &amp;message, const QString &amp;iconName, int timeout)</argsstring>
        <name>show</name>
        <qualifiedname>KWin::OSD::show</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>iconName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/osd.cpp" line="35" column="6" bodyfile="kwin/src/osd.cpp" bodystart="35" bodyend="49" declfile="kwin/src/osd.h" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_o_s_d_1a775217b664b98b7a254a0adc8bd21778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OSD::show</definition>
        <argsstring>(const QString &amp;message, int timeout)</argsstring>
        <name>show</name>
        <qualifiedname>KWin::OSD::show</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/osd.cpp" line="51" column="6" bodyfile="kwin/src/osd.cpp" bodystart="51" bodyend="54" declfile="kwin/src/osd.h" declline="19" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_o_s_d_1a7079b2012b45b2ebe944796e3c6a87cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OSD::show</definition>
        <argsstring>(const QString &amp;message, const QString &amp;iconName)</argsstring>
        <name>show</name>
        <qualifiedname>KWin::OSD::show</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>iconName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/osd.cpp" line="56" column="6" bodyfile="kwin/src/osd.cpp" bodystart="56" bodyend="59" declfile="kwin/src/osd.h" declline="18" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespace_k_win_1_1_o_s_d_1afaf8017e3721a0e69b950ea812e89716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KWin::OSD::hide</definition>
        <argsstring>(HideFlags flags)</argsstring>
        <name>hide</name>
        <qualifiedname>KWin::OSD::hide</qualifiedname>
        <param>
          <type>HideFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="kwin/src/osd.cpp" line="61" column="6" bodyfile="kwin/src/osd.cpp" bodystart="61" bodyend="65" declfile="kwin/src/osd.h" declline="25" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="kwin/src/osd.cpp" line="18" column="1"/>
  </compounddef>
</doxygen>
